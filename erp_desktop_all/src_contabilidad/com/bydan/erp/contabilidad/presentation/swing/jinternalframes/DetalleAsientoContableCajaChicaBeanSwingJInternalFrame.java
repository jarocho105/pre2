/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.contabilidad.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.contabilidad.util.DetalleAsientoContableCajaChicaConstantesFunciones;
import com.bydan.erp.contabilidad.util.DetalleAsientoContableCajaChicaParameterReturnGeneral;
//import com.bydan.erp.contabilidad.util.DetalleAsientoContableCajaChicaParameterGeneral;
//import com.bydan.erp.contabilidad.presentation.report.source.DetalleAsientoContableCajaChicaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.contabilidad.resources.reportes.AuxiliarReportes;


import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.contabilidad.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.contabilidad.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetalleAsientoContableCajaChicaBeanSwingJInternalFrame extends DetalleAsientoContableCajaChicaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetalleAsientoContableCajaChica> detalleasientocontablecajachicaValidator = new ClassValidator<DetalleAsientoContableCajaChica>(DetalleAsientoContableCajaChica.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetalleAsientoContableCajaChica detalleasientocontablecajachica;	
	public DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux;
	public DetalleAsientoContableCajaChica detalleasientocontablecajachicaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetalleAsientoContableCajaChica detalleasientocontablecajachicaTotales;
	public Long idDetalleAsientoContableCajaChicaActual;
	public Long iIdNuevoDetalleAsientoContableCajaChica=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboAsientoContableCajaChica="";

	public List<AsientoContableCajaChica> asientocontablecajachicasForeignKey;

	public List<AsientoContableCajaChica> getasientocontablecajachicasForeignKey() {
		return asientocontablecajachicasForeignKey;
	}

	public void setasientocontablecajachicasForeignKey(List<AsientoContableCajaChica> asientocontablecajachicasForeignKey) {
		this.asientocontablecajachicasForeignKey = asientocontablecajachicasForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContableCajaChica asientocontablecajachicaForeignKey;

	public AsientoContableCajaChica getasientocontablecajachicaForeignKey() {
		return asientocontablecajachicaForeignKey;
	}

	public void setasientocontablecajachicaForeignKey(AsientoContableCajaChica asientocontablecajachicaForeignKey) {
		this.asientocontablecajachicaForeignKey = asientocontablecajachicaForeignKey;
	}

	public String sFinalQueryComboTipoGastoEmpresa="";

	public List<TipoGastoEmpresa> tipogastoempresasForeignKey;

	public List<TipoGastoEmpresa> gettipogastoempresasForeignKey() {
		return tipogastoempresasForeignKey;
	}

	public void settipogastoempresasForeignKey(List<TipoGastoEmpresa> tipogastoempresasForeignKey) {
		this.tipogastoempresasForeignKey = tipogastoempresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoGastoEmpresa tipogastoempresaForeignKey;

	public TipoGastoEmpresa gettipogastoempresaForeignKey() {
		return tipogastoempresaForeignKey;
	}

	public void settipogastoempresaForeignKey(TipoGastoEmpresa tipogastoempresaForeignKey) {
		this.tipogastoempresaForeignKey = tipogastoempresaForeignKey;
	}

	public String sFinalQueryComboTransaccion="";

	public List<Transaccion> transaccionsForeignKey;

	public List<Transaccion> gettransaccionsForeignKey() {
		return transaccionsForeignKey;
	}

	public void settransaccionsForeignKey(List<Transaccion> transaccionsForeignKey) {
		this.transaccionsForeignKey = transaccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionForeignKey;

	public Transaccion gettransaccionForeignKey() {
		return transaccionForeignKey;
	}

	public void settransaccionForeignKey(Transaccion transaccionForeignKey) {
		this.transaccionForeignKey = transaccionForeignKey;
	}

	public String sFinalQueryComboFactura="";

	public List<Factura> facturasForeignKey;

	public List<Factura> getfacturasForeignKey() {
		return facturasForeignKey;
	}

	public void setfacturasForeignKey(List<Factura> facturasForeignKey) {
		this.facturasForeignKey = facturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Factura facturaForeignKey;

	public Factura getfacturaForeignKey() {
		return facturaForeignKey;
	}

	public void setfacturaForeignKey(Factura facturaForeignKey) {
		this.facturaForeignKey = facturaForeignKey;
	}

	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

	public String sFinalQueryComboTipoTransaccionModulo="";

	public List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey;

	public List<TipoTransaccionModulo> gettipotransaccionmodulosForeignKey() {
		return tipotransaccionmodulosForeignKey;
	}

	public void settipotransaccionmodulosForeignKey(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey) {
		this.tipotransaccionmodulosForeignKey = tipotransaccionmodulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTransaccionModulo tipotransaccionmoduloForeignKey;

	public TipoTransaccionModulo gettipotransaccionmoduloForeignKey() {
		return tipotransaccionmoduloForeignKey;
	}

	public void settipotransaccionmoduloForeignKey(TipoTransaccionModulo tipotransaccionmoduloForeignKey) {
		this.tipotransaccionmoduloForeignKey = tipotransaccionmoduloForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idFacturaActual=0L;

	public Long getidFacturaActual() {
		return idFacturaActual;
	}

	public void setidFacturaActual(Long idFacturaActual) {
		this.idFacturaActual= idFacturaActual;
	}
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetalleAsientoContableCajaChica;
	public Boolean isPermisoNuevoDetalleAsientoContableCajaChica;
	public Boolean isPermisoActualizarDetalleAsientoContableCajaChica;
	public Boolean isPermisoActualizarOriginalDetalleAsientoContableCajaChica;
	public Boolean isPermisoEliminarDetalleAsientoContableCajaChica;
	public Boolean isPermisoGuardarCambiosDetalleAsientoContableCajaChica;
	public Boolean isPermisoConsultaDetalleAsientoContableCajaChica;
	public Boolean isPermisoBusquedaDetalleAsientoContableCajaChica;
	public Boolean isPermisoReporteDetalleAsientoContableCajaChica;
	public Boolean isPermisoPaginacionMedioDetalleAsientoContableCajaChica;
	public Boolean isPermisoPaginacionAltoDetalleAsientoContableCajaChica;
	public Boolean isPermisoPaginacionTodoDetalleAsientoContableCajaChica;
	public Boolean isPermisoCopiarDetalleAsientoContableCajaChica;
	public Boolean isPermisoVerFormDetalleAsientoContableCajaChica;
	public Boolean isPermisoDuplicarDetalleAsientoContableCajaChica;
	public Boolean isPermisoOrdenDetalleAsientoContableCajaChica;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetalleAsientoContableCajaChicaParameterReturnGeneral detalleasientocontablecajachicaReturnGeneral;
	public DetalleAsientoContableCajaChicaParameterReturnGeneral detalleasientocontablecajachicaParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetalleAsientoContableCajaChica=false;
	public Boolean esParaAccionDesdeFormularioDetalleAsientoContableCajaChica=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetalleAsientoContableCajaChicaSessionBeanAdditional detalleasientocontablecajachicaSessionBeanAdditional=null;
	
	public DetalleAsientoContableCajaChicaSessionBeanAdditional getDetalleAsientoContableCajaChicaSessionBeanAdditional() {
		return this.detalleasientocontablecajachicaSessionBeanAdditional;
	}
	
	public void setDetalleAsientoContableCajaChicaSessionBeanAdditional(DetalleAsientoContableCajaChicaSessionBeanAdditional detalleasientocontablecajachicaSessionBeanAdditional) {
		try {
			this.detalleasientocontablecajachicaSessionBeanAdditional=detalleasientocontablecajachicaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional detalleasientocontablecajachicaBeanSwingJInternalFrameAdditional=null;
	//public class DetalleAsientoContableCajaChicaBeanSwingJInternalFrame
	
	public DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional getDetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional() {
		return this.detalleasientocontablecajachicaBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional(DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional detalleasientocontablecajachicaBeanSwingJInternalFrameAdditional) {
		try {
			this.detalleasientocontablecajachicaBeanSwingJInternalFrameAdditional=detalleasientocontablecajachicaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetalleAsientoContableCajaChicaLogic detalleasientocontablecajachicaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetalleAsientoContableCajaChica detalleasientocontablecajachicaBean;
	public DetalleAsientoContableCajaChicaConstantesFunciones detalleasientocontablecajachicaConstantesFunciones;
	//public DetalleAsientoContableCajaChicaParameterReturnGeneral detalleasientocontablecajachicaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public ModuloLogic moduloLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public AsientoContableCajaChicaLogic asientocontablecajachicaLogic;
	public TipoGastoEmpresaLogic tipogastoempresaLogic;
	public TransaccionLogic transaccionLogic;
	public FacturaLogic facturaLogic;
	public AsientoContableLogic asientocontableLogic;
	public CentroCostoLogic centrocostoLogic;
	public TipoCambioLogic tipocambioLogic;
	public TipoTransaccionModuloLogic tipotransaccionmoduloLogic;
	
	//PARAMETROS
	
	
	//public List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicas;	
	//public List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasEliminados;
	//public List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica=true;
	public Boolean isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica=true;
	public Boolean isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica=true;
	public Boolean isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdAsientoContableCajaChica=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdFactura=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTipoGasto=false;
	public Boolean isVisibilidadFK_IdTipoTransaccionModulo=false;
	public Boolean isVisibilidadFK_IdTransaccion=false;
	
	public Long getiIdNuevoDetalleAsientoContableCajaChica() {
		return this.iIdNuevoDetalleAsientoContableCajaChica;
	}

	public void setiIdNuevoDetalleAsientoContableCajaChica(Long iIdNuevoDetalleAsientoContableCajaChica) {
		this.iIdNuevoDetalleAsientoContableCajaChica = iIdNuevoDetalleAsientoContableCajaChica;
	}
	
	public Long getidDetalleAsientoContableCajaChicaActual() {
		return this.idDetalleAsientoContableCajaChicaActual;
	}

	public void setidDetalleAsientoContableCajaChicaActual(Long idDetalleAsientoContableCajaChicaActual) {
		this.idDetalleAsientoContableCajaChicaActual = idDetalleAsientoContableCajaChicaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetalleAsientoContableCajaChica getdetalleasientocontablecajachica() {
		return this.detalleasientocontablecajachica;
	}

	public void setdetalleasientocontablecajachica(DetalleAsientoContableCajaChica detalleasientocontablecajachica) {
		this.detalleasientocontablecajachica = detalleasientocontablecajachica;
	}
	
	public DetalleAsientoContableCajaChica getdetalleasientocontablecajachicaAux() {
		return this.detalleasientocontablecajachicaAux;
	}

	public void setdetalleasientocontablecajachicaAux(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux) {
		this.detalleasientocontablecajachicaAux = detalleasientocontablecajachicaAux;
	}				
	
	public DetalleAsientoContableCajaChica getdetalleasientocontablecajachicaAnterior() {
		return this.detalleasientocontablecajachicaAnterior;
	}

	public void setdetalleasientocontablecajachicaAnterior(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAnterior) {
		this.detalleasientocontablecajachicaAnterior = detalleasientocontablecajachicaAnterior;
	}	
	
	public DetalleAsientoContableCajaChica getdetalleasientocontablecajachicaTotales() {
		return this.detalleasientocontablecajachicaTotales;
	}

	public void setdetalleasientocontablecajachicaTotales(DetalleAsientoContableCajaChica detalleasientocontablecajachicaTotales) {
		this.detalleasientocontablecajachicaTotales = detalleasientocontablecajachicaTotales;
	}	
	
	public DetalleAsientoContableCajaChica getdetalleasientocontablecajachicaBean() {
		return this.detalleasientocontablecajachicaBean;
	}

	public void setdetalleasientocontablecajachicaBean(DetalleAsientoContableCajaChica detalleasientocontablecajachicaBean) {
		this.detalleasientocontablecajachicaBean = detalleasientocontablecajachicaBean;
	}	
	
	public DetalleAsientoContableCajaChicaParameterReturnGeneral getdetalleasientocontablecajachicaReturnGeneral() {
		return this.detalleasientocontablecajachicaReturnGeneral;
	}

	public void setdetalleasientocontablecajachicaReturnGeneral(DetalleAsientoContableCajaChicaParameterReturnGeneral detalleasientocontablecajachicaReturnGeneral) {
		this.detalleasientocontablecajachicaReturnGeneral = detalleasientocontablecajachicaReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_asiento_contableFK_IdAsientoContable=null;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica=-1L;

	public Long getid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica() {
		return this.id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica;
	}

	public void setid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica(Long id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica) {
		this.id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica = id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_facturaFK_IdFactura=null;

	public Long getid_facturaFK_IdFactura() {
		return this.id_facturaFK_IdFactura;
	}

	public void setid_facturaFK_IdFactura(Long id_facturaFK_IdFactura) {
		this.id_facturaFK_IdFactura = id_facturaFK_IdFactura;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_tipo_gasto_empresaFK_IdTipoGasto=-1L;

	public Long getid_tipo_gasto_empresaFK_IdTipoGasto() {
		return this.id_tipo_gasto_empresaFK_IdTipoGasto;
	}

	public void setid_tipo_gasto_empresaFK_IdTipoGasto(Long id_tipo_gasto_empresaFK_IdTipoGasto) {
		this.id_tipo_gasto_empresaFK_IdTipoGasto = id_tipo_gasto_empresaFK_IdTipoGasto;
	}

	public Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=null;

	public Long getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo() {
		return this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public void setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo) {
		this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo = id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public Long id_transaccionFK_IdTransaccion=-1L;

	public Long getid_transaccionFK_IdTransaccion() {
		return this.id_transaccionFK_IdTransaccion;
	}

	public void setid_transaccionFK_IdTransaccion(Long id_transaccionFK_IdTransaccion) {
		this.id_transaccionFK_IdTransaccion = id_transaccionFK_IdTransaccion;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetalleAsientoContableCajaChicaLogic getDetalleAsientoContableCajaChicaLogic()	{		
		return detalleasientocontablecajachicaLogic;
	}

	public void setDetalleAsientoContableCajaChicaLogic(DetalleAsientoContableCajaChicaLogic detalleasientocontablecajachicaLogic) {
		this.detalleasientocontablecajachicaLogic = detalleasientocontablecajachicaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetalleAsientoContableCajaChica() {
		return isEsNuevoDetalleAsientoContableCajaChica;
	}

	public void setIsEsNuevoDetalleAsientoContableCajaChica(Boolean isEsNuevoDetalleAsientoContableCajaChica) {
		this.isEsNuevoDetalleAsientoContableCajaChica = isEsNuevoDetalleAsientoContableCajaChica;
	}

	public Boolean getEsParaAccionDesdeFormularioDetalleAsientoContableCajaChica() {
		return esParaAccionDesdeFormularioDetalleAsientoContableCajaChica;
	}
	
	public void setEsParaAccionDesdeFormularioDetalleAsientoContableCajaChica(Boolean esParaAccionDesdeFormularioDetalleAsientoContableCajaChica) {
		this.esParaAccionDesdeFormularioDetalleAsientoContableCajaChica = esParaAccionDesdeFormularioDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContableCajaChicasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablecajachicasForeignKey=new ArrayList<AsientoContableCajaChica>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContableCajaChicaLogic asientocontablecajachicaLogic=new AsientoContableCajaChicaLogic();

			//asientocontablecajachicaLogic.getAsientoContableCajaChicaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContableCajaChica()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//asientocontablecajachicaLogic.getAsientoContableCajaChicaDataAccess().setIsForForeingKeyData(true);

					asientocontablecajachicaLogic.getTodosAsientoContableCajaChicasWithConnection(sFinalQuery,new Pagination());

					this.asientocontablecajachicasForeignKey=asientocontablecajachicaLogic.getAsientoContableCajaChicas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContableCajaChica(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidAsientoContableCajaChicaActual());
					this.asientocontablecajachicasForeignKey.add(asientocontablecajachicaLogic.getAsientoContableCajaChica());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoGastoEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipogastoempresasForeignKey=new ArrayList<TipoGastoEmpresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoGastoEmpresaLogic tipogastoempresaLogic=new TipoGastoEmpresaLogic();

			//tipogastoempresaLogic.getTipoGastoEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoGastoEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipogastoempresaLogic.getTipoGastoEmpresaDataAccess().setIsForForeingKeyData(true);

					tipogastoempresaLogic.getTodosTipoGastoEmpresasWithConnection(sFinalQuery,new Pagination());

					this.tipogastoempresasForeignKey=tipogastoempresaLogic.getTipoGastoEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoGastoEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidTipoGastoEmpresaActual());
					this.tipogastoempresasForeignKey.add(tipogastoempresaLogic.getTipoGastoEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionsForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionsForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidTransaccionActual());
					this.transaccionsForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.facturasForeignKey=new ArrayList<Factura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Factura facturaNulo = new Factura();

			FacturaLogic facturaLogic=new FacturaLogic();

			//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

					facturaLogic.getTodosFacturasWithConnection(sFinalQuery,new Pagination());

					this.facturasForeignKey=facturaLogic.getFacturas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.facturasForeignKey.add(0, facturaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidFacturaActual());
					this.facturasForeignKey.add(facturaLogic.getFactura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContable asientocontableNulo = new AsientoContable();

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.asientocontablesForeignKey.add(0, asientocontableNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCosto centrocostoNulo = new CentroCosto();

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.centrocostosForeignKey.add(0, centrocostoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambio tipocambioNulo = new TipoCambio();

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipocambiosForeignKey.add(0, tipocambioNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTransaccionModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTransaccionModulo tipotransaccionmoduloNulo = new TipoTransaccionModulo();

			TipoTransaccionModuloLogic tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();

			//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

					tipotransaccionmoduloLogic.getTodosTipoTransaccionModulosWithConnection(sFinalQuery,new Pagination());

					this.tipotransaccionmodulosForeignKey=tipotransaccionmoduloLogic.getTipoTransaccionModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipotransaccionmodulosForeignKey.add(0, tipotransaccionmoduloNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTransaccionModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotransaccionmoduloLogic.getEntityWithConnection(detalleasientocontablecajachicaSessionBean.getlidTipoTransaccionModuloActual());
					this.tipotransaccionmodulosForeignKey.add(tipotransaccionmoduloLogic.getTipoTransaccionModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetalleAsientoContableCajaChica.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetalleAsientoContableCajaChicaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_empresaDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetalleAsientoContableCajaChica.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetalleAsientoContableCajaChicaGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_sucursalDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloDetalleAsientoContableCajaChica.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloDetalleAsientoContableCajaChicaGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_moduloDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_moduloDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetalleAsientoContableCajaChicaGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_ejercicioDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetalleAsientoContableCajaChica.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetalleAsientoContableCajaChicaGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_periodoDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioDetalleAsientoContableCajaChica.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioDetalleAsientoContableCajaChicaGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_anioDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_anioDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesDetalleAsientoContableCajaChica.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesDetalleAsientoContableCajaChicaGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_mesDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_mesDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableCajaChicaForeignKey(Long idAsientoContableCajaChicaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContableCajaChica  asientocontablecajachicaTemp=null;

			for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasForeignKey) {
				if(asientocontablecajachicaAux.getId()!=null && asientocontablecajachicaAux.getId().equals(idAsientoContableCajaChicaSeleccionado)) {
					asientocontablecajachicaTemp=asientocontablecajachicaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontablecajachicaTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setAsientoContableCajaChica(asientocontablecajachicaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setSelectedItem(asientocontablecajachicaTemp);
					}
				} else {
					//jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setSelectedItem(asientocontablecajachicaTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContableCajaChica") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontablecajachicaTemp!=null && jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica!=null) {
						jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.setSelectedItem(asientocontablecajachicaTemp);
					} else {
						if(jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica!=null) {
							//jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.setSelectedItem(asientocontablecajachicaTemp);
							if(jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableCajaChicaForeignKeyDescripcion(Long idAsientoContableCajaChicaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContableCajaChica  asientocontablecajachicaTemp=null;

			for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasForeignKey) {
				if(asientocontablecajachicaAux.getId()!=null && asientocontablecajachicaAux.getId().equals(idAsientoContableCajaChicaSeleccionado)) {
					asientocontablecajachicaTemp=asientocontablecajachicaAux;
					break;
				}
			}


			sDescripcion=AsientoContableCajaChicaConstantesFunciones.getAsientoContableCajaChicaDescripcion(asientocontablecajachicaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableCajaChicaForeignKeyGenerico(Long idAsientoContableCajaChicaSeleccionado,JComboBox jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			AsientoContableCajaChica  asientocontablecajachicaTemp=null;

			for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasForeignKey) {
				if(asientocontablecajachicaAux.getId()!=null && asientocontablecajachicaAux.getId().equals(idAsientoContableCajaChicaSeleccionado)) {
					asientocontablecajachicaTemp=asientocontablecajachicaAux;
					break;
				}
			}

			if(asientocontablecajachicaTemp!=null) {
				jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaGenerico.setSelectedItem(asientocontablecajachicaTemp);
			} else {
				if(jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoGastoEmpresaForeignKey(Long idTipoGastoEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoGastoEmpresa  tipogastoempresaTemp=null;

			for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasForeignKey) {
				if(tipogastoempresaAux.getId()!=null && tipogastoempresaAux.getId().equals(idTipoGastoEmpresaSeleccionado)) {
					tipogastoempresaTemp=tipogastoempresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipogastoempresaTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setTipoGastoEmpresa(tipogastoempresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setSelectedItem(tipogastoempresaTemp);
					}
				} else {
					//jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setSelectedItem(tipogastoempresaTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoGasto") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipogastoempresaTemp!=null && jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica!=null) {
						jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.setSelectedItem(tipogastoempresaTemp);
					} else {
						if(jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica!=null) {
							//jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.setSelectedItem(tipogastoempresaTemp);
							if(jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoGastoEmpresaForeignKeyDescripcion(Long idTipoGastoEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoGastoEmpresa  tipogastoempresaTemp=null;

			for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasForeignKey) {
				if(tipogastoempresaAux.getId()!=null && tipogastoempresaAux.getId().equals(idTipoGastoEmpresaSeleccionado)) {
					tipogastoempresaTemp=tipogastoempresaAux;
					break;
				}
			}


			sDescripcion=TipoGastoEmpresaConstantesFunciones.getTipoGastoEmpresaDescripcion(tipogastoempresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoGastoEmpresaForeignKeyGenerico(Long idTipoGastoEmpresaSeleccionado,JComboBox jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoGastoEmpresa  tipogastoempresaTemp=null;

			for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasForeignKey) {
				if(tipogastoempresaAux.getId()!=null && tipogastoempresaAux.getId().equals(idTipoGastoEmpresaSeleccionado)) {
					tipogastoempresaTemp=tipogastoempresaAux;
					break;
				}
			}

			if(tipogastoempresaTemp!=null) {
				jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChicaGenerico.setSelectedItem(tipogastoempresaTemp);
			} else {
				if(jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionForeignKey(Long idTransaccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setTransaccion(transaccionTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.setSelectedItem(transaccionTemp);
					}
				} else {
					//jComboBoxid_transaccionDetalleAsientoContableCajaChica.setSelectedItem(transaccionTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionTemp!=null && jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica!=null) {
						jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.setSelectedItem(transaccionTemp);
					} else {
						if(jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica!=null) {
							//jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.setSelectedItem(transaccionTemp);
							if(jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionForeignKeyDescripcion(Long idTransaccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionForeignKeyGenerico(Long idTransaccionSeleccionado,JComboBox jComboBoxid_transaccionDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(transaccionTemp!=null) {
				jComboBoxid_transaccionDetalleAsientoContableCajaChicaGenerico.setSelectedItem(transaccionTemp);
			} else {
				if(jComboBoxid_transaccionDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_transaccionDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_transaccionDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFacturaForeignKey(Long idFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(facturaTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setFactura(facturaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.setSelectedItem(facturaTemp);
					}
				} else {
					//jComboBoxid_facturaDetalleAsientoContableCajaChica.setSelectedItem(facturaTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(facturaTemp!=null && jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica!=null) {
						jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.setSelectedItem(facturaTemp);
					} else {
						if(jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica!=null) {
							//jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.setSelectedItem(facturaTemp);
							if(jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFacturaForeignKeyDescripcion(Long idFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}


			sDescripcion=FacturaConstantesFunciones.getFacturaDescripcion(facturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFacturaForeignKeyGenerico(Long idFacturaSeleccionado,JComboBox jComboBoxid_facturaDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(facturaTemp!=null) {
				jComboBoxid_facturaDetalleAsientoContableCajaChicaGenerico.setSelectedItem(facturaTemp);
			} else {
				if(jComboBoxid_facturaDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_facturaDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_facturaDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contableDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contableDetalleAsientoContableCajaChicaGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contableDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_asiento_contableDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contableDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoDetalleAsientoContableCajaChicaGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_centro_costoDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocambioTemp!=null && jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica!=null) {
						jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.setSelectedItem(tipocambioTemp);
					} else {
						if(jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica!=null) {
							//jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.setSelectedItem(tipocambioTemp);
							if(jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioDetalleAsientoContableCajaChicaGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_tipo_cambioDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTransaccionModuloForeignKey(Long idTipoTransaccionModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotransaccionmoduloTemp!=null) {

					if(this.detalleasientocontablecajachica!=null) {
						this.detalleasientocontablecajachica.setTipoTransaccionModulo(tipotransaccionmoduloTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setSelectedItem(tipotransaccionmoduloTemp);
					}
				} else {
					//jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setSelectedItem(tipotransaccionmoduloTemp);
					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotransaccionmoduloTemp!=null && jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica!=null) {
						jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.setSelectedItem(tipotransaccionmoduloTemp);
					} else {
						if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica!=null) {
							//jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.setSelectedItem(tipotransaccionmoduloTemp);
							if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTransaccionModuloForeignKeyDescripcion(Long idTipoTransaccionModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}


			sDescripcion=TipoTransaccionModuloConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTransaccionModuloForeignKeyGenerico(Long idTipoTransaccionModuloSeleccionado,JComboBox jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(tipotransaccionmoduloTemp!=null) {
				jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaGenerico.setSelectedItem(tipotransaccionmoduloTemp);
			} else {
				if(jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaGenerico!=null && jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_empresaDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetalleAsientoContableCajaChicaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detalleasientocontablecajachica.setid_empresa(empresaAux.getId());
				detalleasientocontablecajachica.setempresa_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detalleasientocontablecajachica.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_sucursalDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetalleAsientoContableCajaChicaGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detalleasientocontablecajachica.setid_sucursal(sucursalAux.getId());
				detalleasientocontablecajachica.setsucursal_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detalleasientocontablecajachica.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_moduloDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloDetalleAsientoContableCajaChicaGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				detalleasientocontablecajachica.setid_modulo(moduloAux.getId());
				detalleasientocontablecajachica.setmodulo_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getModuloDescripcion(moduloAux));
				detalleasientocontablecajachica.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_ejercicioDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetalleAsientoContableCajaChicaGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detalleasientocontablecajachica.setid_ejercicio(ejercicioAux.getId());
				detalleasientocontablecajachica.setejercicio_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detalleasientocontablecajachica.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_periodoDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetalleAsientoContableCajaChicaGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detalleasientocontablecajachica.setid_periodo(periodoAux.getId());
				detalleasientocontablecajachica.setperiodo_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detalleasientocontablecajachica.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_anioDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioDetalleAsientoContableCajaChicaGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				detalleasientocontablecajachica.setid_anio(anioAux.getId());
				detalleasientocontablecajachica.setanio_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getAnioDescripcion(anioAux));
				detalleasientocontablecajachica.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_mesDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesDetalleAsientoContableCajaChicaGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				detalleasientocontablecajachica.setid_mes(mesAux.getId());
				detalleasientocontablecajachica.setmes_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getMesDescripcion(mesAux));
				detalleasientocontablecajachica.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableCajaChicaForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			AsientoContableCajaChica  asientocontablecajachicaAux=new AsientoContableCajaChica();

			if(jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaGenerico==null) {
				asientocontablecajachicaAux=(AsientoContableCajaChica)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				asientocontablecajachicaAux=(AsientoContableCajaChica)jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(asientocontablecajachicaAux!=null && asientocontablecajachicaAux.getId()!=null) {
				detalleasientocontablecajachica.setid_asiento_contable_caja_chica(asientocontablecajachicaAux.getId());
				detalleasientocontablecajachica.setasientocontablecajachica_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getAsientoContableCajaChicaDescripcion(asientocontablecajachicaAux));
				detalleasientocontablecajachica.setAsientoContableCajaChica(asientocontablecajachicaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoGastoEmpresaForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoGastoEmpresa  tipogastoempresaAux=new TipoGastoEmpresa();

			if(jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChicaGenerico==null) {
				tipogastoempresaAux=(TipoGastoEmpresa)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				tipogastoempresaAux=(TipoGastoEmpresa)jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(tipogastoempresaAux!=null && tipogastoempresaAux.getId()!=null) {
				detalleasientocontablecajachica.setid_tipo_gasto_empresa(tipogastoempresaAux.getId());
				detalleasientocontablecajachica.settipogastoempresa_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getTipoGastoEmpresaDescripcion(tipogastoempresaAux));
				detalleasientocontablecajachica.setTipoGastoEmpresa(tipogastoempresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_transaccionDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccionDetalleAsientoContableCajaChicaGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccionDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				detalleasientocontablecajachica.setid_transaccion(transaccionAux.getId());
				detalleasientocontablecajachica.settransaccion_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getTransaccionDescripcion(transaccionAux));
				detalleasientocontablecajachica.setTransaccion(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFacturaForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_facturaDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Factura  facturaAux=new Factura();

			if(jComboBoxid_facturaDetalleAsientoContableCajaChicaGenerico==null) {
				facturaAux=(Factura)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				facturaAux=(Factura)jComboBoxid_facturaDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(facturaAux!=null) {
				detalleasientocontablecajachica.setid_factura(facturaAux.getId());
				detalleasientocontablecajachica.setfactura_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getFacturaDescripcion(facturaAux));
				detalleasientocontablecajachica.setFactura(facturaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_asiento_contableDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contableDetalleAsientoContableCajaChicaGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contableDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null) {
				detalleasientocontablecajachica.setid_asiento_contable(asientocontableAux.getId());
				detalleasientocontablecajachica.setasientocontable_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				detalleasientocontablecajachica.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_centro_costoDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoDetalleAsientoContableCajaChicaGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				detalleasientocontablecajachica.setid_centro_costo(centrocostoAux.getId());
				detalleasientocontablecajachica.setcentrocosto_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				detalleasientocontablecajachica.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_tipo_cambioDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioDetalleAsientoContableCajaChicaGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				detalleasientocontablecajachica.setid_tipo_cambio(tipocambioAux.getId());
				detalleasientocontablecajachica.settipocambio_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				detalleasientocontablecajachica.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTransaccionModuloForeignKey(DetalleAsientoContableCajaChica detalleasientocontablecajachica,JComboBox jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloAux=new TipoTransaccionModulo();

			if(jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaGenerico==null) {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.getSelectedItem();
			} else {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(tipotransaccionmoduloAux!=null) {
				detalleasientocontablecajachica.setid_tipo_transaccion_modulo(tipotransaccionmoduloAux.getId());
				detalleasientocontablecajachica.settipotransaccionmodulo_descripcion(DetalleAsientoContableCajaChicaConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloAux));
				detalleasientocontablecajachica.setTipoTransaccionModulo(tipotransaccionmoduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContableCajaChicasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContableCajaChica=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.removeAllItems();

							for(AsientoContableCajaChica asientocontablecajachica:this.asientocontablecajachicasForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.addItem(asientocontablecajachica);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContableCajaChica") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.removeAllItems();

							for(AsientoContableCajaChica asientocontablecajachica:this.asientocontablecajachicasForeignKey) {
								this.jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.addItem(asientocontablecajachica);
							}
						}

						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoGastoEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoGastoEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.removeAllItems();

							for(TipoGastoEmpresa tipogastoempresa:this.tipogastoempresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.addItem(tipogastoempresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoGasto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.removeAllItems();

							for(TipoGastoEmpresa tipogastoempresa:this.tipogastoempresasForeignKey) {
								this.jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.addItem(tipogastoempresa);
							}
						}

						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.addItem(transaccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.addItem(transaccion);
							}
						}

						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFactura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.addItem(factura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.addItem(factura);
							}
						}

						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.addItem(asientocontable);
							}
						}

						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.addItem(centrocosto);
							}
						}

						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.addItem(tipocambio);
							}
						}

						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTransaccionModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTransaccionModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.addItem(tipotransaccionmodulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { 
					}

					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.addItem(tipotransaccionmodulo);
							}
						}

						if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableCajaChicaForeignKey(AsientoContableCajaChica asientocontablecajachica,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setSelectedItem(asientocontablecajachica);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.setSelectedItem(asientocontablecajachica);
						} else {
							this.jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoGastoEmpresaForeignKey(TipoGastoEmpresa tipogastoempresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setSelectedItem(tipogastoempresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.setSelectedItem(tipogastoempresa);
						} else {
							this.jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionForeignKey(Transaccion transaccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.setSelectedItem(transaccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.setSelectedItem(transaccion);
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFacturaForeignKey(Factura factura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.setSelectedItem(factura);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.setSelectedItem(factura);
						} else {
							this.jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.setSelectedItem(tipocambio);
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTransaccionModuloForeignKey(TipoTransaccionModulo tipotransaccionmodulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setSelectedItem(tipotransaccionmodulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.setSelectedItem(tipotransaccionmodulo);
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetalleAsientoContableCajaChica() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetalleAsientoContableCajaChicaConstantesFunciones.refrescarForeignKeysDescripcionesDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetalleAsientoContableCajaChicaConstantesFunciones.refrescarForeignKeysDescripcionesDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(AsientoContableCajaChica.class));
		classes.add(new Classe(TipoGastoEmpresa.class));
		classes.add(new Classe(Transaccion.class));
		classes.add(new Classe(Factura.class));
		classes.add(new Classe(AsientoContable.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(TipoCambio.class));
		classes.add(new Classe(TipoTransaccionModulo.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(this.detalleasientocontablecajachicas);
			detalleasientocontablecajachicaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetalleAsientoContableCajaChicaParameterReturnGeneral getDetalleAsientoContableCajaChicaParameterGeneral() {
		return this.detalleasientocontablecajachicaParameterGeneral;
	}
	
	public void setDetalleAsientoContableCajaChicaParameterGeneral(DetalleAsientoContableCajaChicaParameterReturnGeneral detalleasientocontablecajachicaParameterGeneral) {
		this.detalleasientocontablecajachicaParameterGeneral = detalleasientocontablecajachicaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetalleAsientoContableCajaChica() {
		return isPermisoTodoDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoTodoDetalleAsientoContableCajaChica(Boolean isPermisoTodoDetalleAsientoContableCajaChica) {
		this.isPermisoTodoDetalleAsientoContableCajaChica = isPermisoTodoDetalleAsientoContableCajaChica;
	}

	public Boolean getIsPermisoNuevoDetalleAsientoContableCajaChica() {
		return isPermisoNuevoDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoNuevoDetalleAsientoContableCajaChica(Boolean isPermisoNuevoDetalleAsientoContableCajaChica) {
		this.isPermisoNuevoDetalleAsientoContableCajaChica = isPermisoNuevoDetalleAsientoContableCajaChica;
	}

	public Boolean getIsPermisoActualizarDetalleAsientoContableCajaChica() {
		return isPermisoActualizarDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoActualizarDetalleAsientoContableCajaChica(Boolean isPermisoActualizarDetalleAsientoContableCajaChica) {
		this.isPermisoActualizarDetalleAsientoContableCajaChica = isPermisoActualizarDetalleAsientoContableCajaChica;
	}

	public Boolean getIsPermisoEliminarDetalleAsientoContableCajaChica() {
		return isPermisoEliminarDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoEliminarDetalleAsientoContableCajaChica(Boolean isPermisoEliminarDetalleAsientoContableCajaChica) {
		this.isPermisoEliminarDetalleAsientoContableCajaChica = isPermisoEliminarDetalleAsientoContableCajaChica;
	}

	public Boolean getIsPermisoGuardarCambiosDetalleAsientoContableCajaChica() {
		return isPermisoGuardarCambiosDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoGuardarCambiosDetalleAsientoContableCajaChica(Boolean isPermisoGuardarCambiosDetalleAsientoContableCajaChica) {
		this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica = isPermisoGuardarCambiosDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoConsultaDetalleAsientoContableCajaChica() {
		return isPermisoConsultaDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoConsultaDetalleAsientoContableCajaChica(Boolean isPermisoConsultaDetalleAsientoContableCajaChica) {
		this.isPermisoConsultaDetalleAsientoContableCajaChica = isPermisoConsultaDetalleAsientoContableCajaChica;
	}

	public Boolean getIsPermisoBusquedaDetalleAsientoContableCajaChica() {
		return isPermisoBusquedaDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoBusquedaDetalleAsientoContableCajaChica(Boolean isPermisoBusquedaDetalleAsientoContableCajaChica) {
		this.isPermisoBusquedaDetalleAsientoContableCajaChica = isPermisoBusquedaDetalleAsientoContableCajaChica;
	}

	public Boolean getIsPermisoReporteDetalleAsientoContableCajaChica() {
		return isPermisoReporteDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoReporteDetalleAsientoContableCajaChica(Boolean isPermisoReporteDetalleAsientoContableCajaChica) {
		this.isPermisoReporteDetalleAsientoContableCajaChica = isPermisoReporteDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetalleAsientoContableCajaChica() {
		return isPermisoPaginacionMedioDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoPaginacionMedioDetalleAsientoContableCajaChica(Boolean isPermisoPaginacionMedioDetalleAsientoContableCajaChica) {
		this.isPermisoPaginacionMedioDetalleAsientoContableCajaChica = isPermisoPaginacionMedioDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetalleAsientoContableCajaChica() {
		return isPermisoPaginacionTodoDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoPaginacionTodoDetalleAsientoContableCajaChica(Boolean isPermisoPaginacionTodoDetalleAsientoContableCajaChica) {
		this.isPermisoPaginacionTodoDetalleAsientoContableCajaChica = isPermisoPaginacionTodoDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetalleAsientoContableCajaChica() {
		return isPermisoPaginacionAltoDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoPaginacionAltoDetalleAsientoContableCajaChica(Boolean isPermisoPaginacionAltoDetalleAsientoContableCajaChica) {
		this.isPermisoPaginacionAltoDetalleAsientoContableCajaChica = isPermisoPaginacionAltoDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoCopiarDetalleAsientoContableCajaChica() {
		return isPermisoCopiarDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoCopiarDetalleAsientoContableCajaChica(Boolean isPermisoCopiarDetalleAsientoContableCajaChica) {
		this.isPermisoCopiarDetalleAsientoContableCajaChica = isPermisoCopiarDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoVerFormDetalleAsientoContableCajaChica() {
		return isPermisoVerFormDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoVerFormDetalleAsientoContableCajaChica(Boolean isPermisoVerFormDetalleAsientoContableCajaChica) {
		this.isPermisoVerFormDetalleAsientoContableCajaChica = isPermisoVerFormDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoDuplicarDetalleAsientoContableCajaChica() {
		return isPermisoDuplicarDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoDuplicarDetalleAsientoContableCajaChica(Boolean isPermisoDuplicarDetalleAsientoContableCajaChica) {
		this.isPermisoDuplicarDetalleAsientoContableCajaChica = isPermisoDuplicarDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoOrdenDetalleAsientoContableCajaChica() {
		return isPermisoOrdenDetalleAsientoContableCajaChica;
	}

	public void setIsPermisoOrdenDetalleAsientoContableCajaChica(Boolean isPermisoOrdenDetalleAsientoContableCajaChica) {
		this.isPermisoOrdenDetalleAsientoContableCajaChica = isPermisoOrdenDetalleAsientoContableCajaChica;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaNuevoDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica = isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica = isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaCopiarDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica = isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaVerFormDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica = isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaOrdenDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica = isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica = isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaModificarDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaModificarDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaModificarDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica = isVisibilidadCeldaModificarDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaActualizarDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica = isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaEliminarDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica = isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaCancelarDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica = isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaGuardarDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica = isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica() {
		return isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica(Boolean isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica) {
		this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica = isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica;
	}
		
	public DetalleAsientoContableCajaChicaSessionBean getdetalleasientocontablecajachicaSessionBean() {
		return this.detalleasientocontablecajachicaSessionBean;
	}
	
	public void setdetalleasientocontablecajachicaSessionBean(DetalleAsientoContableCajaChicaSessionBean detalleasientocontablecajachicaSessionBean) {
		this.detalleasientocontablecajachicaSessionBean=detalleasientocontablecajachicaSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdAsientoContableCajaChica() {
		return this.isVisibilidadFK_IdAsientoContableCajaChica;
	}

	public void setisVisibilidadFK_IdAsientoContableCajaChica(Boolean isVisibilidadFK_IdAsientoContableCajaChica) {
		this.isVisibilidadFK_IdAsientoContableCajaChica=isVisibilidadFK_IdAsientoContableCajaChica;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdFactura() {
		return this.isVisibilidadFK_IdFactura;
	}

	public void setisVisibilidadFK_IdFactura(Boolean isVisibilidadFK_IdFactura) {
		this.isVisibilidadFK_IdFactura=isVisibilidadFK_IdFactura;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTipoGasto() {
		return this.isVisibilidadFK_IdTipoGasto;
	}

	public void setisVisibilidadFK_IdTipoGasto(Boolean isVisibilidadFK_IdTipoGasto) {
		this.isVisibilidadFK_IdTipoGasto=isVisibilidadFK_IdTipoGasto;
	}

	public Boolean getisVisibilidadFK_IdTipoTransaccionModulo() {
		return this.isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public void setisVisibilidadFK_IdTipoTransaccionModulo(Boolean isVisibilidadFK_IdTipoTransaccionModulo) {
		this.isVisibilidadFK_IdTipoTransaccionModulo=isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public Boolean getisVisibilidadFK_IdTransaccion() {
		return this.isVisibilidadFK_IdTransaccion;
	}

	public void setisVisibilidadFK_IdTransaccion(Boolean isVisibilidadFK_IdTransaccion) {
		this.isVisibilidadFK_IdTransaccion=isVisibilidadFK_IdTransaccion;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarSucursalForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarModuloForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarEjercicioForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarPeriodoForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarAnioForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarMesForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarAsientoContableCajaChicaForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarTipoGastoEmpresaForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarTransaccionForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarFacturaForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarAsientoContableForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarCentroCostoForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarTipoCambioForeignKey(detalleasientocontablecajachica,null);
				this.setActualParaGuardarTipoTransaccionModuloForeignKey(detalleasientocontablecajachica,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetalleAsientoContableCajaChica detalleasientocontablecajachica,DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetalleAsientoContableCajaChica(detalleasientocontablecajachica);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detalleasientocontablecajachicaAux.setId(detalleasientocontablecajachica.getId());
		detalleasientocontablecajachicaAux.setVersionRow(detalleasientocontablecajachica.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetalleAsientoContableCajaChica();
		
			int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detalleasientocontablecajachicaValidator.getInvalidValues(this.detalleasientocontablecajachica);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detalleasientocontablecajachicaLogic.setDatosCliente(datosCliente);
			detalleasientocontablecajachicaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detalleasientocontablecajachicaAux=new  DetalleAsientoContableCajaChica();
				
				detalleasientocontablecajachicaAux.setIsNew(true);
				detalleasientocontablecajachicaAux.setIsChanged(true);
				
				detalleasientocontablecajachicaAux.setDetalleAsientoContableCajaChicaOriginal(this.detalleasientocontablecajachica);
				
				detalleasientocontablecajachicaAux.setId(this.detalleasientocontablecajachica.getId());	
				detalleasientocontablecajachicaAux.setVersionRow(this.detalleasientocontablecajachica.getVersionRow());	
				detalleasientocontablecajachicaAux.setid_empresa(this.detalleasientocontablecajachica.getid_empresa());	
				detalleasientocontablecajachicaAux.setid_sucursal(this.detalleasientocontablecajachica.getid_sucursal());	
				detalleasientocontablecajachicaAux.setid_modulo(this.detalleasientocontablecajachica.getid_modulo());	
				detalleasientocontablecajachicaAux.setid_ejercicio(this.detalleasientocontablecajachica.getid_ejercicio());	
				detalleasientocontablecajachicaAux.setid_periodo(this.detalleasientocontablecajachica.getid_periodo());	
				detalleasientocontablecajachicaAux.setid_anio(this.detalleasientocontablecajachica.getid_anio());	
				detalleasientocontablecajachicaAux.setid_mes(this.detalleasientocontablecajachica.getid_mes());	
				detalleasientocontablecajachicaAux.setid_asiento_contable_caja_chica(this.detalleasientocontablecajachica.getid_asiento_contable_caja_chica());	
				detalleasientocontablecajachicaAux.setid_tipo_gasto_empresa(this.detalleasientocontablecajachica.getid_tipo_gasto_empresa());	
				detalleasientocontablecajachicaAux.setfecha_emision(this.detalleasientocontablecajachica.getfecha_emision());	
				detalleasientocontablecajachicaAux.setid_transaccion(this.detalleasientocontablecajachica.getid_transaccion());	
				
				if(this.detalleasientocontablecajachica.getid_factura()!=null && this.detalleasientocontablecajachica.getid_factura()>0L) {
					detalleasientocontablecajachicaAux.setid_factura(this.detalleasientocontablecajachica.getid_factura());
				} else {
					detalleasientocontablecajachicaAux.setid_factura(null);
				}	
				detalleasientocontablecajachicaAux.setes_proveedor(this.detalleasientocontablecajachica.getes_proveedor());	
				
				if(this.detalleasientocontablecajachica.getid_asiento_contable()!=null && this.detalleasientocontablecajachica.getid_asiento_contable()>0L) {
					detalleasientocontablecajachicaAux.setid_asiento_contable(this.detalleasientocontablecajachica.getid_asiento_contable());
				} else {
					detalleasientocontablecajachicaAux.setid_asiento_contable(null);
				}	
				detalleasientocontablecajachicaAux.setdetalle(this.detalleasientocontablecajachica.getdetalle());	
				detalleasientocontablecajachicaAux.setvalor_bien_tarifa12(this.detalleasientocontablecajachica.getvalor_bien_tarifa12());	
				detalleasientocontablecajachicaAux.setvalor_servicio_tarifa12(this.detalleasientocontablecajachica.getvalor_servicio_tarifa12());	
				detalleasientocontablecajachicaAux.setporcentaje_iva(this.detalleasientocontablecajachica.getporcentaje_iva());	
				detalleasientocontablecajachicaAux.setvalor_bien_tarifa0(this.detalleasientocontablecajachica.getvalor_bien_tarifa0());	
				detalleasientocontablecajachicaAux.setvalor_servicio_tarifa0(this.detalleasientocontablecajachica.getvalor_servicio_tarifa0());	
				detalleasientocontablecajachicaAux.setvalor_iva(this.detalleasientocontablecajachica.getvalor_iva());	
				detalleasientocontablecajachicaAux.setvalor_bien_ice(this.detalleasientocontablecajachica.getvalor_bien_ice());	
				detalleasientocontablecajachicaAux.setvalor_servicio_ice(this.detalleasientocontablecajachica.getvalor_servicio_ice());	
				
				if(this.detalleasientocontablecajachica.getid_centro_costo()!=null && this.detalleasientocontablecajachica.getid_centro_costo()>0L) {
					detalleasientocontablecajachicaAux.setid_centro_costo(this.detalleasientocontablecajachica.getid_centro_costo());
				} else {
					detalleasientocontablecajachicaAux.setid_centro_costo(null);
				}	
				
				if(this.detalleasientocontablecajachica.getid_tipo_cambio()!=null && this.detalleasientocontablecajachica.getid_tipo_cambio()>0L) {
					detalleasientocontablecajachicaAux.setid_tipo_cambio(this.detalleasientocontablecajachica.getid_tipo_cambio());
				} else {
					detalleasientocontablecajachicaAux.setid_tipo_cambio(null);
				}	
				
				if(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo()!=null && this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo()>0L) {
					detalleasientocontablecajachicaAux.setid_tipo_transaccion_modulo(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo());
				} else {
					detalleasientocontablecajachicaAux.setid_tipo_transaccion_modulo(null);
				}	
				detalleasientocontablecajachicaAux.setfecha(this.detalleasientocontablecajachica.getfecha());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.saveDetalleAsientoContableCajaChicas();//WithConnection
						//detalleasientocontablecajachicaLogic.getSetVersionRowDetalleAsientoContableCajaChicas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleasientocontablecajachica,detalleasientocontablecajachicaAux);
					
					this.refrescarForeignKeysDescripcionesDetalleAsientoContableCajaChica();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleasientocontablecajachicaLogic.saveDetalleAsientoContableCajaChicaRelaciones(detalleasientocontablecajachicaAux);//WithConnection
								//detalleasientocontablecajachicaLogic.getSetVersionRowDetalleAsientoContableCajaChicas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleasientocontablecajachica,detalleasientocontablecajachicaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleasientocontablecajachica,detalleasientocontablecajachicaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detalleasientocontablecajachicaAux=new  DetalleAsientoContableCajaChica();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado() 
					|| (this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado() && this.detalleasientocontablecajachica.getId()>=0)) {
						
					detalleasientocontablecajachicaAux.setIsNew(false);
				}
				
				detalleasientocontablecajachicaAux.setIsDeleted(false);
			
				detalleasientocontablecajachicaAux.setId(this.detalleasientocontablecajachica.getId());	
				detalleasientocontablecajachicaAux.setVersionRow(this.detalleasientocontablecajachica.getVersionRow());	
				detalleasientocontablecajachicaAux.setid_empresa(this.detalleasientocontablecajachica.getid_empresa());	
				detalleasientocontablecajachicaAux.setid_sucursal(this.detalleasientocontablecajachica.getid_sucursal());	
				detalleasientocontablecajachicaAux.setid_modulo(this.detalleasientocontablecajachica.getid_modulo());	
				detalleasientocontablecajachicaAux.setid_ejercicio(this.detalleasientocontablecajachica.getid_ejercicio());	
				detalleasientocontablecajachicaAux.setid_periodo(this.detalleasientocontablecajachica.getid_periodo());	
				detalleasientocontablecajachicaAux.setid_anio(this.detalleasientocontablecajachica.getid_anio());	
				detalleasientocontablecajachicaAux.setid_mes(this.detalleasientocontablecajachica.getid_mes());	
				detalleasientocontablecajachicaAux.setid_asiento_contable_caja_chica(this.detalleasientocontablecajachica.getid_asiento_contable_caja_chica());	
				detalleasientocontablecajachicaAux.setid_tipo_gasto_empresa(this.detalleasientocontablecajachica.getid_tipo_gasto_empresa());	
				detalleasientocontablecajachicaAux.setfecha_emision(this.detalleasientocontablecajachica.getfecha_emision());	
				detalleasientocontablecajachicaAux.setid_transaccion(this.detalleasientocontablecajachica.getid_transaccion());	
				
				if(this.detalleasientocontablecajachica.getid_factura()!=null && this.detalleasientocontablecajachica.getid_factura()>0L) {
					detalleasientocontablecajachicaAux.setid_factura(this.detalleasientocontablecajachica.getid_factura());
				} else {
					detalleasientocontablecajachicaAux.setid_factura(null);
				}	
				detalleasientocontablecajachicaAux.setes_proveedor(this.detalleasientocontablecajachica.getes_proveedor());	
				
				if(this.detalleasientocontablecajachica.getid_asiento_contable()!=null && this.detalleasientocontablecajachica.getid_asiento_contable()>0L) {
					detalleasientocontablecajachicaAux.setid_asiento_contable(this.detalleasientocontablecajachica.getid_asiento_contable());
				} else {
					detalleasientocontablecajachicaAux.setid_asiento_contable(null);
				}	
				detalleasientocontablecajachicaAux.setdetalle(this.detalleasientocontablecajachica.getdetalle());	
				detalleasientocontablecajachicaAux.setvalor_bien_tarifa12(this.detalleasientocontablecajachica.getvalor_bien_tarifa12());	
				detalleasientocontablecajachicaAux.setvalor_servicio_tarifa12(this.detalleasientocontablecajachica.getvalor_servicio_tarifa12());	
				detalleasientocontablecajachicaAux.setporcentaje_iva(this.detalleasientocontablecajachica.getporcentaje_iva());	
				detalleasientocontablecajachicaAux.setvalor_bien_tarifa0(this.detalleasientocontablecajachica.getvalor_bien_tarifa0());	
				detalleasientocontablecajachicaAux.setvalor_servicio_tarifa0(this.detalleasientocontablecajachica.getvalor_servicio_tarifa0());	
				detalleasientocontablecajachicaAux.setvalor_iva(this.detalleasientocontablecajachica.getvalor_iva());	
				detalleasientocontablecajachicaAux.setvalor_bien_ice(this.detalleasientocontablecajachica.getvalor_bien_ice());	
				detalleasientocontablecajachicaAux.setvalor_servicio_ice(this.detalleasientocontablecajachica.getvalor_servicio_ice());	
				
				if(this.detalleasientocontablecajachica.getid_centro_costo()!=null && this.detalleasientocontablecajachica.getid_centro_costo()>0L) {
					detalleasientocontablecajachicaAux.setid_centro_costo(this.detalleasientocontablecajachica.getid_centro_costo());
				} else {
					detalleasientocontablecajachicaAux.setid_centro_costo(null);
				}	
				
				if(this.detalleasientocontablecajachica.getid_tipo_cambio()!=null && this.detalleasientocontablecajachica.getid_tipo_cambio()>0L) {
					detalleasientocontablecajachicaAux.setid_tipo_cambio(this.detalleasientocontablecajachica.getid_tipo_cambio());
				} else {
					detalleasientocontablecajachicaAux.setid_tipo_cambio(null);
				}	
				
				if(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo()!=null && this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo()>0L) {
					detalleasientocontablecajachicaAux.setid_tipo_transaccion_modulo(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo());
				} else {
					detalleasientocontablecajachicaAux.setid_tipo_transaccion_modulo(null);
				}	
				detalleasientocontablecajachicaAux.setfecha(this.detalleasientocontablecajachica.getfecha());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.saveDetalleAsientoContableCajaChicas();//WithConnection
						//detalleasientocontablecajachicaLogic.getSetVersionRowDetalleAsientoContableCajaChicas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleasientocontablecajachica,detalleasientocontablecajachicaAux);
					
					this.refrescarForeignKeysDescripcionesDetalleAsientoContableCajaChica();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleasientocontablecajachicaLogic.saveDetalleAsientoContableCajaChicaRelaciones(detalleasientocontablecajachicaAux);//WithConnection
								//detalleasientocontablecajachicaLogic.getSetVersionRowDetalleAsientoContableCajaChicas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleasientocontablecajachica,detalleasientocontablecajachicaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleasientocontablecajachica,detalleasientocontablecajachicaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detalleasientocontablecajachicaAux=new  DetalleAsientoContableCajaChica();
				
				detalleasientocontablecajachicaAux.setIsNew(false);
				detalleasientocontablecajachicaAux.setIsChanged(false);
				
				detalleasientocontablecajachicaAux.setIsDeleted(true);
				
				detalleasientocontablecajachicaAux.setId(this.detalleasientocontablecajachica.getId());	
				detalleasientocontablecajachicaAux.setVersionRow(this.detalleasientocontablecajachica.getVersionRow());	
				detalleasientocontablecajachicaAux.setid_empresa(this.detalleasientocontablecajachica.getid_empresa());	
				detalleasientocontablecajachicaAux.setid_sucursal(this.detalleasientocontablecajachica.getid_sucursal());	
				detalleasientocontablecajachicaAux.setid_modulo(this.detalleasientocontablecajachica.getid_modulo());	
				detalleasientocontablecajachicaAux.setid_ejercicio(this.detalleasientocontablecajachica.getid_ejercicio());	
				detalleasientocontablecajachicaAux.setid_periodo(this.detalleasientocontablecajachica.getid_periodo());	
				detalleasientocontablecajachicaAux.setid_anio(this.detalleasientocontablecajachica.getid_anio());	
				detalleasientocontablecajachicaAux.setid_mes(this.detalleasientocontablecajachica.getid_mes());	
				detalleasientocontablecajachicaAux.setid_asiento_contable_caja_chica(this.detalleasientocontablecajachica.getid_asiento_contable_caja_chica());	
				detalleasientocontablecajachicaAux.setid_tipo_gasto_empresa(this.detalleasientocontablecajachica.getid_tipo_gasto_empresa());	
				detalleasientocontablecajachicaAux.setfecha_emision(this.detalleasientocontablecajachica.getfecha_emision());	
				detalleasientocontablecajachicaAux.setid_transaccion(this.detalleasientocontablecajachica.getid_transaccion());	
				
				if(this.detalleasientocontablecajachica.getid_factura()!=null && this.detalleasientocontablecajachica.getid_factura()>0L) {
					detalleasientocontablecajachicaAux.setid_factura(this.detalleasientocontablecajachica.getid_factura());
				} else {
					detalleasientocontablecajachicaAux.setid_factura(null);
				}	
				detalleasientocontablecajachicaAux.setes_proveedor(this.detalleasientocontablecajachica.getes_proveedor());	
				
				if(this.detalleasientocontablecajachica.getid_asiento_contable()!=null && this.detalleasientocontablecajachica.getid_asiento_contable()>0L) {
					detalleasientocontablecajachicaAux.setid_asiento_contable(this.detalleasientocontablecajachica.getid_asiento_contable());
				} else {
					detalleasientocontablecajachicaAux.setid_asiento_contable(null);
				}	
				detalleasientocontablecajachicaAux.setdetalle(this.detalleasientocontablecajachica.getdetalle());	
				detalleasientocontablecajachicaAux.setvalor_bien_tarifa12(this.detalleasientocontablecajachica.getvalor_bien_tarifa12());	
				detalleasientocontablecajachicaAux.setvalor_servicio_tarifa12(this.detalleasientocontablecajachica.getvalor_servicio_tarifa12());	
				detalleasientocontablecajachicaAux.setporcentaje_iva(this.detalleasientocontablecajachica.getporcentaje_iva());	
				detalleasientocontablecajachicaAux.setvalor_bien_tarifa0(this.detalleasientocontablecajachica.getvalor_bien_tarifa0());	
				detalleasientocontablecajachicaAux.setvalor_servicio_tarifa0(this.detalleasientocontablecajachica.getvalor_servicio_tarifa0());	
				detalleasientocontablecajachicaAux.setvalor_iva(this.detalleasientocontablecajachica.getvalor_iva());	
				detalleasientocontablecajachicaAux.setvalor_bien_ice(this.detalleasientocontablecajachica.getvalor_bien_ice());	
				detalleasientocontablecajachicaAux.setvalor_servicio_ice(this.detalleasientocontablecajachica.getvalor_servicio_ice());	
				
				if(this.detalleasientocontablecajachica.getid_centro_costo()!=null && this.detalleasientocontablecajachica.getid_centro_costo()>0L) {
					detalleasientocontablecajachicaAux.setid_centro_costo(this.detalleasientocontablecajachica.getid_centro_costo());
				} else {
					detalleasientocontablecajachicaAux.setid_centro_costo(null);
				}	
				
				if(this.detalleasientocontablecajachica.getid_tipo_cambio()!=null && this.detalleasientocontablecajachica.getid_tipo_cambio()>0L) {
					detalleasientocontablecajachicaAux.setid_tipo_cambio(this.detalleasientocontablecajachica.getid_tipo_cambio());
				} else {
					detalleasientocontablecajachicaAux.setid_tipo_cambio(null);
				}	
				
				if(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo()!=null && this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo()>0L) {
					detalleasientocontablecajachicaAux.setid_tipo_transaccion_modulo(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo());
				} else {
					detalleasientocontablecajachicaAux.setid_tipo_transaccion_modulo(null);
				}	
				detalleasientocontablecajachicaAux.setfecha(this.detalleasientocontablecajachica.getfecha());	
				
				if(this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detalleasientocontablecajachicaAux.getId()>=0) {	
						this.detalleasientocontablecajachicasEliminados.add(detalleasientocontablecajachicaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.saveDetalleAsientoContableCajaChicas();//WithConnection
						//detalleasientocontablecajachicaLogic.getSetVersionRowDetalleAsientoContableCajaChicas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleasientocontablecajachicaLogic.saveDetalleAsientoContableCajaChicaRelaciones(detalleasientocontablecajachicaAux);//WithConnection
								//detalleasientocontablecajachicaLogic.getSetVersionRowDetalleAsientoContableCajaChicas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detalleasientocontablecajachicaAux,detalleasientocontablecajachicas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(this.detalleasientocontablecajachicasEliminados);
					
					detalleasientocontablecajachicaLogic.saveDetalleAsientoContableCajaChicas();//WithConnection
					//detalleasientocontablecajachicaLogic.getSetVersionRowDetalleAsientoContableCajaChicas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetalleAsientoContableCajaChica();
				
				this.detalleasientocontablecajachicasEliminados= new ArrayList<DetalleAsientoContableCajaChica>();		
			}
			
			if(this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.arrDatoGeneralTotales=DetalleAsientoContableCajaChicaConstantesFunciones.getTotalesListaDetalleAsientoContableCajaChica(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrDatoGeneralTotales=DetalleAsientoContableCajaChicaConstantesFunciones.getTotalesListaDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicas);
			}
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle Asiento Contable Caja Chica GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detalleasientocontablecajachica=detalleasientocontablecajachicaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetalleAsientoContableCajaChica();
      	}
		
	}	
	
	public void actualizarRelaciones(DetalleAsientoContableCajaChica detalleasientocontablecajachicaLocal) throws Exception {
		
		if(this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetalleAsientoContableCajaChica detalleasientocontablecajachicaLocal) throws Exception {	
		if(this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detalleasientocontablecajachicaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detalleasientocontablecajachicaLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				detalleasientocontablecajachicaLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detalleasientocontablecajachicaLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detalleasientocontablecajachicaLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				detalleasientocontablecajachicaLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				detalleasientocontablecajachicaLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableCajaChicaDetalleFormJInternalFrame.class)) {
				AsientoContableCajaChicaBeanSwingJInternalFrame asientocontablecajachicaBeanSwingJInternalFrameLocal=(AsientoContableCajaChicaBeanSwingJInternalFrame) ((AsientoContableCajaChicaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontablecajachicaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContableCajaChica(asientocontablecajachicaBeanSwingJInternalFrameLocal.getasientocontablecajachica(),true);
				asientocontablecajachicaBeanSwingJInternalFrameLocal.actualizarLista(asientocontablecajachicaBeanSwingJInternalFrameLocal.asientocontablecajachica,this.asientocontablecajachicasForeignKey);

				asientocontablecajachicaBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontablecajachicaBeanSwingJInternalFrameLocal.asientocontablecajachica);

				detalleasientocontablecajachicaLocal.setAsientoContableCajaChica(asientocontablecajachicaBeanSwingJInternalFrameLocal.asientocontablecajachica);

				this.addItemDefectoCombosForeignKeyAsientoContableCajaChica();
				this.cargarCombosFrameAsientoContableCajaChicasForeignKey("Formulario");
				this.setActualAsientoContableCajaChicaForeignKey(asientocontablecajachicaBeanSwingJInternalFrameLocal.asientocontablecajachica.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoGastoEmpresaDetalleFormJInternalFrame.class)) {
				TipoGastoEmpresaBeanSwingJInternalFrame tipogastoempresaBeanSwingJInternalFrameLocal=(TipoGastoEmpresaBeanSwingJInternalFrame) ((TipoGastoEmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipogastoempresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoGastoEmpresa(tipogastoempresaBeanSwingJInternalFrameLocal.gettipogastoempresa(),true);
				tipogastoempresaBeanSwingJInternalFrameLocal.actualizarLista(tipogastoempresaBeanSwingJInternalFrameLocal.tipogastoempresa,this.tipogastoempresasForeignKey);

				tipogastoempresaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipogastoempresaBeanSwingJInternalFrameLocal.tipogastoempresa);

				detalleasientocontablecajachicaLocal.setTipoGastoEmpresa(tipogastoempresaBeanSwingJInternalFrameLocal.tipogastoempresa);

				this.addItemDefectoCombosForeignKeyTipoGastoEmpresa();
				this.cargarCombosFrameTipoGastoEmpresasForeignKey("Formulario");
				this.setActualTipoGastoEmpresaForeignKey(tipogastoempresaBeanSwingJInternalFrameLocal.tipogastoempresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionBeanSwingJInternalFrameLocal.actualizarLista(transaccionBeanSwingJInternalFrameLocal.transaccion,this.transaccionsForeignKey);

				transaccionBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionBeanSwingJInternalFrameLocal.transaccion);

				detalleasientocontablecajachicaLocal.setTransaccion(transaccionBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey("Formulario");
				this.setActualTransaccionForeignKey(transaccionBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FacturaDetalleFormJInternalFrame.class)) {
				FacturaBeanSwingJInternalFrame facturaBeanSwingJInternalFrameLocal=(FacturaBeanSwingJInternalFrame) ((FacturaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				facturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFactura(facturaBeanSwingJInternalFrameLocal.getfactura(),true);
				facturaBeanSwingJInternalFrameLocal.actualizarLista(facturaBeanSwingJInternalFrameLocal.factura,this.facturasForeignKey);

				facturaBeanSwingJInternalFrameLocal.actualizarRelaciones(facturaBeanSwingJInternalFrameLocal.factura);

				detalleasientocontablecajachicaLocal.setFactura(facturaBeanSwingJInternalFrameLocal.factura);

				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey("Formulario");
				this.setActualFacturaForeignKey(facturaBeanSwingJInternalFrameLocal.factura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				detalleasientocontablecajachicaLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				detalleasientocontablecajachicaLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				detalleasientocontablecajachicaLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTransaccionModuloDetalleFormJInternalFrame.class)) {
				TipoTransaccionModuloBeanSwingJInternalFrame tipotransaccionmoduloBeanSwingJInternalFrameLocal=(TipoTransaccionModuloBeanSwingJInternalFrame) ((TipoTransaccionModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.gettipotransaccionmodulo(),true);
				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarLista(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo,this.tipotransaccionmodulosForeignKey);

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				detalleasientocontablecajachicaLocal.setTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey("Formulario");
				this.setActualTipoTransaccionModuloForeignKey(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetalleAsientoContableCajaChicaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detalleasientocontablecajachicaValidator.getInvalidValues(this.detalleasientocontablecajachica);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetalleAsientoContableCajaChica detalleasientocontablecajachica,List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicas) throws Exception {
		try	{		
			DetalleAsientoContableCajaChicaConstantesFunciones.actualizarLista(detalleasientocontablecajachica,detalleasientocontablecajachicas,this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetalleAsientoContableCajaChica detalleasientocontablecajachica,List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicas) throws Exception {
		try	{			
			DetalleAsientoContableCajaChicaConstantesFunciones.actualizarSelectedLista(detalleasientocontablecajachica,detalleasientocontablecajachicas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detalleasientocontablecajachicasLocal=this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detalleasientocontablecajachicasLocal=this.detalleasientocontablecajachicas;
			}
			//ARCHITECTURE
		
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaLocal:detalleasientocontablecajachicasLocal) {
				if(this.permiteMantenimiento(detalleasientocontablecajachicaLocal) && detalleasientocontablecajachicaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleAsientoContableCajaChicaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_empresaDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_sucursalDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_moduloDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_ejercicioDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_periodoDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_anioDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_mesDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDASIENTOCONTABLECAJACHICA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDTIPOGASTOEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_tipo_gasto_empresaDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelfecha_emisionDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDTRANSACCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_transaccionDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_facturaDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.ESPROVEEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabeles_proveedorDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_asiento_contableDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.DETALLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabeldetalleDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.VALORBIENTARIFA12)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_bien_tarifa12DetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.VALORSERVICIOTARIFA12)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_servicio_tarifa12DetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.PORCENTAJEIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelporcentaje_ivaDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.VALORBIENTARIFA0)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_bien_tarifa0DetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.VALORSERVICIOTARIFA0)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_servicio_tarifa0DetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.VALORIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_ivaDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.VALORBIENICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_bien_iceDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.VALORSERVICIOICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_servicio_iceDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_centro_costoDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_tipo_cambioDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.IDTIPOTRANSACCIONMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_tipo_transaccion_moduloDetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleAsientoContableCajaChicaConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelfechaDetalleAsientoContableCajaChica,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_empresaDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_sucursalDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_moduloDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_ejercicioDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_periodoDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_anioDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_mesDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_tipo_gasto_empresaDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelfecha_emisionDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_transaccionDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_facturaDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabeles_proveedorDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_asiento_contableDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabeldetalleDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_bien_tarifa12DetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_servicio_tarifa12DetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelporcentaje_ivaDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_bien_tarifa0DetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_servicio_tarifa0DetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_ivaDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_bien_iceDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_servicio_iceDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_centro_costoDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_tipo_cambioDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelid_tipo_transaccion_moduloDetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelfechaDetalleAsientoContableCajaChica,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetalleAsientoContableCajaChica--;	
		
		
		this.detalleasientocontablecajachicaAux=new DetalleAsientoContableCajaChica();
		
		this.detalleasientocontablecajachicaAux.setId(this.iIdNuevoDetalleAsientoContableCajaChica);
		this.detalleasientocontablecajachicaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().add(this.detalleasientocontablecajachicaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detalleasientocontablecajachicas.add(this.detalleasientocontablecajachicaAux);
		}
		//ARCHITECTURE
		
		this.detalleasientocontablecajachica=this.detalleasientocontablecajachicaAux;
		
		if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
		}
				
		//this.setDefaultControlesDetalleAsientoContableCajaChica();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetalleAsientoContableCajaChica();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetalleAsientoContableCajaChica();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleAsientoContableCajaChica();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaBean,this.detalleasientocontablecajachica,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
			classes=DetalleAsientoContableCajaChicaConstantesFunciones.getClassesRelationshipsOfDetalleAsientoContableCajaChica(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detalleasientocontablecajachicaReturnGeneral=detalleasientocontablecajachicaLogic.procesarEventosDetalleAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas(),this.detalleasientocontablecajachica,this.detalleasientocontablecajachicaParameterGeneral,this.isEsNuevoDetalleAsientoContableCajaChica,classes);//this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChica()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaReturnGeneral,this.detalleasientocontablecajachicaBean,false);
		
		if(this.detalleasientocontablecajachicaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica());
		}
		
		if(this.detalleasientocontablecajachicaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica(),classes);//this.detalleasientocontablecajachicaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetalleAsientoContableCajaChica();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetalleAsientoContableCajaChica();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.RecargarFormDetalleAsientoContableCajaChica(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
						
			if(detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleAsientoContableCajaChica();
			}
			
			this.actualizarVisualTableDatosDetalleAsientoContableCajaChica();
			
			this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(this.getIndiceNuevoDetalleAsientoContableCajaChica(), this.getIndiceNuevoDetalleAsientoContableCajaChica());
			
			this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
						
			this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetalleAsientoContableCajaChica(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfecha_emisionDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarfecha_emisionDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxes_proveedorDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activares_proveedorDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextAreadetalleDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activardetalleDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa12DetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_tarifa12DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa12DetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_tarifa12DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldporcentaje_ivaDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarporcentaje_ivaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa0DetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_tarifa0DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa0DetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_tarifa0DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_ivaDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_ivaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_iceDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_iceDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_iceDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_iceDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfechaDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarfechaDetalleAsientoContableCajaChica);	
		//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_empresaDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_sucursalDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_moduloDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_ejercicioDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_periodoDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_anioDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_mesDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_tipo_gasto_empresaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_transaccionDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_facturaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_asiento_contableDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_centro_costoDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_tipo_cambioDetalleAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.detalleasientocontablecajachicaConstantesFunciones.activarid_tipo_transaccion_moduloDetalleAsientoContableCajaChica);
	};
	
	public void setDefaultControlesDetalleAsientoContableCajaChica() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetalleAsientoContableCajaChica(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detalleasientocontablecajachicaSessionBean.setConGuardarRelaciones(true);			
			this.detalleasientocontablecajachicaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTabbedPaneRelacionesDetalleAsientoContableCajaChica.setVisible(true);
			
					
		} else {
			//this.detalleasientocontablecajachicaSessionBean.setConGuardarRelaciones(false);			
			this.detalleasientocontablecajachicaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTabbedPaneRelacionesDetalleAsientoContableCajaChica.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetalleAsientoContableCajaChica() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
				if(detalleasientocontablecajachicaAux.getId().equals(this.iIdNuevoDetalleAsientoContableCajaChica)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicas) {
				if(detalleasientocontablecajachicaAux.getId().equals(this.iIdNuevoDetalleAsientoContableCajaChica)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
				if(detalleasientocontablecajachicaAux.getId().equals(detalleasientocontablecajachica.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicas) {
				if(detalleasientocontablecajachicaAux.getId().equals(detalleasientocontablecajachica.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachicaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
				if(detalleasientocontablecajachicaAux.getDetalleAsientoContableCajaChicaOriginal().getId().equals(detalleasientocontablecajachicaOriginal.getId())) {
					existe=true;
					detalleasientocontablecajachicaOriginal.setId(detalleasientocontablecajachicaAux.getId());
					detalleasientocontablecajachicaOriginal.setVersionRow(detalleasientocontablecajachicaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicas) {
				if(detalleasientocontablecajachicaAux.getDetalleAsientoContableCajaChicaOriginal().getId().equals(detalleasientocontablecajachicaOriginal.getId())) {
					existe=true;
					detalleasientocontablecajachicaOriginal.setId(detalleasientocontablecajachicaAux.getId());
					detalleasientocontablecajachicaOriginal.setVersionRow(detalleasientocontablecajachicaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetalleAsientoContableCajaChica(Boolean esParaCancelar) throws Exception {
		detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
		detalleasientocontablecajachicaAux=new DetalleAsientoContableCajaChica();
		
		if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
					if(detalleasientocontablecajachicaAux.getId()<0) {
						detalleasientocontablecajachicasAux.add(detalleasientocontablecajachicaAux);
					}		
				}
				this.iIdNuevoDetalleAsientoContableCajaChica=0L;
				this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().removeAll(detalleasientocontablecajachicasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicas) {
					if(detalleasientocontablecajachicaAux.getId()<0) {
						detalleasientocontablecajachicasAux.add(detalleasientocontablecajachicaAux);
					}		
				}
				this.iIdNuevoDetalleAsientoContableCajaChica=0L;
				this.detalleasientocontablecajachicas.removeAll(detalleasientocontablecajachicasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetalleAsientoContableCajaChica 
					&& this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()>0
					) {
					detalleasientocontablecajachicaAux=this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().get(this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size() - 1);
				
					if(detalleasientocontablecajachicaAux.getId()<0) {
						this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().remove(detalleasientocontablecajachicaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetalleAsientoContableCajaChica && this.detalleasientocontablecajachicas.size()>0) {
					detalleasientocontablecajachicaAux=this.detalleasientocontablecajachicas.get(this.detalleasientocontablecajachicas.size() - 1);
				
					if(detalleasientocontablecajachicaAux.getId()<0) {
						this.detalleasientocontablecajachicas.remove(detalleasientocontablecajachicaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetalleAsientoContableCajaChica(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detalleasientocontablecajachica.getId()<0) {
				this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().remove(this.detalleasientocontablecajachica);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detalleasientocontablecajachica.getId()<0) {
				this.detalleasientocontablecajachicas.remove(this.detalleasientocontablecajachica);
			}
		}			
	}
	
	public void setEstadosInicialesDetalleAsientoContableCajaChica(List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasAux) throws Exception {
		DetalleAsientoContableCajaChicaConstantesFunciones.setEstadosInicialesDetalleAsientoContableCajaChica(detalleasientocontablecajachicasAux);
	}
	
	public void setEstadosInicialesDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux) throws Exception {
		DetalleAsientoContableCajaChicaConstantesFunciones.setEstadosInicialesDetalleAsientoContableCajaChica(detalleasientocontablecajachicaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetalleAsientoContableCajaChicaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetalleAsientoContableCajaChicaActual()) {
				if(!this.isEsNuevoDetalleAsientoContableCajaChica) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetalleAsientoContableCajaChica=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetalleAsientoContableCajaChicaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle Asiento Contable Caja Chica ?", "MANTENIMIENTO DE Detalle Asiento Contable Caja Chica", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetalleAsientoContableCajaChica detalleasientocontablecajachica) throws Exception {
		DetalleAsientoContableCajaChicaConstantesFunciones.seleccionarAsignar(this.detalleasientocontablecajachica,detalleasientocontablecajachica);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetalleAsientoContableCajaChica=this.isPermisoActualizarOriginalDetalleAsientoContableCajaChica;
			
			
			this.seleccionarAsignar(detalleasientocontablecajachica);
			
			

			idFacturaActual=detalleasientocontablecajachica.getid_factura();
			this.seleccionarFacturaActual();

			idAsientoContableActual=detalleasientocontablecajachica.getid_asiento_contable();
			this.seleccionarAsientoContableActual();

			idCentroCostoActual=detalleasientocontablecajachica.getid_centro_costo();
			this.seleccionarCentroCostoActual();

			idTipoCambioActual=detalleasientocontablecajachica.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleAsientoContableCajaChicaConstantesFunciones.quitarEspaciosDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detalleasientocontablecajachicaSessionBean.setsFuncionBusquedaRapida(this.detalleasientocontablecajachicaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarFacturaActual() throws Exception {
		try	{
			Factura facturaAux=new Factura();

			if(this.idFacturaActual != null && this.idFacturaActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(this.idFacturaActual);
					facturaAux= facturaLogic.getFactura();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				facturasForeignKey=new ArrayList<Factura>();
				facturasForeignKey.add(facturaAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetalleAsientoContableCajaChica) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetalleAsientoContableCajaChica(esParaCancelar);				
				this.cancelarNuevoDetalleAsientoContableCajaChica(esParaCancelar);								
			}
			
			this.detalleasientocontablecajachica=new DetalleAsientoContableCajaChica();
			
			this.inicializarDetalleAsientoContableCajaChica();
			
			this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetalleAsientoContableCajaChica() throws Exception {
		try {
			DetalleAsientoContableCajaChicaConstantesFunciones.inicializarDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetalleAsientoContableCajaChicas(String sAccionBusqueda,List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetalleAsientoContableCajaChica"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetalleAsientoContableCajaChicaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetalleAsientoContableCajaChicaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetalleAsientoContableCajaChica"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle Asiento Contable Caja Chicas");		
		parameters.put("busquedapor", DetalleAsientoContableCajaChicaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetalleAsientoContableCajaChica=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetalleAsientoContableCajaChicaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetalleAsientoContableCajaChicaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetalleAsientoContableCajaChica=new JRBeanArrayDataSource(DetalleAsientoContableCajaChicaJInternalFrame.TraerDetalleAsientoContableCajaChicaBeans(detalleasientocontablecajachicasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetalleAsientoContableCajaChica);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetalleAsientoContableCajaChicaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetalleAsientoContableCajaChicaBean.TraerDetalleAsientoContableCajaChicaBeans(detalleasientocontablecajachicasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetalleAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,detalleasientocontablecajachicasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetalleAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,detalleasientocontablecajachicasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(null);
					//this.generarExcelReporteDetalleAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,detalleasientocontablecajachicasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetalleAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,detalleasientocontablecajachicasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetalleAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,detalleasientocontablecajachicasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetalleAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,detalleasientocontablecajachicasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetalleAsientoContableCajaChicas(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleasientocontablecajachica";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleAsientoContableCajaChicas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleAsientoContableCajaChica("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetalleAsientoContableCajaChica detalleasientocontablecajachica : detalleasientocontablecajachicasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetalleAsientoContableCajaChicaConstantesFunciones.generarExcelReporteDataDetalleAsientoContableCajaChica("NORMAL",row,workbook,detalleasientocontablecajachica,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetalleAsientoContableCajaChica(String sTipo,Row row,Workbook workbook) {
		
		DetalleAsientoContableCajaChicaConstantesFunciones.generarExcelReporteHeaderDetalleAsientoContableCajaChica(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetalleAsientoContableCajaChicas(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleasientocontablecajachica_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleAsientoContableCajaChicas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetalleAsientoContableCajaChica detalleasientocontablecajachica : detalleasientocontablecajachicasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleAsientoContableCajaChicaDescripcion(detalleasientocontablecajachica));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getasientocontablecajachica_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.gettipogastoempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.gettransaccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getfactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(detalleasientocontablecajachica.getes_proveedor()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getasientocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getdetalle());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getvalor_bien_tarifa12());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getvalor_servicio_tarifa12());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getporcentaje_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getvalor_bien_tarifa0());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getvalor_servicio_tarifa0());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getvalor_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getvalor_bien_ice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getvalor_servicio_ice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.gettipocambio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.gettipotransaccionmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleasientocontablecajachica.getfecha());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetalleAsientoContableCajaChicas(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasRespaldo=null;
		
		classes=DetalleAsientoContableCajaChicaConstantesFunciones.getClassesRelationshipsOfDetalleAsientoContableCajaChica(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detalleasientocontablecajachicaLogic.setDatosCliente(this.datosCliente);
		this.detalleasientocontablecajachicaLogic.setDatosDeep(this.datosDeep);
		this.detalleasientocontablecajachicaLogic.setIsConDeep(true);
		
		detalleasientocontablecajachicasRespaldo=this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas();
		
		this.detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(detalleasientocontablecajachicasParaReportes);	
		this.detalleasientocontablecajachicaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detalleasientocontablecajachicasParaReportes=this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas();
		this.detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(detalleasientocontablecajachicasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleasientocontablecajachica_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleAsientoContableCajaChicas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleAsientoContableCajaChica("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetalleAsientoContableCajaChica detalleasientocontablecajachica : detalleasientocontablecajachicasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetalleAsientoContableCajaChica("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetalleAsientoContableCajaChicaConstantesFunciones.generarExcelReporteDataDetalleAsientoContableCajaChica("NORMAL",row,workbook,detalleasientocontablecajachica,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleAsientoContableCajaChicaDescripcion(detalleasientocontablecajachica));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetalleAsientoContableCajaChica() throws Exception {		
		this.startProcessDetalleAsientoContableCajaChica(true);
	}
	
	public void startProcessDetalleAsientoContableCajaChica(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica ,this.jPanelParametrosReportesDetalleAsientoContableCajaChica, this.jScrollPanelDatosDetalleAsientoContableCajaChica,this.jPanelPaginacionDetalleAsientoContableCajaChica, this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica, this.jPanelAccionesDetalleAsientoContableCajaChica,this.jPanelAccionesFormularioDetalleAsientoContableCajaChica,this.jmenuBarDetalleAsientoContableCajaChica,this.jmenuBarDetalleDetalleAsientoContableCajaChica,this.jTtoolBarDetalleAsientoContableCajaChica,this.jTtoolBarDetalleDetalleAsientoContableCajaChica);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleAsientoContableCajaChica=this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica; 
		
		final JPanel jPanelParametrosReportesDetalleAsientoContableCajaChica=this.jPanelParametrosReportesDetalleAsientoContableCajaChica;
		//final JScrollPane jScrollPanelDatosDetalleAsientoContableCajaChica=this.jScrollPanelDatosDetalleAsientoContableCajaChica;
		final JTable jTableDatosDetalleAsientoContableCajaChica=this.jTableDatosDetalleAsientoContableCajaChica;		
		final JPanel jPanelPaginacionDetalleAsientoContableCajaChica=this.jPanelPaginacionDetalleAsientoContableCajaChica;
		//final JScrollPane jScrollPanelDatosEdicionDetalleAsientoContableCajaChica=this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica;
		final JPanel jPanelAccionesDetalleAsientoContableCajaChica=this.jPanelAccionesDetalleAsientoContableCajaChica;
		
		JPanel jPanelCamposAuxiliarDetalleAsientoContableCajaChica=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetalleAsientoContableCajaChica=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			jPanelCamposAuxiliarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelCamposDetalleAsientoContableCajaChica;
			jPanelAccionesFormularioAuxiliarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelAccionesFormularioDetalleAsientoContableCajaChica;
		}
		
		final JPanel jPanelCamposDetalleAsientoContableCajaChica=jPanelCamposAuxiliarDetalleAsientoContableCajaChica;
		final JPanel jPanelAccionesFormularioDetalleAsientoContableCajaChica=jPanelAccionesFormularioAuxiliarDetalleAsientoContableCajaChica;
		
		
		final JMenuBar jmenuBarDetalleAsientoContableCajaChica=this.jmenuBarDetalleAsientoContableCajaChica;
		final JToolBar jTtoolBarDetalleAsientoContableCajaChica=this.jTtoolBarDetalleAsientoContableCajaChica;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetalleAsientoContableCajaChica=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleAsientoContableCajaChica=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			jmenuBarDetalleAuxiliarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jmenuBarDetalleDetalleAsientoContableCajaChica;
			jTtoolBarDetalleAuxiliarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTtoolBarDetalleDetalleAsientoContableCajaChica;
		}
		
		final JMenuBar jmenuBarDetalleDetalleAsientoContableCajaChica=jmenuBarDetalleAuxiliarDetalleAsientoContableCajaChica;
		final JToolBar jTtoolBarDetalleDetalleAsientoContableCajaChica=jTtoolBarDetalleAuxiliarDetalleAsientoContableCajaChica;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleAsientoContableCajaChica;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleAsientoContableCajaChica;
			processRunnable.jTableDatos=jTableDatosDetalleAsientoContableCajaChica;
			processRunnable.jPanelCampos=jPanelCamposDetalleAsientoContableCajaChica;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleAsientoContableCajaChica;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleAsientoContableCajaChica;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleAsientoContableCajaChica;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleAsientoContableCajaChica;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleAsientoContableCajaChica;
			processRunnable.jTtoolBar=jTtoolBarDetalleAsientoContableCajaChica;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleAsientoContableCajaChica;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleAsientoContableCajaChica ,jPanelParametrosReportesDetalleAsientoContableCajaChica,jTableDatosDetalleAsientoContableCajaChica, /*jScrollPanelDatosDetalleAsientoContableCajaChica,*/jPanelCamposDetalleAsientoContableCajaChica,jPanelPaginacionDetalleAsientoContableCajaChica, /*jScrollPanelDatosEdicionDetalleAsientoContableCajaChica,*/ jPanelAccionesDetalleAsientoContableCajaChica,jPanelAccionesFormularioDetalleAsientoContableCajaChica,jmenuBarDetalleAsientoContableCajaChica,jmenuBarDetalleDetalleAsientoContableCajaChica,jTtoolBarDetalleAsientoContableCajaChica,jTtoolBarDetalleDetalleAsientoContableCajaChica);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleAsientoContableCajaChica ,jPanelParametrosReportesDetalleAsientoContableCajaChica, jScrollPanelDatosDetalleAsientoContableCajaChica,jPanelPaginacionDetalleAsientoContableCajaChica, jScrollPanelDatosEdicionDetalleAsientoContableCajaChica, jPanelAccionesDetalleAsientoContableCajaChica,jPanelAccionesFormularioDetalleAsientoContableCajaChica,jmenuBarDetalleAsientoContableCajaChica,jmenuBarDetalleDetalleAsientoContableCajaChica,jTtoolBarDetalleAsientoContableCajaChica,jTtoolBarDetalleDetalleAsientoContableCajaChica);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetalleAsientoContableCajaChica() {// throws Exception 
		this.finishProcessDetalleAsientoContableCajaChica(true);
	}
	
	public void finishProcessDetalleAsientoContableCajaChica(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica ,this.jPanelParametrosReportesDetalleAsientoContableCajaChica, this.jScrollPanelDatosDetalleAsientoContableCajaChica,this.jPanelPaginacionDetalleAsientoContableCajaChica, this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica, this.jPanelAccionesDetalleAsientoContableCajaChica,this.jPanelAccionesFormularioDetalleAsientoContableCajaChica,this.jmenuBarDetalleAsientoContableCajaChica,this.jmenuBarDetalleDetalleAsientoContableCajaChica,this.jTtoolBarDetalleAsientoContableCajaChica,this.jTtoolBarDetalleDetalleAsientoContableCajaChica);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleAsientoContableCajaChica=this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica; 
		
		final JPanel jPanelParametrosReportesDetalleAsientoContableCajaChica=this.jPanelParametrosReportesDetalleAsientoContableCajaChica;
		//final JScrollPane jScrollPanelDatosDetalleAsientoContableCajaChica=this.jScrollPanelDatosDetalleAsientoContableCajaChica;
		final JTable jTableDatosDetalleAsientoContableCajaChica=this.jTableDatosDetalleAsientoContableCajaChica;		
		final JPanel jPanelPaginacionDetalleAsientoContableCajaChica=this.jPanelPaginacionDetalleAsientoContableCajaChica;
		//final JScrollPane jScrollPanelDatosEdicionDetalleAsientoContableCajaChica=this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica;
		final JPanel jPanelAccionesDetalleAsientoContableCajaChica=this.jPanelAccionesDetalleAsientoContableCajaChica;
		
		JPanel jPanelCamposAuxiliarDetalleAsientoContableCajaChica=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetalleAsientoContableCajaChica=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			jPanelCamposAuxiliarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelCamposDetalleAsientoContableCajaChica;
			jPanelAccionesFormularioAuxiliarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelAccionesFormularioDetalleAsientoContableCajaChica;
		}
		
		final JPanel jPanelCamposDetalleAsientoContableCajaChica=jPanelCamposAuxiliarDetalleAsientoContableCajaChica;
		final JPanel jPanelAccionesFormularioDetalleAsientoContableCajaChica=jPanelAccionesFormularioAuxiliarDetalleAsientoContableCajaChica;
		
		
		final JMenuBar jmenuBarDetalleAsientoContableCajaChica=this.jmenuBarDetalleAsientoContableCajaChica;		
		final JToolBar jTtoolBarDetalleAsientoContableCajaChica=this.jTtoolBarDetalleAsientoContableCajaChica;
				
		JMenuBar jmenuBarDetalleAuxiliarDetalleAsientoContableCajaChica=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleAsientoContableCajaChica=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			jmenuBarDetalleAuxiliarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jmenuBarDetalleDetalleAsientoContableCajaChica;
			jTtoolBarDetalleAuxiliarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTtoolBarDetalleDetalleAsientoContableCajaChica;		
		}
		
		final JMenuBar jmenuBarDetalleDetalleAsientoContableCajaChica=jmenuBarDetalleAuxiliarDetalleAsientoContableCajaChica;
		final JToolBar jTtoolBarDetalleDetalleAsientoContableCajaChica=jTtoolBarDetalleAuxiliarDetalleAsientoContableCajaChica;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleAsientoContableCajaChica;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleAsientoContableCajaChica;
			processRunnable.jTableDatos=jTableDatosDetalleAsientoContableCajaChica;
			processRunnable.jPanelCampos=jPanelCamposDetalleAsientoContableCajaChica;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleAsientoContableCajaChica;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleAsientoContableCajaChica;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleAsientoContableCajaChica;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleAsientoContableCajaChica;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleAsientoContableCajaChica;
			processRunnable.jTtoolBar=jTtoolBarDetalleAsientoContableCajaChica;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleAsientoContableCajaChica;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetalleAsientoContableCajaChica ,jPanelParametrosReportesDetalleAsientoContableCajaChica, jTableDatosDetalleAsientoContableCajaChica,/*jScrollPanelDatosDetalleAsientoContableCajaChica,*/jPanelCamposDetalleAsientoContableCajaChica,jPanelPaginacionDetalleAsientoContableCajaChica, /*jScrollPanelDatosEdicionDetalleAsientoContableCajaChica,*/ jPanelAccionesDetalleAsientoContableCajaChica,jPanelAccionesFormularioDetalleAsientoContableCajaChica,jmenuBarDetalleAsientoContableCajaChica,jmenuBarDetalleDetalleAsientoContableCajaChica,jTtoolBarDetalleAsientoContableCajaChica,jTtoolBarDetalleDetalleAsientoContableCajaChica));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetalleAsientoContableCajaChica(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetalleAsientoContableCajaChica(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetalleAsientoContableCajaChica(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetalleAsientoContableCajaChica(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleAsientoContableCajaChica,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetalleAsientoContableCajaChica,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetalleAsientoContableCajaChica(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleAsientoContableCajaChica,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetalleAsientoContableCajaChica,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detalleasientocontablecajachicaConstantesFunciones.getsFinalQueryDetalleAsientoContableCajaChica();
		String  finalQueryPaginacionTodos=this.detalleasientocontablecajachicaConstantesFunciones.getsFinalQueryDetalleAsientoContableCajaChica();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetalleAsientoContableCajaChicaConstantesFunciones.getArrayColumnasGlobalesNoDetalleAsientoContableCajaChica(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetalleAsientoContableCajaChicaConstantesFunciones.getArrayColumnasGlobalesDetalleAsientoContableCajaChica(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			//SE CAMBIA FUNCIONALIDAD DE MODULO POR ALGUNO PRIORITARIO
			Modulo moduloActualAux=new Modulo();
			
			moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,!esBusqueda,esBusqueda,arrColumnasGlobales,DetalleAsientoContableCajaChicaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detalleasientocontablecajachicasEliminados= new ArrayList<DetalleAsientoContableCajaChica>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetalleAsientoContableCajaChica();
		
				///*DetalleAsientoContableCajaChicaSessionBean*/this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			
			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetalleAsientoContableCajaChicaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetalleAsientoContableCajaChicaConstantesFunciones.getClassesForeignKeysOfDetalleAsientoContableCajaChica(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detalleasientocontablecajachica."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detalleasientocontablecajachicasAux= new ArrayList<DetalleAsientoContableCajaChica>();
			
				
			detalleasientocontablecajachicaLogic.setDatosCliente(this.datosCliente);
			detalleasientocontablecajachicaLogic.setDatosDeep(this.datosDeep);
			detalleasientocontablecajachicaLogic.setIsConDeep(true);
			
			
			detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detalleasientocontablecajachicaLogic.getTodosDetalleAsientoContableCajaChicas(finalQueryGlobal,pagination);
					
					//detalleasientocontablecajachicaLogic.getTodosDetalleAsientoContableCajaChicasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null|| detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleasientocontablecajachicasAux= new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux= new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleasientocontablecajachicaLogic.getTodosDetalleAsientoContableCajaChicas(finalQueryGlobal+"",this.pagination);												
							
							//detalleasientocontablecajachicaLogic.getTodosDetalleAsientoContableCajaChicasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetalleAsientoContableCajaChicas("Todos",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());					
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetalleAsientoContableCajaChica=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetalleAsientoContableCajaChica=this.idActual;
				
				} else if(this.idDetalleAsientoContableCajaChicaActual!=null && this.idDetalleAsientoContableCajaChicaActual!=0L) {
					idDetalleAsientoContableCajaChica=idDetalleAsientoContableCajaChicaActual;
				}
				
					
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndicePorId(idDetalleAsientoContableCajaChica);
				
				this.detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detalleasientocontablecajachicaLogic.getEntity(idDetalleAsientoContableCajaChica);
					
					//detalleasientocontablecajachicaLogic.getEntityWithConnection(idDetalleAsientoContableCajaChica);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().add(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChica());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
					this.detalleasientocontablecajachicas.add(detalleasientocontablecajachica);
				}
				
				if(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChica()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdAsientoContable",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdAsientoContable",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdAsientoContableCajaChica")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContableCajaChica(id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdAsientoContableCajaChica(finalQueryGlobal,pagination,id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContableCajaChica(id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContableCajaChica(id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdAsientoContableCajaChica(finalQueryGlobal,pagination,id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContableCajaChica(id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdAsientoContableCajaChica(id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdAsientoContableCajaChica",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdAsientoContableCajaChica",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdCentroCosto",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdCentroCosto",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdEjercicio",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdEjercicio",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdEmpresa",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdEmpresa",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFactura")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdFactura",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdFactura",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdModulo",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdModulo",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdPeriodo",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdPeriodo",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdSucursal",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdSucursal",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoCambio")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdTipoCambio",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdTipoCambio",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoGasto")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoGasto(id_tipo_gasto_empresaFK_IdTipoGasto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTipoGasto(finalQueryGlobal,pagination,id_tipo_gasto_empresaFK_IdTipoGasto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoGasto(id_tipo_gasto_empresaFK_IdTipoGasto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoGasto(id_tipo_gasto_empresaFK_IdTipoGasto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTipoGasto(finalQueryGlobal,pagination,id_tipo_gasto_empresaFK_IdTipoGasto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoGasto(id_tipo_gasto_empresaFK_IdTipoGasto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoGasto(id_tipo_gasto_empresaFK_IdTipoGasto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdTipoGasto",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdTipoGasto",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTransaccionModulo")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdTipoTransaccionModulo",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdTipoTransaccionModulo",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccion")) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()==null||detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleasientocontablecajachicas==null|| detalleasientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
						detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicasAux=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicasAux.addAll(detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleAsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdTransaccion",detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleAsientoContableCajaChicas("FK_IdTransaccion",detalleasientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
						detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(detalleasientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicas=new ArrayList<DetalleAsientoContableCajaChica>();
							detalleasientocontablecajachicas.addAll(detalleasientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetalleAsientoContableCajaChica();
		
		this.traerValoresTablaTotales();	
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetalleAsientoContableCajaChicaConstantesFunciones.getTotalesListaDetalleAsientoContableCajaChica(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetalleAsientoContableCajaChicaConstantesFunciones.getTotalesListaDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicas);
		}
		*/
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetalleAsientoContableCajaChica();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleasientocontablecajachicas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleasientocontablecajachicas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetalleAsientoContableCajaChica detalleasientocontablecajachica) {
		Boolean permite=true;
		
		if(this.detalleasientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetalleAsientoContableCajaChicaConstantesFunciones.getTotalesListaDetalleAsientoContableCajaChica(detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetalleAsientoContableCajaChicaConstantesFunciones.getTotalesListaDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicas);
		}
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetalleAsientoContableCajaChicaConstantesFunciones.getOrderByListaDetalleAsientoContableCajaChica();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetalleAsientoContableCajaChicaConstantesFunciones.getOrderByListaDetalleAsientoContableCajaChica();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
				if(detalleasientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
					detalleasientocontablecajachicaTotales=detalleasientocontablecajachica;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:this.detalleasientocontablecajachicas) {
				if(detalleasientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
					detalleasientocontablecajachicaTotales=detalleasientocontablecajachica;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detalleasientocontablecajachicaAux=new DetalleAsientoContableCajaChica();
			this.detalleasientocontablecajachicaAux.setsType(Constantes2.S_TOTALES);
			this.detalleasientocontablecajachicaAux.setIsNew(false);
			this.detalleasientocontablecajachicaAux.setIsChanged(false);
			this.detalleasientocontablecajachicaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetalleAsientoContableCajaChicaConstantesFunciones.TotalizarValoresFilaDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas(),this.detalleasientocontablecajachicaAux);
				
				this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().add(this.detalleasientocontablecajachicaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetalleAsientoContableCajaChicaConstantesFunciones.TotalizarValoresFilaDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicas,this.detalleasientocontablecajachicaAux);
				
				this.detalleasientocontablecajachicas.add(this.detalleasientocontablecajachicaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detalleasientocontablecajachicaTotales=new DetalleAsientoContableCajaChica();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().remove(detalleasientocontablecajachicaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleasientocontablecajachicas.remove(detalleasientocontablecajachicaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detalleasientocontablecajachicaTotales=new DetalleAsientoContableCajaChica();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
				if(detalleasientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
					detalleasientocontablecajachicaTotales=detalleasientocontablecajachica;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleAsientoContableCajaChicaConstantesFunciones.TotalizarValoresFilaDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas(),detalleasientocontablecajachicaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:this.detalleasientocontablecajachicas) {
				if(detalleasientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
					detalleasientocontablecajachicaTotales=detalleasientocontablecajachica;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleAsientoContableCajaChicaConstantesFunciones.TotalizarValoresFilaDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicas,detalleasientocontablecajachicaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetalleAsientoContableCajaChicasFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdAsientoContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdAsientoContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdAsientoContableCajaChica()throws Exception {
		try {
			sAccionBusqueda="FK_IdAsientoContableCajaChica";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdTipoGasto()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoGasto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdTipoTransaccionModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTransaccionModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdTransaccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetalleAsientoContableCajaChicasFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdAsientoContable(String sFinalQuery,Long id_asiento_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdAsientoContable(sFinalQuery,this.pagination,id_asiento_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdAsientoContableCajaChica(String sFinalQuery,Long id_asiento_contable_caja_chica)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdAsientoContableCajaChica(sFinalQuery,this.pagination,id_asiento_contable_caja_chica);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdFactura(String sFinalQuery,Long id_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdFactura(sFinalQuery,this.pagination,id_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdTipoGasto(String sFinalQuery,Long id_tipo_gasto_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTipoGasto(sFinalQuery,this.pagination,id_tipo_gasto_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdTipoTransaccionModulo(String sFinalQuery,Long id_tipo_transaccion_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTipoTransaccionModulo(sFinalQuery,this.pagination,id_tipo_transaccion_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleAsientoContableCajaChicasFK_IdTransaccion(String sFinalQuery,Long id_transaccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicasFK_IdTransaccion(sFinalQuery,this.pagination,id_transaccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetalleAsientoContableCajaChica() {
		this.isPermisoTodoDetalleAsientoContableCajaChica=false;
		this.isPermisoNuevoDetalleAsientoContableCajaChica=false;
		this.isPermisoActualizarDetalleAsientoContableCajaChica=false;
		this.isPermisoActualizarOriginalDetalleAsientoContableCajaChica=false;
		this.isPermisoEliminarDetalleAsientoContableCajaChica=false;
		this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica=false;
		this.isPermisoConsultaDetalleAsientoContableCajaChica=false;
		this.isPermisoBusquedaDetalleAsientoContableCajaChica=false;
		this.isPermisoReporteDetalleAsientoContableCajaChica=false;		
		this.isPermisoOrdenDetalleAsientoContableCajaChica=false;		
		this.isPermisoPaginacionMedioDetalleAsientoContableCajaChica=false;		
		this.isPermisoPaginacionAltoDetalleAsientoContableCajaChica=false;
		this.isPermisoPaginacionTodoDetalleAsientoContableCajaChica=false;
		this.isPermisoCopiarDetalleAsientoContableCajaChica=false;		
		this.isPermisoVerFormDetalleAsientoContableCajaChica=false;		
		this.isPermisoDuplicarDetalleAsientoContableCajaChica=false;		
		this.isPermisoOrdenDetalleAsientoContableCajaChica=false;		
	}
	
	public void setPermisosUsuarioDetalleAsientoContableCajaChica(Boolean isPermiso) {
		this.isPermisoTodoDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoNuevoDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoActualizarDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoActualizarOriginalDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoEliminarDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoConsultaDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoBusquedaDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoReporteDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoOrdenDetalleAsientoContableCajaChica=isPermiso;		
		this.isPermisoPaginacionMedioDetalleAsientoContableCajaChica=isPermiso;		
		this.isPermisoPaginacionAltoDetalleAsientoContableCajaChica=isPermiso;		
		this.isPermisoPaginacionTodoDetalleAsientoContableCajaChica=isPermiso;		
		this.isPermisoCopiarDetalleAsientoContableCajaChica=isPermiso;		
		this.isPermisoVerFormDetalleAsientoContableCajaChica=isPermiso;		
		this.isPermisoDuplicarDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoOrdenDetalleAsientoContableCajaChica=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetalleAsientoContableCajaChica(Boolean isPermiso) {
		//this.isPermisoTodoDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoNuevoDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoActualizarDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoActualizarOriginalDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoEliminarDetalleAsientoContableCajaChica=isPermiso;
		this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica=isPermiso;
		//this.isPermisoConsultaDetalleAsientoContableCajaChica=isPermiso;
		//this.isPermisoBusquedaDetalleAsientoContableCajaChica=isPermiso;
		//this.isPermisoReporteDetalleAsientoContableCajaChica=isPermiso;
		//this.isPermisoOrdenDetalleAsientoContableCajaChica=isPermiso;		
		//this.isPermisoPaginacionMedioDetalleAsientoContableCajaChica=isPermiso;		
		//this.isPermisoPaginacionAltoDetalleAsientoContableCajaChica=isPermiso;		
		//this.isPermisoPaginacionTodoDetalleAsientoContableCajaChica=isPermiso;		
		//this.isPermisoCopiarDetalleAsientoContableCajaChica=isPermiso;		
		//this.isPermisoDuplicarDetalleAsientoContableCajaChica=isPermiso;
		//this.isPermisoOrdenDetalleAsientoContableCajaChica=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetalleAsientoContableCajaChicaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetalleAsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetalleAsientoContableCajaChicaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetalleAsientoContableCajaChicaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetalleAsientoContableCajaChicaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetalleAsientoContableCajaChicaClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetalleAsientoContableCajaChica() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetalleAsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetalleAsientoContableCajaChica=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetalleAsientoContableCajaChica=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetalleAsientoContableCajaChica=this.isPermisoActualizarDetalleAsientoContableCajaChica;
			this.isPermisoEliminarDetalleAsientoContableCajaChica=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetalleAsientoContableCajaChica=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetalleAsientoContableCajaChica=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetalleAsientoContableCajaChica=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetalleAsientoContableCajaChica=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleAsientoContableCajaChica=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetalleAsientoContableCajaChica=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetalleAsientoContableCajaChica=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetalleAsientoContableCajaChica=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetalleAsientoContableCajaChica=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetalleAsientoContableCajaChica=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetalleAsientoContableCajaChica=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleAsientoContableCajaChica=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetalleAsientoContableCajaChica.setToolTipText(this.jTableDatosDetalleAsientoContableCajaChica.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetalleAsientoContableCajaChica(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetalleAsientoContableCajaChica(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetalleAsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetalleAsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetalleAsientoContableCajaChica() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetalleAsientoContableCajaChicaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.asientocontablecajachicasForeignKey=new ArrayList();
				this.tipogastoempresasForeignKey=new ArrayList();
				this.transaccionsForeignKey=new ArrayList();
				this.facturasForeignKey=new ArrayList();
				this.asientocontablesForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
				this.tipotransaccionmodulosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetalleAsientoContableCajaChicaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetalleAsientoContableCajaChicaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetalleAsientoContableCajaChicaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableCajaChicaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoGastoEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableCajaChicaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablecajachicasForeignKey==null||this.asientocontablecajachicasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableCajaChicaConstantesFunciones.getArrayColumnasGlobalesAsientoContableCajaChica(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableCajaChicaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableCajaChicaConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContableCajaChicasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGastoEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipogastoempresasForeignKey==null||this.tipogastoempresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoGastoEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoGastoEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGastoEmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoGastoEmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoGastoEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FacturaConstantesFunciones.SFINALQUERY;

				this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetalleAsientoContableCajaChicaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetalleAsientoContableCajaChicaParameterReturnGeneral detalleasientocontablecajachicaReturnGeneral=new DetalleAsientoContableCajaChicaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_empresaDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_empresaDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_sucursalDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_sucursalDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_moduloDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_moduloDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_ejercicioDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_ejercicioDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_periodoDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_periodoDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_anioDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_anioDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_mesDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_mesDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalAsientoContableCajaChica="";

				if(((this.asientocontablecajachicasForeignKey==null||this.asientocontablecajachicasForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContableCajaChica()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableCajaChicaConstantesFunciones.getArrayColumnasGlobalesAsientoContableCajaChica(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContableCajaChica=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableCajaChicaConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContableCajaChica=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContableCajaChica, "");
						finalQueryGlobalAsientoContableCajaChica+=AsientoContableCajaChicaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContableCajaChicasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContableCajaChica=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidAsientoContableCajaChicaActual();
					}
				} else {
					finalQueryGlobalAsientoContableCajaChica="NONE";
				}


				String finalQueryGlobalTipoGastoEmpresa="";

				if(((this.tipogastoempresasForeignKey==null||this.tipogastoempresasForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_gasto_empresaDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_gasto_empresaDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoGastoEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoGastoEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoGastoEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoGastoEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGastoEmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoGastoEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoGastoEmpresa, "");
						finalQueryGlobalTipoGastoEmpresa+=TipoGastoEmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoGastoEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoGastoEmpresa=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidTipoGastoEmpresaActual();
					}
				} else {
					finalQueryGlobalTipoGastoEmpresa="NONE";
				}


				String finalQueryGlobalTransaccion="";

				if(((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_transaccionDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_transaccionDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalTransaccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion, "");
						finalQueryGlobalTransaccion+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidTransaccionActual();
					}
				} else {
					finalQueryGlobalTransaccion="NONE";
				}


				String finalQueryGlobalFactura="";

				if(((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_facturaDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_facturaDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

						finalQueryGlobalFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalFactura, "");
						finalQueryGlobalFactura+=FacturaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFactura=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidFacturaActual();
					}
				} else {
					finalQueryGlobalFactura="NONE";
				}


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_asiento_contableDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_asiento_contableDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_centro_costoDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_centro_costoDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_cambioDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_cambioDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}


				String finalQueryGlobalTipoTransaccionModulo="";

				if(((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0) && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_transaccion_moduloDetalleAsientoContableCajaChica)
					 || (this.esRecargarFks && this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_transaccion_moduloDetalleAsientoContableCajaChica)) {

					if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTransaccionModulo, "");
						finalQueryGlobalTipoTransaccionModulo+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTransaccionModulo=" WHERE " + ConstantesSql.ID + "="+detalleasientocontablecajachicaSessionBean.getlidTipoTransaccionModuloActual();
					}
				} else {
					finalQueryGlobalTipoTransaccionModulo="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detalleasientocontablecajachicaReturnGeneral=detalleasientocontablecajachicaLogic.cargarCombosLoteForeignKeyDetalleAsientoContableCajaChica(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalModulo,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalAsientoContableCajaChica,finalQueryGlobalTipoGastoEmpresa,finalQueryGlobalTransaccion,finalQueryGlobalFactura,finalQueryGlobalAsientoContable,finalQueryGlobalCentroCosto,finalQueryGlobalTipoCambio,finalQueryGlobalTipoTransaccionModulo);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detalleasientocontablecajachicaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detalleasientocontablecajachicaReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=detalleasientocontablecajachicaReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detalleasientocontablecajachicaReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detalleasientocontablecajachicaReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=detalleasientocontablecajachicaReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=detalleasientocontablecajachicaReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalAsientoContableCajaChica.equals("NONE")) {
				this.asientocontablecajachicasForeignKey=detalleasientocontablecajachicaReturnGeneral.getasientocontablecajachicasForeignKey();
			}

			if(!finalQueryGlobalTipoGastoEmpresa.equals("NONE")) {
				this.tipogastoempresasForeignKey=detalleasientocontablecajachicaReturnGeneral.gettipogastoempresasForeignKey();
			}

			if(!finalQueryGlobalTransaccion.equals("NONE")) {
				this.transaccionsForeignKey=detalleasientocontablecajachicaReturnGeneral.gettransaccionsForeignKey();
			}

			if(!finalQueryGlobalFactura.equals("NONE")) {
				this.facturasForeignKey=detalleasientocontablecajachicaReturnGeneral.getfacturasForeignKey();
			}

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=detalleasientocontablecajachicaReturnGeneral.getasientocontablesForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=detalleasientocontablecajachicaReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=detalleasientocontablecajachicaReturnGeneral.gettipocambiosForeignKey();
			}

			if(!finalQueryGlobalTipoTransaccionModulo.equals("NONE")) {
				this.tipotransaccionmodulosForeignKey=detalleasientocontablecajachicaReturnGeneral.gettipotransaccionmodulosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetalleAsientoContableCajaChica()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyAsientoContableCajaChica();
			this.addItemDefectoCombosForeignKeyTipoGastoEmpresa();
			this.addItemDefectoCombosForeignKeyTransaccion();
			this.addItemDefectoCombosForeignKeyFactura();
			this.addItemDefectoCombosForeignKeyAsientoContable();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyTipoCambio();
			this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.detalleasientocontablecajachicaSessionBean==null) {
				this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContableCajaChica()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContableCajaChica()) {
				AsientoContableCajaChica asientocontablecajachica=new AsientoContableCajaChica();
				AsientoContableCajaChicaConstantesFunciones.setAsientoContableCajaChicaDescripcion(asientocontablecajachica,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontablecajachica.setId(null);

				if(!AsientoContableCajaChicaConstantesFunciones.ExisteEnLista(this.asientocontablecajachicasForeignKey,asientocontablecajachica,true)) {

					this.asientocontablecajachicasForeignKey.add(0,asientocontablecajachica);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoGastoEmpresa()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoGastoEmpresa()) {
				TipoGastoEmpresa tipogastoempresa=new TipoGastoEmpresa();
				TipoGastoEmpresaConstantesFunciones.setTipoGastoEmpresaDescripcion(tipogastoempresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipogastoempresa.setId(null);

				if(!TipoGastoEmpresaConstantesFunciones.ExisteEnLista(this.tipogastoempresasForeignKey,tipogastoempresa,true)) {

					this.tipogastoempresasForeignKey.add(0,tipogastoempresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				Transaccion transaccion=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionsForeignKey,transaccion,true)) {

					this.transaccionsForeignKey.add(0,transaccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFactura()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				Factura factura=new Factura();
				FacturaConstantesFunciones.setFacturaDescripcion(factura,Constantes.SMENSAJE_ESCOJA_OPCION);
				factura.setId(null);

				if(!FacturaConstantesFunciones.ExisteEnLista(this.facturasForeignKey,factura,true)) {

					this.facturasForeignKey.add(0,factura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTransaccionModulo()throws Exception {
		try {

			if(!this.detalleasientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				TipoTransaccionModulo tipotransaccionmodulo=new TipoTransaccionModulo();
				TipoTransaccionModuloConstantesFunciones.setTipoTransaccionModuloDescripcion(tipotransaccionmodulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotransaccionmodulo.setId(null);

				if(!TipoTransaccionModuloConstantesFunciones.ExisteEnLista(this.tipotransaccionmodulosForeignKey,tipotransaccionmodulo,true)) {

					this.tipotransaccionmodulosForeignKey.add(0,tipotransaccionmodulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetalleAsientoContableCajaChica()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetalleAsientoContableCajaChica(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyDetalleAsientoContableCajaChica()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualModuloForeignKey(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR,false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
				this.detalleasientocontablecajachica.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.detalleasientocontablecajachica.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleAsientoContableCajaChica();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica)throws Exception {	
		try {
			
			this.setActualAsientoContableCajaChicaForeignKey(detalleasientocontablecajachica.getid_asiento_contable_caja_chica(),false,"Formulario");
			this.setActualTipoGastoEmpresaForeignKey(detalleasientocontablecajachica.getid_tipo_gasto_empresa(),false,"Formulario");
			this.setActualTransaccionForeignKey(detalleasientocontablecajachica.getid_transaccion(),false,"Formulario");
			this.setActualFacturaForeignKey(detalleasientocontablecajachica.getid_factura(),false,"Formulario");
			this.setActualAsientoContableForeignKey(detalleasientocontablecajachica.getid_asiento_contable(),false,"Formulario");
			this.setActualCentroCostoForeignKey(detalleasientocontablecajachica.getid_centro_costo(),false,"Formulario");
			this.setActualTipoCambioForeignKey(detalleasientocontablecajachica.getid_tipo_cambio(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(detalleasientocontablecajachica.getid_tipo_transaccion_modulo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detalleasientocontablecajachica.getFactura()!=null && !sTipoEvento.equals("id_facturaDetalleAsientoContableCajaChica")) { //sTipoEvento Evita Bucle Infinito

					this.facturasForeignKey=new ArrayList<Factura>();
					this.facturasForeignKey.add(detalleasientocontablecajachica.getFactura());

					this.addItemDefectoCombosForeignKeyFactura();
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				if(detalleasientocontablecajachica.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contableDetalleAsientoContableCajaChica")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(detalleasientocontablecajachica.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				if(detalleasientocontablecajachica.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoDetalleAsientoContableCajaChica")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(detalleasientocontablecajachica.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				if(detalleasientocontablecajachica.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioDetalleAsientoContableCajaChica")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(detalleasientocontablecajachica.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetalleAsientoContableCajaChica()throws Exception {	
		try {
			
			this.setActualAsientoContableCajaChicaForeignKey(this.detalleasientocontablecajachicaConstantesFunciones.getid_asiento_contable_caja_chica(),false,"Formulario");
			this.setActualTipoGastoEmpresaForeignKey(this.detalleasientocontablecajachicaConstantesFunciones.getid_tipo_gasto_empresa(),false,"Formulario");
			this.setActualTransaccionForeignKey(this.detalleasientocontablecajachicaConstantesFunciones.getid_transaccion(),false,"Formulario");
			this.setActualFacturaForeignKey(this.detalleasientocontablecajachicaConstantesFunciones.getid_factura(),false,"Formulario");
			this.setActualAsientoContableForeignKey(this.detalleasientocontablecajachicaConstantesFunciones.getid_asiento_contable(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.detalleasientocontablecajachicaConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualTipoCambioForeignKey(this.detalleasientocontablecajachicaConstantesFunciones.getid_tipo_cambio(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(this.detalleasientocontablecajachicaConstantesFunciones.getid_tipo_transaccion_modulo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleAsientoContableCajaChica()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetalleAsientoContableCajaChica()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetalleAsientoContableCajaChica()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetalleAsientoContableCajaChica()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetalleAsientoContableCajaChica()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameAsientoContableCajaChicasForeignKey("Todos");
			this.cargarCombosFrameTipoGastoEmpresasForeignKey("Todos");
			this.cargarCombosFrameTransaccionsForeignKey("Todos");
			this.cargarCombosFrameFacturasForeignKey("Todos");
			this.cargarCombosFrameAsientoContablesForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");
			this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetalleAsientoContableCajaChica(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContableCajaChicasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoGastoEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetalleAsientoContableCajaChica()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	






























	
	

	public DetalleAsientoContableCajaChicaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetalleAsientoContableCajaChicaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetalleAsientoContableCajaChicaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean(); 
		this.detalleasientocontablecajachicaConstantesFunciones=new DetalleAsientoContableCajaChicaConstantesFunciones(); 
		this.detalleasientocontablecajachicaBean=new DetalleAsientoContableCajaChica();//(this.detalleasientocontablecajachicaConstantesFunciones); 		
		this.detalleasientocontablecajachicaReturnGeneral=new DetalleAsientoContableCajaChicaParameterReturnGeneral(); 
		
		this.detalleasientocontablecajachicaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detalleasientocontablecajachicaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetalleAsientoContableCajaChicaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetalleAsientoContableCajaChicaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetalleAsientoContableCajaChicaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetalleAsientoContableCajaChica(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detalleasientocontablecajachicaConstantesFunciones=new DetalleAsientoContableCajaChicaConstantesFunciones(); 
			this.detalleasientocontablecajachicaBean=new DetalleAsientoContableCajaChica();//this.detalleasientocontablecajachicaConstantesFunciones); 			
			this.detalleasientocontablecajachicaReturnGeneral=new DetalleAsientoContableCajaChicaParameterReturnGeneral(); 
		
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle Asiento Contable Caja Chica Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detalleasientocontablecajachica=new DetalleAsientoContableCajaChica();
			this.detalleasientocontablecajachicas = new ArrayList<DetalleAsientoContableCajaChica>();
			this.detalleasientocontablecajachicasAux = new ArrayList<DetalleAsientoContableCajaChica>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic=new DetalleAsientoContableCajaChicaLogic();
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			//this.detalleasientocontablecajachicaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detalleasientocontablecajachicaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica);	
					}
					
					if(this.jInternalFrameImportacionDetalleAsientoContableCajaChica!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleAsientoContableCajaChica);							
					}
					
				}
				
				if(this.jInternalFrameTotalesDetalleAsientoContableCajaChica!=null) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetalleAsientoContableCajaChica);
				}
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetalleAsientoContableCajaChica!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetalleAsientoContableCajaChica);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica);
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica);
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.setVisible(false);
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetalleAsientoContableCajaChica!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetalleAsientoContableCajaChica);
					this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setVisible(false);
					this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setSelected(false);
				}
				
				
			}
			
			if(this.jInternalFrameTotalesDetalleAsientoContableCajaChica!=null) {
				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetalleAsientoContableCajaChica);
				this.jInternalFrameTotalesDetalleAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameTotalesDetalleAsientoContableCajaChica.setSelected(false);
			}
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetalleAsientoContableCajaChica!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetalleAsientoContableCajaChica);
					this.jInternalFrameOrderByDetalleAsientoContableCajaChica.setVisible(false);
					this.jInternalFrameOrderByDetalleAsientoContableCajaChica.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetalleAsientoContableCajaChicaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetalleAsientoContableCajaChicaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detalleasientocontablecajachicaReturnGeneral=new DetalleAsientoContableCajaChicaParameterReturnGeneral();
			
			this.detalleasientocontablecajachicaParameterGeneral=new DetalleAsientoContableCajaChicaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetalleAsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado(),this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado(),this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdAsientoContableCajaChica=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdFactura=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTipoGasto=true;
			this.isVisibilidadFK_IdTipoTransaccionModulo=true;
			this.isVisibilidadFK_IdTransaccion=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetalleAsientoContableCajaChica();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetalleAsientoContableCajaChica(false);
			
			this.setPermisosUsuarioDetalleAsientoContableCajaChica();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado() 
				|| (this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado() && this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetalleAsientoContableCajaChicaClasesRelacionadas();
			}
			
			if(this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetalleAsientoContableCajaChicaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetalleAsientoContableCajaChica();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetalleAsientoContableCajaChica();
			}
			
			if(!this.isPermisoBusquedaDetalleAsientoContableCajaChica) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetalleAsientoContableCajaChica,this.isPermisoPaginacionMedioDetalleAsientoContableCajaChica,this.isPermisoPaginacionTodoDetalleAsientoContableCajaChica);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetalleAsientoContableCajaChicaConstantesFunciones.getTiposSeleccionarDetalleAsientoContableCajaChica());
				
				this.tiposColumnasSelect=DetalleAsientoContableCajaChicaConstantesFunciones.getTiposSeleccionarDetalleAsientoContableCajaChica(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetalleAsientoContableCajaChica();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetalleAsientoContableCajaChica(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetalleAsientoContableCajaChica(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleAsientoContableCajaChica() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			this.arrDatoGeneralTotales= new  ArrayList<DatoGeneral>();
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.moduloLogic=new ModuloLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.asientocontablecajachicaLogic=new AsientoContableCajaChicaLogic();
			this.tipogastoempresaLogic=new TipoGastoEmpresaLogic();
			this.transaccionLogic=new TransaccionLogic();
			this.facturaLogic=new FacturaLogic();
			this.asientocontableLogic=new AsientoContableLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			this.tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detalleasientocontablecajachicaImplementable= (DetalleAsientoContableCajaChicaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleAsientoContableCajaChicaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detalleasientocontablecajachicaImplementableHome= (DetalleAsientoContableCajaChicaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleAsientoContableCajaChicaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detalleasientocontablecajachicas= new ArrayList<DetalleAsientoContableCajaChica>();
			this.detalleasientocontablecajachicasEliminados= new ArrayList<DetalleAsientoContableCajaChica>();
						
			this.isEsNuevoDetalleAsientoContableCajaChica=false;
			this.esParaAccionDesdeFormularioDetalleAsientoContableCajaChica=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idFacturaActual=0L;
			this.idAsientoContableActual=0L;
			this.idCentroCostoActual=0L;
			this.idTipoCambioActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.asientocontablecajachicasForeignKey=new ArrayList<AsientoContableCajaChica>() ;
			this.tipogastoempresasForeignKey=new ArrayList<TipoGastoEmpresa>() ;
			this.transaccionsForeignKey=new ArrayList<Transaccion>() ;
			this.facturasForeignKey=new ArrayList<Factura>() ;
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetalleAsientoContableCajaChica(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetalleAsientoContableCajaChica();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetalleAsientoContableCajaChicaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetalleAsientoContableCajaChica();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetalleAsientoContableCajaChica();
			}
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetalleAsientoContableCajaChica(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetalleAsientoContableCajaChica: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetalleAsientoContableCajaChica() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetalleAsientoContableCajaChica")) {
				iIndex=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTabbedPaneRelacionesDetalleAsientoContableCajaChica.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTabbedPaneRelacionesDetalleAsientoContableCajaChica.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetalleAsientoContableCajaChica();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetalleAsientoContableCajaChica(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetalleAsientoContableCajaChica(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetalleAsientoContableCajaChica(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetalleAsientoContableCajaChicaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetalleAsientoContableCajaChica();
		
		this.cargarCombosFrameForeignKeyDetalleAsientoContableCajaChica();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetalleAsientoContableCajaChica();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetalleAsientoContableCajaChica();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableCajaChica(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableCajaChicaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContableCajaChica();
				this.cargarCombosFrameAsientoContableCajaChicasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAsientoContableCajaChica(this.asientocontablecajachicasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGastoEmpresa(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoGastoEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoGastoEmpresa();
				this.cargarCombosFrameTipoGastoEmpresasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoGastoEmpresa(this.tipogastoempresasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion(this.transaccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFactura(this.facturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModulo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoTransaccionModulo(this.tipotransaccionmodulosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
			
			if(jTableDatosDetalleAsientoContableCajaChica.getRowCount()>=1) {
				jTableDatosDetalleAsientoContableCajaChica.removeRowSelectionInterval(0, jTableDatosDetalleAsientoContableCajaChica.getRowCount()-1);						
			}
			
			this.isEsNuevoDetalleAsientoContableCajaChica=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetalleAsientoContableCajaChica(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetalleAsientoContableCajaChica(true);			
			//this.detalleasientocontablecajachica=new DetalleAsientoContableCajaChica();
			//this.detalleasientocontablecajachica.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleAsientoContableCajaChica(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica() ;
			
			if(DetalleAsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleAsientoContableCajaChica(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detalleasientocontablecajachica);	
			this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);				
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
			if(this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetalleAsientoContableCajaChica: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRows().length;			
			}
			
			detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetalleAsientoContableCajaChica--;			
				//DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux= new DetalleAsientoContableCajaChica();			
				//detalleasientocontablecajachicaAux.setId(this.iIdNuevoDetalleAsientoContableCajaChica);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetalleAsientoContableCajaChica detalleasientocontablecajachicaOrigen=new DetalleAsientoContableCajaChica();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaOrigen : detalleasientocontablecajachicasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detalleasientocontablecajachicaOrigen =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleasientocontablecajachicaOrigen =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetalleAsientoContableCajaChica();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detalleasientocontablecajachica.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetalleAsientoContableCajaChica(detalleasientocontablecajachicaOrigen,this.detalleasientocontablecajachica,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().add(this.detalleasientocontablecajachicaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachicas.add(this.detalleasientocontablecajachicaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
				
				this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(this.getIndiceNuevoDetalleAsientoContableCajaChica(), this.getIndiceNuevoDetalleAsientoContableCajaChica());
				
				int iLastRow =  this.jTableDatosDetalleAsientoContableCajaChica.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleAsientoContableCajaChica.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleAsientoContableCajaChica.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();									
		
			DetalleAsientoContableCajaChica detalleasientocontablecajachicaOrigen=new DetalleAsientoContableCajaChica();
			DetalleAsientoContableCajaChica detalleasientocontablecajachicaDestino=new DetalleAsientoContableCajaChica();
				
			detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detalleasientocontablecajachicasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaOrigen =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleasientocontablecajachicaOrigen =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleasientocontablecajachicaDestino =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleasientocontablecajachicaDestino =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detalleasientocontablecajachicaOrigen =detalleasientocontablecajachicasSeleccionados.get(0);
				detalleasientocontablecajachicaDestino =detalleasientocontablecajachicasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetalleAsientoContableCajaChica(detalleasientocontablecajachicaOrigen,detalleasientocontablecajachicaDestino,true,false);
				
				detalleasientocontablecajachicaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleasientocontablecajachicaDestino,detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleasientocontablecajachicaDestino,detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
				
				//this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(this.getIndiceNuevoDetalleAsientoContableCajaChica(), this.getIndiceNuevoDetalleAsientoContableCajaChica());
				
				int iLastRow =  this.jTableDatosDetalleAsientoContableCajaChica.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleAsientoContableCajaChica.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleAsientoContableCajaChica.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetalleAsientoContableCajaChica.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(!isVisible);
			this.jPanelPaginacionDetalleAsientoContableCajaChica.setVisible(!isVisible);
			this.jPanelAccionesDetalleAsientoContableCajaChica.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetalleAsientoContableCajaChica();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetalleAsientoContableCajaChica();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetalleAsientoContableCajaChica();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirTotalesDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.abrirInicializarFrameTotalesDetalleAsientoContableCajaChica();
			
			this.abrirFrameTotalesDetalleAsientoContableCajaChica();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTotalesDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.cerrarFrameTotalesDetalleAsientoContableCajaChica();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirOrderByDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetalleAsientoContableCajaChica();
			
			this.abrirFrameOrderByDetalleAsientoContableCajaChica();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetalleAsientoContableCajaChica();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetalleAsientoContableCajaChica(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleAsientoContableCajaChica);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.isMaximum()) {
					this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setSize(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.iWidthFormulario,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.isMaximum()) {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jContentPaneDetalleDetalleAsientoContableCajaChica.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTabbedPaneRelacionesDetalleAsientoContableCajaChica.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jContentPaneDetalleDetalleAsientoContableCajaChica.getWidth(),DetalleAsientoContableCajaChicaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTabbedPaneRelacionesDetalleAsientoContableCajaChica.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jContentPaneDetalleDetalleAsientoContableCajaChica.getWidth(),DetalleAsientoContableCajaChicaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTabbedPaneRelacionesDetalleAsientoContableCajaChica.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jContentPaneDetalleDetalleAsientoContableCajaChica.getWidth(),DetalleAsientoContableCajaChicaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setVisible(true);
	        this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetalleAsientoContableCajaChica() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetalleAsientoContableCajaChica==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetalleAsientoContableCajaChica=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleAsientoContableCajaChica,false,this);
				} else {
					this.jInternalFrameOrderByDetalleAsientoContableCajaChica=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleAsientoContableCajaChica,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetalleAsientoContableCajaChica);
				this.jInternalFrameOrderByDetalleAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameOrderByDetalleAsientoContableCajaChica.setSelected(false);
				
				this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleAsientoContableCajaChica"));
				
				this.inicializarActualizarBindingTablaOrderByDetalleAsientoContableCajaChica();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetalleAsientoContableCajaChica() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetalleAsientoContableCajaChica==null) {
				
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica=new ImportacionJInternalFrame(DetalleAsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleAsientoContableCajaChica);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetalleAsientoContableCajaChica);
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setSelected(false);


				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleAsientoContableCajaChica"));
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleAsientoContableCajaChica"));
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleAsientoContableCajaChica"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetalleAsientoContableCajaChica() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica==null) {
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica=new ReporteDinamicoJInternalFrame(DetalleAsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica);
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleAsientoContableCajaChica"));
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleAsientoContableCajaChica"));
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleAsientoContableCajaChica"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleAsientoContableCajaChica();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	public void abrirInicializarFrameTotalesDetalleAsientoContableCajaChica() throws Exception {	    	        
	    try {			
			if(this.jInternalFrameTotalesDetalleAsientoContableCajaChica==null) {
				this.jInternalFrameTotalesDetalleAsientoContableCajaChica=new TotalesJInternalFrame(this.jButtonAbrirTotalesDetalleAsientoContableCajaChica,STIPO_TAMANIO_GENERAL,this);
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetalleAsientoContableCajaChica);

				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetalleAsientoContableCajaChica);
				this.jInternalFrameTotalesDetalleAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameTotalesDetalleAsientoContableCajaChica.setSelected(false);


				this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetalleAsientoContableCajaChica"));
								
				this.inicializarActualizarBindingTablaTotalesDetalleAsientoContableCajaChica();
				
				this.redimensionarTablaTotales();
			}			
		} catch (final Exception e) {
			
		}
	}	
	
		
					
	public void cerrarFrameDetalleDetalleAsientoContableCajaChica() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleAsientoContableCajaChica);
			
	       	this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setVisible(false);
	        this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.dispose();
			//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetalleAsientoContableCajaChica() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetalleAsientoContableCajaChica() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setVisible(true);
	        this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	public void abrirFrameTotalesDetalleAsientoContableCajaChica() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetalleAsientoContableCajaChica.setVisible(true);
	        this.jInternalFrameTotalesDetalleAsientoContableCajaChica.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTotalesDetalleAsientoContableCajaChica() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetalleAsientoContableCajaChica.setVisible(false);
	        this.jInternalFrameTotalesDetalleAsientoContableCajaChica.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	
	public void abrirFrameOrderByDetalleAsientoContableCajaChica() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetalleAsientoContableCajaChica.setVisible(true);
	        this.jInternalFrameOrderByDetalleAsientoContableCajaChica.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetalleAsientoContableCajaChica() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetalleAsientoContableCajaChica.setVisible(false);
	        this.jInternalFrameOrderByDetalleAsientoContableCajaChica.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetalleAsientoContableCajaChica() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetalleAsientoContableCajaChica() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setVisible(false);
	        this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetalleAsientoContableCajaChica(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetalleAsientoContableCajaChica(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetalleAsientoContableCajaChica(true);
			//this.isEsNuevoDetalleAsientoContableCajaChica=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleAsientoContableCajaChica(false) ;
			
			if(detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetalleAsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleAsientoContableCajaChica(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetalleAsientoContableCajaChicaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetalleAsientoContableCajaChica(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetalleAsientoContableCajaChica(true);
			//this.isEsNuevoDetalleAsientoContableCajaChica=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detalleasientocontablecajachica.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetalleAsientoContableCajaChica(false) ;
			
			if(DetalleAsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleAsientoContableCajaChica(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Factura")) {
				if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_facturaDetalleAsientoContableCajaChica) {
					this.cargarCombosFacturasForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_factura (id);

				this.recargarComboTablaFactura(this.facturasForeignKey);

			}
			
			if(sType.equals("AsientoContable")) {
				if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_asiento_contableDetalleAsientoContableCajaChica) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_centro_costoDetalleAsientoContableCajaChica) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
			
			if(sType.equals("TipoCambio")) {
				if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_cambioDetalleAsientoContableCajaChica) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAsientoContableCajaChica(List<AsientoContableCajaChica> asientocontablecajachicasForeignKey)throws Exception{
		TableColumn tableColumnAsientoContableCajaChica=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA));
		TableCellEditor tableCellEditorAsientoContableCajaChica =tableColumnAsientoContableCajaChica.getCellEditor();

		AsientoContableCajaChicaTableCell asientocontablecajachicaTableCellFk=(AsientoContableCajaChicaTableCell)tableCellEditorAsientoContableCajaChica;

		if(asientocontablecajachicaTableCellFk!=null) {
			asientocontablecajachicaTableCellFk.setasientocontablecajachicasForeignKey(asientocontablecajachicasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontablecajachicaTableCellFk.setRowActual(intSelectedRow);
			//asientocontablecajachicaTableCellFk.setasientocontablecajachicasForeignKeyActual(asientocontablecajachicasForeignKey);
		//}


		if(asientocontablecajachicaTableCellFk!=null) {
			asientocontablecajachicaTableCellFk.RecargarAsientoContableCajaChicasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoGastoEmpresa(List<TipoGastoEmpresa> tipogastoempresasForeignKey)throws Exception{
		TableColumn tableColumnTipoGastoEmpresa=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA));
		TableCellEditor tableCellEditorTipoGastoEmpresa =tableColumnTipoGastoEmpresa.getCellEditor();

		TipoGastoEmpresaTableCell tipogastoempresaTableCellFk=(TipoGastoEmpresaTableCell)tableCellEditorTipoGastoEmpresa;

		if(tipogastoempresaTableCellFk!=null) {
			tipogastoempresaTableCellFk.settipogastoempresasForeignKey(tipogastoempresasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipogastoempresaTableCellFk.setRowActual(intSelectedRow);
			//tipogastoempresaTableCellFk.settipogastoempresasForeignKeyActual(tipogastoempresasForeignKey);
		//}


		if(tipogastoempresaTableCellFk!=null) {
			tipogastoempresaTableCellFk.RecargarTipoGastoEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion(List<Transaccion> transaccionsForeignKey)throws Exception{
		TableColumn tableColumnTransaccion=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION));
		TableCellEditor tableCellEditorTransaccion =tableColumnTransaccion.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionsForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFactura(List<Factura> facturasForeignKey)throws Exception{
		TableColumn tableColumnFactura=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA));
		TableCellEditor tableCellEditorFactura =tableColumnFactura.getCellEditor();

		FacturaTableCell facturaTableCellFk=(FacturaTableCell)tableCellEditorFactura;

		if(facturaTableCellFk!=null) {
			facturaTableCellFk.setfacturasForeignKey(facturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//facturaTableCellFk.setRowActual(intSelectedRow);
			//facturaTableCellFk.setfacturasForeignKeyActual(facturasForeignKey);
		//}


		if(facturaTableCellFk!=null) {
			facturaTableCellFk.RecargarFacturasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTransaccionModulo(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey)throws Exception{
		TableColumn tableColumnTipoTransaccionModulo=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO));
		TableCellEditor tableCellEditorTipoTransaccionModulo =tableColumnTipoTransaccionModulo.getCellEditor();

		TipoTransaccionModuloTableCell tipotransaccionmoduloTableCellFk=(TipoTransaccionModuloTableCell)tableCellEditorTipoTransaccionModulo;

		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKey(tipotransaccionmodulosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotransaccionmoduloTableCellFk.setRowActual(intSelectedRow);
			//tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKeyActual(tipotransaccionmodulosForeignKey);
		//}


		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.RecargarTipoTransaccionModulosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_factura (Long id) throws Exception {
		this.setActualFacturaForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetalleAsientoContableCajaChica(false);
			
			//if(!this.isEsNuevoDetalleAsientoContableCajaChica) {								
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				
			}
			
			if(this.permiteMantenimiento(this.detalleasientocontablecajachica)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetalleAsientoContableCajaChica=true;
					this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
					this.isEsNuevoDetalleAsientoContableCajaChica=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetalleAsientoContableCajaChica=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetalleAsientoContableCajaChica=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleAsientoContableCajaChica(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica(false);
				
				this.habilitarDeshabilitarControlesDetalleAsientoContableCajaChica(false);
			
												
				
				if(DetalleAsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetalleAsientoContableCajaChica();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detalleasientocontablecajachica.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				this.detalleasientocontablecajachica.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				this.detalleasientocontablecajachica.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detalleasientocontablecajachica)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetalleAsientoContableCajaChicaModel) this.jTableDatosDetalleAsientoContableCajaChica.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetalleAsientoContableCajaChica=true;
				this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
				this.isEsNuevoDetalleAsientoContableCajaChica=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleAsientoContableCajaChica(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica(false);
				
				this.habilitarDeshabilitarControlesDetalleAsientoContableCajaChica(false);
				
				
				
				if(DetalleAsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetalleAsientoContableCajaChica();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetalleAsientoContableCajaChica.getRowCount()>=1) {
				jTableDatosDetalleAsientoContableCajaChica.removeRowSelectionInterval(0, jTableDatosDetalleAsientoContableCajaChica.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetalleAsientoContableCajaChica(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleAsientoContableCajaChica(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica(false) ;
			
			this.isEsNuevoDetalleAsientoContableCajaChica=false;
			
			if(DetalleAsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetalleAsientoContableCajaChica();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				
				//SI ES MANUAL
				if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetalleAsientoContableCajaChica();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetalleAsientoContableCajaChica--;			
			//DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux= new DetalleAsientoContableCajaChica();			
			//detalleasientocontablecajachicaAux.setId(this.iIdNuevoDetalleAsientoContableCajaChica);
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetalleAsientoContableCajaChica();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
			
			this.detalleasientocontablecajachica.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().add(this.detalleasientocontablecajachicaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detalleasientocontablecajachicas.add(this.detalleasientocontablecajachicaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
			
			this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(this.getIndiceNuevoDetalleAsientoContableCajaChica(), this.getIndiceNuevoDetalleAsientoContableCajaChica());
			
			int iLastRow =  this.jTableDatosDetalleAsientoContableCajaChica.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetalleAsientoContableCajaChica.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetalleAsientoContableCajaChica.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
			
			//SI ES MANUAL
			if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleAsientoContableCajaChica();
			}
			
			//this.abrirFrameTreeDetalleAsientoContableCajaChica();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle Asiento Contable Caja ChicaS ?", "MANTENIMIENTO DE Detalle Asiento Contable Caja Chica", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetalleAsientoContableCajaChica();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detalleasientocontablecajachicaReturnGeneral=detalleasientocontablecajachicaLogic.procesarImportacionDetalleAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detalleasientocontablecajachicaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetalleAsientoContableCajaChicaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setFileImportacion(this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetalleAsientoContableCajaChica.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();		

		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetalleAsientoContableCajaChicaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetalleAsientoContableCajaChicaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetalleAsientoContableCajaChicas("Todos",detalleasientocontablecajachicasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContableCajaChica_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContableCajaChica_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContableCajaChica_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContableCajaChica_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoGastoEmpresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoGastoEmpresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoGastoEmpresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoGastoEmpresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Factura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Factura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Factura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Factura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Proveedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Proveedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Proveedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Proveedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talle_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talle_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talle_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talle_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorBienTarifa12_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorBienTarifa12_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorBienTarifa12_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorBienTarifa12_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorServicioTarifa12_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorServicioTarifa12_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorServicioTarifa12_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorServicioTarifa12_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorBienTarifa0_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorBienTarifa0_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorBienTarifa0_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorBienTarifa0_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorServicioTarifa0_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorServicioTarifa0_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorServicioTarifa0_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorServicioTarifa0_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorBienIce_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorBienIce_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorBienIce_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorBienIce_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorServicioIce_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorServicioIce_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorServicioIce_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorServicioIce_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTransaccionModulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTransaccionModulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTransaccionModulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTransaccionModulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA:
					sNombreCampoCategoria="id_asiento_contable_caja_chica";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA:
					sNombreCampoCategoria="id_tipo_gasto_empresa";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoria="id_transaccion";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoria="id_factura";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					sNombreCampoCategoria="es_proveedor";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					sNombreCampoCategoria="detalle";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12:
					sNombreCampoCategoria="valor_bien_tarifa12";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12:
					sNombreCampoCategoria="valor_servicio_tarifa12";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA:
					sNombreCampoCategoria="porcentaje_iva";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0:
					sNombreCampoCategoria="valor_bien_tarifa0";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0:
					sNombreCampoCategoria="valor_servicio_tarifa0";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA:
					sNombreCampoCategoria="valor_iva";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE:
					sNombreCampoCategoria="valor_bien_ice";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE:
					sNombreCampoCategoria="valor_servicio_ice";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoria="id_tipo_transaccion_modulo";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA:
					sNombreCampoCategoriaValor="id_asiento_contable_caja_chica";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA:
					sNombreCampoCategoriaValor="id_tipo_gasto_empresa";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoriaValor="id_transaccion";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoriaValor="id_factura";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					sNombreCampoCategoriaValor="es_proveedor";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					sNombreCampoCategoriaValor="detalle";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12:
					sNombreCampoCategoriaValor="valor_bien_tarifa12";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12:
					sNombreCampoCategoriaValor="valor_servicio_tarifa12";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA:
					sNombreCampoCategoriaValor="porcentaje_iva";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0:
					sNombreCampoCategoriaValor="valor_bien_tarifa0";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0:
					sNombreCampoCategoriaValor="valor_servicio_tarifa0";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA:
					sNombreCampoCategoriaValor="valor_iva";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE:
					sNombreCampoCategoriaValor="valor_bien_ice";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE:
					sNombreCampoCategoriaValor="valor_servicio_ice";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoriaValor="id_tipo_transaccion_modulo";
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento Caja Chica",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable_caja_chica");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Gasto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_gasto_empresa");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_factura");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Proveedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_proveedor");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Detalle",sNombreCampoCategoria,sNombreCampoCategoriaValor,"detalle");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tarifa Bien 12",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_bien_tarifa12");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tarifa Servicio 12 ",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_servicio_tarifa12");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_iva");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tarifa Bien 0",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_bien_tarifa0");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tarifa Servicio 0 ",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_servicio_tarifa0");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_iva");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Bien Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_bien_ice");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Servicio Ice ",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_servicio_ice");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Transaccion Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_transaccion_modulo");
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();		
		
		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleasientocontablecajachica";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetalleAsientoContableCajaChicas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getasientocontablecajachica_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.gettipogastoempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.gettransaccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getfactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getes_proveedor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getdetalle());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getvalor_bien_tarifa12());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getvalor_servicio_tarifa12());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getporcentaje_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getvalor_bien_tarifa0());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getvalor_servicio_tarifa0());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getvalor_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getvalor_bien_ice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getvalor_servicio_ice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.gettipotransaccionmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica:detalleasientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleasientocontablecajachica.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetalleAsientoContableCajaChica(row);				
			//	iRow++;
			//}				
			
			//for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetalleAsientoContableCajaChica(detalleasientocontablecajachicaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
			
			//SI ES MANUAL
			if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleAsientoContableCajaChica();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
			
			//SI ES MANUAL
			if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleAsientoContableCajaChica();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
			
			//SI ES MANUAL
			if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleAsientoContableCajaChica();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetalleAsientoContableCajaChica() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetalleAsientoContableCajaChica.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetalleAsientoContableCajaChica.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetalleAsientoContableCajaChica.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetalleAsientoContableCajaChica.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetalleAsientoContableCajaChica.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetalleAsientoContableCajaChica.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetalleAsientoContableCajaChica.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetalleAsientoContableCajaChica(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetalleAsientoContableCajaChica(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetalleAsientoContableCajaChica(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetalleAsientoContableCajaChica(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetalleAsientoContableCajaChica(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleAsientoContableCajaChica(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetalleAsientoContableCajaChica(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetalleAsientoContableCajaChica() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica();
		
		this.inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleAsientoContableCajaChica();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleAsientoContableCajaChica() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleAsientoContableCajaChica(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleAsientoContableCajaChica(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetalleAsientoContableCajaChica.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetalleAsientoContableCajaChica.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetalleAsientoContableCajaChica.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxPostAccionNuevoDetalleAsientoContableCajaChica.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxPostAccionSinCerrarDetalleAsientoContableCajaChica.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxPostAccionSinMensajeDetalleAsientoContableCajaChica.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetalleAsientoContableCajaChica.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetalleAsientoContableCajaChica.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetalleAsientoContableCajaChica.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxPostAccionNuevoDetalleAsientoContableCajaChica.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxPostAccionSinCerrarDetalleAsientoContableCajaChica.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxPostAccionSinMensajeDetalleAsientoContableCajaChica.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetalleAsientoContableCajaChica.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetalleAsientoContableCajaChica.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetalleAsientoContableCajaChica.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetalleAsientoContableCajaChica.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetalleAsientoContableCajaChica.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetalleAsientoContableCajaChica.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetalleAsientoContableCajaChica.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetalleAsientoContableCajaChica.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetalleAsientoContableCajaChica(Boolean esInicializar) throws Exception {
		try	{	
			if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleAsientoContableCajaChica(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetalleAsientoContableCajaChica() throws Exception {
		try	{
			if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleAsientoContableCajaChica();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleAsientoContableCajaChica() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleAsientoContableCajaChica() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetalleAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetalleAsientoContableCajaChica.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetalleAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetalleAsientoContableCajaChica.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetalleAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetalleAsientoContableCajaChica.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetalleAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetalleAsientoContableCajaChica.addItem(reporte);
			}
			
			
			if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetalleAsientoContableCajaChica.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetalleAsientoContableCajaChica.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetalleAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetalleAsientoContableCajaChica.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetalleAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetalleAsientoContableCajaChica.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetalleAsientoContableCajaChica.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleAsientoContableCajaChica();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleAsientoContableCajaChica() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica!=null) {
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica!=null) {
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetalleAsientoContableCajaChicaConstantesFunciones.getTiposSeleccionarDetalleAsientoContableCajaChica(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetalleAsientoContableCajaChicaConstantesFunciones.getTiposSeleccionarDetalleAsientoContableCajaChica(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetalleAsientoContableCajaChicaConstantesFunciones.getTiposSeleccionarDetalleAsientoContableCajaChica(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetalleAsientoContableCajaChica()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.getSelectedItem()!=null){this.id_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica=((AsientoContableCajaChica)this.jComboBoxid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.getSelectedItem()!=null){this.id_facturaFK_IdFactura=((Factura)this.jComboBoxid_facturaFK_IdFacturaDetalleAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.getSelectedItem()!=null){this.id_tipo_cambioFK_IdTipoCambio=((TipoCambio)this.jComboBoxid_tipo_cambioFK_IdTipoCambioDetalleAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.getSelectedItem()!=null){this.id_tipo_gasto_empresaFK_IdTipoGasto=((TipoGastoEmpresa)this.jComboBoxid_tipo_gasto_empresaFK_IdTipoGastoDetalleAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.getSelectedItem()!=null){this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=((TipoTransaccionModulo)this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.getSelectedItem()!=null){this.id_transaccionFK_IdTransaccion=((Transaccion)this.jComboBoxid_transaccionFK_IdTransaccionDetalleAsientoContableCajaChica.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetalleAsientoContableCajaChica(Boolean esInicializar) throws Exception {				
		if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleAsientoContableCajaChica();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetalleAsientoContableCajaChica() throws Exception {
		this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetalleAsientoContableCajaChica() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetalleAsientoContableCajaChicaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChicaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	public void inicializarActualizarBindingTablaTotalesDetalleAsientoContableCajaChica() {		
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		
		//TABLA TOTALES
		this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
		//DEFINIR RENDERERS TOTALES
		tableColumn=this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales(),Constantes2.S_TIPO));			
		//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
				
				
		tableColumn=this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales(),Constantes2.S_TOTAL));
		//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());		
	}
	
	public void inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detalleasientocontablecajachicas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetalleAsientoContableCajaChica.setModel(new DetalleAsientoContableCajaChicaModel(this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetalleAsientoContableCajaChica.setModel(new DetalleAsientoContableCajaChicaModel(this.detalleasientocontablecajachicas,this));
			}
			//ARCHITECTURE
			
			if(this.jInternalFrameTotalesDetalleAsientoContableCajaChica!=null) {
				//TABLA TOTALES
				this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
				//DEFINIR RENDERERS TOTALES
				tableColumn=this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales(),Constantes2.S_TIPO));			
				//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
				
				
				tableColumn=this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjTableDatosTotales(),Constantes2.S_TOTAL));
				//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
			}
							
			
			
			if(this.jInternalFrameOrderByDetalleAsientoContableCajaChica!=null && this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetalleAsientoContableCajaChica();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetalleAsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO,detalleasientocontablecajachicaConstantesFunciones.resaltarSeleccionarDetalleAsientoContableCajaChica,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetalleAsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO,detalleasientocontablecajachicaConstantesFunciones.resaltarSeleccionarDetalleAsientoContableCajaChica,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ID));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostraridDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltaridDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activaridDetalleAsientoContableCajaChica,iSizeTabla,this,true,"idDetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltaridDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activaridDetalleAsientoContableCajaChica,this,true,"idDetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_empresaDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_empresaDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_empresaDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_empresaDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_empresaDetalleAsientoContableCajaChica,false,"id_empresaDetalleAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_sucursalDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_sucursalDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_sucursalDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_sucursalDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_sucursalDetalleAsientoContableCajaChica,false,"id_sucursalDetalleAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_moduloDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_moduloDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_moduloDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_moduloDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_moduloDetalleAsientoContableCajaChica,false,"id_moduloDetalleAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_ejercicioDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_ejercicioDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_ejercicioDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_ejercicioDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_ejercicioDetalleAsientoContableCajaChica,false,"id_ejercicioDetalleAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_periodoDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_periodoDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_periodoDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_periodoDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_periodoDetalleAsientoContableCajaChica,false,"id_periodoDetalleAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_anioDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_anioDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_anioDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_anioDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_anioDetalleAsientoContableCajaChica,true,"id_anioDetalleAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_mesDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_mesDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_mesDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_mesDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_mesDetalleAsientoContableCajaChica,true,"id_mesDetalleAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AsientoContableCajaChicaTableCell(this.asientocontablecajachicasForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new AsientoContableCajaChicaTableCell(this.asientocontablecajachicasForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica,true,"id_asiento_contable_caja_chicaDetalleAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_tipo_gasto_empresaDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoGastoEmpresaTableCell(this.tipogastoempresasForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_tipo_gasto_empresaDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_tipo_gasto_empresaDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new TipoGastoEmpresaTableCell(this.tipogastoempresasForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_tipo_gasto_empresaDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_tipo_gasto_empresaDetalleAsientoContableCajaChica,true,"id_tipo_gasto_empresaDetalleAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarfecha_emisionDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarfecha_emisionDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarfecha_emisionDetalleAsientoContableCajaChica,iSizeTabla,this,true,"fecha_emisionDetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarfecha_emisionDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarfecha_emisionDetalleAsientoContableCajaChica,this,true,"fecha_emisionDetalleAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_transaccionDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionsForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_transaccionDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_transaccionDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionsForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_transaccionDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_transaccionDetalleAsientoContableCajaChica,true,"id_transaccionDetalleAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_facturaDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FacturaTableCell(this.facturasForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_facturaDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_facturaDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new FacturaTableCell(this.facturasForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_facturaDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_facturaDetalleAsientoContableCajaChica,true,"id_facturaDetalleAsientoContableCajaChica","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrares_proveedorDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltares_proveedorDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activares_proveedorDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltares_proveedorDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activares_proveedorDetalleAsientoContableCajaChica,this,true,"es_proveedorDetalleAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_asiento_contableDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AsientoContableTableCell(this.asientocontablesForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_asiento_contableDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_asiento_contableDetalleAsientoContableCajaChica,iSizeTabla));
			tableColumn.setCellEditor(new AsientoContableTableCell(this.asientocontablesForeignKey,this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_asiento_contableDetalleAsientoContableCajaChica,this,this.detalleasientocontablecajachicaConstantesFunciones.activarid_asiento_contableDetalleAsientoContableCajaChica,true,"id_asiento_contableDetalleAsientoContableCajaChica","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrardetalleDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltardetalleDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activardetalleDetalleAsientoContableCajaChica,iSizeTabla,this,true,"detalleDetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltardetalleDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activardetalleDetalleAsientoContableCajaChica,this,true,"detalleDetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200);
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_bien_tarifa12DetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_tarifa12DetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_tarifa12DetalleAsientoContableCajaChica,iSizeTabla,this,true,"valor_bien_tarifa12DetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_tarifa12DetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_tarifa12DetalleAsientoContableCajaChica,this,true,"valor_bien_tarifa12DetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_servicio_tarifa12DetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_tarifa12DetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_tarifa12DetalleAsientoContableCajaChica,iSizeTabla,this,true,"valor_servicio_tarifa12DetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_tarifa12DetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_tarifa12DetalleAsientoContableCajaChica,this,true,"valor_servicio_tarifa12DetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarporcentaje_ivaDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarporcentaje_ivaDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarporcentaje_ivaDetalleAsientoContableCajaChica,iSizeTabla,this,true,"porcentaje_ivaDetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarporcentaje_ivaDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarporcentaje_ivaDetalleAsientoContableCajaChica,this,true,"porcentaje_ivaDetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_bien_tarifa0DetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_tarifa0DetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_tarifa0DetalleAsientoContableCajaChica,iSizeTabla,this,true,"valor_bien_tarifa0DetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_tarifa0DetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_tarifa0DetalleAsientoContableCajaChica,this,true,"valor_bien_tarifa0DetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_servicio_tarifa0DetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_tarifa0DetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_tarifa0DetalleAsientoContableCajaChica,iSizeTabla,this,true,"valor_servicio_tarifa0DetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_tarifa0DetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_tarifa0DetalleAsientoContableCajaChica,this,true,"valor_servicio_tarifa0DetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_ivaDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_ivaDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_ivaDetalleAsientoContableCajaChica,iSizeTabla,this,true,"valor_ivaDetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_ivaDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_ivaDetalleAsientoContableCajaChica,this,true,"valor_ivaDetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_bien_iceDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_iceDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_iceDetalleAsientoContableCajaChica,iSizeTabla,this,true,"valor_bien_iceDetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_iceDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_iceDetalleAsientoContableCajaChica,this,true,"valor_bien_iceDetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE));

		if(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_servicio_iceDetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_iceDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_iceDetalleAsientoContableCajaChica,iSizeTabla,this,true,"valor_servicio_iceDetalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_iceDetalleAsientoContableCajaChica,this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_iceDetalleAsientoContableCajaChica,this,true,"valor_servicio_iceDetalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleAsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleAsientoContableCajaChica.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleAsientoContableCajaChica.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetalleAsientoContableCajaChica.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetalleAsientoContableCajaChica.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetalleAsientoContableCajaChica.moveColumn(this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetalleAsientoContableCajaChica.moveColumn(this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetalleAsientoContableCajaChica.moveColumn(this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetalleAsientoContableCajaChica.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetalleAsientoContableCajaChica.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetalleAsientoContableCajaChica,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetalleAsientoContableCajaChica.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetalleAsientoContableCajaChica.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetalleAsientoContableCajaChica.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detalleasientocontablecajachicas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetalleAsientoContableCajaChica.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetalleAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetalleAsientoContableCajaChica();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetalleAsientoContableCajaChica=false;
					
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
				if(this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleAsientoContableCajaChica.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detalleasientocontablecajachica.getsType().equals("DUPLICADO")
				   || this.detalleasientocontablecajachica.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetalleAsientoContableCajaChica=true;
				
				} else {
					this.isEsNuevoDetalleAsientoContableCajaChica=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					if(this.detalleasientocontablecajachica.getId()>=0 && !this.detalleasientocontablecajachica.getIsNew()) {						
						this.isEsNuevoDetalleAsientoContableCajaChica=false;
						
					} else {
						this.isEsNuevoDetalleAsientoContableCajaChica=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetalleAsientoContableCajaChica(esRelaciones);						
				
				this.seleccionarDetalleAsientoContableCajaChica(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detalleasientocontablecajachica.getId()<0) {
					this.isEsNuevoDetalleAsientoContableCajaChica=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetalleAsientoContableCajaChica(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetalleAsientoContableCajaChica(evt,rowIndex);
				}	
				
				if(this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetalleAsientoContableCajaChica: " + this.dDif); 
					}
				}								
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetalleAsientoContableCajaChica(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detalleasientocontablecajachica)) {
					if(this.detalleasientocontablecajachica.getId()>0) {
						this.detalleasientocontablecajachica.setIsDeleted(true);
						
						this.detalleasientocontablecajachicasEliminados.add(this.detalleasientocontablecajachica);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().remove(this.detalleasientocontablecajachica);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachicas.remove(this.detalleasientocontablecajachica);				
					}
					
					
					((DetalleAsientoContableCajaChicaModel) this.jTableDatosDetalleAsientoContableCajaChica.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetalleAsientoContableCajaChica(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetalleAsientoContableCajaChica) {
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleAsientoContableCajaChica.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_empresaDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_empresaDetalleAsientoContableCajaChica) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_empresa());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detalleasientocontablecajachica.getEmpresa()!=null) {
							this.empresasForeignKey.add(detalleasientocontablecajachica.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detalleasientocontablecajachica.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_sucursalDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_sucursalDetalleAsientoContableCajaChica) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_sucursal());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detalleasientocontablecajachica.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detalleasientocontablecajachica.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detalleasientocontablecajachica.getid_sucursal(),false,"Formulario");

					//Modulo
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_moduloDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_moduloDetalleAsientoContableCajaChica) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_modulo());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(detalleasientocontablecajachica.getModulo()!=null) {
							this.modulosForeignKey.add(detalleasientocontablecajachica.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.detalleasientocontablecajachica.getid_modulo(),false,"Formulario");

					//Ejercicio
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_ejercicioDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_ejercicioDetalleAsientoContableCajaChica) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_ejercicio());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detalleasientocontablecajachica.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detalleasientocontablecajachica.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detalleasientocontablecajachica.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_periodoDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_periodoDetalleAsientoContableCajaChica) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_periodo());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detalleasientocontablecajachica.getPeriodo()!=null) {
							this.periodosForeignKey.add(detalleasientocontablecajachica.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detalleasientocontablecajachica.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_anioDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_anioDetalleAsientoContableCajaChica) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_anio());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(detalleasientocontablecajachica.getAnio()!=null) {
							this.aniosForeignKey.add(detalleasientocontablecajachica.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.detalleasientocontablecajachica.getid_anio(),false,"Formulario");

					//Mes
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_mesDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_mesDetalleAsientoContableCajaChica) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_mes());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(detalleasientocontablecajachica.getMes()!=null) {
							this.messForeignKey.add(detalleasientocontablecajachica.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.detalleasientocontablecajachica.getid_mes(),false,"Formulario");

					//AsientoContableCajaChica
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica) {
						//this.cargarCombosAsientoContableCajaChicasForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_asiento_contable_caja_chica());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.asientocontablecajachicasForeignKey=new ArrayList<AsientoContableCajaChica>();

						if(detalleasientocontablecajachica.getAsientoContableCajaChica()!=null) {
							this.asientocontablecajachicasForeignKey.add(detalleasientocontablecajachica.getAsientoContableCajaChica());
						}

						this.addItemDefectoCombosForeignKeyAsientoContableCajaChica();
						this.cargarCombosFrameAsientoContableCajaChicasForeignKey("Todos");
					}
					this.setActualAsientoContableCajaChicaForeignKey(this.detalleasientocontablecajachica.getid_asiento_contable_caja_chica(),false,"Formulario");

					//TipoGastoEmpresa
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_gasto_empresaDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_tipo_gasto_empresaDetalleAsientoContableCajaChica) {
						//this.cargarCombosTipoGastoEmpresasForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_tipo_gasto_empresa());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.tipogastoempresasForeignKey=new ArrayList<TipoGastoEmpresa>();

						if(detalleasientocontablecajachica.getTipoGastoEmpresa()!=null) {
							this.tipogastoempresasForeignKey.add(detalleasientocontablecajachica.getTipoGastoEmpresa());
						}

						this.addItemDefectoCombosForeignKeyTipoGastoEmpresa();
						this.cargarCombosFrameTipoGastoEmpresasForeignKey("Todos");
					}
					this.setActualTipoGastoEmpresaForeignKey(this.detalleasientocontablecajachica.getid_tipo_gasto_empresa(),false,"Formulario");

					//Transaccion
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_transaccionDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_transaccionDetalleAsientoContableCajaChica) {
						//this.cargarCombosTransaccionsForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_transaccion());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.transaccionsForeignKey=new ArrayList<Transaccion>();

						if(detalleasientocontablecajachica.getTransaccion()!=null) {
							this.transaccionsForeignKey.add(detalleasientocontablecajachica.getTransaccion());
						}

						this.addItemDefectoCombosForeignKeyTransaccion();
						this.cargarCombosFrameTransaccionsForeignKey("Todos");
					}
					this.setActualTransaccionForeignKey(this.detalleasientocontablecajachica.getid_transaccion(),false,"Formulario");

					//Factura
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_facturaDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_facturaDetalleAsientoContableCajaChica) {
						//this.cargarCombosFacturasForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_factura());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.facturasForeignKey=new ArrayList<Factura>();

						if(detalleasientocontablecajachica.getFactura()!=null) {
							this.facturasForeignKey.add(detalleasientocontablecajachica.getFactura());
						}

						this.addItemDefectoCombosForeignKeyFactura();
						this.cargarCombosFrameFacturasForeignKey("Todos");
					}
					this.setActualFacturaForeignKey(this.detalleasientocontablecajachica.getid_factura(),false,"Formulario");

					//AsientoContable
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_asiento_contableDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_asiento_contableDetalleAsientoContableCajaChica) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_asiento_contable());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(detalleasientocontablecajachica.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(detalleasientocontablecajachica.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.detalleasientocontablecajachica.getid_asiento_contable(),false,"Formulario");

					//CentroCosto
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_centro_costoDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_centro_costoDetalleAsientoContableCajaChica) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_centro_costo());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(detalleasientocontablecajachica.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(detalleasientocontablecajachica.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.detalleasientocontablecajachica.getid_centro_costo(),false,"Formulario");

					//TipoCambio
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_cambioDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_tipo_cambioDetalleAsientoContableCajaChica) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_tipo_cambio());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(detalleasientocontablecajachica.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(detalleasientocontablecajachica.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.detalleasientocontablecajachica.getid_tipo_cambio(),false,"Formulario");

					//TipoTransaccionModulo
					if(!this.detalleasientocontablecajachicaConstantesFunciones.cargarid_tipo_transaccion_moduloDetalleAsientoContableCajaChica || this.detalleasientocontablecajachicaConstantesFunciones.event_dependid_tipo_transaccion_moduloDetalleAsientoContableCajaChica) {
						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(" where id="+this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo());
									//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
						this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

						if(detalleasientocontablecajachica.getTipoTransaccionModulo()!=null) {
							this.tipotransaccionmodulosForeignKey.add(detalleasientocontablecajachica.getTipoTransaccionModulo());
						}

						this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
						this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
					}
					this.setActualTipoTransaccionModuloForeignKey(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetalleAsientoContableCajaChica(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetalleAsientoContableCajaChica(detalleasientocontablecajachica,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetalleAsientoContableCajaChica(detalleasientocontablecajachica);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetalleAsientoContableCajaChica(detalleasientocontablecajachica,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetalleAsientoContableCajaChica(detalleasientocontablecajachica);
	}
	
	public void setVariablesObjetoActualToFormularioDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getId().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfecha_emisionDetalleAsientoContableCajaChica.setDate(detalleasientocontablecajachica.getfecha_emision());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxes_proveedorDetalleAsientoContableCajaChica.setSelected(detalleasientocontablecajachica.getes_proveedor());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextAreadetalleDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getdetalle());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa12DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_bien_tarifa12().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa12DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_servicio_tarifa12().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldporcentaje_ivaDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getporcentaje_iva().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa0DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_bien_tarifa0().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa0DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_servicio_tarifa0().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_ivaDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_iva().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_iceDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_bien_ice().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_iceDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_servicio_ice().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetalleAsientoContableCajaChica detalleasientocontablecajachicaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detalleasientocontablecajachicaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetalleAsientoContableCajaChica detalleasientocontablecajachicaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detalleasientocontablecajachicaLocal=this.detalleasientocontablecajachica;
			} else {
				detalleasientocontablecajachicaLocal=this.detalleasientocontablecajachicaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detalleasientocontablecajachicaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetalleAsientoContableCajaChica(detalleasientocontablecajachicaLocal,true);
					
					if(detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detalleasientocontablecajachicaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detalleasientocontablecajachicaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(detalleasientocontablecajachica,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(detalleasientocontablecajachica);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(detalleasientocontablecajachica,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.getText()==null || this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.getText()=="" || this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.getText()=="Id") {
				this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.setText("0");
			}

			if(conColumnasBase) {detalleasientocontablecajachica.setId(Long.parseLong(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelIdDetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setfecha_emision(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfecha_emisionDetalleAsientoContableCajaChica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelfecha_emisionDetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setes_proveedor(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxes_proveedorDetalleAsientoContableCajaChica.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabeles_proveedorDetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setdetalle(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextAreadetalleDetalleAsientoContableCajaChica.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabeldetalleDetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setvalor_bien_tarifa12(Double.parseDouble(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa12DetalleAsientoContableCajaChica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_bien_tarifa12DetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setvalor_servicio_tarifa12(Double.parseDouble(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa12DetalleAsientoContableCajaChica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_servicio_tarifa12DetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setporcentaje_iva(Double.parseDouble(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldporcentaje_ivaDetalleAsientoContableCajaChica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelporcentaje_ivaDetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setvalor_bien_tarifa0(Double.parseDouble(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa0DetalleAsientoContableCajaChica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_bien_tarifa0DetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setvalor_servicio_tarifa0(Double.parseDouble(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa0DetalleAsientoContableCajaChica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_servicio_tarifa0DetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setvalor_iva(Double.parseDouble(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_ivaDetalleAsientoContableCajaChica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_ivaDetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setvalor_bien_ice(Double.parseDouble(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_iceDetalleAsientoContableCajaChica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_bien_iceDetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleasientocontablecajachica.setvalor_servicio_ice(Double.parseDouble(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_iceDetalleAsientoContableCajaChica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelvalor_servicio_iceDetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachicaBean,DetalleAsientoContableCajaChica detalleasientocontablecajachica,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachicaOrigen,DetalleAsientoContableCajaChica detalleasientocontablecajachica,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getId()!=null && !detalleasientocontablecajachicaOrigen.getId().equals(0L))) {detalleasientocontablecajachica.setId(detalleasientocontablecajachicaOrigen.getId());}}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getfecha_emision()!=null && !detalleasientocontablecajachicaOrigen.getfecha_emision().equals(new Date()))) {detalleasientocontablecajachica.setfecha_emision(detalleasientocontablecajachicaOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getes_proveedor()!=null && !detalleasientocontablecajachicaOrigen.getes_proveedor().equals(false))) {detalleasientocontablecajachica.setes_proveedor(detalleasientocontablecajachicaOrigen.getes_proveedor());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getdetalle()!=null && !detalleasientocontablecajachicaOrigen.getdetalle().equals(""))) {detalleasientocontablecajachica.setdetalle(detalleasientocontablecajachicaOrigen.getdetalle());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getvalor_bien_tarifa12()!=null && !detalleasientocontablecajachicaOrigen.getvalor_bien_tarifa12().equals(0.0))) {detalleasientocontablecajachica.setvalor_bien_tarifa12(detalleasientocontablecajachicaOrigen.getvalor_bien_tarifa12());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getvalor_servicio_tarifa12()!=null && !detalleasientocontablecajachicaOrigen.getvalor_servicio_tarifa12().equals(0.0))) {detalleasientocontablecajachica.setvalor_servicio_tarifa12(detalleasientocontablecajachicaOrigen.getvalor_servicio_tarifa12());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getporcentaje_iva()!=null && !detalleasientocontablecajachicaOrigen.getporcentaje_iva().equals(0.0))) {detalleasientocontablecajachica.setporcentaje_iva(detalleasientocontablecajachicaOrigen.getporcentaje_iva());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getvalor_bien_tarifa0()!=null && !detalleasientocontablecajachicaOrigen.getvalor_bien_tarifa0().equals(0.0))) {detalleasientocontablecajachica.setvalor_bien_tarifa0(detalleasientocontablecajachicaOrigen.getvalor_bien_tarifa0());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getvalor_servicio_tarifa0()!=null && !detalleasientocontablecajachicaOrigen.getvalor_servicio_tarifa0().equals(0.0))) {detalleasientocontablecajachica.setvalor_servicio_tarifa0(detalleasientocontablecajachicaOrigen.getvalor_servicio_tarifa0());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getvalor_iva()!=null && !detalleasientocontablecajachicaOrigen.getvalor_iva().equals(0.0))) {detalleasientocontablecajachica.setvalor_iva(detalleasientocontablecajachicaOrigen.getvalor_iva());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getvalor_bien_ice()!=null && !detalleasientocontablecajachicaOrigen.getvalor_bien_ice().equals(0.0))) {detalleasientocontablecajachica.setvalor_bien_ice(detalleasientocontablecajachicaOrigen.getvalor_bien_ice());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getvalor_servicio_ice()!=null && !detalleasientocontablecajachicaOrigen.getvalor_servicio_ice().equals(0.0))) {detalleasientocontablecajachica.setvalor_servicio_ice(detalleasientocontablecajachicaOrigen.getvalor_servicio_ice());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaOrigen.getfecha()!=null && !detalleasientocontablecajachicaOrigen.getfecha().equals(new Date()))) {detalleasientocontablecajachica.setfecha(detalleasientocontablecajachicaOrigen.getfecha());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getId().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfecha_emisionDetalleAsientoContableCajaChica.setDate(detalleasientocontablecajachica.getfecha_emision());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxes_proveedorDetalleAsientoContableCajaChica.setSelected(detalleasientocontablecajachica.getes_proveedor());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextAreadetalleDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getdetalle());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa12DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_bien_tarifa12().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa12DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_servicio_tarifa12().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldporcentaje_ivaDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getporcentaje_iva().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa0DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_bien_tarifa0().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa0DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_servicio_tarifa0().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_ivaDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_iva().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_iceDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_bien_ice().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_iceDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachica.getvalor_servicio_ice().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChicaBean detalleasientocontablecajachicaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getId().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfecha_emisionDetalleAsientoContableCajaChica.setDate(detalleasientocontablecajachicaBean.getfecha_emision());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxes_proveedorDetalleAsientoContableCajaChica.setSelected(detalleasientocontablecajachicaBean.getes_proveedor());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextAreadetalleDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getdetalle());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa12DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getvalor_bien_tarifa12().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa12DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getvalor_servicio_tarifa12().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldporcentaje_ivaDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getporcentaje_iva().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa0DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getvalor_bien_tarifa0().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa0DetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getvalor_servicio_tarifa0().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_ivaDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getvalor_iva().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_iceDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getvalor_bien_ice().toString());
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_iceDetalleAsientoContableCajaChica.setText(detalleasientocontablecajachicaBean.getvalor_servicio_ice().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChicaParameterReturnGeneral detalleasientocontablecajachicaReturnGeneral,DetalleAsientoContableCajaChicaBean detalleasientocontablecajachicaBean,Boolean conDefault) throws Exception { 
		try {
			DetalleAsientoContableCajaChica detalleasientocontablecajachicaLocal=new DetalleAsientoContableCajaChica();
			
			detalleasientocontablecajachicaLocal=detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getId()!=null && !detalleasientocontablecajachicaLocal.getId().equals(0L))) {detalleasientocontablecajachicaBean.setId(detalleasientocontablecajachicaLocal.getId());}}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getfecha_emision()!=null && !detalleasientocontablecajachicaLocal.getfecha_emision().equals(new Date()))) {detalleasientocontablecajachicaBean.setfecha_emision(detalleasientocontablecajachicaLocal.getfecha_emision());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getes_proveedor()!=null && !detalleasientocontablecajachicaLocal.getes_proveedor().equals(false))) {detalleasientocontablecajachicaBean.setes_proveedor(detalleasientocontablecajachicaLocal.getes_proveedor());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getdetalle()!=null && !detalleasientocontablecajachicaLocal.getdetalle().equals(""))) {detalleasientocontablecajachicaBean.setdetalle(detalleasientocontablecajachicaLocal.getdetalle());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getvalor_bien_tarifa12()!=null && !detalleasientocontablecajachicaLocal.getvalor_bien_tarifa12().equals(0.0))) {detalleasientocontablecajachicaBean.setvalor_bien_tarifa12(detalleasientocontablecajachicaLocal.getvalor_bien_tarifa12());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getvalor_servicio_tarifa12()!=null && !detalleasientocontablecajachicaLocal.getvalor_servicio_tarifa12().equals(0.0))) {detalleasientocontablecajachicaBean.setvalor_servicio_tarifa12(detalleasientocontablecajachicaLocal.getvalor_servicio_tarifa12());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getporcentaje_iva()!=null && !detalleasientocontablecajachicaLocal.getporcentaje_iva().equals(0.0))) {detalleasientocontablecajachicaBean.setporcentaje_iva(detalleasientocontablecajachicaLocal.getporcentaje_iva());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getvalor_bien_tarifa0()!=null && !detalleasientocontablecajachicaLocal.getvalor_bien_tarifa0().equals(0.0))) {detalleasientocontablecajachicaBean.setvalor_bien_tarifa0(detalleasientocontablecajachicaLocal.getvalor_bien_tarifa0());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getvalor_servicio_tarifa0()!=null && !detalleasientocontablecajachicaLocal.getvalor_servicio_tarifa0().equals(0.0))) {detalleasientocontablecajachicaBean.setvalor_servicio_tarifa0(detalleasientocontablecajachicaLocal.getvalor_servicio_tarifa0());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getvalor_iva()!=null && !detalleasientocontablecajachicaLocal.getvalor_iva().equals(0.0))) {detalleasientocontablecajachicaBean.setvalor_iva(detalleasientocontablecajachicaLocal.getvalor_iva());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getvalor_bien_ice()!=null && !detalleasientocontablecajachicaLocal.getvalor_bien_ice().equals(0.0))) {detalleasientocontablecajachicaBean.setvalor_bien_ice(detalleasientocontablecajachicaLocal.getvalor_bien_ice());}
			if(conDefault || (!conDefault && detalleasientocontablecajachicaLocal.getvalor_servicio_ice()!=null && !detalleasientocontablecajachicaLocal.getvalor_servicio_ice().equals(0.0))) {detalleasientocontablecajachicaBean.setvalor_servicio_ice(detalleasientocontablecajachicaLocal.getvalor_servicio_ice());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetalleAsientoContableCajaChicaGenerico(Long idDetalleAsientoContableCajaChicaSeleccionado,JComboBox jComboBoxDetalleAsientoContableCajaChica,List<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasLocal)throws Exception {
		try {
			DetalleAsientoContableCajaChica  detalleasientocontablecajachicaTemp=null;

			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicasLocal) {
				if(detalleasientocontablecajachicaAux.getId()!=null && detalleasientocontablecajachicaAux.getId().equals(idDetalleAsientoContableCajaChicaSeleccionado)) {
					detalleasientocontablecajachicaTemp=detalleasientocontablecajachicaAux;
					break;
				}
			}

			jComboBoxDetalleAsientoContableCajaChica.setSelectedItem(detalleasientocontablecajachicaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetalleAsientoContableCajaChicaGenerico(JComboBox jComboBoxDetalleAsientoContableCajaChica,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetalleAsientoContableCajaChica.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleAsientoContableCajaChica.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetalleAsientoContableCajaChica.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleAsientoContableCajaChica.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleAsientoContableCajaChica.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetalleAsientoContableCajaChica.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleAsientoContableCajaChica.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetalleAsientoContableCajaChica.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetalleAsientoContableCajaChica.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetalleAsientoContableCajaChica.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleasientocontablecajachica=(DetalleAsientoContableCajaChica) detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) detalleasientocontablecajachicas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getmes_descripcion();
			}
		}

		if(sTipo.equals("AsientoContableCajaChica")) {
			//sDescripcion=this.getActualAsientoContableCajaChicaForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getasientocontablecajachica_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableCajaChicaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getasientocontablecajachica_descripcion();
			}
		}

		if(sTipo.equals("TipoGastoEmpresa")) {
			//sDescripcion=this.getActualTipoGastoEmpresaForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.gettipogastoempresa_descripcion();
			} else {
				//sDescripcion=this.getActualTipoGastoEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.gettipogastoempresa_descripcion();
			}
		}

		if(sTipo.equals("Transaccion")) {
			//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.gettransaccion_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.gettransaccion_descripcion();
			}
		}

		if(sTipo.equals("Factura")) {
			//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getfactura_descripcion();
			} else {
				//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getfactura_descripcion();
			}
		}

		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getasientocontable_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.gettipocambio_descripcion();
			}
		}

		if(sTipo.equals("TipoTransaccionModulo")) {
			//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
			if(!detalleasientocontablecajachica.getIsNew() && !detalleasientocontablecajachica.getIsChanged() && !detalleasientocontablecajachica.getIsDeleted()) {
				sDescripcion=detalleasientocontablecajachica.gettipotransaccionmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
				sDescripcion=detalleasientocontablecajachica.gettipotransaccionmodulo_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetalleAsientoContableCajaChica detalleasientocontablecajachicaRow=new DetalleAsientoContableCajaChica();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleasientocontablecajachicaRow=(DetalleAsientoContableCajaChica) detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleasientocontablecajachicaRow=(DetalleAsientoContableCajaChica) detalleasientocontablecajachicas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica && this.isPermisoNuevoDetalleAsientoContableCajaChica));			
			this.jButtonDuplicarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica && this.isPermisoDuplicarDetalleAsientoContableCajaChica));			
			this.jButtonCopiarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica && this.isPermisoCopiarDetalleAsientoContableCajaChica));
			this.jButtonVerFormDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica && this.isPermisoVerFormDetalleAsientoContableCajaChica));
			
			this.jButtonAbrirOrderByDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica && this.isPermisoOrdenDetalleAsientoContableCajaChica));			
			
			this.jButtonNuevoRelacionesDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica && this.isPermisoNuevoDetalleAsientoContableCajaChica));			
			this.jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica && this.isPermisoNuevoDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonModificarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica && this.isPermisoActualizarDetalleAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica && this.isPermisoActualizarDetalleAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica && this.isPermisoEliminarDetalleAsientoContableCajaChica));
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarDetalleAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica);							
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica && this.isPermisoNuevoDetalleAsientoContableCajaChica));						
			this.jButtonDuplicarToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica && this.isPermisoDuplicarDetalleAsientoContableCajaChica));						
			this.jButtonCopiarToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica && this.isPermisoCopiarDetalleAsientoContableCajaChica));			
			this.jButtonVerFormToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica && this.isPermisoVerFormDetalleAsientoContableCajaChica));			
			this.jButtonAbrirOrderByToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica && this.isPermisoOrdenDetalleAsientoContableCajaChica));
			this.jButtonNuevoRelacionesToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica && this.isPermisoNuevoDetalleAsientoContableCajaChica));			
			this.jButtonNuevoGuardarCambiosToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica && this.isPermisoNuevoDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));			
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonModificarToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica && this.isPermisoActualizarDetalleAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica  && this.isPermisoActualizarDetalleAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica && this.isPermisoEliminarDetalleAsientoContableCajaChica));
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarToolBarDetalleAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica);				
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica && this.isPermisoNuevoDetalleAsientoContableCajaChica));			
			this.jMenuItemDuplicarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica && this.isPermisoDuplicarDetalleAsientoContableCajaChica));			
			this.jMenuItemCopiarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica && this.isPermisoCopiarDetalleAsientoContableCajaChica));			
			this.jMenuItemVerFormDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica && this.isPermisoVerFormDetalleAsientoContableCajaChica));			
			this.jMenuItemAbrirOrderByDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica && this.isPermisoOrdenDetalleAsientoContableCajaChica));			
			//this.jMenuItemMostrarOcultarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica && this.isPermisoOrdenDetalleAsientoContableCajaChica));
			this.jMenuItemDetalleAbrirOrderByDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica && this.isPermisoOrdenDetalleAsientoContableCajaChica));			
			//this.jMenuItemDetalleMostrarOcultarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica && this.isPermisoOrdenDetalleAsientoContableCajaChica));			
			this.jMenuItemNuevoRelacionesDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica && this.isPermisoNuevoDetalleAsientoContableCajaChica));			
			this.jMenuItemNuevoGuardarCambiosDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica && this.isPermisoNuevoDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));									
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemModificarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica && this.isPermisoActualizarDetalleAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemActualizarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica && this.isPermisoActualizarDetalleAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemEliminarDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica && this.isPermisoEliminarDetalleAsientoContableCajaChica));
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemCancelarDetalleAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica);				
			}
			
			this.jMenuItemGuardarCambiosDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));						
			this.jMenuItemGuardarCambiosTablaDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=this.jButtonNuevoDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica=this.jButtonDuplicarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica=this.jButtonCopiarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica=this.jButtonVerFormDetalleAsientoContableCajaChica.isVisible();
			
			this.isVisibilidadCeldaOrdenDetalleAsientoContableCajaChica=this.jButtonAbrirOrderByDetalleAsientoContableCajaChica.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=this.jButtonNuevoRelacionesDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=this.jButtonModificarDetalleAsientoContableCajaChica.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosDetalleAsientoContableCajaChica.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=this.jButtonGuardarCambiosTablaDetalleAsientoContableCajaChica.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=this.jButtonNuevoToolBarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=this.jButtonNuevoRelacionesToolBarDetalleAsientoContableCajaChica.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonModificarToolBarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarToolBarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarToolBarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarToolBarDetalleAsientoContableCajaChica.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=this.jButtonGuardarCambiosToolBarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=this.jButtonGuardarCambiosTablaToolBarDetalleAsientoContableCajaChica.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=this.jMenuItemNuevoDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=this.jMenuItemNuevoRelacionesDetalleAsientoContableCajaChica.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemModificarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemActualizarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemEliminarDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemCancelarDetalleAsientoContableCajaChica.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=this.jMenuItemGuardarCambiosDetalleAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=this.jMenuItemGuardarCambiosTablaDetalleAsientoContableCajaChica.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetalleAsientoContableCajaChica(Boolean esInicializar) {
		if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				//if(this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleAsientoContableCajaChica();
			}
			
			this.inicializarActualizarBindingBotonesManualDetalleAsientoContableCajaChica(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetalleAsientoContableCajaChica() {
		this.jButtonNuevoDetalleAsientoContableCajaChica.setVisible(this.isPermisoNuevoDetalleAsientoContableCajaChica);			
		this.jButtonDuplicarDetalleAsientoContableCajaChica.setVisible(this.isPermisoDuplicarDetalleAsientoContableCajaChica);			
		this.jButtonCopiarDetalleAsientoContableCajaChica.setVisible(this.isPermisoCopiarDetalleAsientoContableCajaChica);			
		this.jButtonVerFormDetalleAsientoContableCajaChica.setVisible(this.isPermisoVerFormDetalleAsientoContableCajaChica);			
		
		this.jButtonAbrirOrderByDetalleAsientoContableCajaChica.setVisible(this.isPermisoOrdenDetalleAsientoContableCajaChica);					
		
		this.jButtonNuevoRelacionesDetalleAsientoContableCajaChica.setVisible(this.isPermisoNuevoDetalleAsientoContableCajaChica);			
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonModificarDetalleAsientoContableCajaChica.setVisible(this.isPermisoActualizarDetalleAsientoContableCajaChica);	
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarDetalleAsientoContableCajaChica.setVisible(this.isPermisoActualizarDetalleAsientoContableCajaChica);	
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarDetalleAsientoContableCajaChica.setVisible(this.isPermisoEliminarDetalleAsientoContableCajaChica);
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarDetalleAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica);						
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosDetalleAsientoContableCajaChica.setVisible(this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica);							
		}
		
		this.jButtonGuardarCambiosTablaDetalleAsientoContableCajaChica.setVisible(this.isPermisoActualizarDetalleAsientoContableCajaChica);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleAsientoContableCajaChica() {
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonModificarDetalleAsientoContableCajaChica.setVisible(this.isPermisoActualizarDetalleAsientoContableCajaChica);	
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarDetalleAsientoContableCajaChica.setVisible(this.isPermisoActualizarDetalleAsientoContableCajaChica);	
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarDetalleAsientoContableCajaChica.setVisible(this.isPermisoEliminarDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarDetalleAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica);							
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosDetalleAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica && this.isPermisoGuardarCambiosDetalleAsientoContableCajaChica));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetalleAsientoContableCajaChica() {
		if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetalleAsientoContableCajaChica();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetalleAsientoContableCajaChica() {
	}
	
	public void jTableDatosDetalleAsientoContableCajaChicaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetalleAsientoContableCajaChica(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detalleasientocontablecajachica.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detalleasientocontablecajachica.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detalleasientocontablecajachica.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.detalleasientocontablecajachica.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detalleasientocontablecajachica.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detalleasientocontablecajachica.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.detalleasientocontablecajachica.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.detalleasientocontablecajachica.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontablecajachica=true;

			idTienePermisoasientocontablecajachica=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontablecajachica) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.asientocontablecajachicaBeanSwingJInternalFrame=new AsientoContableCajaChicaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontablecajachicaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontablecajachicaBeanSwingJInternalFrame.getAsientoContableCajaChicaLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_asiento_contable_caja_chica()!=null) {
					this.asientocontablecajachicaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontablecajachicaBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_asiento_contable_caja_chica());
					this.asientocontablecajachicaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontablecajachicaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontablecajachicaBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContableCajaChica();
				}

				JInternalFrameBase jinternalFrame =this.asientocontablecajachicaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderasientocontablecajachica=(TitledBorder)this.asientocontablecajachicaBeanSwingJInternalFrame.jScrollPanelDatosAsientoContableCajaChica.getBorder();

				titledBorderasientocontablecajachica.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Asiento Contable Caja Chica");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_asiento_contable_caja_chica()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable_caja_chica = "+this.detalleasientocontablecajachica.getid_asiento_contable_caja_chica().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipogastoempresa=true;

			idTienePermisotipogastoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipogastoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.tipogastoempresaBeanSwingJInternalFrame=new TipoGastoEmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipogastoempresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipogastoempresaBeanSwingJInternalFrame.getTipoGastoEmpresaLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_tipo_gasto_empresa()!=null) {
					this.tipogastoempresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipogastoempresaBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_tipo_gasto_empresa());
					this.tipogastoempresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipogastoempresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipogastoempresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoGastoEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.tipogastoempresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBordertipogastoempresa=(TitledBorder)this.tipogastoempresaBeanSwingJInternalFrame.jScrollPanelDatosTipoGastoEmpresa.getBorder();

				titledBordertipogastoempresa.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Tipo Gasto Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_tipo_gasto_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_gasto_empresa = "+this.detalleasientocontablecajachica.getid_tipo_gasto_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.detalleasientocontablecajachica.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccionDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion=true;

			idTienePermisotransaccion=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.transaccionBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_transaccion()!=null) {
					this.transaccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_transaccion());
					this.transaccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBordertransaccion=(TitledBorder)this.transaccionBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccionDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_transaccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion = "+this.detalleasientocontablecajachica.getid_transaccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_facturaDetalleAsientoContableCajaChicaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.facturaBeanSwingJInternalFrame.sTipoBusqueda="Factura";

			if(!this.sFinalQueryGeneral_factura.equals("")) {
				this.facturaBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_factura);
				this.facturaBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.facturaBeanSwingJInternalFrame.procesarBusqueda(this.facturaBeanSwingJInternalFrame.sAccionBusqueda);
				this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingFactura(false);
			}

			if(!this.sFinalQueryComboFactura.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleAsientoContableCajaChica=null;
			TitledBorder titledBorderfactura=null;

			if(!this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Factura");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_facturaDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisofactura=true;

			idTienePermisofactura=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(FacturaConstantesFunciones.CLASSNAME);

			if(idTienePermisofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.facturaBeanSwingJInternalFrame.getFacturaLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_factura()!=null) {
					this.facturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.facturaBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_factura());
					this.facturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFactura();
				}

				JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Factura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_facturaDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_factura = "+this.detalleasientocontablecajachica.getid_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_proveedorDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getes_proveedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_proveedor = "+this.detalleasientocontablecajachica.getes_proveedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contableDetalleAsientoContableCajaChicaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleAsientoContableCajaChica=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contableDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contableDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.detalleasientocontablecajachica.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondetalleDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getdetalle()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where detalle like '%"+this.detalleasientocontablecajachica.getdetalle()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_bien_tarifa12DetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getvalor_bien_tarifa12()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_bien_tarifa12 = "+this.detalleasientocontablecajachica.getvalor_bien_tarifa12().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_servicio_tarifa12DetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getvalor_servicio_tarifa12()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_servicio_tarifa12 = "+this.detalleasientocontablecajachica.getvalor_servicio_tarifa12().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_ivaDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getporcentaje_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_iva = "+this.detalleasientocontablecajachica.getporcentaje_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_bien_tarifa0DetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getvalor_bien_tarifa0()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_bien_tarifa0 = "+this.detalleasientocontablecajachica.getvalor_bien_tarifa0().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_servicio_tarifa0DetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getvalor_servicio_tarifa0()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_servicio_tarifa0 = "+this.detalleasientocontablecajachica.getvalor_servicio_tarifa0().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_ivaDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getvalor_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_iva = "+this.detalleasientocontablecajachica.getvalor_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_bien_iceDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getvalor_bien_ice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_bien_ice = "+this.detalleasientocontablecajachica.getvalor_bien_ice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_servicio_iceDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getvalor_servicio_ice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_servicio_ice = "+this.detalleasientocontablecajachica.getvalor_servicio_ice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoDetalleAsientoContableCajaChicaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleAsientoContableCajaChica=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.detalleasientocontablecajachica.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioDetalleAsientoContableCajaChicaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleAsientoContableCajaChica=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.detalleasientocontablecajachica.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotransaccionmodulo=true;

			idTienePermisotipotransaccionmodulo=this.tienePermisosUsuarioEnPaginaWebDetalleAsientoContableCajaChica(TipoTransaccionModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotransaccionmodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);

				this.tipotransaccionmoduloBeanSwingJInternalFrame=new TipoTransaccionModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotransaccionmoduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotransaccionmoduloBeanSwingJInternalFrame.getTipoTransaccionModuloLogic().setConnexion(this.detalleasientocontablecajachicaLogic.getConnexion());

				if(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo()!=null) {
					this.tipotransaccionmoduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setIdActual(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo());
					this.tipotransaccionmoduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTransaccionModulo();
				}

				JInternalFrameBase jinternalFrame =this.tipotransaccionmoduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();
				TitledBorder titledBordertipotransaccionmodulo=(TitledBorder)this.tipotransaccionmoduloBeanSwingJInternalFrame.jScrollPanelDatosTipoTransaccionModulo.getBorder();

				titledBordertipotransaccionmodulo.setTitle(titledBorderDetalleAsientoContableCajaChica.getTitle() + " -> Tipo Transaccion Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_transaccion_modulo = "+this.detalleasientocontablecajachica.getid_tipo_transaccion_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaDetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.getdetalleasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleasientocontablecajachica==null) {
						this.detalleasientocontablecajachica = new DetalleAsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);
				}

				if(this.detalleasientocontablecajachica.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.detalleasientocontablecajachica.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdAnio();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdAsientoContableDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdAsientoContable();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdAsientoContableCajaChica();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdCentroCosto();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdEjercicio();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdEmpresa();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFacturaDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdFactura();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdMes();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdModulo();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdPeriodo();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdSucursal();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdTipoCambio();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoGastoDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdTipoGasto();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdTipoTransaccionModulo();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);

			this.getDetalleAsientoContableCajaChicasFK_IdTransaccion();

			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);

			//if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleasientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetalleAsientoContableCajaChica() {
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.dispose();
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica!=null) {
			this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.dispose();
			this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica=null;
		}
		
		if(this.jInternalFrameImportacionDetalleAsientoContableCajaChica!=null) {
			this.jInternalFrameImportacionDetalleAsientoContableCajaChica.setVisible(false);	    			
			this.jInternalFrameImportacionDetalleAsientoContableCajaChica.dispose();
			this.jInternalFrameImportacionDetalleAsientoContableCajaChica=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetalleAsientoContableCajaChica();
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetalleAsientoContableCajaChica")) {
				jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetalleAsientoContableCajaChica")) {
				jButtonDuplicarDetalleAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetalleAsientoContableCajaChica")) {
				jButtonCopiarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetalleAsientoContableCajaChica")) {
				jButtonVerFormDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetalleAsientoContableCajaChica")) {
				jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetalleAsientoContableCajaChica")) {
				jButtonDuplicarDetalleAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetalleAsientoContableCajaChica")) {
				jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetalleAsientoContableCajaChica")) {
				jButtonDuplicarDetalleAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetalleAsientoContableCajaChica")) {
				jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetalleAsientoContableCajaChica")) {
				jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetalleAsientoContableCajaChica")) {
				jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetalleAsientoContableCajaChica")) {
				jButtonModificarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetalleAsientoContableCajaChica")) {
				jButtonModificarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetalleAsientoContableCajaChica")) {
				jButtonModificarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetalleAsientoContableCajaChica")) {
				jButtonActualizarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetalleAsientoContableCajaChica")) {
				jButtonActualizarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetalleAsientoContableCajaChica")) {
				jButtonActualizarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetalleAsientoContableCajaChica")) {
				jButtonEliminarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetalleAsientoContableCajaChica")) {
				jButtonEliminarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetalleAsientoContableCajaChica")) {
				jButtonEliminarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetalleAsientoContableCajaChica")) {
				jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetalleAsientoContableCajaChica")) {
				jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetalleAsientoContableCajaChica")) {
				jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetalleAsientoContableCajaChica")) {
				jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetalleAsientoContableCajaChica")) {
				jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetalleAsientoContableCajaChica")) {
				jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetalleAsientoContableCajaChica")) {
				jButtonMostrarOcultarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetalleAsientoContableCajaChica")) {
				jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetalleAsientoContableCajaChica")) {
				jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetalleAsientoContableCajaChica")) {
				jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetalleAsientoContableCajaChica")) {
				jButtonCopiarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetalleAsientoContableCajaChica")) {
				jButtonVerFormDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetalleAsientoContableCajaChica")) {
				jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetalleAsientoContableCajaChica")) {
				jButtonCopiarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetalleAsientoContableCajaChica")) {
				jButtonVerFormDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetalleAsientoContableCajaChica")) {
				jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetalleAsientoContableCajaChica")) {
				jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetalleAsientoContableCajaChica")) {
				jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetalleAsientoContableCajaChica")) {
				jButtonRecargarInformacionDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetalleAsientoContableCajaChica")) {
				jButtonRecargarInformacionDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetalleAsientoContableCajaChica")) {
				jButtonRecargarInformacionDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetalleAsientoContableCajaChica")) {
				jButtonAnterioresDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetalleAsientoContableCajaChica")) {
				jButtonAnterioresDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetalleAsientoContableCajaChica")) {
				jButtonAnterioresDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetalleAsientoContableCajaChica")) {
				jButtonSiguientesDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetalleAsientoContableCajaChica")) {
				jButtonSiguientesDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetalleAsientoContableCajaChica")) {
				jButtonSiguientesDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetalleAsientoContableCajaChica") || sTipo.equals("MenuItemDetalleAbrirOrderByDetalleAsientoContableCajaChica")) {
				jButtonAbrirOrderByDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetalleAsientoContableCajaChica") || sTipo.equals("MenuItemDetalleMostrarOcultarDetalleAsientoContableCajaChica")) {
				jButtonMostrarOcultarDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleAsientoContableCajaChica")) {
				jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetalleAsientoContableCajaChica")) {
				jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetalleAsientoContableCajaChica")) {
				jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetalleAsientoContableCajaChica")) {
				jButtonCerrarReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetalleAsientoContableCajaChica")) {
				jButtonGenerarReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetalleAsientoContableCajaChica")) {
				
				jButtonGenerarExcelReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetalleAsientoContableCajaChica")) {
				jButtonCerrarImportacionDetalleAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetalleAsientoContableCajaChica")) {
				
				jButtonGenerarImportacionDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetalleAsientoContableCajaChica")) {
				
				jButtonAbrirImportacionDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetalleAsientoContableCajaChica")) {
				jComboBoxTiposAccionesDetalleAsientoContableCajaChicaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetalleAsientoContableCajaChica")) {
				jComboBoxTiposRelacionesDetalleAsientoContableCajaChicaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetalleAsientoContableCajaChica")) {
				jComboBoxTiposAccionesDetalleAsientoContableCajaChicaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetalleAsientoContableCajaChica")) {
				
				jComboBoxTiposSeleccionarDetalleAsientoContableCajaChicaActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetalleAsientoContableCajaChica")) {
				jTextFieldValorCampoGeneralDetalleAsientoContableCajaChicaActionListener(evt);
			}
			
			else if(sTipo.equals("AbrirTotalesDetalleAsientoContableCajaChica")) {
				jButtonAbrirTotalesDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTotalesDetalleAsientoContableCajaChica")) {
				jButtonCerrarTotalesDetalleAsientoContableCajaChicaActionPerformed(evt);
			} 
			
			else if(sTipo.equals("AbrirOrderByDetalleAsientoContableCajaChica")) {
				jButtonAbrirOrderByDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetalleAsientoContableCajaChica")) {
				jButtonAbrirOrderByDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetalleAsientoContableCajaChica")) {
				jButtonCerrarOrderByDetalleAsientoContableCajaChicaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonidDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_empresaDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_empresaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_sucursalDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_sucursalDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_moduloDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_moduloDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_ejercicioDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_ejercicioDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_periodoDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_periodoDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_anioDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_anioDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_mesDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_mesDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonfecha_emisionDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_transaccionDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_transaccionDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaDetalleAsientoContableCajaChica")) {
				this.jButtonid_facturaDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_facturaDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_facturaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_proveedorDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtones_proveedorDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleAsientoContableCajaChica")) {
				this.jButtonid_asiento_contableDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_asiento_contableDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_asiento_contableDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("detalleDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtondetalleDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_bien_tarifa12DetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_bien_tarifa12DetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_servicio_tarifa12DetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_servicio_tarifa12DetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_ivaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonporcentaje_ivaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_bien_tarifa0DetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_bien_tarifa0DetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_servicio_tarifa0DetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_servicio_tarifa0DetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_ivaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_ivaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_bien_iceDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_bien_iceDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_servicio_iceDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_servicio_iceDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetalleAsientoContableCajaChica")) {
				this.jButtonid_centro_costoDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleAsientoContableCajaChicaArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_centro_costoDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_centro_costoDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioDetalleAsientoContableCajaChica")) {
				this.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonfechaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contableDetalleAsientoContableCajaChica")) {
				this.jButtonid_asiento_contableDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("id_centro_costoDetalleAsientoContableCajaChica")) {
				this.jButtonid_centro_costoDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("id_facturaDetalleAsientoContableCajaChica")) {
				this.jButtonid_facturaDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("id_tipo_cambioDetalleAsientoContableCajaChica")) {
				this.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdAsientoContableDetalleAsientoContableCajaChica")) {
				this.jButtonFK_IdAsientoContableDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica")) {
				this.jButtonFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoDetalleAsientoContableCajaChica")) {
				this.jButtonFK_IdCentroCostoDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFacturaDetalleAsientoContableCajaChica")) {
				this.jButtonFK_IdFacturaDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoCambioDetalleAsientoContableCajaChica")) {
				this.jButtonFK_IdTipoCambioDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoGastoDetalleAsientoContableCajaChica")) {
				this.jButtonFK_IdTipoGastoDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica")) {
				this.jButtonFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionDetalleAsientoContableCajaChica")) {
				this.jButtonFK_IdTransaccionDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			
			;
			
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetalleAsientoContableCajaChica();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				


				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetalleAsientoContableCajaChica detalleasientocontablecajachicaLocal=null;
			
			if(!this.getEsControlTabla()) {
				detalleasientocontablecajachicaLocal=this.detalleasientocontablecajachica;
			} else {
				detalleasientocontablecajachicaLocal=this.detalleasientocontablecajachicaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
							
				
				


				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
								
						
				


				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
								
				
				


				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
							
				
				


				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
								
				
				


				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetalleAsientoContableCajaChica")) {
					jCheckBoxSeleccionarTodosDetalleAsientoContableCajaChicaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetalleAsientoContableCajaChica")) {
					jCheckBoxSeleccionadosDetalleAsientoContableCajaChicaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetalleAsientoContableCajaChica")) {
					
				}
				
				


				
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
												
				
				


				
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleasientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleasientocontablecajachica);
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleAsientoContableCajaChica.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleAsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleasientocontablecajachicaAnterior =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetalleAsientoContableCajaChica")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetalleAsientoContableCajaChicaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detalleasientocontablecajachica =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detalleasientocontablecajachica);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetalleAsientoContableCajaChica")) {
				
				}
				
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetalleAsientoContableCajaChica")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetalleAsientoContableCajaChica.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetalleAsientoContableCajaChica")) {
			
			}
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetalleAsientoContableCajaChica();
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
			if(sTipo.equals("NuevoDetalleAsientoContableCajaChica")) {
				jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetalleAsientoContableCajaChica")) {
				jButtonDuplicarDetalleAsientoContableCajaChicaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetalleAsientoContableCajaChica")) {
				jButtonCopiarDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetalleAsientoContableCajaChica")) {
				jButtonVerFormDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetalleAsientoContableCajaChica")) {
				jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetalleAsientoContableCajaChica")) {
				jButtonModificarDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetalleAsientoContableCajaChica")) {
				jButtonActualizarDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetalleAsientoContableCajaChica")) {
				jButtonEliminarDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetalleAsientoContableCajaChica")) {
				jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetalleAsientoContableCajaChica")) {
				jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetalleAsientoContableCajaChica")) {
				jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetalleAsientoContableCajaChica")) {
				jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleAsientoContableCajaChica")) {
				jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetalleAsientoContableCajaChica")) {
				jButtonAbrirOrderByDetalleAsientoContableCajaChicaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetalleAsientoContableCajaChica")) {
				jButtonRecargarInformacionDetalleAsientoContableCajaChicaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetalleAsientoContableCajaChica")) {
				jButtonAnterioresDetalleAsientoContableCajaChicaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetalleAsientoContableCajaChica")) {
				jButtonSiguientesDetalleAsientoContableCajaChicaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonidDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_empresaDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_empresaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_sucursalDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_sucursalDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_moduloDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_moduloDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_ejercicioDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_ejercicioDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_periodoDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_periodoDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_anioDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_anioDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_mesDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_mesDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonfecha_emisionDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_transaccionDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_transaccionDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaDetalleAsientoContableCajaChica")) {
				this.jButtonid_facturaDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_facturaDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_facturaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_proveedorDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtones_proveedorDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleAsientoContableCajaChica")) {
				this.jButtonid_asiento_contableDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_asiento_contableDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_asiento_contableDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("detalleDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtondetalleDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_bien_tarifa12DetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_bien_tarifa12DetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_servicio_tarifa12DetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_servicio_tarifa12DetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_ivaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonporcentaje_ivaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_bien_tarifa0DetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_bien_tarifa0DetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_servicio_tarifa0DetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_servicio_tarifa0DetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_ivaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_ivaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_bien_iceDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_bien_iceDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_servicio_iceDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonvalor_servicio_iceDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetalleAsientoContableCajaChica")) {
				this.jButtonid_centro_costoDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleAsientoContableCajaChicaArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_centro_costoDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_centro_costoDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioDetalleAsientoContableCajaChica")) {
				this.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaDetalleAsientoContableCajaChicaBusqueda")) {
				this.jButtonfechaDetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetalleAsientoContableCajaChica();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetalleAsientoContableCajaChica")) {
				closingInternalFrameDetalleAsientoContableCajaChica();
				
			} else if(sTipo.equals("jButtonCancelarDetalleAsientoContableCajaChica")) {
				JInternalFrameBase jInternalFrameDetalleFormDetalleAsientoContableCajaChica = (JInternalFrameBase)evt.getSource();
	            	
	            DetalleAsientoContableCajaChicaBeanSwingJInternalFrame jInternalFrameParent=(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleAsientoContableCajaChica.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(null);
			}
			
			DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleasientocontablecajachica,new Object(),this.detalleasientocontablecajachicaParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetalleAsientoContableCajaChica(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetalleAsientoContableCajaChica(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetalleAsientoContableCajaChica(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detalleasientocontablecajachica)) {
			if(!esControlTabla) {
				if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);			
				}
				
				if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleasientocontablecajachicaReturnGeneral=detalleasientocontablecajachicaLogic.procesarEventosDetalleAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas(),this.detalleasientocontablecajachica,this.detalleasientocontablecajachicaParameterGeneral,this.isEsNuevoDetalleAsientoContableCajaChica,classes);//this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChica()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaReturnGeneral,this.detalleasientocontablecajachicaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetalleAsientoContableCajaChica(classes,this.detalleasientocontablecajachicaReturnGeneral,this.detalleasientocontablecajachicaBean,false);
					}
						
					if(this.detalleasientocontablecajachicaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica());	
					}
						
					if(this.detalleasientocontablecajachicaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica(),classes);//this.detalleasientocontablecajachicaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,classes);//this.detalleasientocontablecajachicaBean);									
				}
			
				if(DetalleAsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleAsientoContableCajaChica(this.detalleasientocontablecajachica);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detalleasientocontablecajachicaAnterior!=null) {
						this.detalleasientocontablecajachica=this.detalleasientocontablecajachicaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleasientocontablecajachicaReturnGeneral=detalleasientocontablecajachicaLogic.procesarEventosDetalleAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas(),this.detalleasientocontablecajachica,this.detalleasientocontablecajachicaParameterGeneral,this.isEsNuevoDetalleAsientoContableCajaChica,classes);//this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChica()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleasientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica(),detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica(),this.detalleasientocontablecajachicas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetalleAsientoContableCajaChica.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetalleAsientoContableCajaChica.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetalleAsientoContableCajaChica();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetalleAsientoContableCajaChica() throws Exception {
		
		DetalleAsientoContableCajaChicaModel detalleasientocontablecajachicaModel=(DetalleAsientoContableCajaChicaModel)this.jTableDatosDetalleAsientoContableCajaChica.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleasientocontablecajachicaModel.detalleasientocontablecajachicas=this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detalleasientocontablecajachicaModel.detalleasientocontablecajachicas=this.detalleasientocontablecajachicas;
		}
		
		
		((DetalleAsientoContableCajaChicaModel) this.jTableDatosDetalleAsientoContableCajaChica.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetalleAsientoContableCajaChica() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetalleasientocontablecajachicaAnterior(),this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetalleasientocontablecajachicaAnterior(),this.detalleasientocontablecajachicas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetalleAsientoContableCajaChica();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleasientocontablecajachica,new Object(),generalEntityParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetalleAsientoContableCajaChicaConstantesFunciones.getClassesRelationshipsOfDetalleAsientoContableCajaChica(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetalleAsientoContableCajaChicaConstantesFunciones.getClassesRelationshipsFromStringsOfDetalleAsientoContableCajaChica(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetalleAsientoContableCajaChica(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleasientocontablecajachica,new Object(),generalEntityParameterGeneral,this.detalleasientocontablecajachicaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChicaBean detalleasientocontablecajachicaBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetalleAsientoContableCajaChica(ArrayList<Classe> classes,DetalleAsientoContableCajaChicaReturnGeneral detalleasientocontablecajachicaReturnGeneral,DetalleAsientoContableCajaChicaBean detalleasientocontablecajachicaBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detalleasientocontablecajachica)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica = new DetalleAsientoContableCajaChicaDetalleFormJInternalFrame(jDesktopPane,this.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones(),this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setVisible(false);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.detalleasientocontablecajachicaLogic=this.detalleasientocontablecajachicaLogic;
		
		this.cargarCombosFrameForeignKeyDetalleAsientoContableCajaChica("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleAsientoContableCajaChica();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleAsientoContableCajaChica();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetalleAsientoContableCajaChica("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetalleAsientoContableCajaChica();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleAsientoContableCajaChica"));
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonModificarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ModificarDetalleAsientoContableCajaChica"));

		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonModificarToolBarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleAsientoContableCajaChica"));
					
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemModificarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleAsientoContableCajaChica"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"ActualizarDetalleAsientoContableCajaChica"));
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarToolBarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleAsientoContableCajaChica"));
						
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemActualizarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleAsientoContableCajaChica"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"EliminarDetalleAsientoContableCajaChica"));
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleAsientoContableCajaChica"));
								
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemEliminarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleAsientoContableCajaChica"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CancelarDetalleAsientoContableCajaChica"));
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleAsientoContableCajaChica"));
					
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemCancelarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleAsientoContableCajaChica"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemDetalleCerrarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleAsientoContableCajaChica"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleAsientoContableCajaChica"));
		
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleAsientoContableCajaChica"));
		
		
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleAsientoContableCajaChica"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonidDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_empresaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_empresaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_sucursalDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_sucursalDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_moduloDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_moduloDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_moduloDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_ejercicioDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_ejercicioDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_periodoDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_periodoDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_anioDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_anioDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_mesDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_mesDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonfecha_emisionDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_transaccionDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_transaccionDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_facturaDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtones_proveedorDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"es_proveedorDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_asiento_contableDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtondetalleDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"detalleDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_bien_tarifa12DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_bien_tarifa12DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_servicio_tarifa12DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_servicio_tarifa12DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonporcentaje_ivaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ivaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_bien_tarifa0DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_bien_tarifa0DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_servicio_tarifa0DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_servicio_tarifa0DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_ivaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_ivaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_bien_iceDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_bien_iceDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_servicio_iceDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_servicio_iceDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_centro_costoDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChica"));
		//jButtonid_centro_costoDetalleAsientoContableCajaChicaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChicaArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChicaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_tipo_cambioDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonfechaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"fechaDetalleAsientoContableCajaChicaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTabbedPaneRelacionesDetalleAsientoContableCajaChica.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleAsientoContableCajaChica"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetalleAsientoContableCajaChica"));
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleAsientoContableCajaChica"));
		}
		
		this.jTableDatosDetalleAsientoContableCajaChica.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetalleAsientoContableCajaChica"));
		
		this.jTableDatosDetalleAsientoContableCajaChica.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetalleAsientoContableCajaChica"));
		
		this.jButtonNuevoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"NuevoDetalleAsientoContableCajaChica"));
		
		this.jButtonDuplicarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"DuplicarDetalleAsientoContableCajaChica"));
		
		this.jButtonCopiarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"CopiarDetalleAsientoContableCajaChica"));
		
		this.jButtonVerFormDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"VerFormDetalleAsientoContableCajaChica"));
		
		
		this.jButtonNuevoToolBarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetalleAsientoContableCajaChica"));
			
		this.jButtonDuplicarToolBarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetalleAsientoContableCajaChica"));
			
		this.jMenuItemNuevoDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetalleAsientoContableCajaChica"));
			
		this.jMenuItemDuplicarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetalleAsientoContableCajaChica"));		
		
		
		this.jButtonNuevoRelacionesDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetalleAsientoContableCajaChica"));
		
		
		this.jButtonNuevoRelacionesToolBarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetalleAsientoContableCajaChica"));
			
		this.jMenuItemNuevoRelacionesDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetalleAsientoContableCajaChica"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonModificarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ModificarDetalleAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonModificarToolBarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleAsientoContableCajaChica"));
			
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemModificarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleAsientoContableCajaChica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"ActualizarDetalleAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonActualizarToolBarDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleAsientoContableCajaChica"));
				
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemActualizarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleAsientoContableCajaChica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"EliminarDetalleAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonEliminarToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleAsientoContableCajaChica"));
						
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemEliminarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleAsientoContableCajaChica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CancelarDetalleAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonCancelarToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleAsientoContableCajaChica"));
			
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemCancelarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleAsientoContableCajaChica"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetalleAsientoContableCajaChica"));		
		
		
		this.jButtonCerrarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CerrarDetalleAsientoContableCajaChica"));
		
		
		this.jButtonCerrarToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetalleAsientoContableCajaChica"));
			
		this.jMenuItemCerrarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetalleAsientoContableCajaChica"));
			
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jMenuItemDetalleCerrarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleAsientoContableCajaChica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetalleAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleAsientoContableCajaChica"));
		}
		
		this.jButtonCopiarToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetalleAsientoContableCajaChica"));
			
		this.jButtonVerFormToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetalleAsientoContableCajaChica"));
		
		this.jMenuItemGuardarCambiosDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetalleAsientoContableCajaChica"));
			
		this.jMenuItemCopiarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetalleAsientoContableCajaChica"));		
		
		this.jMenuItemVerFormDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetalleAsientoContableCajaChica"));		
		
		
		this.jButtonGuardarCambiosTablaDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleAsientoContableCajaChica"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetalleAsientoContableCajaChica"));
			
		this.jMenuItemGuardarCambiosTablaDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleAsientoContableCajaChica"));		
		
		
		
		this.jButtonRecargarInformacionDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetalleAsientoContableCajaChica"));
					
		this.jButtonRecargarInformacionToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetalleAsientoContableCajaChica"));
		
		this.jMenuItemRecargarInformacionDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetalleAsientoContableCajaChica"));		
		
		
		
		this.jButtonAnterioresDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"AnterioresDetalleAsientoContableCajaChica"));
		
		
		this.jButtonAnterioresToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetalleAsientoContableCajaChica"));
		
		this.jMenuItemAnterioresDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetalleAsientoContableCajaChica"));		
		
		
		this.jButtonSiguientesDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"SiguientesDetalleAsientoContableCajaChica"));
		
		
		this.jButtonSiguientesToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetalleAsientoContableCajaChica"));
			
		this.jMenuItemSiguientesDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetalleAsientoContableCajaChica"));
			
		this.jMenuItemAbrirOrderByDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetalleAsientoContableCajaChica"));
			
		this.jMenuItemMostrarOcultarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetalleAsientoContableCajaChica"));
			
		this.jMenuItemDetalleAbrirOrderByDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetalleAsientoContableCajaChica"));
			
		this.jMenuItemDetalleMostarOcultarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetalleAsientoContableCajaChica"));		
		
		
		this.jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetalleAsientoContableCajaChica"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetalleAsientoContableCajaChica"));
			
		this.jMenuItemNuevoGuardarCambiosDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetalleAsientoContableCajaChica"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetalleAsientoContableCajaChica.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetalleAsientoContableCajaChica"));

		this.jCheckBoxSeleccionadosDetalleAsientoContableCajaChica.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetalleAsientoContableCajaChica"));
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleAsientoContableCajaChica"));
		}
		
		
		this.jComboBoxTiposRelacionesDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetalleAsientoContableCajaChica"));
			
		this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposAccionesDetalleAsientoContableCajaChica"));
					
		this.jComboBoxTiposSeleccionarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetalleAsientoContableCajaChica"));
			
		this.jTextFieldValorCampoGeneralDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetalleAsientoContableCajaChica"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonidDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_empresaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_empresaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_sucursalDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_sucursalDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_moduloDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_moduloDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_moduloDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_ejercicioDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_ejercicioDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_periodoDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_periodoDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_anioDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_anioDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_mesDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_mesDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonfecha_emisionDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_transaccionDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_transaccionDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_facturaDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtones_proveedorDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"es_proveedorDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_asiento_contableDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtondetalleDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"detalleDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_bien_tarifa12DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_bien_tarifa12DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_servicio_tarifa12DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_servicio_tarifa12DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonporcentaje_ivaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ivaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_bien_tarifa0DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_bien_tarifa0DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_servicio_tarifa0DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_servicio_tarifa0DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_ivaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_ivaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_bien_iceDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_bien_iceDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_servicio_iceDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_servicio_iceDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_centro_costoDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChica"));
		//jButtonid_centro_costoDetalleAsientoContableCajaChicaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChicaArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChicaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_tipo_cambioDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonfechaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"fechaDetalleAsientoContableCajaChicaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdAsientoContableDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableDetalleAsientoContableCajaChica"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contableDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChica"));

			this.jButtonFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica"));

			this.jButtonFK_IdCentroCostoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetalleAsientoContableCajaChica"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChica"));

			this.jButtonFK_IdFacturaDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdFacturaDetalleAsientoContableCajaChica"));

			this.jButtonBuscarFK_IdFacturaid_facturaDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChica"));

			this.jButtonFK_IdTipoCambioDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioDetalleAsientoContableCajaChica"));

			this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChica"));

			this.jButtonFK_IdTipoGastoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoGastoDetalleAsientoContableCajaChica"));

			this.jButtonFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica"));

			this.jButtonFK_IdTransaccionDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionDetalleAsientoContableCajaChica"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica!=null) {
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleAsientoContableCajaChica"));
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleAsientoContableCajaChica"));
				this.jInternalFrameReporteDinamicoDetalleAsientoContableCajaChica.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleAsientoContableCajaChica"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleAsientoContableCajaChica"));				
			//this.jButtonGenerarReporteDinamicoDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleAsientoContableCajaChica"));
			//this.jButtonGenerarExcelReporteDinamicoDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleAsientoContableCajaChica"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetalleAsientoContableCajaChica!=null) {
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleAsientoContableCajaChica"));
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleAsientoContableCajaChica"));
				this.jInternalFrameImportacionDetalleAsientoContableCajaChica.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleAsientoContableCajaChica"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetalleAsientoContableCajaChica"));
			
			this.jButtonAbrirOrderByToolBarDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetalleAsientoContableCajaChica"));			
			
			if(this.jInternalFrameOrderByDetalleAsientoContableCajaChica!=null) {
				this.jInternalFrameOrderByDetalleAsientoContableCajaChica.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleAsientoContableCajaChica"));				
			}
			
			
		}
		
		this.jButtonAbrirTotalesDetalleAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"AbrirTotalesDetalleAsientoContableCajaChica"));
		
		if(this.jInternalFrameTotalesDetalleAsientoContableCajaChica!=null) {
			this.jInternalFrameTotalesDetalleAsientoContableCajaChica.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetalleAsientoContableCajaChica"));
		}
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTabbedPaneRelacionesDetalleAsientoContableCajaChica.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleAsientoContableCajaChica"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetalleAsientoContableCajaChica();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetalleAsientoContableCajaChica = (JInternalFrameBase)event.getSource();
	            	
	            DetalleAsientoContableCajaChicaBeanSwingJInternalFrame jInternalFrameParent=(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleAsientoContableCajaChica.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetalleAsientoContableCajaChica.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetalleAsientoContableCajaChicaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetalleAsientoContableCajaChica.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetalleAsientoContableCajaChica.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetalleAsientoContableCajaChica";
		inputMap = this.jButtonNuevoDetalleAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetalleAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetalleAsientoContableCajaChica";
		inputMap = this.jButtonNuevoRelacionesDetalleAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetalleAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleAsientoContableCajaChicaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetalleAsientoContableCajaChica";
		inputMap = this.jButtonModificarDetalleAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetalleAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetalleAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetalleAsientoContableCajaChica";
		inputMap = this.jButtonActualizarDetalleAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetalleAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetalleAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetalleAsientoContableCajaChica";
		inputMap = this.jButtonEliminarDetalleAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetalleAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetalleAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetalleAsientoContableCajaChica";
		inputMap = this.jButtonCancelarDetalleAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetalleAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetalleAsientoContableCajaChica";
		inputMap = this.jButtonCerrarDetalleAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetalleAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetalleAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetalleAsientoContableCajaChica";
		inputMap = this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosDetalleAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonGuardarCambiosDetalleAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetalleAsientoContableCajaChica.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetalleAsientoContableCajaChicaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetalleAsientoContableCajaChicaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetalleAsientoContableCajaChica.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetalleAsientoContableCajaChicaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetalleAsientoContableCajaChica.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetalleAsientoContableCajaChicaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonidDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_empresaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_empresaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_sucursalDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_sucursalDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_moduloDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_moduloDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_moduloDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_ejercicioDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_ejercicioDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_periodoDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_periodoDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_anioDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_anioDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_mesDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_mesDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contable_caja_chicaDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_gasto_empresaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_gasto_empresaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonfecha_emisionDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_transaccionDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_transaccionDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_facturaDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtones_proveedorDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"es_proveedorDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_asiento_contableDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtondetalleDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"detalleDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_bien_tarifa12DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_bien_tarifa12DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_servicio_tarifa12DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_servicio_tarifa12DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonporcentaje_ivaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ivaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_bien_tarifa0DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_bien_tarifa0DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_servicio_tarifa0DetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_servicio_tarifa0DetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_ivaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_ivaDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_bien_iceDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_bien_iceDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonvalor_servicio_iceDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"valor_servicio_iceDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_centro_costoDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChica"));
		//jButtonid_centro_costoDetalleAsientoContableCajaChicaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChicaArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChicaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChicaBusqueda"));
		//jButtonid_tipo_cambioDetalleAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioDetalleAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonfechaDetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"fechaDetalleAsientoContableCajaChicaBusqueda"));
		
		
		this.jButtonFK_IdAsientoContableDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableDetalleAsientoContableCajaChica"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contableDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleAsientoContableCajaChica"));

		this.jButtonFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica"));

		this.jButtonFK_IdCentroCostoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetalleAsientoContableCajaChica"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleAsientoContableCajaChica"));

		this.jButtonFK_IdFacturaDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdFacturaDetalleAsientoContableCajaChica"));

		this.jButtonBuscarFK_IdFacturaid_facturaDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_facturaDetalleAsientoContableCajaChica"));

		this.jButtonFK_IdTipoCambioDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioDetalleAsientoContableCajaChica"));

		this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_tipo_cambioDetalleAsientoContableCajaChica"));

		this.jButtonFK_IdTipoGastoDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoGastoDetalleAsientoContableCajaChica"));

		this.jButtonFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica"));

		this.jButtonFK_IdTransaccionDetalleAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionDetalleAsientoContableCajaChica"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetalleAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetalleAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetalleAsientoContableCajaChicaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetalleAsientoContableCajaChica.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetalleAsientoContableCajaChica(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
					detalleasientocontablecajachicaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicas) {
					detalleasientocontablecajachicaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetalleAsientoContableCajaChicaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
						detalleasientocontablecajachicaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicas) {
						detalleasientocontablecajachicaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
					
						if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR)) {
							existe=true;
							detalleasientocontablecajachicaAux.setes_proveedor(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicas) {
						
						if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR)) {
							existe=true;
							detalleasientocontablecajachicaAux.setes_proveedor(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleAsientoContableCajaChica.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleAsientoContableCajaChica.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetalleAsientoContableCajaChicaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetalleAsientoContableCajaChica.getSelectedRows();
			
			DetalleAsientoContableCajaChica detalleasientocontablecajachicaLocal=new DetalleAsientoContableCajaChica();
			
			//this.seleccionarTodosDetalleAsientoContableCajaChica(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleasientocontablecajachicaLocal =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detalleasientocontablecajachicaLocal =(DetalleAsientoContableCajaChica) this.detalleasientocontablecajachicas.toArray()[this.jTableDatosDetalleAsientoContableCajaChica.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detalleasientocontablecajachicaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
						detalleasientocontablecajachicaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicas) {
						detalleasientocontablecajachicaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleAsientoContableCajaChica.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleAsientoContableCajaChica.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleAsientoContableCajaChica,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetalleAsientoContableCajaChicaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetalleAsientoContableCajaChicaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetalleAsientoContableCajaChicaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetalleAsientoContableCajaChica.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
				
						if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							detalleasientocontablecajachicaAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE)) {
							existe=true;
							detalleasientocontablecajachicaAux.setdetalle(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_bien_tarifa12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_servicio_tarifa12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA)) {
							existe=true;
							detalleasientocontablecajachicaAux.setporcentaje_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_bien_tarifa0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_servicio_tarifa0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_bien_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_servicio_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							detalleasientocontablecajachicaAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicas) {
					
						if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							detalleasientocontablecajachicaAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE)) {
							existe=true;
							detalleasientocontablecajachicaAux.setdetalle(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_bien_tarifa12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_servicio_tarifa12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA)) {
							existe=true;
							detalleasientocontablecajachicaAux.setporcentaje_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_bien_tarifa0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_servicio_tarifa0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_bien_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE)) {
							existe=true;
							detalleasientocontablecajachicaAux.setvalor_servicio_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							detalleasientocontablecajachicaAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetalleAsientoContableCajaChicaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetalleAsientoContableCajaChica=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetalleAsientoContableCajaChica) {				
					conSplash=true;//false;										
					
					//this.startProcessDetalleAsientoContableCajaChica(conSplash);
				
					this.generarReporteDetalleAsientoContableCajaChicasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetalleAsientoContableCajaChicasSeleccionados();
				//this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleAsientoContableCajaChicasSeleccionados(false);
				//this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleAsientoContableCajaChicasSeleccionados(true);
				//this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleAsientoContableCajaChica();
				
				this.exportarDetalleAsientoContableCajaChicasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetalleAsientoContableCajaChicas();
				//this.importarDetalleAsientoContableCajaChicas();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleAsientoContableCajaChica();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetalleAsientoContableCajaChicasSeleccionados();
				//this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle Asiento Contable Caja Chica", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetalleAsientoContableCajaChica();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetalleAsientoContableCajaChica)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetalleAsientoContableCajaChica(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.setSelectedIndex(0);					
				}	
			} 			
			else if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetalleAsientoContableCajaChica) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetalleAsientoContableCajaChica(conSplash);
					
						//this.actualizarParametrosGeneralDetalleAsientoContableCajaChica();
						
						this.generarReporteProcesoAccionDetalleAsientoContableCajaChicasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle Asiento Contable Caja ChicaS SELECCIONADOS?", "MANTENIMIENTO DE Detalle Asiento Contable Caja Chica", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetalleAsientoContableCajaChica();
				
						this.actualizarParametrosGeneralDetalleAsientoContableCajaChica();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detalleasientocontablecajachicaReturnGeneral=detalleasientocontablecajachicaLogic.procesarAccionDetalleAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas(),this.detalleasientocontablecajachicaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetalleAsientoContableCajaChicaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetalleAsientoContableCajaChica();
					
					DetalleAsientoContableCajaChicaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetalleAsientoContableCajaChicaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleAsientoContableCajaChica.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxTiposAccionesFormularioDetalleAsientoContableCajaChica.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetalleAsientoContableCajaChica(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetalleAsientoContableCajaChicaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetalleAsientoContableCajaChica();
			
			if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();		
			DetalleAsientoContableCajaChica detalleasientocontablecajachica=new DetalleAsientoContableCajaChica();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetalleAsientoContableCajaChica.getSelectedItem();
			
			
			
			
			detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
			//this.sTipoAccion;
			
			if(detalleasientocontablecajachicasSeleccionados.size()==1) {
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicasSeleccionados) {
					detalleasientocontablecajachica=detalleasientocontablecajachicaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetalleAsientoContableCajaChica();
			
      		//this.finishProcessDetalleAsientoContableCajaChica(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetalleAsientoContableCajaChicaReturnGeneral() throws Exception {
		if(this.detalleasientocontablecajachicaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detalleasientocontablecajachicaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detalleasientocontablecajachicaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detalleasientocontablecajachicaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detalleasientocontablecajachicaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detalleasientocontablecajachicaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
		}
		
		if(this.detalleasientocontablecajachicaReturnGeneral.getConRetornoLista() || this.detalleasientocontablecajachicaReturnGeneral.getConRetornoObjeto()) {
			if(this.detalleasientocontablecajachicaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detalleasientocontablecajachicaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChica(this.detalleasientocontablecajachicaReturnGeneral.getDetalleAsientoContableCajaChica());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetalleAsientoContableCajaChica(false);
		}
	}
	
	public void actualizarParametrosGeneralDetalleAsientoContableCajaChica() throws Exception {
		
		
	}
	
	public ArrayList<DetalleAsientoContableCajaChica> getDetalleAsientoContableCajaChicasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetalleAsientoContableCajaChica) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas()) {
					if(detalleasientocontablecajachicaAux.getIsSelected()) {
						detalleasientocontablecajachicasSeleccionados.add(detalleasientocontablecajachicaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:this.detalleasientocontablecajachicas) {
					if(detalleasientocontablecajachicaAux.getIsSelected()) {
						detalleasientocontablecajachicasSeleccionados.add(detalleasientocontablecajachicaAux);				
					}
				}
			}
			
			if(detalleasientocontablecajachicasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detalleasientocontablecajachicasSeleccionados.addAll(this.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detalleasientocontablecajachicasSeleccionados.addAll(this.detalleasientocontablecajachicas);				
					}
				}
			}
		} else {
			detalleasientocontablecajachicasSeleccionados.add(this.detalleasientocontablecajachica);
		}
		
		return detalleasientocontablecajachicasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetalleAsientoContableCajaChicasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetalleAsientoContableCajaChicasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetalleAsientoContableCajaChicasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleAsientoContableCajaChicasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleAsientoContableCajaChicasSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle Asiento Contable Caja Chica",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetalleAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();		
		
		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetalleAsientoContableCajaChicas("Todos",detalleasientocontablecajachicasSeleccionados);
		
	}	
	
	public void generarReporteNormalDetalleAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();		
		
		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetalleAsientoContableCajaChicas("Todos",detalleasientocontablecajachicasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetalleAsientoContableCajaChicasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();
		
		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetalleAsientoContableCajaChicas("Todos",detalleasientocontablecajachicasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetalleAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetalleAsientoContableCajaChica();
		
		
		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetalleAsientoContableCajaChica();
		
		
		//this.generarReporteDetalleAsientoContableCajaChicas("Todos",detalleasientocontablecajachicasSeleccionados ,detalleasientocontablecajachicaImplementable,detalleasientocontablecajachicaImplementableHome);
	}
	
	public void mostrarImportacionDetalleAsientoContableCajaChicas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetalleAsientoContableCajaChica();
		
		this.abrirFrameImportacionDetalleAsientoContableCajaChica();		
		
			
		//this.generarReporteDetalleAsientoContableCajaChicas("Todos",detalleasientocontablecajachicasSeleccionados ,detalleasientocontablecajachicaImplementable,detalleasientocontablecajachicaImplementableHome);
	}
	
	public void importarDetalleAsientoContableCajaChicas() throws Exception {		
	
	}
	
	public void exportarDetalleAsientoContableCajaChicasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetalleAsientoContableCajaChicasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetalleAsientoContableCajaChicasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetalleAsientoContableCajaChicasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle Asiento Contable Caja Chica",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetalleAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();		
		
		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleasientocontablecajachica."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetalleAsientoContableCajaChica(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetalleAsientoContableCajaChica(detalleasientocontablecajachicaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detalleasientocontablecajachicaAux.setsDetalleGeneralEntityReporte(detalleasientocontablecajachicaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetalleAsientoContableCajaChica(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detalleasientocontablecajachica.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getasientocontablecajachica_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.gettipogastoempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.gettransaccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getfactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getes_proveedor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getasientocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getdetalle();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getvalor_bien_tarifa12().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getvalor_servicio_tarifa12().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getporcentaje_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getvalor_bien_tarifa0().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getvalor_servicio_tarifa0().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getvalor_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getvalor_bien_ice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getvalor_servicio_ice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.gettipocambio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.gettipotransaccionmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleasientocontablecajachica.getfecha().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetalleAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();		
		
		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleasientocontablecajachica.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetalleAsientoContableCajaChicas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetalleAsientoContableCajaChica(row);				
				iRow++;
			}				
			
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetalleAsientoContableCajaChica(detalleasientocontablecajachicaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetalleAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();		
		
		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleasientocontablecajachica.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detalleasientocontablecajachicas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detalleasientocontablecajachica");
			//elementRoot.appendChild(element);
		
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicasSeleccionados) {
				element = document.createElement("detalleasientocontablecajachica");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetalleAsientoContableCajaChica(detalleasientocontablecajachicaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetalleAsientoContableCajaChica(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA12);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA12);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_PORCENTAJEIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENTARIFA0);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOTARIFA0);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORBIENICE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_VALORSERVICIOICE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getasientocontablecajachica_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.gettipogastoempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.gettransaccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getfactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getes_proveedor());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getasientocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getdetalle());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getvalor_bien_tarifa12());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getvalor_servicio_tarifa12());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getporcentaje_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getvalor_bien_tarifa0());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getvalor_servicio_tarifa0());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getvalor_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getvalor_bien_ice());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getvalor_servicio_ice());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.gettipocambio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.gettipotransaccionmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleasientocontablecajachica.getfecha());				
	}
	
	public void setFilaDatosExportarXmlDetalleAsientoContableCajaChica(DetalleAsientoContableCajaChica detalleasientocontablecajachica,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detalleasientocontablecajachica.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detalleasientocontablecajachica.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementmodulo_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementasientocontablecajachica_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDASIENTOCONTABLECAJACHICA);
		elementasientocontablecajachica_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getasientocontablecajachica_descripcion()));
		element.appendChild(elementasientocontablecajachica_descripcion);

		Element elementtipogastoempresa_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDTIPOGASTOEMPRESA);
		elementtipogastoempresa_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.gettipogastoempresa_descripcion()));
		element.appendChild(elementtipogastoempresa_descripcion);

		Element elementfecha_emision = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(detalleasientocontablecajachica.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementtransaccion_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDTRANSACCION);
		elementtransaccion_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.gettransaccion_descripcion()));
		element.appendChild(elementtransaccion_descripcion);

		Element elementfactura_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDFACTURA);
		elementfactura_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getfactura_descripcion()));
		element.appendChild(elementfactura_descripcion);

		Element elementes_proveedor = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.ESPROVEEDOR);
		elementes_proveedor.appendChild(document.createTextNode(detalleasientocontablecajachica.getes_proveedor().toString().trim()));
		element.appendChild(elementes_proveedor);

		Element elementasientocontable_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);

		Element elementdetalle = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.DETALLE);
		elementdetalle.appendChild(document.createTextNode(detalleasientocontablecajachica.getdetalle().trim()));
		element.appendChild(elementdetalle);

		Element elementvalor_bien_tarifa12 = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.VALORBIENTARIFA12);
		elementvalor_bien_tarifa12.appendChild(document.createTextNode(detalleasientocontablecajachica.getvalor_bien_tarifa12().toString().trim()));
		element.appendChild(elementvalor_bien_tarifa12);

		Element elementvalor_servicio_tarifa12 = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.VALORSERVICIOTARIFA12);
		elementvalor_servicio_tarifa12.appendChild(document.createTextNode(detalleasientocontablecajachica.getvalor_servicio_tarifa12().toString().trim()));
		element.appendChild(elementvalor_servicio_tarifa12);

		Element elementporcentaje_iva = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.PORCENTAJEIVA);
		elementporcentaje_iva.appendChild(document.createTextNode(detalleasientocontablecajachica.getporcentaje_iva().toString().trim()));
		element.appendChild(elementporcentaje_iva);

		Element elementvalor_bien_tarifa0 = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.VALORBIENTARIFA0);
		elementvalor_bien_tarifa0.appendChild(document.createTextNode(detalleasientocontablecajachica.getvalor_bien_tarifa0().toString().trim()));
		element.appendChild(elementvalor_bien_tarifa0);

		Element elementvalor_servicio_tarifa0 = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.VALORSERVICIOTARIFA0);
		elementvalor_servicio_tarifa0.appendChild(document.createTextNode(detalleasientocontablecajachica.getvalor_servicio_tarifa0().toString().trim()));
		element.appendChild(elementvalor_servicio_tarifa0);

		Element elementvalor_iva = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.VALORIVA);
		elementvalor_iva.appendChild(document.createTextNode(detalleasientocontablecajachica.getvalor_iva().toString().trim()));
		element.appendChild(elementvalor_iva);

		Element elementvalor_bien_ice = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.VALORBIENICE);
		elementvalor_bien_ice.appendChild(document.createTextNode(detalleasientocontablecajachica.getvalor_bien_ice().toString().trim()));
		element.appendChild(elementvalor_bien_ice);

		Element elementvalor_servicio_ice = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.VALORSERVICIOICE);
		elementvalor_servicio_ice.appendChild(document.createTextNode(detalleasientocontablecajachica.getvalor_servicio_ice().toString().trim()));
		element.appendChild(elementvalor_servicio_ice);

		Element elementcentrocosto_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementtipocambio_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);

		Element elementtipotransaccionmodulo_descripcion = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.IDTIPOTRANSACCIONMODULO);
		elementtipotransaccionmodulo_descripcion.appendChild(document.createTextNode(detalleasientocontablecajachica.gettipotransaccionmodulo_descripcion()));
		element.appendChild(elementtipotransaccionmodulo_descripcion);

		Element elementfecha = document.createElement(DetalleAsientoContableCajaChicaConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(detalleasientocontablecajachica.getfecha().toString().trim()));
		element.appendChild(elementfecha);
	}
	
	public void generarReporteGroupGenericoDetalleAsientoContableCajaChicasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados=new ArrayList<DetalleAsientoContableCajaChica>();
		
		detalleasientocontablecajachicasSeleccionados=this.getDetalleAsientoContableCajaChicasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetalleAsientoContableCajaChica(detalleasientocontablecajachicasSeleccionados);
		
		this.generarReporteDetalleAsientoContableCajaChicas("Todos",detalleasientocontablecajachicasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetalleAsientoContableCajaChica(ArrayList<DetalleAsientoContableCajaChica> detalleasientocontablecajachicasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetalleAsientoContableCajaChica detalleasientocontablecajachicaAux:detalleasientocontablecajachicasSeleccionados) {
				detalleasientocontablecajachicaAux.setsDetalleGeneralEntityReporte(detalleasientocontablecajachicaAux.toString());
			
				if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLECAJACHICA)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getasientocontablecajachica_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOGASTOEMPRESA)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.gettipogastoempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detalleasientocontablecajachicaAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.gettransaccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDFACTURA)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getfactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(detalleasientocontablecajachicaAux.getes_proveedor()));
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getasientocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getdetalle());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.gettipocambio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(detalleasientocontablecajachicaAux.gettipotransaccionmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleAsientoContableCajaChicaConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					detalleasientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detalleasientocontablecajachicaAux.getfecha()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetalleAsientoContableCajaChica(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=true;
				this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=true;
				this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=true;
			}
			
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarDetalleAsientoContableCajaChica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleAsientoContableCajaChica=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetalleAsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=true;
		} else {
			this.actualizarEstadoPanelsDetalleAsientoContableCajaChica(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetalleAsientoContableCajaChica=false;
			//this.isVisibilidadCeldaVerFormDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaDuplicarDetalleAsientoContableCajaChica=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;
		} else {
			this.isVisibilidadCeldaNuevoDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleAsientoContableCajaChica=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			if(!detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;												
			}
			
			this.jButtonCerrarDetalleAsientoContableCajaChica.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleAsientoContableCajaChica=false;
		}
		
		if(!this.permiteMantenimiento(this.detalleasientocontablecajachica)) {
			this.isVisibilidadCeldaActualizarDetalleAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarDetalleAsientoContableCajaChica=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleAsientoContableCajaChica() {
	}
	
	public void actualizarEstadoPanelsDetalleAsientoContableCajaChica(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosDetalleAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleAsientoContableCajaChica!=null) {
				this.jPanelPaginacionDetalleAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosDetalleAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleAsientoContableCajaChica!=null) {
				this.jPanelPaginacionDetalleAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosDetalleAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleAsientoContableCajaChica!=null) {
				this.jPanelPaginacionDetalleAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosDetalleAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleAsientoContableCajaChica!=null) {
				this.jPanelPaginacionDetalleAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosDetalleAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleAsientoContableCajaChica!=null) {
				this.jPanelPaginacionDetalleAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosDetalleAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleAsientoContableCajaChica!=null) {
				this.jPanelPaginacionDetalleAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionDetalleAsientoContableCajaChica.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosDetalleAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleAsientoContableCajaChica!=null) {
				this.jPanelPaginacionDetalleAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica!=null) {
					this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetalleAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetalleAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesDetalleAsientoContableCajaChica.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdAsientoContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdAsientoContable=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdAsientoContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdAsientoContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdAsientoContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdAsientoContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaMesNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaMesNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaAsientoContableCajaChica(Boolean isParaAsientoContableCajaChica){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableCajaChicaNegation=!isParaAsientoContableCajaChica;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaAsientoContableCajaChica;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoGastoEmpresa(Boolean isParaTipoGastoEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoGastoEmpresaNegation=!isParaTipoGastoEmpresa;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoGastoEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaTipoGastoEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoGastoEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaTipoGastoEmpresaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoGastoEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaTipoGastoEmpresa;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoGastoEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoGastoEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion(Boolean isParaTransaccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNegation=!isParaTransaccion;

			this.isVisibilidadFK_IdAsientoContable=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaTransaccion;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaFactura(Boolean isParaFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFacturaNegation=!isParaFactura;

			this.isVisibilidadFK_IdAsientoContable=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaFactura;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdAsientoContable=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoCambio;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTransaccionModulo(Boolean isParaTipoTransaccionModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTransaccionModuloNegation=!isParaTipoTransaccionModulo;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdAsientoContableCajaChica=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContableCajaChica) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdFactura=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdFacturaDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoGasto=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTipoGasto) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoTransaccionModulo;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);}
		}
		
	}
	
	
	
	

	public String registrarSesionDetalleAsientoContableCajaChicaParaBusquedaFacturas() throws Exception {
		Boolean isPaginaPopupFactura=false;

		try {

			if(detalleasientocontablecajachicaSessionBean==null) {
				detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(facturaSessionBean==null) {
				facturaSessionBean=new FacturaSessionBean();
			}

			facturaSessionBean.setsPathNavegacionActual(detalleasientocontablecajachicaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FacturaConstantesFunciones.SCLASSWEBTITULO);
			facturaSessionBean.setisPermiteRecargarInformacion(false);
			facturaSessionBean.setisPaginaPopup(true);
			isPaginaPopupFactura=facturaSessionBean.getisPaginaPopup();
			facturaSessionBean.setisPaginaPopup(false);
			facturaSessionBean.setEstaModoBusqueda(true);
			facturaSessionBean.setsFuncionBusquedaRapida("window.opener.detalleasientocontablecajachicaFuncionGeneral.setCombosCodigoDesdeBusquedaid_factura(TO_REPLACE);");
			facturaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFactura(true);
			facturaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFactura(DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
			//facturaSessionBean.setisBusquedaDesdeForeignKeySesionDetalleAsientoContableCajaChica(true);
			//facturaSessionBean.setlidDetalleAsientoContableCajaChicaActual(this.idDetalleAsientoContableCajaChicaActual);

			detalleasientocontablecajachicaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleAsientoContableCajaChica(true);
			detalleasientocontablecajachicaSessionBean.setlIdDetalleAsientoContableCajaChicaActualForeignKey(this.idDetalleAsientoContableCajaChicaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetalleAsientoContableCajaChicaParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(detalleasientocontablecajachicaSessionBean==null) {
				detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(detalleasientocontablecajachicaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.detalleasientocontablecajachicaFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionDetalleAsientoContableCajaChica(true);
			//asientocontableSessionBean.setlidDetalleAsientoContableCajaChicaActual(this.idDetalleAsientoContableCajaChicaActual);

			detalleasientocontablecajachicaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleAsientoContableCajaChica(true);
			detalleasientocontablecajachicaSessionBean.setlIdDetalleAsientoContableCajaChicaActualForeignKey(this.idDetalleAsientoContableCajaChicaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetalleAsientoContableCajaChicaParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(detalleasientocontablecajachicaSessionBean==null) {
				detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(detalleasientocontablecajachicaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.detalleasientocontablecajachicaFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleAsientoContableCajaChica(true);
			//centrocostoSessionBean.setlidDetalleAsientoContableCajaChicaActual(this.idDetalleAsientoContableCajaChicaActual);

			detalleasientocontablecajachicaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleAsientoContableCajaChica(true);
			detalleasientocontablecajachicaSessionBean.setlIdDetalleAsientoContableCajaChicaActualForeignKey(this.idDetalleAsientoContableCajaChicaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetalleAsientoContableCajaChicaParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(detalleasientocontablecajachicaSessionBean==null) {
				detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(detalleasientocontablecajachicaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.detalleasientocontablecajachicaFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionDetalleAsientoContableCajaChica(true);
			//tipocambioSessionBean.setlidDetalleAsientoContableCajaChicaActual(this.idDetalleAsientoContableCajaChicaActual);

			detalleasientocontablecajachicaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleAsientoContableCajaChica(true);
			detalleasientocontablecajachicaSessionBean.setlIdDetalleAsientoContableCajaChicaActualForeignKey(this.idDetalleAsientoContableCajaChicaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetalleAsientoContableCajaChicaSessionBean detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
		
		if(this.detalleasientocontablecajachicaSessionBean==null) {
			this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
		}
		
		this.detalleasientocontablecajachicaSessionBean.setsUltimaBusquedaDetalleAsientoContableCajaChica(this.getsAccionBusqueda());
		this.detalleasientocontablecajachicaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detalleasientocontablecajachicaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			detalleasientocontablecajachicaSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContableCajaChica")) {
			detalleasientocontablecajachicaSessionBean.setid_asiento_contable_caja_chica(this.getid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			detalleasientocontablecajachicaSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detalleasientocontablecajachicaSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detalleasientocontablecajachicaSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
			detalleasientocontablecajachicaSessionBean.setid_factura(this.getid_facturaFK_IdFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			detalleasientocontablecajachicaSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detalleasientocontablecajachicaSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detalleasientocontablecajachicaSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
			detalleasientocontablecajachicaSessionBean.setid_tipo_cambio(this.getid_tipo_cambioFK_IdTipoCambio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoGasto")) {
			detalleasientocontablecajachicaSessionBean.setid_tipo_gasto_empresa(this.getid_tipo_gasto_empresaFK_IdTipoGasto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
			detalleasientocontablecajachicaSessionBean.setid_tipo_transaccion_modulo(this.getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
			detalleasientocontablecajachicaSessionBean.setid_transaccion(this.getid_transaccionFK_IdTransaccion());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetalleAsientoContableCajaChicaSessionBean detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
		
		if(this.detalleasientocontablecajachicaSessionBean==null) {
			this.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
		}
		
		if(this.detalleasientocontablecajachicaSessionBean.getsUltimaBusquedaDetalleAsientoContableCajaChica()!=null&&!this.detalleasientocontablecajachicaSessionBean.getsUltimaBusquedaDetalleAsientoContableCajaChica().equals("")) {
			this.setsAccionBusqueda(detalleasientocontablecajachicaSessionBean.getsUltimaBusquedaDetalleAsientoContableCajaChica());
			this.setiNumeroPaginacion(detalleasientocontablecajachicaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detalleasientocontablecajachicaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(detalleasientocontablecajachicaSessionBean.getid_asiento_contable());
				detalleasientocontablecajachicaSessionBean.setid_asiento_contable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContableCajaChica")) {
				this.setid_asiento_contable_caja_chicaFK_IdAsientoContableCajaChica(detalleasientocontablecajachicaSessionBean.getid_asiento_contable_caja_chica());
				detalleasientocontablecajachicaSessionBean.setid_asiento_contable_caja_chica(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(detalleasientocontablecajachicaSessionBean.getid_centro_costo());
				detalleasientocontablecajachicaSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detalleasientocontablecajachicaSessionBean.getid_ejercicio());
				detalleasientocontablecajachicaSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detalleasientocontablecajachicaSessionBean.getid_empresa());
				detalleasientocontablecajachicaSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
				this.setid_facturaFK_IdFactura(detalleasientocontablecajachicaSessionBean.getid_factura());
				detalleasientocontablecajachicaSessionBean.setid_factura(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(detalleasientocontablecajachicaSessionBean.getid_modulo());
				detalleasientocontablecajachicaSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detalleasientocontablecajachicaSessionBean.getid_periodo());
				detalleasientocontablecajachicaSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detalleasientocontablecajachicaSessionBean.getid_sucursal());
				detalleasientocontablecajachicaSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
				this.setid_tipo_cambioFK_IdTipoCambio(detalleasientocontablecajachicaSessionBean.getid_tipo_cambio());
				detalleasientocontablecajachicaSessionBean.setid_tipo_cambio(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoGasto")) {
				this.setid_tipo_gasto_empresaFK_IdTipoGasto(detalleasientocontablecajachicaSessionBean.getid_tipo_gasto_empresa());
				detalleasientocontablecajachicaSessionBean.setid_tipo_gasto_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
				this.setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(detalleasientocontablecajachicaSessionBean.getid_tipo_transaccion_modulo());
				detalleasientocontablecajachicaSessionBean.setid_tipo_transaccion_modulo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
				this.setid_transaccionFK_IdTransaccion(detalleasientocontablecajachicaSessionBean.getid_transaccion());
				detalleasientocontablecajachicaSessionBean.setid_transaccion(-1L);
			}
		}
		
		this.detalleasientocontablecajachicaSessionBean.setsUltimaBusquedaDetalleAsientoContableCajaChica("");
		this.detalleasientocontablecajachicaSessionBean.setiNumeroPaginacion(DetalleAsientoContableCajaChicaConstantesFunciones.INUMEROPAGINACION);
		this.detalleasientocontablecajachicaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetalleAsientoContableCajaChica() {
		this.updateBorderResaltarBusquedasFormularioDetalleAsientoContableCajaChica();
		this.updateVisibilidadBusquedasFormularioDetalleAsientoContableCajaChica();
		this.updateHabilitarBusquedasFormularioDetalleAsientoContableCajaChica();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetalleAsientoContableCajaChica() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponents().length>0) {
	

		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdAsientoContableDetalleAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdAsientoContableDetalleAsientoContableCajaChica);
			}
		}

		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);
			}
		}

		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdCentroCostoDetalleAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdCentroCostoDetalleAsientoContableCajaChica);
			}
		}

		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdFacturaDetalleAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdFacturaDetalleAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdFacturaDetalleAsientoContableCajaChica);
			}
		}

		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoCambioDetalleAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoCambioDetalleAsientoContableCajaChica);
			}
		}

		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoGastoDetalleAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoGastoDetalleAsientoContableCajaChica);
			}
		}

		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);
			}
		}

		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTransaccionDetalleAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTransaccionDetalleAsientoContableCajaChica);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetalleAsientoContableCajaChica() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdAsientoContableDetalleAsientoContableCajaChica);
			if(!this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdAsientoContableDetalleAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);
			if(!this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdCentroCostoDetalleAsientoContableCajaChica);
			if(!this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdCentroCostoDetalleAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdFacturaDetalleAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdFacturaDetalleAsientoContableCajaChica);
			if(!this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdFacturaDetalleAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoCambioDetalleAsientoContableCajaChica);
			if(!this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoCambioDetalleAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoGastoDetalleAsientoContableCajaChica);
			if(!this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoGastoDetalleAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);
			if(!this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdTransaccionDetalleAsientoContableCajaChica);
			if(!this.detalleasientocontablecajachicaConstantesFunciones.mostrarFK_IdTransaccionDetalleAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetalleAsientoContableCajaChica() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdAsientoContableDetalleAsientoContableCajaChica);
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setEnabledAt(index,this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdAsientoContableDetalleAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setEnabledAt(index,this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdCentroCostoDetalleAsientoContableCajaChica);
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setEnabledAt(index,this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdCentroCostoDetalleAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdFacturaDetalleAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdFacturaDetalleAsientoContableCajaChica);
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setEnabledAt(index,this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdFacturaDetalleAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdTipoCambioDetalleAsientoContableCajaChica);
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setEnabledAt(index,this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdTipoCambioDetalleAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdTipoGastoDetalleAsientoContableCajaChica);
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setEnabledAt(index,this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdTipoGastoDetalleAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setEnabledAt(index,this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdTransaccionDetalleAsientoContableCajaChica);
				this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setEnabledAt(index,this.detalleasientocontablecajachicaConstantesFunciones.activarFK_IdTransaccionDetalleAsientoContableCajaChica);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetalleAsientoContableCajaChica(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdAsientoContableDetalleAsientoContableCajaChica);

			this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);

			this.detalleasientocontablecajachicaConstantesFunciones.setResaltarFK_IdAsientoContableDetalleAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdAsientoContableDetalleAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdAsientoContableCajaChica")) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);

			this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);

			this.detalleasientocontablecajachicaConstantesFunciones.setResaltarFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdAsientoContableCajaChicaDetalleAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleAsientoContableCajaChica);

			this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);

			this.detalleasientocontablecajachicaConstantesFunciones.setResaltarFK_IdCentroCostoDetalleAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdCentroCostoDetalleAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFactura")) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdFacturaDetalleAsientoContableCajaChica);

			this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);

			this.detalleasientocontablecajachicaConstantesFunciones.setResaltarFK_IdFacturaDetalleAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdFacturaDetalleAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoCambio")) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoCambioDetalleAsientoContableCajaChica);

			this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);

			this.detalleasientocontablecajachicaConstantesFunciones.setResaltarFK_IdTipoCambioDetalleAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoCambioDetalleAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoGasto")) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoGastoDetalleAsientoContableCajaChica);

			this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);

			this.detalleasientocontablecajachicaConstantesFunciones.setResaltarFK_IdTipoGastoDetalleAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoGastoDetalleAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTransaccionModulo")) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);

			this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);

			this.detalleasientocontablecajachicaConstantesFunciones.setResaltarFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoTransaccionModuloDetalleAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccion")) {
			index= this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTransaccionDetalleAsientoContableCajaChica);

			this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleAsientoContableCajaChica.getComponent(index);

			this.detalleasientocontablecajachicaConstantesFunciones.setResaltarFK_IdTransaccionDetalleAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarFK_IdTransaccionDetalleAsientoContableCajaChica);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetalleAsientoContableCajaChica.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetalleAsientoContableCajaChica() throws Exception {

		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetalleAsientoContableCajaChica();
		this.updateVisibilidadResaltarControlesFormularioDetalleAsientoContableCajaChica();
		this.updateHabilitarResaltarControlesFormularioDetalleAsientoContableCajaChica();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetalleAsientoContableCajaChica() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltaridDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltaridDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_empresaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_empresaDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_sucursalDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_sucursalDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_moduloDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_moduloDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_ejercicioDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_ejercicioDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_periodoDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_periodoDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_anioDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_anioDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_mesDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_mesDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_tipo_gasto_empresaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_tipo_gasto_empresaDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarfecha_emisionDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfecha_emisionDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarfecha_emisionDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_transaccionDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_transaccionDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_facturaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_facturaDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltares_proveedorDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxes_proveedorDetalleAsientoContableCajaChica.setBorderPainted(true);this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxes_proveedorDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltares_proveedorDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_asiento_contableDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_asiento_contableDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltardetalleDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextAreadetalleDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltardetalleDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_tarifa12DetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa12DetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_tarifa12DetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_tarifa12DetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa12DetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_tarifa12DetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarporcentaje_ivaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldporcentaje_ivaDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarporcentaje_ivaDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_tarifa0DetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa0DetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_tarifa0DetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_tarifa0DetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa0DetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_tarifa0DetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_ivaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_ivaDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_ivaDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_iceDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_iceDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_bien_iceDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_iceDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_iceDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarvalor_servicio_iceDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_centro_costoDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_centro_costoDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_tipo_cambioDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_tipo_cambioDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_tipo_transaccion_moduloDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarid_tipo_transaccion_moduloDetalleAsientoContableCajaChica);}
		if(this.detalleasientocontablecajachicaConstantesFunciones.resaltarfechaDetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfechaDetalleAsientoContableCajaChica.setBorder(this.detalleasientocontablecajachicaConstantesFunciones.resaltarfechaDetalleAsientoContableCajaChica);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetalleAsientoContableCajaChica() throws Exception {		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
	
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostraridDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelidDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostraridDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_empresaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_empresaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_empresaDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_sucursalDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_sucursalDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_sucursalDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_moduloDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_moduloDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_moduloDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_ejercicioDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_ejercicioDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_ejercicioDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_periodoDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_periodoDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_periodoDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_anioDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_anioDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_anioDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_mesDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_mesDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_mesDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_tipo_gasto_empresaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_tipo_gasto_empresaDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfecha_emisionDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarfecha_emisionDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelfecha_emisionDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarfecha_emisionDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_transaccionDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_transaccionDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_transaccionDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_facturaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_facturaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_facturaDetalleAsientoContableCajaChica);
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_facturaDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxes_proveedorDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrares_proveedorDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPaneles_proveedorDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrares_proveedorDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_asiento_contableDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_asiento_contableDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_asiento_contableDetalleAsientoContableCajaChica);
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_asiento_contableDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextAreadetalleDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrardetalleDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPaneldetalleDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrardetalleDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa12DetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_bien_tarifa12DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelvalor_bien_tarifa12DetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_bien_tarifa12DetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa12DetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_servicio_tarifa12DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelvalor_servicio_tarifa12DetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_servicio_tarifa12DetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldporcentaje_ivaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarporcentaje_ivaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelporcentaje_ivaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarporcentaje_ivaDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa0DetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_bien_tarifa0DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelvalor_bien_tarifa0DetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_bien_tarifa0DetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa0DetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_servicio_tarifa0DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelvalor_servicio_tarifa0DetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_servicio_tarifa0DetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_ivaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_ivaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelvalor_ivaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_ivaDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_iceDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_bien_iceDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelvalor_bien_iceDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_bien_iceDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_iceDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_servicio_iceDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelvalor_servicio_iceDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarvalor_servicio_iceDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_centro_costoDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_centro_costoDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_centro_costoDetalleAsientoContableCajaChica);
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_centro_costoDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_tipo_cambioDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_tipo_cambioDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_tipo_cambioDetalleAsientoContableCajaChica);
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_tipo_cambioDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_tipo_transaccion_moduloDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarid_tipo_transaccion_moduloDetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfechaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarfechaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jPanelfechaDetalleAsientoContableCajaChica.setVisible(this.detalleasientocontablecajachicaConstantesFunciones.mostrarfechaDetalleAsientoContableCajaChica);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetalleAsientoContableCajaChica() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica!=null) {
	
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jLabelidDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activaridDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_empresaDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_empresaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_sucursalDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_sucursalDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_moduloDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_moduloDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_ejercicioDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_ejercicioDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_periodoDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_periodoDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_anioDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_anioDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_mesDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_mesDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_asiento_contable_caja_chicaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_gasto_empresaDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_tipo_gasto_empresaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfecha_emisionDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarfecha_emisionDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_transaccionDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_transaccionDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_facturaDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_facturaDetalleAsientoContableCajaChica);
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_facturaDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_facturaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jCheckBoxes_proveedorDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activares_proveedorDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_asiento_contableDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_asiento_contableDetalleAsientoContableCajaChica);
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_asiento_contableDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_asiento_contableDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextAreadetalleDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activardetalleDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa12DetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_tarifa12DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa12DetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_tarifa12DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldporcentaje_ivaDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarporcentaje_ivaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_tarifa0DetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_tarifa0DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_tarifa0DetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_tarifa0DetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_ivaDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_ivaDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_bien_iceDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_bien_iceDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jTextFieldvalor_servicio_iceDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarvalor_servicio_iceDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_centro_costoDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_centro_costoDetalleAsientoContableCajaChica);
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_centro_costoDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_centro_costoDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_cambioDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_tipo_cambioDetalleAsientoContableCajaChica);
			this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jButtonid_tipo_cambioDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_tipo_cambioDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarid_tipo_transaccion_moduloDetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormDetalleAsientoContableCajaChica.jDateChooserfechaDetalleAsientoContableCajaChica.setEnabled(this.detalleasientocontablecajachicaConstantesFunciones.activarfechaDetalleAsientoContableCajaChica);
		}
	}
	
		
}