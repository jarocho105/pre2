/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.contabilidad.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.contabilidad.util.ParametroContaConstantesFunciones;
import com.bydan.erp.contabilidad.util.ParametroContaParameterReturnGeneral;
//import com.bydan.erp.contabilidad.util.ParametroContaParameterGeneral;
//import com.bydan.erp.contabilidad.presentation.report.source.ParametroContaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.contabilidad.resources.reportes.AuxiliarReportes;


import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.contabilidad.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.contabilidad.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ParametroContaBeanSwingJInternalFrame extends ParametroContaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ParametroContaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ParametroConta> parametrocontaValidator = new ClassValidator<ParametroConta>(ParametroConta.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ParametroConta parametroconta;	
	public ParametroConta parametrocontaAux;
	public ParametroConta parametrocontaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ParametroConta parametrocontaTotales;
	public Long idParametroContaActual;
	public Long iIdNuevoParametroConta=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboMonedaExtranjera="";

	public List<Moneda> monedaextranjerasForeignKey;

	public List<Moneda> getmonedaextranjerasForeignKey() {
		return monedaextranjerasForeignKey;
	}

	public void setmonedaextranjerasForeignKey(List<Moneda> monedaextranjerasForeignKey) {
		this.monedaextranjerasForeignKey = monedaextranjerasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaextranjeraForeignKey;

	public Moneda getmonedaextranjeraForeignKey() {
		return monedaextranjeraForeignKey;
	}

	public void setmonedaextranjeraForeignKey(Moneda monedaextranjeraForeignKey) {
		this.monedaextranjeraForeignKey = monedaextranjeraForeignKey;
	}

	public String sFinalQueryComboCuentaContableActivo="";

	public List<CuentaContable> cuentacontableactivosForeignKey;

	public List<CuentaContable> getcuentacontableactivosForeignKey() {
		return cuentacontableactivosForeignKey;
	}

	public void setcuentacontableactivosForeignKey(List<CuentaContable> cuentacontableactivosForeignKey) {
		this.cuentacontableactivosForeignKey = cuentacontableactivosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableactivoForeignKey;

	public CuentaContable getcuentacontableactivoForeignKey() {
		return cuentacontableactivoForeignKey;
	}

	public void setcuentacontableactivoForeignKey(CuentaContable cuentacontableactivoForeignKey) {
		this.cuentacontableactivoForeignKey = cuentacontableactivoForeignKey;
	}

	public String sFinalQueryComboCuentaContablePasivo="";

	public List<CuentaContable> cuentacontablepasivosForeignKey;

	public List<CuentaContable> getcuentacontablepasivosForeignKey() {
		return cuentacontablepasivosForeignKey;
	}

	public void setcuentacontablepasivosForeignKey(List<CuentaContable> cuentacontablepasivosForeignKey) {
		this.cuentacontablepasivosForeignKey = cuentacontablepasivosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablepasivoForeignKey;

	public CuentaContable getcuentacontablepasivoForeignKey() {
		return cuentacontablepasivoForeignKey;
	}

	public void setcuentacontablepasivoForeignKey(CuentaContable cuentacontablepasivoForeignKey) {
		this.cuentacontablepasivoForeignKey = cuentacontablepasivoForeignKey;
	}

	public String sFinalQueryComboCuentaContablePatrimonio="";

	public List<CuentaContable> cuentacontablepatrimoniosForeignKey;

	public List<CuentaContable> getcuentacontablepatrimoniosForeignKey() {
		return cuentacontablepatrimoniosForeignKey;
	}

	public void setcuentacontablepatrimoniosForeignKey(List<CuentaContable> cuentacontablepatrimoniosForeignKey) {
		this.cuentacontablepatrimoniosForeignKey = cuentacontablepatrimoniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablepatrimonioForeignKey;

	public CuentaContable getcuentacontablepatrimonioForeignKey() {
		return cuentacontablepatrimonioForeignKey;
	}

	public void setcuentacontablepatrimonioForeignKey(CuentaContable cuentacontablepatrimonioForeignKey) {
		this.cuentacontablepatrimonioForeignKey = cuentacontablepatrimonioForeignKey;
	}

	public String sFinalQueryComboCuentaContableIngreso="";

	public List<CuentaContable> cuentacontableingresosForeignKey;

	public List<CuentaContable> getcuentacontableingresosForeignKey() {
		return cuentacontableingresosForeignKey;
	}

	public void setcuentacontableingresosForeignKey(List<CuentaContable> cuentacontableingresosForeignKey) {
		this.cuentacontableingresosForeignKey = cuentacontableingresosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableingresoForeignKey;

	public CuentaContable getcuentacontableingresoForeignKey() {
		return cuentacontableingresoForeignKey;
	}

	public void setcuentacontableingresoForeignKey(CuentaContable cuentacontableingresoForeignKey) {
		this.cuentacontableingresoForeignKey = cuentacontableingresoForeignKey;
	}

	public String sFinalQueryComboCuentaContableEgreso="";

	public List<CuentaContable> cuentacontableegresosForeignKey;

	public List<CuentaContable> getcuentacontableegresosForeignKey() {
		return cuentacontableegresosForeignKey;
	}

	public void setcuentacontableegresosForeignKey(List<CuentaContable> cuentacontableegresosForeignKey) {
		this.cuentacontableegresosForeignKey = cuentacontableegresosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableegresoForeignKey;

	public CuentaContable getcuentacontableegresoForeignKey() {
		return cuentacontableegresoForeignKey;
	}

	public void setcuentacontableegresoForeignKey(CuentaContable cuentacontableegresoForeignKey) {
		this.cuentacontableegresoForeignKey = cuentacontableegresoForeignKey;
	}

	public String sFinalQueryComboCuentaContableResumen="";

	public List<CuentaContable> cuentacontableresumensForeignKey;

	public List<CuentaContable> getcuentacontableresumensForeignKey() {
		return cuentacontableresumensForeignKey;
	}

	public void setcuentacontableresumensForeignKey(List<CuentaContable> cuentacontableresumensForeignKey) {
		this.cuentacontableresumensForeignKey = cuentacontableresumensForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableresumenForeignKey;

	public CuentaContable getcuentacontableresumenForeignKey() {
		return cuentacontableresumenForeignKey;
	}

	public void setcuentacontableresumenForeignKey(CuentaContable cuentacontableresumenForeignKey) {
		this.cuentacontableresumenForeignKey = cuentacontableresumenForeignKey;
	}

	public String sFinalQueryComboCuentaContableDeudor="";

	public List<CuentaContable> cuentacontabledeudorsForeignKey;

	public List<CuentaContable> getcuentacontabledeudorsForeignKey() {
		return cuentacontabledeudorsForeignKey;
	}

	public void setcuentacontabledeudorsForeignKey(List<CuentaContable> cuentacontabledeudorsForeignKey) {
		this.cuentacontabledeudorsForeignKey = cuentacontabledeudorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontabledeudorForeignKey;

	public CuentaContable getcuentacontabledeudorForeignKey() {
		return cuentacontabledeudorForeignKey;
	}

	public void setcuentacontabledeudorForeignKey(CuentaContable cuentacontabledeudorForeignKey) {
		this.cuentacontabledeudorForeignKey = cuentacontabledeudorForeignKey;
	}

	public String sFinalQueryComboCuentaContableAcreedor="";

	public List<CuentaContable> cuentacontableacreedorsForeignKey;

	public List<CuentaContable> getcuentacontableacreedorsForeignKey() {
		return cuentacontableacreedorsForeignKey;
	}

	public void setcuentacontableacreedorsForeignKey(List<CuentaContable> cuentacontableacreedorsForeignKey) {
		this.cuentacontableacreedorsForeignKey = cuentacontableacreedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableacreedorForeignKey;

	public CuentaContable getcuentacontableacreedorForeignKey() {
		return cuentacontableacreedorForeignKey;
	}

	public void setcuentacontableacreedorForeignKey(CuentaContable cuentacontableacreedorForeignKey) {
		this.cuentacontableacreedorForeignKey = cuentacontableacreedorForeignKey;
	}

	public String sFinalQueryComboCuentaContableIngreso1="";

	public List<CuentaContable> cuentacontableingreso1sForeignKey;

	public List<CuentaContable> getcuentacontableingreso1sForeignKey() {
		return cuentacontableingreso1sForeignKey;
	}

	public void setcuentacontableingreso1sForeignKey(List<CuentaContable> cuentacontableingreso1sForeignKey) {
		this.cuentacontableingreso1sForeignKey = cuentacontableingreso1sForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableingreso1ForeignKey;

	public CuentaContable getcuentacontableingreso1ForeignKey() {
		return cuentacontableingreso1ForeignKey;
	}

	public void setcuentacontableingreso1ForeignKey(CuentaContable cuentacontableingreso1ForeignKey) {
		this.cuentacontableingreso1ForeignKey = cuentacontableingreso1ForeignKey;
	}

	public String sFinalQueryComboCuentaContableIngreso2="";

	public List<CuentaContable> cuentacontableingreso2sForeignKey;

	public List<CuentaContable> getcuentacontableingreso2sForeignKey() {
		return cuentacontableingreso2sForeignKey;
	}

	public void setcuentacontableingreso2sForeignKey(List<CuentaContable> cuentacontableingreso2sForeignKey) {
		this.cuentacontableingreso2sForeignKey = cuentacontableingreso2sForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableingreso2ForeignKey;

	public CuentaContable getcuentacontableingreso2ForeignKey() {
		return cuentacontableingreso2ForeignKey;
	}

	public void setcuentacontableingreso2ForeignKey(CuentaContable cuentacontableingreso2ForeignKey) {
		this.cuentacontableingreso2ForeignKey = cuentacontableingreso2ForeignKey;
	}

	public String sFinalQueryComboCuentaContableIngreso3="";

	public List<CuentaContable> cuentacontableingreso3sForeignKey;

	public List<CuentaContable> getcuentacontableingreso3sForeignKey() {
		return cuentacontableingreso3sForeignKey;
	}

	public void setcuentacontableingreso3sForeignKey(List<CuentaContable> cuentacontableingreso3sForeignKey) {
		this.cuentacontableingreso3sForeignKey = cuentacontableingreso3sForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableingreso3ForeignKey;

	public CuentaContable getcuentacontableingreso3ForeignKey() {
		return cuentacontableingreso3ForeignKey;
	}

	public void setcuentacontableingreso3ForeignKey(CuentaContable cuentacontableingreso3ForeignKey) {
		this.cuentacontableingreso3ForeignKey = cuentacontableingreso3ForeignKey;
	}

	public String sFinalQueryComboCuentaContableEgreso1="";

	public List<CuentaContable> cuentacontableegreso1sForeignKey;

	public List<CuentaContable> getcuentacontableegreso1sForeignKey() {
		return cuentacontableegreso1sForeignKey;
	}

	public void setcuentacontableegreso1sForeignKey(List<CuentaContable> cuentacontableegreso1sForeignKey) {
		this.cuentacontableegreso1sForeignKey = cuentacontableegreso1sForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableegreso1ForeignKey;

	public CuentaContable getcuentacontableegreso1ForeignKey() {
		return cuentacontableegreso1ForeignKey;
	}

	public void setcuentacontableegreso1ForeignKey(CuentaContable cuentacontableegreso1ForeignKey) {
		this.cuentacontableegreso1ForeignKey = cuentacontableegreso1ForeignKey;
	}

	public String sFinalQueryComboCuentaContableEgreso2="";

	public List<CuentaContable> cuentacontableegreso2sForeignKey;

	public List<CuentaContable> getcuentacontableegreso2sForeignKey() {
		return cuentacontableegreso2sForeignKey;
	}

	public void setcuentacontableegreso2sForeignKey(List<CuentaContable> cuentacontableegreso2sForeignKey) {
		this.cuentacontableegreso2sForeignKey = cuentacontableegreso2sForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableegreso2ForeignKey;

	public CuentaContable getcuentacontableegreso2ForeignKey() {
		return cuentacontableegreso2ForeignKey;
	}

	public void setcuentacontableegreso2ForeignKey(CuentaContable cuentacontableegreso2ForeignKey) {
		this.cuentacontableegreso2ForeignKey = cuentacontableegreso2ForeignKey;
	}

	public String sFinalQueryComboCuentaContableEgreso3="";

	public List<CuentaContable> cuentacontableegreso3sForeignKey;

	public List<CuentaContable> getcuentacontableegreso3sForeignKey() {
		return cuentacontableegreso3sForeignKey;
	}

	public void setcuentacontableegreso3sForeignKey(List<CuentaContable> cuentacontableegreso3sForeignKey) {
		this.cuentacontableegreso3sForeignKey = cuentacontableegreso3sForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableegreso3ForeignKey;

	public CuentaContable getcuentacontableegreso3ForeignKey() {
		return cuentacontableegreso3ForeignKey;
	}

	public void setcuentacontableegreso3ForeignKey(CuentaContable cuentacontableegreso3ForeignKey) {
		this.cuentacontableegreso3ForeignKey = cuentacontableegreso3ForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCuentaContableActivoActual=0L;

	public Long getidCuentaContableActivoActual() {
		return idCuentaContableActivoActual;
	}

	public void setidCuentaContableActivoActual(Long idCuentaContableActivoActual) {
		this.idCuentaContableActivoActual= idCuentaContableActivoActual;
	}
	public Long idCuentaContablePasivoActual=0L;

	public Long getidCuentaContablePasivoActual() {
		return idCuentaContablePasivoActual;
	}

	public void setidCuentaContablePasivoActual(Long idCuentaContablePasivoActual) {
		this.idCuentaContablePasivoActual= idCuentaContablePasivoActual;
	}
	public Long idCuentaContablePatrimonioActual=0L;

	public Long getidCuentaContablePatrimonioActual() {
		return idCuentaContablePatrimonioActual;
	}

	public void setidCuentaContablePatrimonioActual(Long idCuentaContablePatrimonioActual) {
		this.idCuentaContablePatrimonioActual= idCuentaContablePatrimonioActual;
	}
	public Long idCuentaContableIngresoActual=0L;

	public Long getidCuentaContableIngresoActual() {
		return idCuentaContableIngresoActual;
	}

	public void setidCuentaContableIngresoActual(Long idCuentaContableIngresoActual) {
		this.idCuentaContableIngresoActual= idCuentaContableIngresoActual;
	}
	public Long idCuentaContableEgresoActual=0L;

	public Long getidCuentaContableEgresoActual() {
		return idCuentaContableEgresoActual;
	}

	public void setidCuentaContableEgresoActual(Long idCuentaContableEgresoActual) {
		this.idCuentaContableEgresoActual= idCuentaContableEgresoActual;
	}
	public Long idCuentaContableResumenActual=0L;

	public Long getidCuentaContableResumenActual() {
		return idCuentaContableResumenActual;
	}

	public void setidCuentaContableResumenActual(Long idCuentaContableResumenActual) {
		this.idCuentaContableResumenActual= idCuentaContableResumenActual;
	}
	public Long idCuentaContableDeudorActual=0L;

	public Long getidCuentaContableDeudorActual() {
		return idCuentaContableDeudorActual;
	}

	public void setidCuentaContableDeudorActual(Long idCuentaContableDeudorActual) {
		this.idCuentaContableDeudorActual= idCuentaContableDeudorActual;
	}
	public Long idCuentaContableAcreedorActual=0L;

	public Long getidCuentaContableAcreedorActual() {
		return idCuentaContableAcreedorActual;
	}

	public void setidCuentaContableAcreedorActual(Long idCuentaContableAcreedorActual) {
		this.idCuentaContableAcreedorActual= idCuentaContableAcreedorActual;
	}
	public Long idCuentaContableIngreso1Actual=0L;

	public Long getidCuentaContableIngreso1Actual() {
		return idCuentaContableIngreso1Actual;
	}

	public void setidCuentaContableIngreso1Actual(Long idCuentaContableIngreso1Actual) {
		this.idCuentaContableIngreso1Actual= idCuentaContableIngreso1Actual;
	}
	public Long idCuentaContableIngreso2Actual=0L;

	public Long getidCuentaContableIngreso2Actual() {
		return idCuentaContableIngreso2Actual;
	}

	public void setidCuentaContableIngreso2Actual(Long idCuentaContableIngreso2Actual) {
		this.idCuentaContableIngreso2Actual= idCuentaContableIngreso2Actual;
	}
	public Long idCuentaContableIngreso3Actual=0L;

	public Long getidCuentaContableIngreso3Actual() {
		return idCuentaContableIngreso3Actual;
	}

	public void setidCuentaContableIngreso3Actual(Long idCuentaContableIngreso3Actual) {
		this.idCuentaContableIngreso3Actual= idCuentaContableIngreso3Actual;
	}
	public Long idCuentaContableEgreso1Actual=0L;

	public Long getidCuentaContableEgreso1Actual() {
		return idCuentaContableEgreso1Actual;
	}

	public void setidCuentaContableEgreso1Actual(Long idCuentaContableEgreso1Actual) {
		this.idCuentaContableEgreso1Actual= idCuentaContableEgreso1Actual;
	}
	public Long idCuentaContableEgreso2Actual=0L;

	public Long getidCuentaContableEgreso2Actual() {
		return idCuentaContableEgreso2Actual;
	}

	public void setidCuentaContableEgreso2Actual(Long idCuentaContableEgreso2Actual) {
		this.idCuentaContableEgreso2Actual= idCuentaContableEgreso2Actual;
	}
	public Long idCuentaContableEgreso3Actual=0L;

	public Long getidCuentaContableEgreso3Actual() {
		return idCuentaContableEgreso3Actual;
	}

	public void setidCuentaContableEgreso3Actual(Long idCuentaContableEgreso3Actual) {
		this.idCuentaContableEgreso3Actual= idCuentaContableEgreso3Actual;
	}
	
	

	public Boolean isTienePermisosParametroContaDetalle=false;

	public Boolean getIsTienePermisosParametroContaDetalle() {
		return isTienePermisosParametroContaDetalle;
	}

	public void setIsTienePermisosParametroContaDetalle(Boolean isTienePermisosParametroContaDetalle) {
		this.isTienePermisosParametroContaDetalle= isTienePermisosParametroContaDetalle;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoParametroConta;
	public Boolean isPermisoNuevoParametroConta;
	public Boolean isPermisoActualizarParametroConta;
	public Boolean isPermisoActualizarOriginalParametroConta;
	public Boolean isPermisoEliminarParametroConta;
	public Boolean isPermisoGuardarCambiosParametroConta;
	public Boolean isPermisoConsultaParametroConta;
	public Boolean isPermisoBusquedaParametroConta;
	public Boolean isPermisoReporteParametroConta;
	public Boolean isPermisoPaginacionMedioParametroConta;
	public Boolean isPermisoPaginacionAltoParametroConta;
	public Boolean isPermisoPaginacionTodoParametroConta;
	public Boolean isPermisoCopiarParametroConta;
	public Boolean isPermisoVerFormParametroConta;
	public Boolean isPermisoDuplicarParametroConta;
	public Boolean isPermisoOrdenParametroConta;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ParametroContaParameterReturnGeneral parametrocontaReturnGeneral;
	public ParametroContaParameterReturnGeneral parametrocontaParameterGeneral;
	
	

	public ParametroContaDetalleLogic parametrocontadetalleLogic=null;

	public ParametroContaDetalleLogic getParametroContaDetalleLogic() {
		return parametrocontadetalleLogic;
	}

	public void setParametroContaDetalleLogic(ParametroContaDetalleLogic parametrocontadetalleLogic) {
		this.parametrocontadetalleLogic = parametrocontadetalleLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoParametroConta=false;
	public Boolean esParaAccionDesdeFormularioParametroConta=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ParametroContaSessionBeanAdditional parametrocontaSessionBeanAdditional=null;
	
	public ParametroContaSessionBeanAdditional getParametroContaSessionBeanAdditional() {
		return this.parametrocontaSessionBeanAdditional;
	}
	
	public void setParametroContaSessionBeanAdditional(ParametroContaSessionBeanAdditional parametrocontaSessionBeanAdditional) {
		try {
			this.parametrocontaSessionBeanAdditional=parametrocontaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ParametroContaBeanSwingJInternalFrameAdditional parametrocontaBeanSwingJInternalFrameAdditional=null;
	//public class ParametroContaBeanSwingJInternalFrame
	
	public ParametroContaBeanSwingJInternalFrameAdditional getParametroContaBeanSwingJInternalFrameAdditional() {
		return this.parametrocontaBeanSwingJInternalFrameAdditional;
	}
	
	public void setParametroContaBeanSwingJInternalFrameAdditional(ParametroContaBeanSwingJInternalFrameAdditional parametrocontaBeanSwingJInternalFrameAdditional) {
		try {
			this.parametrocontaBeanSwingJInternalFrameAdditional=parametrocontaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ParametroContaLogic parametrocontaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ParametroConta parametrocontaBean;
	public ParametroContaConstantesFunciones parametrocontaConstantesFunciones;
	//public ParametroContaParameterReturnGeneral parametrocontaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public MonedaLogic monedaLogic;
	public MonedaLogic monedaextranjeraLogic;
	public CuentaContableLogic cuentacontableactivoLogic;
	public CuentaContableLogic cuentacontablepasivoLogic;
	public CuentaContableLogic cuentacontablepatrimonioLogic;
	public CuentaContableLogic cuentacontableingresoLogic;
	public CuentaContableLogic cuentacontableegresoLogic;
	public CuentaContableLogic cuentacontableresumenLogic;
	public CuentaContableLogic cuentacontabledeudorLogic;
	public CuentaContableLogic cuentacontableacreedorLogic;
	public CuentaContableLogic cuentacontableingreso1Logic;
	public CuentaContableLogic cuentacontableingreso2Logic;
	public CuentaContableLogic cuentacontableingreso3Logic;
	public CuentaContableLogic cuentacontableegreso1Logic;
	public CuentaContableLogic cuentacontableegreso2Logic;
	public CuentaContableLogic cuentacontableegreso3Logic;
	
	//PARAMETROS
	
	
	//public List<ParametroConta> parametrocontas;	
	//public List<ParametroConta> parametrocontasEliminados;
	//public List<ParametroConta> parametrocontasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoParametroConta=false;
	public Boolean isVisibilidadCeldaDuplicarParametroConta=true;
	public Boolean isVisibilidadCeldaCopiarParametroConta=true;
	public Boolean isVisibilidadCeldaVerFormParametroConta=true;
	public Boolean isVisibilidadCeldaOrdenParametroConta=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesParametroConta=false;
	public Boolean isVisibilidadCeldaModificarParametroConta=false;
	public Boolean isVisibilidadCeldaActualizarParametroConta=false;
	public Boolean isVisibilidadCeldaEliminarParametroConta=false;
	public Boolean isVisibilidadCeldaCancelarParametroConta=false;
	public Boolean isVisibilidadCeldaGuardarParametroConta=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosParametroConta=false;	
	
	
	public Boolean isVisibilidadFK_IdCuentaContableAcreedor=false;
	public Boolean isVisibilidadFK_IdCuentaContableActivo=false;
	public Boolean isVisibilidadFK_IdCuentaContableDeudor=false;
	public Boolean isVisibilidadFK_IdCuentaContableEgreso=false;
	public Boolean isVisibilidadFK_IdCuentaContableEgreso1=false;
	public Boolean isVisibilidadFK_IdCuentaContableEgreso2=false;
	public Boolean isVisibilidadFK_IdCuentaContableEgreso3=false;
	public Boolean isVisibilidadFK_IdCuentaContableIngreso=false;
	public Boolean isVisibilidadFK_IdCuentaContableIngreso1=false;
	public Boolean isVisibilidadFK_IdCuentaContableIngreso2=false;
	public Boolean isVisibilidadFK_IdCuentaContableIngreso3=false;
	public Boolean isVisibilidadFK_IdCuentaContablePasivo=false;
	public Boolean isVisibilidadFK_IdCuentaContablePatrimonio=false;
	public Boolean isVisibilidadFK_IdCuentaContableResumen=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdMonedaExtranjera=false;
	
	public Long getiIdNuevoParametroConta() {
		return this.iIdNuevoParametroConta;
	}

	public void setiIdNuevoParametroConta(Long iIdNuevoParametroConta) {
		this.iIdNuevoParametroConta = iIdNuevoParametroConta;
	}
	
	public Long getidParametroContaActual() {
		return this.idParametroContaActual;
	}

	public void setidParametroContaActual(Long idParametroContaActual) {
		this.idParametroContaActual = idParametroContaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ParametroConta getparametroconta() {
		return this.parametroconta;
	}

	public void setparametroconta(ParametroConta parametroconta) {
		this.parametroconta = parametroconta;
	}
	
	public ParametroConta getparametrocontaAux() {
		return this.parametrocontaAux;
	}

	public void setparametrocontaAux(ParametroConta parametrocontaAux) {
		this.parametrocontaAux = parametrocontaAux;
	}				
	
	public ParametroConta getparametrocontaAnterior() {
		return this.parametrocontaAnterior;
	}

	public void setparametrocontaAnterior(ParametroConta parametrocontaAnterior) {
		this.parametrocontaAnterior = parametrocontaAnterior;
	}	
	
	public ParametroConta getparametrocontaTotales() {
		return this.parametrocontaTotales;
	}

	public void setparametrocontaTotales(ParametroConta parametrocontaTotales) {
		this.parametrocontaTotales = parametrocontaTotales;
	}	
	
	public ParametroConta getparametrocontaBean() {
		return this.parametrocontaBean;
	}

	public void setparametrocontaBean(ParametroConta parametrocontaBean) {
		this.parametrocontaBean = parametrocontaBean;
	}	
	
	public ParametroContaParameterReturnGeneral getparametrocontaReturnGeneral() {
		return this.parametrocontaReturnGeneral;
	}

	public void setparametrocontaReturnGeneral(ParametroContaParameterReturnGeneral parametrocontaReturnGeneral) {
		this.parametrocontaReturnGeneral = parametrocontaReturnGeneral;
	}	
	
	
	public Long id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor=-1L;

	public Long getid_cuenta_contable_acreedorFK_IdCuentaContableAcreedor() {
		return this.id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor;
	}

	public void setid_cuenta_contable_acreedorFK_IdCuentaContableAcreedor(Long id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor) {
		this.id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor = id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor;
	}

	public Long id_cuenta_contable_activoFK_IdCuentaContableActivo=-1L;

	public Long getid_cuenta_contable_activoFK_IdCuentaContableActivo() {
		return this.id_cuenta_contable_activoFK_IdCuentaContableActivo;
	}

	public void setid_cuenta_contable_activoFK_IdCuentaContableActivo(Long id_cuenta_contable_activoFK_IdCuentaContableActivo) {
		this.id_cuenta_contable_activoFK_IdCuentaContableActivo = id_cuenta_contable_activoFK_IdCuentaContableActivo;
	}

	public Long id_cuenta_contable_deudorFK_IdCuentaContableDeudor=-1L;

	public Long getid_cuenta_contable_deudorFK_IdCuentaContableDeudor() {
		return this.id_cuenta_contable_deudorFK_IdCuentaContableDeudor;
	}

	public void setid_cuenta_contable_deudorFK_IdCuentaContableDeudor(Long id_cuenta_contable_deudorFK_IdCuentaContableDeudor) {
		this.id_cuenta_contable_deudorFK_IdCuentaContableDeudor = id_cuenta_contable_deudorFK_IdCuentaContableDeudor;
	}

	public Long id_cuenta_contable_egresoFK_IdCuentaContableEgreso=-1L;

	public Long getid_cuenta_contable_egresoFK_IdCuentaContableEgreso() {
		return this.id_cuenta_contable_egresoFK_IdCuentaContableEgreso;
	}

	public void setid_cuenta_contable_egresoFK_IdCuentaContableEgreso(Long id_cuenta_contable_egresoFK_IdCuentaContableEgreso) {
		this.id_cuenta_contable_egresoFK_IdCuentaContableEgreso = id_cuenta_contable_egresoFK_IdCuentaContableEgreso;
	}

	public Long id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1=null;

	public Long getid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1() {
		return this.id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1;
	}

	public void setid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1(Long id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1) {
		this.id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1 = id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1;
	}

	public Long id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2=null;

	public Long getid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2() {
		return this.id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2;
	}

	public void setid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2(Long id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2) {
		this.id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2 = id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2;
	}

	public Long id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3=null;

	public Long getid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3() {
		return this.id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3;
	}

	public void setid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3(Long id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3) {
		this.id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3 = id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3;
	}

	public Long id_cuenta_contable_ingresoFK_IdCuentaContableIngreso=-1L;

	public Long getid_cuenta_contable_ingresoFK_IdCuentaContableIngreso() {
		return this.id_cuenta_contable_ingresoFK_IdCuentaContableIngreso;
	}

	public void setid_cuenta_contable_ingresoFK_IdCuentaContableIngreso(Long id_cuenta_contable_ingresoFK_IdCuentaContableIngreso) {
		this.id_cuenta_contable_ingresoFK_IdCuentaContableIngreso = id_cuenta_contable_ingresoFK_IdCuentaContableIngreso;
	}

	public Long id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1=null;

	public Long getid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1() {
		return this.id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1;
	}

	public void setid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1(Long id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1) {
		this.id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1 = id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1;
	}

	public Long id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2=null;

	public Long getid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2() {
		return this.id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2;
	}

	public void setid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2(Long id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2) {
		this.id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2 = id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2;
	}

	public Long id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3=null;

	public Long getid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3() {
		return this.id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3;
	}

	public void setid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3(Long id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3) {
		this.id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3 = id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3;
	}

	public Long id_cuenta_contable_pasivoFK_IdCuentaContablePasivo=-1L;

	public Long getid_cuenta_contable_pasivoFK_IdCuentaContablePasivo() {
		return this.id_cuenta_contable_pasivoFK_IdCuentaContablePasivo;
	}

	public void setid_cuenta_contable_pasivoFK_IdCuentaContablePasivo(Long id_cuenta_contable_pasivoFK_IdCuentaContablePasivo) {
		this.id_cuenta_contable_pasivoFK_IdCuentaContablePasivo = id_cuenta_contable_pasivoFK_IdCuentaContablePasivo;
	}

	public Long id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio=-1L;

	public Long getid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio() {
		return this.id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio;
	}

	public void setid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio(Long id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio) {
		this.id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio = id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio;
	}

	public Long id_cuenta_contable_resumenFK_IdCuentaContableResumen=-1L;

	public Long getid_cuenta_contable_resumenFK_IdCuentaContableResumen() {
		return this.id_cuenta_contable_resumenFK_IdCuentaContableResumen;
	}

	public void setid_cuenta_contable_resumenFK_IdCuentaContableResumen(Long id_cuenta_contable_resumenFK_IdCuentaContableResumen) {
		this.id_cuenta_contable_resumenFK_IdCuentaContableResumen = id_cuenta_contable_resumenFK_IdCuentaContableResumen;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_moneda_extranjeraFK_IdMonedaExtranjera=-1L;

	public Long getid_moneda_extranjeraFK_IdMonedaExtranjera() {
		return this.id_moneda_extranjeraFK_IdMonedaExtranjera;
	}

	public void setid_moneda_extranjeraFK_IdMonedaExtranjera(Long id_moneda_extranjeraFK_IdMonedaExtranjera) {
		this.id_moneda_extranjeraFK_IdMonedaExtranjera = id_moneda_extranjeraFK_IdMonedaExtranjera;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ParametroContaLogic getParametroContaLogic()	{		
		return parametrocontaLogic;
	}

	public void setParametroContaLogic(ParametroContaLogic parametrocontaLogic) {
		this.parametrocontaLogic = parametrocontaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoParametroConta() {
		return isEsNuevoParametroConta;
	}

	public void setIsEsNuevoParametroConta(Boolean isEsNuevoParametroConta) {
		this.isEsNuevoParametroConta = isEsNuevoParametroConta;
	}

	public Boolean getEsParaAccionDesdeFormularioParametroConta() {
		return esParaAccionDesdeFormularioParametroConta;
	}
	
	public void setEsParaAccionDesdeFormularioParametroConta(Boolean esParaAccionDesdeFormularioParametroConta) {
		this.esParaAccionDesdeFormularioParametroConta = esParaAccionDesdeFormularioParametroConta;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrocontaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(parametrocontaSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedaExtranjerasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedaextranjerasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionMonedaExtranjera()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaextranjeraLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedaextranjerasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMonedaExtranjera(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(parametrocontaSessionBean.getlidMonedaExtranjeraActual());
					this.monedaextranjerasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableActivosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableactivosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableActivo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableactivoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableactivosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableActivo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableActivoActual());
					this.cuentacontableactivosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablePasivosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablepasivosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContablePasivo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablepasivoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablepasivosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContablePasivo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContablePasivoActual());
					this.cuentacontablepasivosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablePatrimoniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablepatrimoniosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContablePatrimonio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablepatrimonioLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablepatrimoniosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContablePatrimonio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContablePatrimonioActual());
					this.cuentacontablepatrimoniosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIngresosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableingresosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableingresoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableingresosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIngreso(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableIngresoActual());
					this.cuentacontableingresosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableEgresosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableegresosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableegresoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableegresosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableEgreso(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableEgresoActual());
					this.cuentacontableegresosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableResumensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableresumensForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableResumen()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableresumenLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableresumensForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableResumen(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableResumenActual());
					this.cuentacontableresumensForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableDeudorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontabledeudorsForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDeudor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontabledeudorLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontabledeudorsForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableDeudor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableDeudorActual());
					this.cuentacontabledeudorsForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableAcreedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableacreedorsForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableAcreedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableacreedorLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableacreedorsForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableAcreedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableAcreedorActual());
					this.cuentacontableacreedorsForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIngreso1sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableingreso1sForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContable cuentacontableingreso1Nulo = new CuentaContable();

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso1()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableingreso1Logic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableingreso1sForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentacontableingreso1sForeignKey.add(0, cuentacontableingreso1Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIngreso1(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableIngreso1Actual());
					this.cuentacontableingreso1sForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIngreso2sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableingreso2sForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContable cuentacontableingreso2Nulo = new CuentaContable();

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso2()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableingreso2Logic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableingreso2sForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentacontableingreso2sForeignKey.add(0, cuentacontableingreso2Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIngreso2(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableIngreso2Actual());
					this.cuentacontableingreso2sForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIngreso3sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableingreso3sForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContable cuentacontableingreso3Nulo = new CuentaContable();

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso3()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableingreso3Logic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableingreso3sForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentacontableingreso3sForeignKey.add(0, cuentacontableingreso3Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIngreso3(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableIngreso3Actual());
					this.cuentacontableingreso3sForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableEgreso1sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableegreso1sForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContable cuentacontableegreso1Nulo = new CuentaContable();

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso1()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableegreso1Logic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableegreso1sForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentacontableegreso1sForeignKey.add(0, cuentacontableegreso1Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableEgreso1(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableEgreso1Actual());
					this.cuentacontableegreso1sForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableEgreso2sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableegreso2sForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContable cuentacontableegreso2Nulo = new CuentaContable();

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso2()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableegreso2Logic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableegreso2sForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentacontableegreso2sForeignKey.add(0, cuentacontableegreso2Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableEgreso2(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableEgreso2Actual());
					this.cuentacontableegreso2sForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableEgreso3sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableegreso3sForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContable cuentacontableegreso3Nulo = new CuentaContable();

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso3()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableegreso3Logic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableegreso3sForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentacontableegreso3sForeignKey.add(0, cuentacontableegreso3Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableEgreso3(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocontaSessionBean.getlidCuentaContableEgreso3Actual());
					this.cuentacontableegreso3sForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaParametroConta.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaParametroContaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaParametroContaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaParametroContaGenerico!=null && jComboBoxid_empresaParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_empresaParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaParametroConta.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaParametroContaGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaParametroContaGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaParametroContaGenerico!=null && jComboBoxid_monedaParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_monedaParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaExtranjeraForeignKey(Long idMonedaExtranjeraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaextranjeraTemp=null;

			for(Moneda monedaextranjeraAux:monedaextranjerasForeignKey) {
				if(monedaextranjeraAux.getId()!=null && monedaextranjeraAux.getId().equals(idMonedaExtranjeraSeleccionado)) {
					monedaextranjeraTemp=monedaextranjeraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaextranjeraTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setMonedaExtranjera(monedaextranjeraTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.setSelectedItem(monedaextranjeraTemp);
					}
				} else {
					//jComboBoxid_moneda_extranjeraParametroConta.setSelectedItem(monedaextranjeraTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdMonedaExtranjera") || sFormularioTipoBusqueda.equals("Todos")){
					if(monedaextranjeraTemp!=null && jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta!=null) {
						jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.setSelectedItem(monedaextranjeraTemp);
					} else {
						if(jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta!=null) {
							//jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.setSelectedItem(monedaextranjeraTemp);
							if(jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.getItemCount()>0) {
								jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaExtranjeraForeignKeyDescripcion(Long idMonedaExtranjeraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaextranjeraTemp=null;

			for(Moneda monedaextranjeraAux:monedaextranjerasForeignKey) {
				if(monedaextranjeraAux.getId()!=null && monedaextranjeraAux.getId().equals(idMonedaExtranjeraSeleccionado)) {
					monedaextranjeraTemp=monedaextranjeraAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaextranjeraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaExtranjeraForeignKeyGenerico(Long idMonedaExtranjeraSeleccionado,JComboBox jComboBoxid_moneda_extranjeraParametroContaGenerico)throws Exception
	{
		try
		{
			Moneda  monedaextranjeraTemp=null;

			for(Moneda monedaextranjeraAux:monedaextranjerasForeignKey) {
				if(monedaextranjeraAux.getId()!=null && monedaextranjeraAux.getId().equals(idMonedaExtranjeraSeleccionado)) {
					monedaextranjeraTemp=monedaextranjeraAux;
					break;
				}
			}

			if(monedaextranjeraTemp!=null) {
				jComboBoxid_moneda_extranjeraParametroContaGenerico.setSelectedItem(monedaextranjeraTemp);
			} else {
				if(jComboBoxid_moneda_extranjeraParametroContaGenerico!=null && jComboBoxid_moneda_extranjeraParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_moneda_extranjeraParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableActivoForeignKey(Long idCuentaContableActivoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableactivoTemp=null;

			for(CuentaContable cuentacontableactivoAux:cuentacontableactivosForeignKey) {
				if(cuentacontableactivoAux.getId()!=null && cuentacontableactivoAux.getId().equals(idCuentaContableActivoSeleccionado)) {
					cuentacontableactivoTemp=cuentacontableactivoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableactivoTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableActivo(cuentacontableactivoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.setSelectedItem(cuentacontableactivoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_activoParametroConta.setSelectedItem(cuentacontableactivoTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableActivo") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableactivoTemp!=null && jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta!=null) {
						jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.setSelectedItem(cuentacontableactivoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta!=null) {
							//jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.setSelectedItem(cuentacontableactivoTemp);
							if(jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableActivoForeignKeyDescripcion(Long idCuentaContableActivoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableactivoTemp=null;

			for(CuentaContable cuentacontableactivoAux:cuentacontableactivosForeignKey) {
				if(cuentacontableactivoAux.getId()!=null && cuentacontableactivoAux.getId().equals(idCuentaContableActivoSeleccionado)) {
					cuentacontableactivoTemp=cuentacontableactivoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableactivoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableActivoForeignKeyGenerico(Long idCuentaContableActivoSeleccionado,JComboBox jComboBoxid_cuenta_contable_activoParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableactivoTemp=null;

			for(CuentaContable cuentacontableactivoAux:cuentacontableactivosForeignKey) {
				if(cuentacontableactivoAux.getId()!=null && cuentacontableactivoAux.getId().equals(idCuentaContableActivoSeleccionado)) {
					cuentacontableactivoTemp=cuentacontableactivoAux;
					break;
				}
			}

			if(cuentacontableactivoTemp!=null) {
				jComboBoxid_cuenta_contable_activoParametroContaGenerico.setSelectedItem(cuentacontableactivoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_activoParametroContaGenerico!=null && jComboBoxid_cuenta_contable_activoParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_activoParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContablePasivoForeignKey(Long idCuentaContablePasivoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablepasivoTemp=null;

			for(CuentaContable cuentacontablepasivoAux:cuentacontablepasivosForeignKey) {
				if(cuentacontablepasivoAux.getId()!=null && cuentacontablepasivoAux.getId().equals(idCuentaContablePasivoSeleccionado)) {
					cuentacontablepasivoTemp=cuentacontablepasivoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablepasivoTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContablePasivo(cuentacontablepasivoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.setSelectedItem(cuentacontablepasivoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_pasivoParametroConta.setSelectedItem(cuentacontablepasivoTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContablePasivo") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontablepasivoTemp!=null && jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta!=null) {
						jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.setSelectedItem(cuentacontablepasivoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta!=null) {
							//jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.setSelectedItem(cuentacontablepasivoTemp);
							if(jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContablePasivoForeignKeyDescripcion(Long idCuentaContablePasivoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablepasivoTemp=null;

			for(CuentaContable cuentacontablepasivoAux:cuentacontablepasivosForeignKey) {
				if(cuentacontablepasivoAux.getId()!=null && cuentacontablepasivoAux.getId().equals(idCuentaContablePasivoSeleccionado)) {
					cuentacontablepasivoTemp=cuentacontablepasivoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablepasivoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContablePasivoForeignKeyGenerico(Long idCuentaContablePasivoSeleccionado,JComboBox jComboBoxid_cuenta_contable_pasivoParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablepasivoTemp=null;

			for(CuentaContable cuentacontablepasivoAux:cuentacontablepasivosForeignKey) {
				if(cuentacontablepasivoAux.getId()!=null && cuentacontablepasivoAux.getId().equals(idCuentaContablePasivoSeleccionado)) {
					cuentacontablepasivoTemp=cuentacontablepasivoAux;
					break;
				}
			}

			if(cuentacontablepasivoTemp!=null) {
				jComboBoxid_cuenta_contable_pasivoParametroContaGenerico.setSelectedItem(cuentacontablepasivoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_pasivoParametroContaGenerico!=null && jComboBoxid_cuenta_contable_pasivoParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_pasivoParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContablePatrimonioForeignKey(Long idCuentaContablePatrimonioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablepatrimonioTemp=null;

			for(CuentaContable cuentacontablepatrimonioAux:cuentacontablepatrimoniosForeignKey) {
				if(cuentacontablepatrimonioAux.getId()!=null && cuentacontablepatrimonioAux.getId().equals(idCuentaContablePatrimonioSeleccionado)) {
					cuentacontablepatrimonioTemp=cuentacontablepatrimonioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablepatrimonioTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContablePatrimonio(cuentacontablepatrimonioTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.setSelectedItem(cuentacontablepatrimonioTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_patrimonioParametroConta.setSelectedItem(cuentacontablepatrimonioTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContablePatrimonio") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontablepatrimonioTemp!=null && jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta!=null) {
						jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.setSelectedItem(cuentacontablepatrimonioTemp);
					} else {
						if(jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta!=null) {
							//jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.setSelectedItem(cuentacontablepatrimonioTemp);
							if(jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContablePatrimonioForeignKeyDescripcion(Long idCuentaContablePatrimonioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablepatrimonioTemp=null;

			for(CuentaContable cuentacontablepatrimonioAux:cuentacontablepatrimoniosForeignKey) {
				if(cuentacontablepatrimonioAux.getId()!=null && cuentacontablepatrimonioAux.getId().equals(idCuentaContablePatrimonioSeleccionado)) {
					cuentacontablepatrimonioTemp=cuentacontablepatrimonioAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablepatrimonioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContablePatrimonioForeignKeyGenerico(Long idCuentaContablePatrimonioSeleccionado,JComboBox jComboBoxid_cuenta_contable_patrimonioParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablepatrimonioTemp=null;

			for(CuentaContable cuentacontablepatrimonioAux:cuentacontablepatrimoniosForeignKey) {
				if(cuentacontablepatrimonioAux.getId()!=null && cuentacontablepatrimonioAux.getId().equals(idCuentaContablePatrimonioSeleccionado)) {
					cuentacontablepatrimonioTemp=cuentacontablepatrimonioAux;
					break;
				}
			}

			if(cuentacontablepatrimonioTemp!=null) {
				jComboBoxid_cuenta_contable_patrimonioParametroContaGenerico.setSelectedItem(cuentacontablepatrimonioTemp);
			} else {
				if(jComboBoxid_cuenta_contable_patrimonioParametroContaGenerico!=null && jComboBoxid_cuenta_contable_patrimonioParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_patrimonioParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIngresoForeignKey(Long idCuentaContableIngresoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingresoTemp=null;

			for(CuentaContable cuentacontableingresoAux:cuentacontableingresosForeignKey) {
				if(cuentacontableingresoAux.getId()!=null && cuentacontableingresoAux.getId().equals(idCuentaContableIngresoSeleccionado)) {
					cuentacontableingresoTemp=cuentacontableingresoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableingresoTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableIngreso(cuentacontableingresoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.setSelectedItem(cuentacontableingresoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_ingresoParametroConta.setSelectedItem(cuentacontableingresoTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngreso") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableingresoTemp!=null && jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta!=null) {
						jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.setSelectedItem(cuentacontableingresoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta!=null) {
							//jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.setSelectedItem(cuentacontableingresoTemp);
							if(jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIngresoForeignKeyDescripcion(Long idCuentaContableIngresoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableingresoTemp=null;

			for(CuentaContable cuentacontableingresoAux:cuentacontableingresosForeignKey) {
				if(cuentacontableingresoAux.getId()!=null && cuentacontableingresoAux.getId().equals(idCuentaContableIngresoSeleccionado)) {
					cuentacontableingresoTemp=cuentacontableingresoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableingresoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIngresoForeignKeyGenerico(Long idCuentaContableIngresoSeleccionado,JComboBox jComboBoxid_cuenta_contable_ingresoParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingresoTemp=null;

			for(CuentaContable cuentacontableingresoAux:cuentacontableingresosForeignKey) {
				if(cuentacontableingresoAux.getId()!=null && cuentacontableingresoAux.getId().equals(idCuentaContableIngresoSeleccionado)) {
					cuentacontableingresoTemp=cuentacontableingresoAux;
					break;
				}
			}

			if(cuentacontableingresoTemp!=null) {
				jComboBoxid_cuenta_contable_ingresoParametroContaGenerico.setSelectedItem(cuentacontableingresoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_ingresoParametroContaGenerico!=null && jComboBoxid_cuenta_contable_ingresoParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_ingresoParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableEgresoForeignKey(Long idCuentaContableEgresoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableegresoTemp=null;

			for(CuentaContable cuentacontableegresoAux:cuentacontableegresosForeignKey) {
				if(cuentacontableegresoAux.getId()!=null && cuentacontableegresoAux.getId().equals(idCuentaContableEgresoSeleccionado)) {
					cuentacontableegresoTemp=cuentacontableegresoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableegresoTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableEgreso(cuentacontableegresoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.setSelectedItem(cuentacontableegresoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_egresoParametroConta.setSelectedItem(cuentacontableegresoTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEgreso") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableegresoTemp!=null && jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta!=null) {
						jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.setSelectedItem(cuentacontableegresoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta!=null) {
							//jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.setSelectedItem(cuentacontableegresoTemp);
							if(jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableEgresoForeignKeyDescripcion(Long idCuentaContableEgresoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableegresoTemp=null;

			for(CuentaContable cuentacontableegresoAux:cuentacontableegresosForeignKey) {
				if(cuentacontableegresoAux.getId()!=null && cuentacontableegresoAux.getId().equals(idCuentaContableEgresoSeleccionado)) {
					cuentacontableegresoTemp=cuentacontableegresoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableegresoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableEgresoForeignKeyGenerico(Long idCuentaContableEgresoSeleccionado,JComboBox jComboBoxid_cuenta_contable_egresoParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableegresoTemp=null;

			for(CuentaContable cuentacontableegresoAux:cuentacontableegresosForeignKey) {
				if(cuentacontableegresoAux.getId()!=null && cuentacontableegresoAux.getId().equals(idCuentaContableEgresoSeleccionado)) {
					cuentacontableegresoTemp=cuentacontableegresoAux;
					break;
				}
			}

			if(cuentacontableegresoTemp!=null) {
				jComboBoxid_cuenta_contable_egresoParametroContaGenerico.setSelectedItem(cuentacontableegresoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_egresoParametroContaGenerico!=null && jComboBoxid_cuenta_contable_egresoParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_egresoParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableResumenForeignKey(Long idCuentaContableResumenSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableresumenTemp=null;

			for(CuentaContable cuentacontableresumenAux:cuentacontableresumensForeignKey) {
				if(cuentacontableresumenAux.getId()!=null && cuentacontableresumenAux.getId().equals(idCuentaContableResumenSeleccionado)) {
					cuentacontableresumenTemp=cuentacontableresumenAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableresumenTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableResumen(cuentacontableresumenTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.setSelectedItem(cuentacontableresumenTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_resumenParametroConta.setSelectedItem(cuentacontableresumenTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableResumen") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableresumenTemp!=null && jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta!=null) {
						jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.setSelectedItem(cuentacontableresumenTemp);
					} else {
						if(jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta!=null) {
							//jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.setSelectedItem(cuentacontableresumenTemp);
							if(jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableResumenForeignKeyDescripcion(Long idCuentaContableResumenSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableresumenTemp=null;

			for(CuentaContable cuentacontableresumenAux:cuentacontableresumensForeignKey) {
				if(cuentacontableresumenAux.getId()!=null && cuentacontableresumenAux.getId().equals(idCuentaContableResumenSeleccionado)) {
					cuentacontableresumenTemp=cuentacontableresumenAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableresumenTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableResumenForeignKeyGenerico(Long idCuentaContableResumenSeleccionado,JComboBox jComboBoxid_cuenta_contable_resumenParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableresumenTemp=null;

			for(CuentaContable cuentacontableresumenAux:cuentacontableresumensForeignKey) {
				if(cuentacontableresumenAux.getId()!=null && cuentacontableresumenAux.getId().equals(idCuentaContableResumenSeleccionado)) {
					cuentacontableresumenTemp=cuentacontableresumenAux;
					break;
				}
			}

			if(cuentacontableresumenTemp!=null) {
				jComboBoxid_cuenta_contable_resumenParametroContaGenerico.setSelectedItem(cuentacontableresumenTemp);
			} else {
				if(jComboBoxid_cuenta_contable_resumenParametroContaGenerico!=null && jComboBoxid_cuenta_contable_resumenParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_resumenParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableDeudorForeignKey(Long idCuentaContableDeudorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledeudorTemp=null;

			for(CuentaContable cuentacontabledeudorAux:cuentacontabledeudorsForeignKey) {
				if(cuentacontabledeudorAux.getId()!=null && cuentacontabledeudorAux.getId().equals(idCuentaContableDeudorSeleccionado)) {
					cuentacontabledeudorTemp=cuentacontabledeudorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontabledeudorTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableDeudor(cuentacontabledeudorTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.setSelectedItem(cuentacontabledeudorTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_deudorParametroConta.setSelectedItem(cuentacontabledeudorTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableDeudor") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontabledeudorTemp!=null && jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta!=null) {
						jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.setSelectedItem(cuentacontabledeudorTemp);
					} else {
						if(jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta!=null) {
							//jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.setSelectedItem(cuentacontabledeudorTemp);
							if(jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableDeudorForeignKeyDescripcion(Long idCuentaContableDeudorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontabledeudorTemp=null;

			for(CuentaContable cuentacontabledeudorAux:cuentacontabledeudorsForeignKey) {
				if(cuentacontabledeudorAux.getId()!=null && cuentacontabledeudorAux.getId().equals(idCuentaContableDeudorSeleccionado)) {
					cuentacontabledeudorTemp=cuentacontabledeudorAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontabledeudorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableDeudorForeignKeyGenerico(Long idCuentaContableDeudorSeleccionado,JComboBox jComboBoxid_cuenta_contable_deudorParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledeudorTemp=null;

			for(CuentaContable cuentacontabledeudorAux:cuentacontabledeudorsForeignKey) {
				if(cuentacontabledeudorAux.getId()!=null && cuentacontabledeudorAux.getId().equals(idCuentaContableDeudorSeleccionado)) {
					cuentacontabledeudorTemp=cuentacontabledeudorAux;
					break;
				}
			}

			if(cuentacontabledeudorTemp!=null) {
				jComboBoxid_cuenta_contable_deudorParametroContaGenerico.setSelectedItem(cuentacontabledeudorTemp);
			} else {
				if(jComboBoxid_cuenta_contable_deudorParametroContaGenerico!=null && jComboBoxid_cuenta_contable_deudorParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_deudorParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableAcreedorForeignKey(Long idCuentaContableAcreedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableacreedorTemp=null;

			for(CuentaContable cuentacontableacreedorAux:cuentacontableacreedorsForeignKey) {
				if(cuentacontableacreedorAux.getId()!=null && cuentacontableacreedorAux.getId().equals(idCuentaContableAcreedorSeleccionado)) {
					cuentacontableacreedorTemp=cuentacontableacreedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableacreedorTemp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableAcreedor(cuentacontableacreedorTemp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.setSelectedItem(cuentacontableacreedorTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_acreedorParametroConta.setSelectedItem(cuentacontableacreedorTemp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableAcreedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableacreedorTemp!=null && jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta!=null) {
						jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.setSelectedItem(cuentacontableacreedorTemp);
					} else {
						if(jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta!=null) {
							//jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.setSelectedItem(cuentacontableacreedorTemp);
							if(jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableAcreedorForeignKeyDescripcion(Long idCuentaContableAcreedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableacreedorTemp=null;

			for(CuentaContable cuentacontableacreedorAux:cuentacontableacreedorsForeignKey) {
				if(cuentacontableacreedorAux.getId()!=null && cuentacontableacreedorAux.getId().equals(idCuentaContableAcreedorSeleccionado)) {
					cuentacontableacreedorTemp=cuentacontableacreedorAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableacreedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableAcreedorForeignKeyGenerico(Long idCuentaContableAcreedorSeleccionado,JComboBox jComboBoxid_cuenta_contable_acreedorParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableacreedorTemp=null;

			for(CuentaContable cuentacontableacreedorAux:cuentacontableacreedorsForeignKey) {
				if(cuentacontableacreedorAux.getId()!=null && cuentacontableacreedorAux.getId().equals(idCuentaContableAcreedorSeleccionado)) {
					cuentacontableacreedorTemp=cuentacontableacreedorAux;
					break;
				}
			}

			if(cuentacontableacreedorTemp!=null) {
				jComboBoxid_cuenta_contable_acreedorParametroContaGenerico.setSelectedItem(cuentacontableacreedorTemp);
			} else {
				if(jComboBoxid_cuenta_contable_acreedorParametroContaGenerico!=null && jComboBoxid_cuenta_contable_acreedorParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_acreedorParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIngreso1ForeignKey(Long idCuentaContableIngreso1Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingreso1Temp=null;

			for(CuentaContable cuentacontableingreso1Aux:cuentacontableingreso1sForeignKey) {
				if(cuentacontableingreso1Aux.getId()!=null && cuentacontableingreso1Aux.getId().equals(idCuentaContableIngreso1Seleccionado)) {
					cuentacontableingreso1Temp=cuentacontableingreso1Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableingreso1Temp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableIngreso1(cuentacontableingreso1Temp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.setSelectedItem(cuentacontableingreso1Temp);
					}
				} else {
					//jComboBoxid_cuenta_contable_ingreso1ParametroConta.setSelectedItem(cuentacontableingreso1Temp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngreso1") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableingreso1Temp!=null && jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta!=null) {
						jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.setSelectedItem(cuentacontableingreso1Temp);
					} else {
						if(jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta!=null) {
							//jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.setSelectedItem(cuentacontableingreso1Temp);
							if(jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIngreso1ForeignKeyDescripcion(Long idCuentaContableIngreso1Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableingreso1Temp=null;

			for(CuentaContable cuentacontableingreso1Aux:cuentacontableingreso1sForeignKey) {
				if(cuentacontableingreso1Aux.getId()!=null && cuentacontableingreso1Aux.getId().equals(idCuentaContableIngreso1Seleccionado)) {
					cuentacontableingreso1Temp=cuentacontableingreso1Aux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableingreso1Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIngreso1ForeignKeyGenerico(Long idCuentaContableIngreso1Seleccionado,JComboBox jComboBoxid_cuenta_contable_ingreso1ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingreso1Temp=null;

			for(CuentaContable cuentacontableingreso1Aux:cuentacontableingreso1sForeignKey) {
				if(cuentacontableingreso1Aux.getId()!=null && cuentacontableingreso1Aux.getId().equals(idCuentaContableIngreso1Seleccionado)) {
					cuentacontableingreso1Temp=cuentacontableingreso1Aux;
					break;
				}
			}

			if(cuentacontableingreso1Temp!=null) {
				jComboBoxid_cuenta_contable_ingreso1ParametroContaGenerico.setSelectedItem(cuentacontableingreso1Temp);
			} else {
				if(jComboBoxid_cuenta_contable_ingreso1ParametroContaGenerico!=null && jComboBoxid_cuenta_contable_ingreso1ParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_ingreso1ParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIngreso2ForeignKey(Long idCuentaContableIngreso2Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingreso2Temp=null;

			for(CuentaContable cuentacontableingreso2Aux:cuentacontableingreso2sForeignKey) {
				if(cuentacontableingreso2Aux.getId()!=null && cuentacontableingreso2Aux.getId().equals(idCuentaContableIngreso2Seleccionado)) {
					cuentacontableingreso2Temp=cuentacontableingreso2Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableingreso2Temp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableIngreso2(cuentacontableingreso2Temp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.setSelectedItem(cuentacontableingreso2Temp);
					}
				} else {
					//jComboBoxid_cuenta_contable_ingreso2ParametroConta.setSelectedItem(cuentacontableingreso2Temp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngreso2") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableingreso2Temp!=null && jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta!=null) {
						jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.setSelectedItem(cuentacontableingreso2Temp);
					} else {
						if(jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta!=null) {
							//jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.setSelectedItem(cuentacontableingreso2Temp);
							if(jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIngreso2ForeignKeyDescripcion(Long idCuentaContableIngreso2Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableingreso2Temp=null;

			for(CuentaContable cuentacontableingreso2Aux:cuentacontableingreso2sForeignKey) {
				if(cuentacontableingreso2Aux.getId()!=null && cuentacontableingreso2Aux.getId().equals(idCuentaContableIngreso2Seleccionado)) {
					cuentacontableingreso2Temp=cuentacontableingreso2Aux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableingreso2Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIngreso2ForeignKeyGenerico(Long idCuentaContableIngreso2Seleccionado,JComboBox jComboBoxid_cuenta_contable_ingreso2ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingreso2Temp=null;

			for(CuentaContable cuentacontableingreso2Aux:cuentacontableingreso2sForeignKey) {
				if(cuentacontableingreso2Aux.getId()!=null && cuentacontableingreso2Aux.getId().equals(idCuentaContableIngreso2Seleccionado)) {
					cuentacontableingreso2Temp=cuentacontableingreso2Aux;
					break;
				}
			}

			if(cuentacontableingreso2Temp!=null) {
				jComboBoxid_cuenta_contable_ingreso2ParametroContaGenerico.setSelectedItem(cuentacontableingreso2Temp);
			} else {
				if(jComboBoxid_cuenta_contable_ingreso2ParametroContaGenerico!=null && jComboBoxid_cuenta_contable_ingreso2ParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_ingreso2ParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIngreso3ForeignKey(Long idCuentaContableIngreso3Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingreso3Temp=null;

			for(CuentaContable cuentacontableingreso3Aux:cuentacontableingreso3sForeignKey) {
				if(cuentacontableingreso3Aux.getId()!=null && cuentacontableingreso3Aux.getId().equals(idCuentaContableIngreso3Seleccionado)) {
					cuentacontableingreso3Temp=cuentacontableingreso3Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableingreso3Temp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableIngreso3(cuentacontableingreso3Temp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.setSelectedItem(cuentacontableingreso3Temp);
					}
				} else {
					//jComboBoxid_cuenta_contable_ingreso3ParametroConta.setSelectedItem(cuentacontableingreso3Temp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngreso3") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableingreso3Temp!=null && jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta!=null) {
						jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.setSelectedItem(cuentacontableingreso3Temp);
					} else {
						if(jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta!=null) {
							//jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.setSelectedItem(cuentacontableingreso3Temp);
							if(jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIngreso3ForeignKeyDescripcion(Long idCuentaContableIngreso3Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableingreso3Temp=null;

			for(CuentaContable cuentacontableingreso3Aux:cuentacontableingreso3sForeignKey) {
				if(cuentacontableingreso3Aux.getId()!=null && cuentacontableingreso3Aux.getId().equals(idCuentaContableIngreso3Seleccionado)) {
					cuentacontableingreso3Temp=cuentacontableingreso3Aux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableingreso3Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIngreso3ForeignKeyGenerico(Long idCuentaContableIngreso3Seleccionado,JComboBox jComboBoxid_cuenta_contable_ingreso3ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingreso3Temp=null;

			for(CuentaContable cuentacontableingreso3Aux:cuentacontableingreso3sForeignKey) {
				if(cuentacontableingreso3Aux.getId()!=null && cuentacontableingreso3Aux.getId().equals(idCuentaContableIngreso3Seleccionado)) {
					cuentacontableingreso3Temp=cuentacontableingreso3Aux;
					break;
				}
			}

			if(cuentacontableingreso3Temp!=null) {
				jComboBoxid_cuenta_contable_ingreso3ParametroContaGenerico.setSelectedItem(cuentacontableingreso3Temp);
			} else {
				if(jComboBoxid_cuenta_contable_ingreso3ParametroContaGenerico!=null && jComboBoxid_cuenta_contable_ingreso3ParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_ingreso3ParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableEgreso1ForeignKey(Long idCuentaContableEgreso1Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableegreso1Temp=null;

			for(CuentaContable cuentacontableegreso1Aux:cuentacontableegreso1sForeignKey) {
				if(cuentacontableegreso1Aux.getId()!=null && cuentacontableegreso1Aux.getId().equals(idCuentaContableEgreso1Seleccionado)) {
					cuentacontableegreso1Temp=cuentacontableegreso1Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableegreso1Temp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableEgreso1(cuentacontableegreso1Temp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.setSelectedItem(cuentacontableegreso1Temp);
					}
				} else {
					//jComboBoxid_cuenta_contable_egreso1ParametroConta.setSelectedItem(cuentacontableegreso1Temp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEgreso1") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableegreso1Temp!=null && jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta!=null) {
						jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.setSelectedItem(cuentacontableegreso1Temp);
					} else {
						if(jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta!=null) {
							//jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.setSelectedItem(cuentacontableegreso1Temp);
							if(jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableEgreso1ForeignKeyDescripcion(Long idCuentaContableEgreso1Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableegreso1Temp=null;

			for(CuentaContable cuentacontableegreso1Aux:cuentacontableegreso1sForeignKey) {
				if(cuentacontableegreso1Aux.getId()!=null && cuentacontableegreso1Aux.getId().equals(idCuentaContableEgreso1Seleccionado)) {
					cuentacontableegreso1Temp=cuentacontableegreso1Aux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableegreso1Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableEgreso1ForeignKeyGenerico(Long idCuentaContableEgreso1Seleccionado,JComboBox jComboBoxid_cuenta_contable_egreso1ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableegreso1Temp=null;

			for(CuentaContable cuentacontableegreso1Aux:cuentacontableegreso1sForeignKey) {
				if(cuentacontableegreso1Aux.getId()!=null && cuentacontableegreso1Aux.getId().equals(idCuentaContableEgreso1Seleccionado)) {
					cuentacontableegreso1Temp=cuentacontableegreso1Aux;
					break;
				}
			}

			if(cuentacontableegreso1Temp!=null) {
				jComboBoxid_cuenta_contable_egreso1ParametroContaGenerico.setSelectedItem(cuentacontableegreso1Temp);
			} else {
				if(jComboBoxid_cuenta_contable_egreso1ParametroContaGenerico!=null && jComboBoxid_cuenta_contable_egreso1ParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_egreso1ParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableEgreso2ForeignKey(Long idCuentaContableEgreso2Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableegreso2Temp=null;

			for(CuentaContable cuentacontableegreso2Aux:cuentacontableegreso2sForeignKey) {
				if(cuentacontableegreso2Aux.getId()!=null && cuentacontableegreso2Aux.getId().equals(idCuentaContableEgreso2Seleccionado)) {
					cuentacontableegreso2Temp=cuentacontableegreso2Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableegreso2Temp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableEgreso2(cuentacontableegreso2Temp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.setSelectedItem(cuentacontableegreso2Temp);
					}
				} else {
					//jComboBoxid_cuenta_contable_egreso2ParametroConta.setSelectedItem(cuentacontableegreso2Temp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEgreso2") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableegreso2Temp!=null && jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta!=null) {
						jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.setSelectedItem(cuentacontableegreso2Temp);
					} else {
						if(jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta!=null) {
							//jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.setSelectedItem(cuentacontableegreso2Temp);
							if(jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableEgreso2ForeignKeyDescripcion(Long idCuentaContableEgreso2Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableegreso2Temp=null;

			for(CuentaContable cuentacontableegreso2Aux:cuentacontableegreso2sForeignKey) {
				if(cuentacontableegreso2Aux.getId()!=null && cuentacontableegreso2Aux.getId().equals(idCuentaContableEgreso2Seleccionado)) {
					cuentacontableegreso2Temp=cuentacontableegreso2Aux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableegreso2Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableEgreso2ForeignKeyGenerico(Long idCuentaContableEgreso2Seleccionado,JComboBox jComboBoxid_cuenta_contable_egreso2ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableegreso2Temp=null;

			for(CuentaContable cuentacontableegreso2Aux:cuentacontableegreso2sForeignKey) {
				if(cuentacontableegreso2Aux.getId()!=null && cuentacontableegreso2Aux.getId().equals(idCuentaContableEgreso2Seleccionado)) {
					cuentacontableegreso2Temp=cuentacontableegreso2Aux;
					break;
				}
			}

			if(cuentacontableegreso2Temp!=null) {
				jComboBoxid_cuenta_contable_egreso2ParametroContaGenerico.setSelectedItem(cuentacontableegreso2Temp);
			} else {
				if(jComboBoxid_cuenta_contable_egreso2ParametroContaGenerico!=null && jComboBoxid_cuenta_contable_egreso2ParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_egreso2ParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableEgreso3ForeignKey(Long idCuentaContableEgreso3Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableegreso3Temp=null;

			for(CuentaContable cuentacontableegreso3Aux:cuentacontableegreso3sForeignKey) {
				if(cuentacontableegreso3Aux.getId()!=null && cuentacontableegreso3Aux.getId().equals(idCuentaContableEgreso3Seleccionado)) {
					cuentacontableegreso3Temp=cuentacontableegreso3Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableegreso3Temp!=null) {

					if(this.parametroconta!=null) {
						this.parametroconta.setCuentaContableEgreso3(cuentacontableegreso3Temp);
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.setSelectedItem(cuentacontableegreso3Temp);
					}
				} else {
					//jComboBoxid_cuenta_contable_egreso3ParametroConta.setSelectedItem(cuentacontableegreso3Temp);
					if(this.jInternalFrameDetalleFormParametroConta!=null) {
						if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEgreso3") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableegreso3Temp!=null && jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta!=null) {
						jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.setSelectedItem(cuentacontableegreso3Temp);
					} else {
						if(jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta!=null) {
							//jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.setSelectedItem(cuentacontableegreso3Temp);
							if(jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.getItemCount()>0) {
								jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableEgreso3ForeignKeyDescripcion(Long idCuentaContableEgreso3Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableegreso3Temp=null;

			for(CuentaContable cuentacontableegreso3Aux:cuentacontableegreso3sForeignKey) {
				if(cuentacontableegreso3Aux.getId()!=null && cuentacontableegreso3Aux.getId().equals(idCuentaContableEgreso3Seleccionado)) {
					cuentacontableegreso3Temp=cuentacontableegreso3Aux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableegreso3Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableEgreso3ForeignKeyGenerico(Long idCuentaContableEgreso3Seleccionado,JComboBox jComboBoxid_cuenta_contable_egreso3ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableegreso3Temp=null;

			for(CuentaContable cuentacontableegreso3Aux:cuentacontableegreso3sForeignKey) {
				if(cuentacontableegreso3Aux.getId()!=null && cuentacontableegreso3Aux.getId().equals(idCuentaContableEgreso3Seleccionado)) {
					cuentacontableegreso3Temp=cuentacontableegreso3Aux;
					break;
				}
			}

			if(cuentacontableegreso3Temp!=null) {
				jComboBoxid_cuenta_contable_egreso3ParametroContaGenerico.setSelectedItem(cuentacontableegreso3Temp);
			} else {
				if(jComboBoxid_cuenta_contable_egreso3ParametroContaGenerico!=null && jComboBoxid_cuenta_contable_egreso3ParametroContaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_egreso3ParametroContaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_empresaParametroContaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaParametroContaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaParametroContaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametroconta.setid_empresa(empresaAux.getId());
				parametroconta.setempresa_descripcion(ParametroContaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				parametroconta.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_monedaParametroContaGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaParametroContaGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaParametroContaGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				parametroconta.setid_moneda(monedaAux.getId());
				parametroconta.setmoneda_descripcion(ParametroContaConstantesFunciones.getMonedaDescripcion(monedaAux));
				parametroconta.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaExtranjeraForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_moneda_extranjeraParametroContaGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_moneda_extranjeraParametroContaGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_moneda_extranjeraParametroContaGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				parametroconta.setid_moneda_extranjera(monedaAux.getId());
				parametroconta.setmonedaextranjera_descripcion(ParametroContaConstantesFunciones.getMonedaExtranjeraDescripcion(monedaAux));
				parametroconta.setMonedaExtranjera(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableActivoForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_activoParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_activoParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_activoParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametroconta.setid_cuenta_contable_activo(cuentacontableAux.getId());
				parametroconta.setcuentacontableactivo_descripcion(ParametroContaConstantesFunciones.getCuentaContableActivoDescripcion(cuentacontableAux));
				parametroconta.setCuentaContableActivo(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContablePasivoForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_pasivoParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_pasivoParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_pasivoParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametroconta.setid_cuenta_contable_pasivo(cuentacontableAux.getId());
				parametroconta.setcuentacontablepasivo_descripcion(ParametroContaConstantesFunciones.getCuentaContablePasivoDescripcion(cuentacontableAux));
				parametroconta.setCuentaContablePasivo(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContablePatrimonioForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_patrimonioParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_patrimonioParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_patrimonioParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametroconta.setid_cuenta_contable_patrimonio(cuentacontableAux.getId());
				parametroconta.setcuentacontablepatrimonio_descripcion(ParametroContaConstantesFunciones.getCuentaContablePatrimonioDescripcion(cuentacontableAux));
				parametroconta.setCuentaContablePatrimonio(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIngresoForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_ingresoParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_ingresoParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_ingresoParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametroconta.setid_cuenta_contable_ingreso(cuentacontableAux.getId());
				parametroconta.setcuentacontableingreso_descripcion(ParametroContaConstantesFunciones.getCuentaContableIngresoDescripcion(cuentacontableAux));
				parametroconta.setCuentaContableIngreso(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableEgresoForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_egresoParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_egresoParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_egresoParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametroconta.setid_cuenta_contable_egreso(cuentacontableAux.getId());
				parametroconta.setcuentacontableegreso_descripcion(ParametroContaConstantesFunciones.getCuentaContableEgresoDescripcion(cuentacontableAux));
				parametroconta.setCuentaContableEgreso(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableResumenForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_resumenParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_resumenParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_resumenParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametroconta.setid_cuenta_contable_resumen(cuentacontableAux.getId());
				parametroconta.setcuentacontableresumen_descripcion(ParametroContaConstantesFunciones.getCuentaContableResumenDescripcion(cuentacontableAux));
				parametroconta.setCuentaContableResumen(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableDeudorForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_deudorParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_deudorParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_deudorParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametroconta.setid_cuenta_contable_deudor(cuentacontableAux.getId());
				parametroconta.setcuentacontabledeudor_descripcion(ParametroContaConstantesFunciones.getCuentaContableDeudorDescripcion(cuentacontableAux));
				parametroconta.setCuentaContableDeudor(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableAcreedorForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_acreedorParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_acreedorParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_acreedorParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametroconta.setid_cuenta_contable_acreedor(cuentacontableAux.getId());
				parametroconta.setcuentacontableacreedor_descripcion(ParametroContaConstantesFunciones.getCuentaContableAcreedorDescripcion(cuentacontableAux));
				parametroconta.setCuentaContableAcreedor(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIngreso1ForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_ingreso1ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_ingreso1ParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_ingreso1ParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				parametroconta.setid_cuenta_contable_ingreso1(cuentacontableAux.getId());
				parametroconta.setcuentacontableingreso1_descripcion(ParametroContaConstantesFunciones.getCuentaContableIngreso1Descripcion(cuentacontableAux));
				parametroconta.setCuentaContableIngreso1(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIngreso2ForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_ingreso2ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_ingreso2ParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_ingreso2ParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				parametroconta.setid_cuenta_contable_ingreso2(cuentacontableAux.getId());
				parametroconta.setcuentacontableingreso2_descripcion(ParametroContaConstantesFunciones.getCuentaContableIngreso2Descripcion(cuentacontableAux));
				parametroconta.setCuentaContableIngreso2(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIngreso3ForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_ingreso3ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_ingreso3ParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_ingreso3ParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				parametroconta.setid_cuenta_contable_ingreso3(cuentacontableAux.getId());
				parametroconta.setcuentacontableingreso3_descripcion(ParametroContaConstantesFunciones.getCuentaContableIngreso3Descripcion(cuentacontableAux));
				parametroconta.setCuentaContableIngreso3(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableEgreso1ForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_egreso1ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_egreso1ParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_egreso1ParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				parametroconta.setid_cuenta_contable_egreso1(cuentacontableAux.getId());
				parametroconta.setcuentacontableegreso1_descripcion(ParametroContaConstantesFunciones.getCuentaContableEgreso1Descripcion(cuentacontableAux));
				parametroconta.setCuentaContableEgreso1(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableEgreso2ForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_egreso2ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_egreso2ParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_egreso2ParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				parametroconta.setid_cuenta_contable_egreso2(cuentacontableAux.getId());
				parametroconta.setcuentacontableegreso2_descripcion(ParametroContaConstantesFunciones.getCuentaContableEgreso2Descripcion(cuentacontableAux));
				parametroconta.setCuentaContableEgreso2(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableEgreso3ForeignKey(ParametroConta parametroconta,JComboBox jComboBoxid_cuenta_contable_egreso3ParametroContaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_egreso3ParametroContaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_egreso3ParametroContaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				parametroconta.setid_cuenta_contable_egreso3(cuentacontableAux.getId());
				parametroconta.setcuentacontableegreso3_descripcion(ParametroContaConstantesFunciones.getCuentaContableEgreso3Descripcion(cuentacontableAux));
				parametroconta.setCuentaContableEgreso3(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedaExtranjerasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.removeAllItems();

							for(Moneda monedaextranjera:this.monedaextranjerasForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.addItem(monedaextranjera);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdMonedaExtranjera") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.removeAllItems();

							for(Moneda monedaextranjera:this.monedaextranjerasForeignKey) {
								this.jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.addItem(monedaextranjera);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableActivosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.removeAllItems();

							for(CuentaContable cuentacontableactivo:this.cuentacontableactivosForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.addItem(cuentacontableactivo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableActivo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.removeAllItems();

							for(CuentaContable cuentacontableactivo:this.cuentacontableactivosForeignKey) {
								this.jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.addItem(cuentacontableactivo);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablePasivosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.removeAllItems();

							for(CuentaContable cuentacontablepasivo:this.cuentacontablepasivosForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.addItem(cuentacontablepasivo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContablePasivo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.removeAllItems();

							for(CuentaContable cuentacontablepasivo:this.cuentacontablepasivosForeignKey) {
								this.jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.addItem(cuentacontablepasivo);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablePatrimoniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.removeAllItems();

							for(CuentaContable cuentacontablepatrimonio:this.cuentacontablepatrimoniosForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.addItem(cuentacontablepatrimonio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContablePatrimonio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.removeAllItems();

							for(CuentaContable cuentacontablepatrimonio:this.cuentacontablepatrimoniosForeignKey) {
								this.jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.addItem(cuentacontablepatrimonio);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIngresosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.removeAllItems();

							for(CuentaContable cuentacontableingreso:this.cuentacontableingresosForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.addItem(cuentacontableingreso);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngreso") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.removeAllItems();

							for(CuentaContable cuentacontableingreso:this.cuentacontableingresosForeignKey) {
								this.jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.addItem(cuentacontableingreso);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableEgresosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.removeAllItems();

							for(CuentaContable cuentacontableegreso:this.cuentacontableegresosForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.addItem(cuentacontableegreso);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEgreso") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.removeAllItems();

							for(CuentaContable cuentacontableegreso:this.cuentacontableegresosForeignKey) {
								this.jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.addItem(cuentacontableegreso);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableResumensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.removeAllItems();

							for(CuentaContable cuentacontableresumen:this.cuentacontableresumensForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.addItem(cuentacontableresumen);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableResumen") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.removeAllItems();

							for(CuentaContable cuentacontableresumen:this.cuentacontableresumensForeignKey) {
								this.jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.addItem(cuentacontableresumen);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableDeudorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.removeAllItems();

							for(CuentaContable cuentacontabledeudor:this.cuentacontabledeudorsForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.addItem(cuentacontabledeudor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableDeudor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.removeAllItems();

							for(CuentaContable cuentacontabledeudor:this.cuentacontabledeudorsForeignKey) {
								this.jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.addItem(cuentacontabledeudor);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableAcreedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.removeAllItems();

							for(CuentaContable cuentacontableacreedor:this.cuentacontableacreedorsForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.addItem(cuentacontableacreedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableAcreedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.removeAllItems();

							for(CuentaContable cuentacontableacreedor:this.cuentacontableacreedorsForeignKey) {
								this.jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.addItem(cuentacontableacreedor);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIngreso1sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableingreso1:this.cuentacontableingreso1sForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.addItem(cuentacontableingreso1);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngreso1") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableingreso1:this.cuentacontableingreso1sForeignKey) {
								this.jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.addItem(cuentacontableingreso1);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIngreso2sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableingreso2:this.cuentacontableingreso2sForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.addItem(cuentacontableingreso2);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngreso2") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableingreso2:this.cuentacontableingreso2sForeignKey) {
								this.jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.addItem(cuentacontableingreso2);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIngreso3sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableingreso3:this.cuentacontableingreso3sForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.addItem(cuentacontableingreso3);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngreso3") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableingreso3:this.cuentacontableingreso3sForeignKey) {
								this.jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.addItem(cuentacontableingreso3);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableEgreso1sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableegreso1:this.cuentacontableegreso1sForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.addItem(cuentacontableegreso1);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEgreso1") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableegreso1:this.cuentacontableegreso1sForeignKey) {
								this.jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.addItem(cuentacontableegreso1);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableEgreso2sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableegreso2:this.cuentacontableegreso2sForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.addItem(cuentacontableegreso2);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEgreso2") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableegreso2:this.cuentacontableegreso2sForeignKey) {
								this.jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.addItem(cuentacontableegreso2);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableEgreso3sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) { 
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableegreso3:this.cuentacontableegreso3sForeignKey) {
								this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.addItem(cuentacontableegreso3);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroConta!=null) { 
					}

					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEgreso3") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.removeAllItems();

							for(CuentaContable cuentacontableegreso3:this.cuentacontableegreso3sForeignKey) {
								this.jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.addItem(cuentacontableegreso3);
							}
						}

						if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaExtranjeraForeignKey(Moneda monedaextranjera,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.setSelectedItem(monedaextranjera);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.setSelectedItem(monedaextranjera);
						} else {
							this.jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableActivoForeignKey(CuentaContable cuentacontableactivo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.setSelectedItem(cuentacontableactivo);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.setSelectedItem(cuentacontableactivo);
						} else {
							this.jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContablePasivoForeignKey(CuentaContable cuentacontablepasivo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.setSelectedItem(cuentacontablepasivo);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.setSelectedItem(cuentacontablepasivo);
						} else {
							this.jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContablePatrimonioForeignKey(CuentaContable cuentacontablepatrimonio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.setSelectedItem(cuentacontablepatrimonio);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.setSelectedItem(cuentacontablepatrimonio);
						} else {
							this.jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIngresoForeignKey(CuentaContable cuentacontableingreso,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.setSelectedItem(cuentacontableingreso);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.setSelectedItem(cuentacontableingreso);
						} else {
							this.jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableEgresoForeignKey(CuentaContable cuentacontableegreso,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.setSelectedItem(cuentacontableegreso);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.setSelectedItem(cuentacontableegreso);
						} else {
							this.jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableResumenForeignKey(CuentaContable cuentacontableresumen,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.setSelectedItem(cuentacontableresumen);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.setSelectedItem(cuentacontableresumen);
						} else {
							this.jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableDeudorForeignKey(CuentaContable cuentacontabledeudor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.setSelectedItem(cuentacontabledeudor);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.setSelectedItem(cuentacontabledeudor);
						} else {
							this.jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableAcreedorForeignKey(CuentaContable cuentacontableacreedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.setSelectedItem(cuentacontableacreedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.setSelectedItem(cuentacontableacreedor);
						} else {
							this.jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIngreso1ForeignKey(CuentaContable cuentacontableingreso1,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.setSelectedItem(cuentacontableingreso1);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.setSelectedItem(cuentacontableingreso1);
						} else {
							this.jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIngreso2ForeignKey(CuentaContable cuentacontableingreso2,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.setSelectedItem(cuentacontableingreso2);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.setSelectedItem(cuentacontableingreso2);
						} else {
							this.jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIngreso3ForeignKey(CuentaContable cuentacontableingreso3,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.setSelectedItem(cuentacontableingreso3);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.setSelectedItem(cuentacontableingreso3);
						} else {
							this.jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableEgreso1ForeignKey(CuentaContable cuentacontableegreso1,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.setSelectedItem(cuentacontableegreso1);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.setSelectedItem(cuentacontableegreso1);
						} else {
							this.jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableEgreso2ForeignKey(CuentaContable cuentacontableegreso2,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.setSelectedItem(cuentacontableegreso2);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.setSelectedItem(cuentacontableegreso2);
						} else {
							this.jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableEgreso3ForeignKey(CuentaContable cuentacontableegreso3,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.setSelectedItem(cuentacontableegreso3);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroConta!=null) {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.setSelectedItem(cuentacontableegreso3);
						} else {
							this.jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesParametroConta() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ParametroContaConstantesFunciones.refrescarForeignKeysDescripcionesParametroConta(this.parametrocontaLogic.getParametroContas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ParametroContaConstantesFunciones.refrescarForeignKeysDescripcionesParametroConta(this.parametrocontas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(CuentaContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//parametrocontaLogic.setParametroContas(this.parametrocontas);
			parametrocontaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ParametroContaParameterReturnGeneral getParametroContaParameterGeneral() {
		return this.parametrocontaParameterGeneral;
	}
	
	public void setParametroContaParameterGeneral(ParametroContaParameterReturnGeneral parametrocontaParameterGeneral) {
		this.parametrocontaParameterGeneral = parametrocontaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoParametroConta() {
		return isPermisoTodoParametroConta;
	}

	public void setIsPermisoTodoParametroConta(Boolean isPermisoTodoParametroConta) {
		this.isPermisoTodoParametroConta = isPermisoTodoParametroConta;
	}

	public Boolean getIsPermisoNuevoParametroConta() {
		return isPermisoNuevoParametroConta;
	}

	public void setIsPermisoNuevoParametroConta(Boolean isPermisoNuevoParametroConta) {
		this.isPermisoNuevoParametroConta = isPermisoNuevoParametroConta;
	}

	public Boolean getIsPermisoActualizarParametroConta() {
		return isPermisoActualizarParametroConta;
	}

	public void setIsPermisoActualizarParametroConta(Boolean isPermisoActualizarParametroConta) {
		this.isPermisoActualizarParametroConta = isPermisoActualizarParametroConta;
	}

	public Boolean getIsPermisoEliminarParametroConta() {
		return isPermisoEliminarParametroConta;
	}

	public void setIsPermisoEliminarParametroConta(Boolean isPermisoEliminarParametroConta) {
		this.isPermisoEliminarParametroConta = isPermisoEliminarParametroConta;
	}

	public Boolean getIsPermisoGuardarCambiosParametroConta() {
		return isPermisoGuardarCambiosParametroConta;
	}

	public void setIsPermisoGuardarCambiosParametroConta(Boolean isPermisoGuardarCambiosParametroConta) {
		this.isPermisoGuardarCambiosParametroConta = isPermisoGuardarCambiosParametroConta;
	}
	
	public Boolean getIsPermisoConsultaParametroConta() {
		return isPermisoConsultaParametroConta;
	}

	public void setIsPermisoConsultaParametroConta(Boolean isPermisoConsultaParametroConta) {
		this.isPermisoConsultaParametroConta = isPermisoConsultaParametroConta;
	}

	public Boolean getIsPermisoBusquedaParametroConta() {
		return isPermisoBusquedaParametroConta;
	}

	public void setIsPermisoBusquedaParametroConta(Boolean isPermisoBusquedaParametroConta) {
		this.isPermisoBusquedaParametroConta = isPermisoBusquedaParametroConta;
	}

	public Boolean getIsPermisoReporteParametroConta() {
		return isPermisoReporteParametroConta;
	}

	public void setIsPermisoReporteParametroConta(Boolean isPermisoReporteParametroConta) {
		this.isPermisoReporteParametroConta = isPermisoReporteParametroConta;
	}
	
	public Boolean getIsPermisoPaginacionMedioParametroConta() {
		return isPermisoPaginacionMedioParametroConta;
	}

	public void setIsPermisoPaginacionMedioParametroConta(Boolean isPermisoPaginacionMedioParametroConta) {
		this.isPermisoPaginacionMedioParametroConta = isPermisoPaginacionMedioParametroConta;
	}
	
	public Boolean getIsPermisoPaginacionTodoParametroConta() {
		return isPermisoPaginacionTodoParametroConta;
	}

	public void setIsPermisoPaginacionTodoParametroConta(Boolean isPermisoPaginacionTodoParametroConta) {
		this.isPermisoPaginacionTodoParametroConta = isPermisoPaginacionTodoParametroConta;
	}
	
	public Boolean getIsPermisoPaginacionAltoParametroConta() {
		return isPermisoPaginacionAltoParametroConta;
	}

	public void setIsPermisoPaginacionAltoParametroConta(Boolean isPermisoPaginacionAltoParametroConta) {
		this.isPermisoPaginacionAltoParametroConta = isPermisoPaginacionAltoParametroConta;
	}
	
	public Boolean getIsPermisoCopiarParametroConta() {
		return isPermisoCopiarParametroConta;
	}

	public void setIsPermisoCopiarParametroConta(Boolean isPermisoCopiarParametroConta) {
		this.isPermisoCopiarParametroConta = isPermisoCopiarParametroConta;
	}
	
	public Boolean getIsPermisoVerFormParametroConta() {
		return isPermisoVerFormParametroConta;
	}

	public void setIsPermisoVerFormParametroConta(Boolean isPermisoVerFormParametroConta) {
		this.isPermisoVerFormParametroConta = isPermisoVerFormParametroConta;
	}
	
	public Boolean getIsPermisoDuplicarParametroConta() {
		return isPermisoDuplicarParametroConta;
	}

	public void setIsPermisoDuplicarParametroConta(Boolean isPermisoDuplicarParametroConta) {
		this.isPermisoDuplicarParametroConta = isPermisoDuplicarParametroConta;
	}
	
	public Boolean getIsPermisoOrdenParametroConta() {
		return isPermisoOrdenParametroConta;
	}

	public void setIsPermisoOrdenParametroConta(Boolean isPermisoOrdenParametroConta) {
		this.isPermisoOrdenParametroConta = isPermisoOrdenParametroConta;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoParametroConta() {
		return isVisibilidadCeldaNuevoParametroConta;
	}

	public void setIsVisibilidadCeldaNuevoParametroConta(Boolean isVisibilidadCeldaNuevoParametroConta) {
		this.isVisibilidadCeldaNuevoParametroConta = isVisibilidadCeldaNuevoParametroConta;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarParametroConta() {
		return isVisibilidadCeldaDuplicarParametroConta;
	}

	public void setIsVisibilidadCeldaDuplicarParametroConta(Boolean isVisibilidadCeldaDuplicarParametroConta) {
		this.isVisibilidadCeldaDuplicarParametroConta = isVisibilidadCeldaDuplicarParametroConta;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarParametroConta() {
		return isVisibilidadCeldaCopiarParametroConta;
	}

	public void setIsVisibilidadCeldaCopiarParametroConta(Boolean isVisibilidadCeldaCopiarParametroConta) {
		this.isVisibilidadCeldaCopiarParametroConta = isVisibilidadCeldaCopiarParametroConta;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormParametroConta() {
		return isVisibilidadCeldaVerFormParametroConta;
	}

	public void setIsVisibilidadCeldaVerFormParametroConta(Boolean isVisibilidadCeldaVerFormParametroConta) {
		this.isVisibilidadCeldaVerFormParametroConta = isVisibilidadCeldaVerFormParametroConta;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenParametroConta() {
		return isVisibilidadCeldaOrdenParametroConta;
	}

	public void setIsVisibilidadCeldaOrdenParametroConta(Boolean isVisibilidadCeldaOrdenParametroConta) {
		this.isVisibilidadCeldaOrdenParametroConta = isVisibilidadCeldaOrdenParametroConta;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesParametroConta() {
		return isVisibilidadCeldaNuevoRelacionesParametroConta;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesParametroConta(Boolean isVisibilidadCeldaNuevoRelacionesParametroConta) {
		this.isVisibilidadCeldaNuevoRelacionesParametroConta = isVisibilidadCeldaNuevoRelacionesParametroConta;
	}
	
	public Boolean getIsVisibilidadCeldaModificarParametroConta() {
		return isVisibilidadCeldaModificarParametroConta;
	}

	public void setIsVisibilidadCeldaModificarParametroConta(Boolean isVisibilidadCeldaModificarParametroConta) {
		this.isVisibilidadCeldaModificarParametroConta = isVisibilidadCeldaModificarParametroConta;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarParametroConta() {
		return isVisibilidadCeldaActualizarParametroConta;
	}

	public void setIsVisibilidadCeldaActualizarParametroConta(Boolean isVisibilidadCeldaActualizarParametroConta) {
		this.isVisibilidadCeldaActualizarParametroConta = isVisibilidadCeldaActualizarParametroConta;
	}

	public Boolean getIsVisibilidadCeldaEliminarParametroConta() {
		return isVisibilidadCeldaEliminarParametroConta;
	}

	public void setIsVisibilidadCeldaEliminarParametroConta(Boolean isVisibilidadCeldaEliminarParametroConta) {
		this.isVisibilidadCeldaEliminarParametroConta = isVisibilidadCeldaEliminarParametroConta;
	}

	public Boolean getIsVisibilidadCeldaCancelarParametroConta() {
		return isVisibilidadCeldaCancelarParametroConta;
	}

	public void setIsVisibilidadCeldaCancelarParametroConta(Boolean isVisibilidadCeldaCancelarParametroConta) {
		this.isVisibilidadCeldaCancelarParametroConta = isVisibilidadCeldaCancelarParametroConta;
	}

	public Boolean getIsVisibilidadCeldaGuardarParametroConta() {
		return isVisibilidadCeldaGuardarParametroConta;
	}

	public void setIsVisibilidadCeldaGuardarParametroConta(Boolean isVisibilidadCeldaGuardarParametroConta) {
		this.isVisibilidadCeldaGuardarParametroConta = isVisibilidadCeldaGuardarParametroConta;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosParametroConta() {
		return isVisibilidadCeldaGuardarCambiosParametroConta;
	}

	public void setIsVisibilidadCeldaGuardarCambiosParametroConta(Boolean isVisibilidadCeldaGuardarCambiosParametroConta) {
		this.isVisibilidadCeldaGuardarCambiosParametroConta = isVisibilidadCeldaGuardarCambiosParametroConta;
	}
		
	public ParametroContaSessionBean getparametrocontaSessionBean() {
		return this.parametrocontaSessionBean;
	}
	
	public void setparametrocontaSessionBean(ParametroContaSessionBean parametrocontaSessionBean) {
		this.parametrocontaSessionBean=parametrocontaSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdCuentaContableAcreedor() {
		return this.isVisibilidadFK_IdCuentaContableAcreedor;
	}

	public void setisVisibilidadFK_IdCuentaContableAcreedor(Boolean isVisibilidadFK_IdCuentaContableAcreedor) {
		this.isVisibilidadFK_IdCuentaContableAcreedor=isVisibilidadFK_IdCuentaContableAcreedor;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableActivo() {
		return this.isVisibilidadFK_IdCuentaContableActivo;
	}

	public void setisVisibilidadFK_IdCuentaContableActivo(Boolean isVisibilidadFK_IdCuentaContableActivo) {
		this.isVisibilidadFK_IdCuentaContableActivo=isVisibilidadFK_IdCuentaContableActivo;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableDeudor() {
		return this.isVisibilidadFK_IdCuentaContableDeudor;
	}

	public void setisVisibilidadFK_IdCuentaContableDeudor(Boolean isVisibilidadFK_IdCuentaContableDeudor) {
		this.isVisibilidadFK_IdCuentaContableDeudor=isVisibilidadFK_IdCuentaContableDeudor;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableEgreso() {
		return this.isVisibilidadFK_IdCuentaContableEgreso;
	}

	public void setisVisibilidadFK_IdCuentaContableEgreso(Boolean isVisibilidadFK_IdCuentaContableEgreso) {
		this.isVisibilidadFK_IdCuentaContableEgreso=isVisibilidadFK_IdCuentaContableEgreso;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableEgreso1() {
		return this.isVisibilidadFK_IdCuentaContableEgreso1;
	}

	public void setisVisibilidadFK_IdCuentaContableEgreso1(Boolean isVisibilidadFK_IdCuentaContableEgreso1) {
		this.isVisibilidadFK_IdCuentaContableEgreso1=isVisibilidadFK_IdCuentaContableEgreso1;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableEgreso2() {
		return this.isVisibilidadFK_IdCuentaContableEgreso2;
	}

	public void setisVisibilidadFK_IdCuentaContableEgreso2(Boolean isVisibilidadFK_IdCuentaContableEgreso2) {
		this.isVisibilidadFK_IdCuentaContableEgreso2=isVisibilidadFK_IdCuentaContableEgreso2;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableEgreso3() {
		return this.isVisibilidadFK_IdCuentaContableEgreso3;
	}

	public void setisVisibilidadFK_IdCuentaContableEgreso3(Boolean isVisibilidadFK_IdCuentaContableEgreso3) {
		this.isVisibilidadFK_IdCuentaContableEgreso3=isVisibilidadFK_IdCuentaContableEgreso3;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIngreso() {
		return this.isVisibilidadFK_IdCuentaContableIngreso;
	}

	public void setisVisibilidadFK_IdCuentaContableIngreso(Boolean isVisibilidadFK_IdCuentaContableIngreso) {
		this.isVisibilidadFK_IdCuentaContableIngreso=isVisibilidadFK_IdCuentaContableIngreso;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIngreso1() {
		return this.isVisibilidadFK_IdCuentaContableIngreso1;
	}

	public void setisVisibilidadFK_IdCuentaContableIngreso1(Boolean isVisibilidadFK_IdCuentaContableIngreso1) {
		this.isVisibilidadFK_IdCuentaContableIngreso1=isVisibilidadFK_IdCuentaContableIngreso1;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIngreso2() {
		return this.isVisibilidadFK_IdCuentaContableIngreso2;
	}

	public void setisVisibilidadFK_IdCuentaContableIngreso2(Boolean isVisibilidadFK_IdCuentaContableIngreso2) {
		this.isVisibilidadFK_IdCuentaContableIngreso2=isVisibilidadFK_IdCuentaContableIngreso2;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIngreso3() {
		return this.isVisibilidadFK_IdCuentaContableIngreso3;
	}

	public void setisVisibilidadFK_IdCuentaContableIngreso3(Boolean isVisibilidadFK_IdCuentaContableIngreso3) {
		this.isVisibilidadFK_IdCuentaContableIngreso3=isVisibilidadFK_IdCuentaContableIngreso3;
	}

	public Boolean getisVisibilidadFK_IdCuentaContablePasivo() {
		return this.isVisibilidadFK_IdCuentaContablePasivo;
	}

	public void setisVisibilidadFK_IdCuentaContablePasivo(Boolean isVisibilidadFK_IdCuentaContablePasivo) {
		this.isVisibilidadFK_IdCuentaContablePasivo=isVisibilidadFK_IdCuentaContablePasivo;
	}

	public Boolean getisVisibilidadFK_IdCuentaContablePatrimonio() {
		return this.isVisibilidadFK_IdCuentaContablePatrimonio;
	}

	public void setisVisibilidadFK_IdCuentaContablePatrimonio(Boolean isVisibilidadFK_IdCuentaContablePatrimonio) {
		this.isVisibilidadFK_IdCuentaContablePatrimonio=isVisibilidadFK_IdCuentaContablePatrimonio;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableResumen() {
		return this.isVisibilidadFK_IdCuentaContableResumen;
	}

	public void setisVisibilidadFK_IdCuentaContableResumen(Boolean isVisibilidadFK_IdCuentaContableResumen) {
		this.isVisibilidadFK_IdCuentaContableResumen=isVisibilidadFK_IdCuentaContableResumen;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdMonedaExtranjera() {
		return this.isVisibilidadFK_IdMonedaExtranjera;
	}

	public void setisVisibilidadFK_IdMonedaExtranjera(Boolean isVisibilidadFK_IdMonedaExtranjera) {
		this.isVisibilidadFK_IdMonedaExtranjera=isVisibilidadFK_IdMonedaExtranjera;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysParametroConta(ParametroConta parametroconta)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(parametroconta,null);
				this.setActualParaGuardarMonedaForeignKey(parametroconta,null);
				this.setActualParaGuardarMonedaExtranjeraForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableActivoForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContablePasivoForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContablePatrimonioForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableIngresoForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableEgresoForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableResumenForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableDeudorForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableAcreedorForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableIngreso1ForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableIngreso2ForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableIngreso3ForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableEgreso1ForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableEgreso2ForeignKey(parametroconta,null);
				this.setActualParaGuardarCuentaContableEgreso3ForeignKey(parametroconta,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ParametroConta parametroconta,ParametroConta parametrocontaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalParametroConta(parametroconta);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		parametrocontaAux.setId(parametroconta.getId());
		parametrocontaAux.setVersionRow(parametroconta.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessParametroConta();
		
			int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = parametrocontaValidator.getInvalidValues(this.parametroconta);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			parametrocontaLogic.setDatosCliente(datosCliente);
			parametrocontaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				parametrocontaAux=new  ParametroConta();
				
				parametrocontaAux.setIsNew(true);
				parametrocontaAux.setIsChanged(true);
				
				parametrocontaAux.setParametroContaOriginal(this.parametroconta);
				
				parametrocontaAux.setId(this.parametroconta.getId());	
				parametrocontaAux.setVersionRow(this.parametroconta.getVersionRow());	
				parametrocontaAux.setid_empresa(this.parametroconta.getid_empresa());	
				parametrocontaAux.setid_moneda(this.parametroconta.getid_moneda());	
				parametrocontaAux.setid_moneda_extranjera(this.parametroconta.getid_moneda_extranjera());	
				parametrocontaAux.setcon_mascara(this.parametroconta.getcon_mascara());	
				parametrocontaAux.setnumero_nivel(this.parametroconta.getnumero_nivel());	
				parametrocontaAux.setes_presupuesto(this.parametroconta.getes_presupuesto());	
				parametrocontaAux.setes_lote(this.parametroconta.getes_lote());	
				parametrocontaAux.setcon_secuencial_automatico(this.parametroconta.getcon_secuencial_automatico());	
				parametrocontaAux.setcon_cuentas_niff(this.parametroconta.getcon_cuentas_niff());	
				parametrocontaAux.setcon_centro_costo_mascara(this.parametroconta.getcon_centro_costo_mascara());	
				parametrocontaAux.setcon_centro_costo_nueva_estructura(this.parametroconta.getcon_centro_costo_nueva_estructura());	
				parametrocontaAux.setcentro_costo_numero_nivel(this.parametroconta.getcentro_costo_numero_nivel());	
				parametrocontaAux.setid_cuenta_contable_activo(this.parametroconta.getid_cuenta_contable_activo());	
				parametrocontaAux.setid_cuenta_contable_pasivo(this.parametroconta.getid_cuenta_contable_pasivo());	
				parametrocontaAux.setid_cuenta_contable_patrimonio(this.parametroconta.getid_cuenta_contable_patrimonio());	
				parametrocontaAux.setid_cuenta_contable_ingreso(this.parametroconta.getid_cuenta_contable_ingreso());	
				parametrocontaAux.setid_cuenta_contable_egreso(this.parametroconta.getid_cuenta_contable_egreso());	
				parametrocontaAux.setid_cuenta_contable_resumen(this.parametroconta.getid_cuenta_contable_resumen());	
				parametrocontaAux.setid_cuenta_contable_deudor(this.parametroconta.getid_cuenta_contable_deudor());	
				parametrocontaAux.setid_cuenta_contable_acreedor(this.parametroconta.getid_cuenta_contable_acreedor());	
				
				if(this.parametroconta.getid_cuenta_contable_ingreso1()!=null && this.parametroconta.getid_cuenta_contable_ingreso1()>0L) {
					parametrocontaAux.setid_cuenta_contable_ingreso1(this.parametroconta.getid_cuenta_contable_ingreso1());
				} else {
					parametrocontaAux.setid_cuenta_contable_ingreso1(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_ingreso2()!=null && this.parametroconta.getid_cuenta_contable_ingreso2()>0L) {
					parametrocontaAux.setid_cuenta_contable_ingreso2(this.parametroconta.getid_cuenta_contable_ingreso2());
				} else {
					parametrocontaAux.setid_cuenta_contable_ingreso2(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_ingreso3()!=null && this.parametroconta.getid_cuenta_contable_ingreso3()>0L) {
					parametrocontaAux.setid_cuenta_contable_ingreso3(this.parametroconta.getid_cuenta_contable_ingreso3());
				} else {
					parametrocontaAux.setid_cuenta_contable_ingreso3(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_egreso1()!=null && this.parametroconta.getid_cuenta_contable_egreso1()>0L) {
					parametrocontaAux.setid_cuenta_contable_egreso1(this.parametroconta.getid_cuenta_contable_egreso1());
				} else {
					parametrocontaAux.setid_cuenta_contable_egreso1(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_egreso2()!=null && this.parametroconta.getid_cuenta_contable_egreso2()>0L) {
					parametrocontaAux.setid_cuenta_contable_egreso2(this.parametroconta.getid_cuenta_contable_egreso2());
				} else {
					parametrocontaAux.setid_cuenta_contable_egreso2(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_egreso3()!=null && this.parametroconta.getid_cuenta_contable_egreso3()>0L) {
					parametrocontaAux.setid_cuenta_contable_egreso3(this.parametroconta.getid_cuenta_contable_egreso3());
				} else {
					parametrocontaAux.setid_cuenta_contable_egreso3(null);
				}	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrocontaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(parametrocontaAux,parametrocontaLogic.getParametroContas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocontaAux,parametrocontas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.parametrocontaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrocontaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.saveParametroContas();//WithConnection
						//parametrocontaLogic.getSetVersionRowParametroContas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametroconta,parametrocontaAux);
					
					this.refrescarForeignKeysDescripcionesParametroConta();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles().addAll(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetallesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalles.addAll(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetallesEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrocontaLogic.saveParametroContaRelaciones(parametrocontaAux,this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles());//WithConnection
								//parametrocontaLogic.getSetVersionRowParametroContas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametroconta,parametrocontaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.setParametroContaDetalles(new ArrayList<ParametroContaDetalle>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalles= new ArrayList<ParametroContaDetalle>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.quitarFilaTotales();}
							parametrocontaAux.setParametroContaDetalles(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrocontaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrocontaAux,parametrocontaLogic.getParametroContas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrocontaAux,parametrocontas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametroconta,parametrocontaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				parametrocontaAux=new  ParametroConta();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.parametrocontaSessionBean.getEsGuardarRelacionado() 
					|| (this.parametrocontaSessionBean.getEsGuardarRelacionado() && this.parametroconta.getId()>=0)) {
						
					parametrocontaAux.setIsNew(false);
				}
				
				parametrocontaAux.setIsDeleted(false);
			
				parametrocontaAux.setId(this.parametroconta.getId());	
				parametrocontaAux.setVersionRow(this.parametroconta.getVersionRow());	
				parametrocontaAux.setid_empresa(this.parametroconta.getid_empresa());	
				parametrocontaAux.setid_moneda(this.parametroconta.getid_moneda());	
				parametrocontaAux.setid_moneda_extranjera(this.parametroconta.getid_moneda_extranjera());	
				parametrocontaAux.setcon_mascara(this.parametroconta.getcon_mascara());	
				parametrocontaAux.setnumero_nivel(this.parametroconta.getnumero_nivel());	
				parametrocontaAux.setes_presupuesto(this.parametroconta.getes_presupuesto());	
				parametrocontaAux.setes_lote(this.parametroconta.getes_lote());	
				parametrocontaAux.setcon_secuencial_automatico(this.parametroconta.getcon_secuencial_automatico());	
				parametrocontaAux.setcon_cuentas_niff(this.parametroconta.getcon_cuentas_niff());	
				parametrocontaAux.setcon_centro_costo_mascara(this.parametroconta.getcon_centro_costo_mascara());	
				parametrocontaAux.setcon_centro_costo_nueva_estructura(this.parametroconta.getcon_centro_costo_nueva_estructura());	
				parametrocontaAux.setcentro_costo_numero_nivel(this.parametroconta.getcentro_costo_numero_nivel());	
				parametrocontaAux.setid_cuenta_contable_activo(this.parametroconta.getid_cuenta_contable_activo());	
				parametrocontaAux.setid_cuenta_contable_pasivo(this.parametroconta.getid_cuenta_contable_pasivo());	
				parametrocontaAux.setid_cuenta_contable_patrimonio(this.parametroconta.getid_cuenta_contable_patrimonio());	
				parametrocontaAux.setid_cuenta_contable_ingreso(this.parametroconta.getid_cuenta_contable_ingreso());	
				parametrocontaAux.setid_cuenta_contable_egreso(this.parametroconta.getid_cuenta_contable_egreso());	
				parametrocontaAux.setid_cuenta_contable_resumen(this.parametroconta.getid_cuenta_contable_resumen());	
				parametrocontaAux.setid_cuenta_contable_deudor(this.parametroconta.getid_cuenta_contable_deudor());	
				parametrocontaAux.setid_cuenta_contable_acreedor(this.parametroconta.getid_cuenta_contable_acreedor());	
				
				if(this.parametroconta.getid_cuenta_contable_ingreso1()!=null && this.parametroconta.getid_cuenta_contable_ingreso1()>0L) {
					parametrocontaAux.setid_cuenta_contable_ingreso1(this.parametroconta.getid_cuenta_contable_ingreso1());
				} else {
					parametrocontaAux.setid_cuenta_contable_ingreso1(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_ingreso2()!=null && this.parametroconta.getid_cuenta_contable_ingreso2()>0L) {
					parametrocontaAux.setid_cuenta_contable_ingreso2(this.parametroconta.getid_cuenta_contable_ingreso2());
				} else {
					parametrocontaAux.setid_cuenta_contable_ingreso2(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_ingreso3()!=null && this.parametroconta.getid_cuenta_contable_ingreso3()>0L) {
					parametrocontaAux.setid_cuenta_contable_ingreso3(this.parametroconta.getid_cuenta_contable_ingreso3());
				} else {
					parametrocontaAux.setid_cuenta_contable_ingreso3(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_egreso1()!=null && this.parametroconta.getid_cuenta_contable_egreso1()>0L) {
					parametrocontaAux.setid_cuenta_contable_egreso1(this.parametroconta.getid_cuenta_contable_egreso1());
				} else {
					parametrocontaAux.setid_cuenta_contable_egreso1(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_egreso2()!=null && this.parametroconta.getid_cuenta_contable_egreso2()>0L) {
					parametrocontaAux.setid_cuenta_contable_egreso2(this.parametroconta.getid_cuenta_contable_egreso2());
				} else {
					parametrocontaAux.setid_cuenta_contable_egreso2(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_egreso3()!=null && this.parametroconta.getid_cuenta_contable_egreso3()>0L) {
					parametrocontaAux.setid_cuenta_contable_egreso3(this.parametroconta.getid_cuenta_contable_egreso3());
				} else {
					parametrocontaAux.setid_cuenta_contable_egreso3(null);
				}	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrocontaAux,parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocontaAux,parametrocontas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.parametrocontaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrocontaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.saveParametroContas();//WithConnection
						//parametrocontaLogic.getSetVersionRowParametroContas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametroconta,parametrocontaAux);
					
					this.refrescarForeignKeysDescripcionesParametroConta();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles().addAll(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetallesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalles.addAll(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetallesEliminados);
						}
						//ARCHITECTURE
						
						if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrocontaLogic.saveParametroContaRelaciones(parametrocontaAux,this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles());//WithConnection
								//parametrocontaLogic.getSetVersionRowParametroContas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametroconta,parametrocontaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.setParametroContaDetalles(new ArrayList<ParametroContaDetalle>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalles= new ArrayList<ParametroContaDetalle>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.quitarFilaTotales();}
							parametrocontaAux.setParametroContaDetalles(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrocontaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrocontaAux,parametrocontaLogic.getParametroContas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrocontaAux,parametrocontas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametroconta,parametrocontaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				parametrocontaAux=new  ParametroConta();
				
				parametrocontaAux.setIsNew(false);
				parametrocontaAux.setIsChanged(false);
				
				parametrocontaAux.setIsDeleted(true);
				
				parametrocontaAux.setId(this.parametroconta.getId());	
				parametrocontaAux.setVersionRow(this.parametroconta.getVersionRow());	
				parametrocontaAux.setid_empresa(this.parametroconta.getid_empresa());	
				parametrocontaAux.setid_moneda(this.parametroconta.getid_moneda());	
				parametrocontaAux.setid_moneda_extranjera(this.parametroconta.getid_moneda_extranjera());	
				parametrocontaAux.setcon_mascara(this.parametroconta.getcon_mascara());	
				parametrocontaAux.setnumero_nivel(this.parametroconta.getnumero_nivel());	
				parametrocontaAux.setes_presupuesto(this.parametroconta.getes_presupuesto());	
				parametrocontaAux.setes_lote(this.parametroconta.getes_lote());	
				parametrocontaAux.setcon_secuencial_automatico(this.parametroconta.getcon_secuencial_automatico());	
				parametrocontaAux.setcon_cuentas_niff(this.parametroconta.getcon_cuentas_niff());	
				parametrocontaAux.setcon_centro_costo_mascara(this.parametroconta.getcon_centro_costo_mascara());	
				parametrocontaAux.setcon_centro_costo_nueva_estructura(this.parametroconta.getcon_centro_costo_nueva_estructura());	
				parametrocontaAux.setcentro_costo_numero_nivel(this.parametroconta.getcentro_costo_numero_nivel());	
				parametrocontaAux.setid_cuenta_contable_activo(this.parametroconta.getid_cuenta_contable_activo());	
				parametrocontaAux.setid_cuenta_contable_pasivo(this.parametroconta.getid_cuenta_contable_pasivo());	
				parametrocontaAux.setid_cuenta_contable_patrimonio(this.parametroconta.getid_cuenta_contable_patrimonio());	
				parametrocontaAux.setid_cuenta_contable_ingreso(this.parametroconta.getid_cuenta_contable_ingreso());	
				parametrocontaAux.setid_cuenta_contable_egreso(this.parametroconta.getid_cuenta_contable_egreso());	
				parametrocontaAux.setid_cuenta_contable_resumen(this.parametroconta.getid_cuenta_contable_resumen());	
				parametrocontaAux.setid_cuenta_contable_deudor(this.parametroconta.getid_cuenta_contable_deudor());	
				parametrocontaAux.setid_cuenta_contable_acreedor(this.parametroconta.getid_cuenta_contable_acreedor());	
				
				if(this.parametroconta.getid_cuenta_contable_ingreso1()!=null && this.parametroconta.getid_cuenta_contable_ingreso1()>0L) {
					parametrocontaAux.setid_cuenta_contable_ingreso1(this.parametroconta.getid_cuenta_contable_ingreso1());
				} else {
					parametrocontaAux.setid_cuenta_contable_ingreso1(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_ingreso2()!=null && this.parametroconta.getid_cuenta_contable_ingreso2()>0L) {
					parametrocontaAux.setid_cuenta_contable_ingreso2(this.parametroconta.getid_cuenta_contable_ingreso2());
				} else {
					parametrocontaAux.setid_cuenta_contable_ingreso2(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_ingreso3()!=null && this.parametroconta.getid_cuenta_contable_ingreso3()>0L) {
					parametrocontaAux.setid_cuenta_contable_ingreso3(this.parametroconta.getid_cuenta_contable_ingreso3());
				} else {
					parametrocontaAux.setid_cuenta_contable_ingreso3(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_egreso1()!=null && this.parametroconta.getid_cuenta_contable_egreso1()>0L) {
					parametrocontaAux.setid_cuenta_contable_egreso1(this.parametroconta.getid_cuenta_contable_egreso1());
				} else {
					parametrocontaAux.setid_cuenta_contable_egreso1(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_egreso2()!=null && this.parametroconta.getid_cuenta_contable_egreso2()>0L) {
					parametrocontaAux.setid_cuenta_contable_egreso2(this.parametroconta.getid_cuenta_contable_egreso2());
				} else {
					parametrocontaAux.setid_cuenta_contable_egreso2(null);
				}	
				
				if(this.parametroconta.getid_cuenta_contable_egreso3()!=null && this.parametroconta.getid_cuenta_contable_egreso3()>0L) {
					parametrocontaAux.setid_cuenta_contable_egreso3(this.parametroconta.getid_cuenta_contable_egreso3());
				} else {
					parametrocontaAux.setid_cuenta_contable_egreso3(null);
				}	
				
				if(this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.parametrocontaAux.getId()>=0) {	
						this.parametrocontasEliminados.add(parametrocontaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(parametrocontaAux,parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocontaAux,parametrocontas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.parametrocontaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrocontaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.saveParametroContas();//WithConnection
						//parametrocontaLogic.getSetVersionRowParametroContas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles().addAll(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetallesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalles.addAll(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetallesEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrocontaLogic.saveParametroContaRelaciones(parametrocontaAux,this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles());//WithConnection
								//parametrocontaLogic.getSetVersionRowParametroContas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.setParametroContaDetalles(new ArrayList<ParametroContaDetalle>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalles= new ArrayList<ParametroContaDetalle>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.quitarFilaTotales();}
							parametrocontaAux.setParametroContaDetalles(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.parametrocontaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(parametrocontaAux,parametrocontaLogic.getParametroContas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(parametrocontaAux,parametrocontas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getParametroContas().addAll(this.parametrocontasEliminados);
					
					parametrocontaLogic.saveParametroContas();//WithConnection
					//parametrocontaLogic.getSetVersionRowParametroContas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesParametroConta();
				
				this.parametrocontasEliminados= new ArrayList<ParametroConta>();		
			}
			
			if(this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Parametro Contabilidad GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.parametroconta=parametrocontaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessParametroConta();
      	}
		
	}	
	
	public void actualizarRelaciones(ParametroConta parametrocontaLocal) throws Exception {
		
		if(this.parametrocontaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				parametrocontaLocal.setParametroContaDetalles(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles());
			
			} else {
			
				parametrocontaLocal.setParametroContaDetalles(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalles);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ParametroConta parametrocontaLocal) throws Exception {	
		if(this.parametrocontaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				parametrocontaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				parametrocontaLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaextranjeraBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaextranjeraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaextranjeraBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaextranjeraBeanSwingJInternalFrameLocal.actualizarLista(monedaextranjeraBeanSwingJInternalFrameLocal.moneda,this.monedaextranjerasForeignKey);

				monedaextranjeraBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaextranjeraBeanSwingJInternalFrameLocal.moneda);

				parametrocontaLocal.setMonedaExtranjera(monedaextranjeraBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMonedaExtranjera();
				this.cargarCombosFrameMonedaExtranjerasForeignKey("Formulario");
				this.setActualMonedaExtranjeraForeignKey(monedaextranjeraBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableactivoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableactivoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableactivoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableactivoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableactivoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableactivosForeignKey);

				cuentacontableactivoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableactivoBeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableActivo(cuentacontableactivoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableActivo();
				this.cargarCombosFrameCuentaContableActivosForeignKey("Formulario");
				this.setActualCuentaContableActivoForeignKey(cuentacontableactivoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablepasivoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablepasivoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablepasivoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablepasivoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablepasivoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablepasivosForeignKey);

				cuentacontablepasivoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablepasivoBeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContablePasivo(cuentacontablepasivoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContablePasivo();
				this.cargarCombosFrameCuentaContablePasivosForeignKey("Formulario");
				this.setActualCuentaContablePasivoForeignKey(cuentacontablepasivoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablepatrimonioBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablepatrimonioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablepatrimonioBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablepatrimonioBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablepatrimonioBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablepatrimoniosForeignKey);

				cuentacontablepatrimonioBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablepatrimonioBeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContablePatrimonio(cuentacontablepatrimonioBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContablePatrimonio();
				this.cargarCombosFrameCuentaContablePatrimoniosForeignKey("Formulario");
				this.setActualCuentaContablePatrimonioForeignKey(cuentacontablepatrimonioBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableingresoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableingresoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableingresoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableingresoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableingresoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableingresosForeignKey);

				cuentacontableingresoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableingresoBeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableIngreso(cuentacontableingresoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIngreso();
				this.cargarCombosFrameCuentaContableIngresosForeignKey("Formulario");
				this.setActualCuentaContableIngresoForeignKey(cuentacontableingresoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableegresoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableegresoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableegresoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableegresoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableegresoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableegresosForeignKey);

				cuentacontableegresoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableegresoBeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableEgreso(cuentacontableegresoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableEgreso();
				this.cargarCombosFrameCuentaContableEgresosForeignKey("Formulario");
				this.setActualCuentaContableEgresoForeignKey(cuentacontableegresoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableresumenBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableresumenBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableresumenBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableresumenBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableresumenBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableresumensForeignKey);

				cuentacontableresumenBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableresumenBeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableResumen(cuentacontableresumenBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableResumen();
				this.cargarCombosFrameCuentaContableResumensForeignKey("Formulario");
				this.setActualCuentaContableResumenForeignKey(cuentacontableresumenBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontabledeudorBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontabledeudorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontabledeudorBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontabledeudorBeanSwingJInternalFrameLocal.actualizarLista(cuentacontabledeudorBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontabledeudorsForeignKey);

				cuentacontabledeudorBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontabledeudorBeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableDeudor(cuentacontabledeudorBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableDeudor();
				this.cargarCombosFrameCuentaContableDeudorsForeignKey("Formulario");
				this.setActualCuentaContableDeudorForeignKey(cuentacontabledeudorBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableacreedorBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableacreedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableacreedorBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableacreedorBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableacreedorBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableacreedorsForeignKey);

				cuentacontableacreedorBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableacreedorBeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableAcreedor(cuentacontableacreedorBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableAcreedor();
				this.cargarCombosFrameCuentaContableAcreedorsForeignKey("Formulario");
				this.setActualCuentaContableAcreedorForeignKey(cuentacontableacreedorBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableingreso1BeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableingreso1BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableingreso1BeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableingreso1BeanSwingJInternalFrameLocal.actualizarLista(cuentacontableingreso1BeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableingreso1sForeignKey);

				cuentacontableingreso1BeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableingreso1BeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableIngreso1(cuentacontableingreso1BeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIngreso1();
				this.cargarCombosFrameCuentaContableIngreso1sForeignKey("Formulario");
				this.setActualCuentaContableIngreso1ForeignKey(cuentacontableingreso1BeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableingreso2BeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableingreso2BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableingreso2BeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableingreso2BeanSwingJInternalFrameLocal.actualizarLista(cuentacontableingreso2BeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableingreso2sForeignKey);

				cuentacontableingreso2BeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableingreso2BeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableIngreso2(cuentacontableingreso2BeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIngreso2();
				this.cargarCombosFrameCuentaContableIngreso2sForeignKey("Formulario");
				this.setActualCuentaContableIngreso2ForeignKey(cuentacontableingreso2BeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableingreso3BeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableingreso3BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableingreso3BeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableingreso3BeanSwingJInternalFrameLocal.actualizarLista(cuentacontableingreso3BeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableingreso3sForeignKey);

				cuentacontableingreso3BeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableingreso3BeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableIngreso3(cuentacontableingreso3BeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIngreso3();
				this.cargarCombosFrameCuentaContableIngreso3sForeignKey("Formulario");
				this.setActualCuentaContableIngreso3ForeignKey(cuentacontableingreso3BeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableegreso1BeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableegreso1BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableegreso1BeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableegreso1BeanSwingJInternalFrameLocal.actualizarLista(cuentacontableegreso1BeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableegreso1sForeignKey);

				cuentacontableegreso1BeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableegreso1BeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableEgreso1(cuentacontableegreso1BeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableEgreso1();
				this.cargarCombosFrameCuentaContableEgreso1sForeignKey("Formulario");
				this.setActualCuentaContableEgreso1ForeignKey(cuentacontableegreso1BeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableegreso2BeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableegreso2BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableegreso2BeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableegreso2BeanSwingJInternalFrameLocal.actualizarLista(cuentacontableegreso2BeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableegreso2sForeignKey);

				cuentacontableegreso2BeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableegreso2BeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableEgreso2(cuentacontableegreso2BeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableEgreso2();
				this.cargarCombosFrameCuentaContableEgreso2sForeignKey("Formulario");
				this.setActualCuentaContableEgreso2ForeignKey(cuentacontableegreso2BeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableegreso3BeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableegreso3BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableegreso3BeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableegreso3BeanSwingJInternalFrameLocal.actualizarLista(cuentacontableegreso3BeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableegreso3sForeignKey);

				cuentacontableegreso3BeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableegreso3BeanSwingJInternalFrameLocal.cuentacontable);

				parametrocontaLocal.setCuentaContableEgreso3(cuentacontableegreso3BeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableEgreso3();
				this.cargarCombosFrameCuentaContableEgreso3sForeignKey("Formulario");
				this.setActualCuentaContableEgreso3ForeignKey(cuentacontableegreso3BeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarParametroContaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = parametrocontaValidator.getInvalidValues(this.parametroconta);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ParametroConta parametroconta,List<ParametroConta> parametrocontas) throws Exception {
		try	{		
			ParametroContaConstantesFunciones.actualizarLista(parametroconta,parametrocontas,this.parametrocontaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ParametroConta parametroconta,List<ParametroConta> parametrocontas) throws Exception {
		try	{			
			ParametroContaConstantesFunciones.actualizarSelectedLista(parametroconta,parametrocontas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ParametroConta> parametrocontasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				parametrocontasLocal=this.parametrocontaLogic.getParametroContas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				parametrocontasLocal=this.parametrocontas;
			}
			//ARCHITECTURE
		
			for(ParametroConta parametrocontaLocal:parametrocontasLocal) {
				if(this.permiteMantenimiento(parametrocontaLocal) && parametrocontaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ParametroContaConstantesFunciones.getParametroContaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_empresaParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_monedaParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDMONEDAEXTRANJERA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_moneda_extranjeraParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.CONMASCARA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_mascaraParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.NUMERONIVEL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelnumero_nivelParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.ESPRESUPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabeles_presupuestoParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.ESLOTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabeles_loteParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.CONSECUENCIALAUTOMATICO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_secuencial_automaticoParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.CONCUENTASNIFF)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_cuentas_niffParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.CONCENTROCOSTOMASCARA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_centro_costo_mascaraParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.CONCENTROCOSTONUEVAESTRUCTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_centro_costo_nueva_estructuraParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.CENTROCOSTONUMERONIVEL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcentro_costo_numero_nivelParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEACTIVO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_activoParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEPASIVO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_pasivoParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEPATRIMONIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_patrimonioParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEINGRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_ingresoParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEEGRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_egresoParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLERESUMEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_resumenParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEDEUDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_deudorParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEACREEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_acreedorParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEINGRESO1)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_ingreso1ParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEINGRESO2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_ingreso2ParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEINGRESO3)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_ingreso3ParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEEGRESO1)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_egreso1ParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEEGRESO2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_egreso2ParametroConta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroContaConstantesFunciones.IDCUENTACONTABLEEGRESO3)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_egreso3ParametroConta,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_empresaParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_monedaParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_moneda_extranjeraParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelcon_mascaraParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelnumero_nivelParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabeles_presupuestoParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabeles_loteParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelcon_secuencial_automaticoParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelcon_cuentas_niffParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelcon_centro_costo_mascaraParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelcon_centro_costo_nueva_estructuraParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelcentro_costo_numero_nivelParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_activoParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_pasivoParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_patrimonioParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_ingresoParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_egresoParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_resumenParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_deudorParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_acreedorParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_ingreso1ParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_ingreso2ParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_ingreso3ParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_egreso1ParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_egreso2ParametroConta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroConta.jLabelid_cuenta_contable_egreso3ParametroConta,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("ParametroContaDetalle")) {
			if(this.parametroconta==null) {
				this.parametroconta= new ParametroConta();
			}

			if(this.parametrocontaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoParametroConta
				this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.getparametrocontadetalle().setParametroConta(this.parametroconta);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoParametroConta--;	
		
		
		this.parametrocontaAux=new ParametroConta();
		
		this.parametrocontaAux.setId(this.iIdNuevoParametroConta);
		this.parametrocontaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrocontaLogic.getParametroContas().add(this.parametrocontaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.parametrocontas.add(this.parametrocontaAux);
		}
		//ARCHITECTURE
		
		this.parametroconta=this.parametrocontaAux;
		
		if(ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioParametroConta(this.parametroconta);
			this.setVariablesObjetoActualToFormularioForeignKeyParametroConta(this.parametroconta);
		}
				
		//this.setDefaultControlesParametroConta();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyParametroConta();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyParametroConta();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroConta();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroConta(this.parametrocontaBean,this.parametroconta,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ParametroContaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.parametrocontaSessionBean.getConGuardarRelaciones()) {
			classes=ParametroContaConstantesFunciones.getClassesRelationshipsOfParametroConta(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.parametrocontaReturnGeneral=parametrocontaLogic.procesarEventosParametroContasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrocontaLogic.getParametroContas(),this.parametroconta,this.parametrocontaParameterGeneral,this.isEsNuevoParametroConta,classes);//this.parametrocontaLogic.getParametroConta()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanParametroConta(this.parametrocontaReturnGeneral,this.parametrocontaBean,false);
		
		if(this.parametrocontaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyParametroConta(this.parametrocontaReturnGeneral.getParametroConta());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioParametroConta(this.parametrocontaReturnGeneral.getParametroConta());
		}
		
		if(this.parametrocontaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioParametroConta(this.parametrocontaReturnGeneral.getParametroConta(),classes);//this.parametrocontaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyParametroConta();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyParametroConta();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroContaBeanSwingJInternalFrameAdditional.RecargarFormParametroConta(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingParametroConta(false);
						
			if(parametrocontaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleSessionBean.getEsGuardarRelacionado() && ParametroContaDetalleJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParametroContaDetalleActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroConta();
			}
			
			this.actualizarVisualTableDatosParametroConta();
			
			this.jTableDatosParametroConta.setRowSelectionInterval(this.getIndiceNuevoParametroConta(), this.getIndiceNuevoParametroConta());
			
			this.seleccionarFilaTablaParametroContaActual();
						
			this.actualizarEstadoCeldasBotonesParametroConta("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesParametroConta(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_mascaraParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarcon_mascaraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jTextFieldnumero_nivelParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarnumero_nivelParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_presupuestoParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activares_presupuestoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_loteParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activares_loteParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_secuencial_automaticoParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarcon_secuencial_automaticoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_cuentas_niffParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarcon_cuentas_niffParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_mascaraParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarcon_centro_costo_mascaraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_nueva_estructuraParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarcon_centro_costo_nueva_estructuraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jTextFieldcentro_costo_numero_nivelParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarcentro_costo_numero_nivelParametroConta);	
		//
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_empresaParametroConta);//
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_monedaParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_moneda_extranjeraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_activoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_pasivoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_patrimonioParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingresoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egresoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_resumenParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_deudorParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_acreedorParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso1ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso2ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso3ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso1ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso2ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.setEnabled(isHabilitar && this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso3ParametroConta);
	};
	
	public void setDefaultControlesParametroConta() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoParametroConta(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.parametrocontaSessionBean.setConGuardarRelaciones(true);			
			this.parametrocontaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.parametrocontaSessionBean.setConGuardarRelaciones(false);			
			this.parametrocontaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoParametroConta() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroConta parametrocontaAux:this.parametrocontaLogic.getParametroContas()) {
				if(parametrocontaAux.getId().equals(this.iIdNuevoParametroConta)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroConta parametrocontaAux:this.parametrocontas) {
				if(parametrocontaAux.getId().equals(this.iIdNuevoParametroConta)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualParametroConta(ParametroConta parametroconta,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroConta parametrocontaAux:this.parametrocontaLogic.getParametroContas()) {
				if(parametrocontaAux.getId().equals(parametroconta.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroConta parametrocontaAux:this.parametrocontas) {
				if(parametrocontaAux.getId().equals(parametroconta.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalParametroConta(ParametroConta parametrocontaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroConta parametrocontaAux:this.parametrocontaLogic.getParametroContas()) {
				if(parametrocontaAux.getParametroContaOriginal().getId().equals(parametrocontaOriginal.getId())) {
					existe=true;
					parametrocontaOriginal.setId(parametrocontaAux.getId());
					parametrocontaOriginal.setVersionRow(parametrocontaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroConta parametrocontaAux:this.parametrocontas) {
				if(parametrocontaAux.getParametroContaOriginal().getId().equals(parametrocontaOriginal.getId())) {
					existe=true;
					parametrocontaOriginal.setId(parametrocontaAux.getId());
					parametrocontaOriginal.setVersionRow(parametrocontaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosParametroConta(Boolean esParaCancelar) throws Exception {
		parametrocontasAux=new ArrayList<ParametroConta>();
		parametrocontaAux=new ParametroConta();
		
		if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroConta parametrocontaAux:this.parametrocontaLogic.getParametroContas()) {
					if(parametrocontaAux.getId()<0) {
						parametrocontasAux.add(parametrocontaAux);
					}		
				}
				this.iIdNuevoParametroConta=0L;
				this.parametrocontaLogic.getParametroContas().removeAll(parametrocontasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroConta parametrocontaAux:this.parametrocontas) {
					if(parametrocontaAux.getId()<0) {
						parametrocontasAux.add(parametrocontaAux);
					}		
				}
				this.iIdNuevoParametroConta=0L;
				this.parametrocontas.removeAll(parametrocontasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoParametroConta 
					&& this.parametrocontaLogic.getParametroContas().size()>0
					) {
					parametrocontaAux=this.parametrocontaLogic.getParametroContas().get(this.parametrocontaLogic.getParametroContas().size() - 1);
				
					if(parametrocontaAux.getId()<0) {
						this.parametrocontaLogic.getParametroContas().remove(parametrocontaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoParametroConta && this.parametrocontas.size()>0) {
					parametrocontaAux=this.parametrocontas.get(this.parametrocontas.size() - 1);
				
					if(parametrocontaAux.getId()<0) {
						this.parametrocontas.remove(parametrocontaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoParametroConta(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(parametroconta.getId()<0) {
				this.parametrocontaLogic.getParametroContas().remove(this.parametroconta);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(parametroconta.getId()<0) {
				this.parametrocontas.remove(this.parametroconta);
			}
		}			
	}
	
	public void setEstadosInicialesParametroConta(List<ParametroConta> parametrocontasAux) throws Exception {
		ParametroContaConstantesFunciones.setEstadosInicialesParametroConta(parametrocontasAux);
	}
	
	public void setEstadosInicialesParametroConta(ParametroConta parametrocontaAux) throws Exception {
		ParametroContaConstantesFunciones.setEstadosInicialesParametroConta(parametrocontaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarParametroContaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesParametroConta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarParametroContaActual()) {
				if(!this.isEsNuevoParametroConta) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesParametroConta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoParametroConta=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarParametroContaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Parametro Contabilidad ?", "MANTENIMIENTO DE Parametro Contabilidad", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesParametroConta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ParametroConta parametroconta) throws Exception {
		ParametroContaConstantesFunciones.seleccionarAsignar(this.parametroconta,parametroconta);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarParametroConta=this.isPermisoActualizarOriginalParametroConta;
			
			
			this.seleccionarAsignar(parametroconta);
			
			

			idCuentaContableActivoActual=parametroconta.getid_cuenta_contable_activo();
			this.seleccionarCuentaContableActivoActual();

			idCuentaContablePasivoActual=parametroconta.getid_cuenta_contable_pasivo();
			this.seleccionarCuentaContablePasivoActual();

			idCuentaContablePatrimonioActual=parametroconta.getid_cuenta_contable_patrimonio();
			this.seleccionarCuentaContablePatrimonioActual();

			idCuentaContableIngresoActual=parametroconta.getid_cuenta_contable_ingreso();
			this.seleccionarCuentaContableIngresoActual();

			idCuentaContableEgresoActual=parametroconta.getid_cuenta_contable_egreso();
			this.seleccionarCuentaContableEgresoActual();

			idCuentaContableResumenActual=parametroconta.getid_cuenta_contable_resumen();
			this.seleccionarCuentaContableResumenActual();

			idCuentaContableDeudorActual=parametroconta.getid_cuenta_contable_deudor();
			this.seleccionarCuentaContableDeudorActual();

			idCuentaContableAcreedorActual=parametroconta.getid_cuenta_contable_acreedor();
			this.seleccionarCuentaContableAcreedorActual();

			idCuentaContableIngreso1Actual=parametroconta.getid_cuenta_contable_ingreso1();
			this.seleccionarCuentaContableIngreso1Actual();

			idCuentaContableIngreso2Actual=parametroconta.getid_cuenta_contable_ingreso2();
			this.seleccionarCuentaContableIngreso2Actual();

			idCuentaContableIngreso3Actual=parametroconta.getid_cuenta_contable_ingreso3();
			this.seleccionarCuentaContableIngreso3Actual();

			idCuentaContableEgreso1Actual=parametroconta.getid_cuenta_contable_egreso1();
			this.seleccionarCuentaContableEgreso1Actual();

			idCuentaContableEgreso2Actual=parametroconta.getid_cuenta_contable_egreso2();
			this.seleccionarCuentaContableEgreso2Actual();

			idCuentaContableEgreso3Actual=parametroconta.getid_cuenta_contable_egreso3();
			this.seleccionarCuentaContableEgreso3Actual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroContaConstantesFunciones.quitarEspaciosParametroConta(this.parametroconta,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesParametroConta("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.parametrocontaSessionBean.setsFuncionBusquedaRapida(this.parametrocontaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCuentaContableActivoActual() throws Exception {
		try	{
			CuentaContable cuentacontableactivoAux=new CuentaContable();

			if(this.idCuentaContableActivoActual != null && this.idCuentaContableActivoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableactivoLogic.getEntityWithConnection(this.idCuentaContableActivoActual);
					cuentacontableactivoAux= cuentacontableactivoLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableactivosForeignKey=new ArrayList<CuentaContable>();
				cuentacontableactivosForeignKey.add(cuentacontableactivoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContablePasivoActual() throws Exception {
		try	{
			CuentaContable cuentacontablepasivoAux=new CuentaContable();

			if(this.idCuentaContablePasivoActual != null && this.idCuentaContablePasivoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontablepasivoLogic.getEntityWithConnection(this.idCuentaContablePasivoActual);
					cuentacontablepasivoAux= cuentacontablepasivoLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablepasivosForeignKey=new ArrayList<CuentaContable>();
				cuentacontablepasivosForeignKey.add(cuentacontablepasivoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContablePatrimonioActual() throws Exception {
		try	{
			CuentaContable cuentacontablepatrimonioAux=new CuentaContable();

			if(this.idCuentaContablePatrimonioActual != null && this.idCuentaContablePatrimonioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontablepatrimonioLogic.getEntityWithConnection(this.idCuentaContablePatrimonioActual);
					cuentacontablepatrimonioAux= cuentacontablepatrimonioLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablepatrimoniosForeignKey=new ArrayList<CuentaContable>();
				cuentacontablepatrimoniosForeignKey.add(cuentacontablepatrimonioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableIngresoActual() throws Exception {
		try	{
			CuentaContable cuentacontableingresoAux=new CuentaContable();

			if(this.idCuentaContableIngresoActual != null && this.idCuentaContableIngresoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableingresoLogic.getEntityWithConnection(this.idCuentaContableIngresoActual);
					cuentacontableingresoAux= cuentacontableingresoLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableingresosForeignKey=new ArrayList<CuentaContable>();
				cuentacontableingresosForeignKey.add(cuentacontableingresoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableEgresoActual() throws Exception {
		try	{
			CuentaContable cuentacontableegresoAux=new CuentaContable();

			if(this.idCuentaContableEgresoActual != null && this.idCuentaContableEgresoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableegresoLogic.getEntityWithConnection(this.idCuentaContableEgresoActual);
					cuentacontableegresoAux= cuentacontableegresoLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableegresosForeignKey=new ArrayList<CuentaContable>();
				cuentacontableegresosForeignKey.add(cuentacontableegresoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableResumenActual() throws Exception {
		try	{
			CuentaContable cuentacontableresumenAux=new CuentaContable();

			if(this.idCuentaContableResumenActual != null && this.idCuentaContableResumenActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableresumenLogic.getEntityWithConnection(this.idCuentaContableResumenActual);
					cuentacontableresumenAux= cuentacontableresumenLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableresumensForeignKey=new ArrayList<CuentaContable>();
				cuentacontableresumensForeignKey.add(cuentacontableresumenAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableDeudorActual() throws Exception {
		try	{
			CuentaContable cuentacontabledeudorAux=new CuentaContable();

			if(this.idCuentaContableDeudorActual != null && this.idCuentaContableDeudorActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontabledeudorLogic.getEntityWithConnection(this.idCuentaContableDeudorActual);
					cuentacontabledeudorAux= cuentacontabledeudorLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontabledeudorsForeignKey=new ArrayList<CuentaContable>();
				cuentacontabledeudorsForeignKey.add(cuentacontabledeudorAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableAcreedorActual() throws Exception {
		try	{
			CuentaContable cuentacontableacreedorAux=new CuentaContable();

			if(this.idCuentaContableAcreedorActual != null && this.idCuentaContableAcreedorActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableacreedorLogic.getEntityWithConnection(this.idCuentaContableAcreedorActual);
					cuentacontableacreedorAux= cuentacontableacreedorLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableacreedorsForeignKey=new ArrayList<CuentaContable>();
				cuentacontableacreedorsForeignKey.add(cuentacontableacreedorAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableIngreso1Actual() throws Exception {
		try	{
			CuentaContable cuentacontableingreso1Aux=new CuentaContable();

			if(this.idCuentaContableIngreso1Actual != null && this.idCuentaContableIngreso1Actual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableingreso1Logic.getEntityWithConnection(this.idCuentaContableIngreso1Actual);
					cuentacontableingreso1Aux= cuentacontableingreso1Logic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableingreso1sForeignKey=new ArrayList<CuentaContable>();
				cuentacontableingreso1sForeignKey.add(cuentacontableingreso1Aux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableIngreso2Actual() throws Exception {
		try	{
			CuentaContable cuentacontableingreso2Aux=new CuentaContable();

			if(this.idCuentaContableIngreso2Actual != null && this.idCuentaContableIngreso2Actual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableingreso2Logic.getEntityWithConnection(this.idCuentaContableIngreso2Actual);
					cuentacontableingreso2Aux= cuentacontableingreso2Logic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableingreso2sForeignKey=new ArrayList<CuentaContable>();
				cuentacontableingreso2sForeignKey.add(cuentacontableingreso2Aux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableIngreso3Actual() throws Exception {
		try	{
			CuentaContable cuentacontableingreso3Aux=new CuentaContable();

			if(this.idCuentaContableIngreso3Actual != null && this.idCuentaContableIngreso3Actual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableingreso3Logic.getEntityWithConnection(this.idCuentaContableIngreso3Actual);
					cuentacontableingreso3Aux= cuentacontableingreso3Logic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableingreso3sForeignKey=new ArrayList<CuentaContable>();
				cuentacontableingreso3sForeignKey.add(cuentacontableingreso3Aux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableEgreso1Actual() throws Exception {
		try	{
			CuentaContable cuentacontableegreso1Aux=new CuentaContable();

			if(this.idCuentaContableEgreso1Actual != null && this.idCuentaContableEgreso1Actual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableegreso1Logic.getEntityWithConnection(this.idCuentaContableEgreso1Actual);
					cuentacontableegreso1Aux= cuentacontableegreso1Logic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableegreso1sForeignKey=new ArrayList<CuentaContable>();
				cuentacontableegreso1sForeignKey.add(cuentacontableegreso1Aux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableEgreso2Actual() throws Exception {
		try	{
			CuentaContable cuentacontableegreso2Aux=new CuentaContable();

			if(this.idCuentaContableEgreso2Actual != null && this.idCuentaContableEgreso2Actual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableegreso2Logic.getEntityWithConnection(this.idCuentaContableEgreso2Actual);
					cuentacontableegreso2Aux= cuentacontableegreso2Logic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableegreso2sForeignKey=new ArrayList<CuentaContable>();
				cuentacontableegreso2sForeignKey.add(cuentacontableegreso2Aux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableEgreso3Actual() throws Exception {
		try	{
			CuentaContable cuentacontableegreso3Aux=new CuentaContable();

			if(this.idCuentaContableEgreso3Actual != null && this.idCuentaContableEgreso3Actual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableegreso3Logic.getEntityWithConnection(this.idCuentaContableEgreso3Actual);
					cuentacontableegreso3Aux= cuentacontableegreso3Logic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableegreso3sForeignKey=new ArrayList<CuentaContable>();
				cuentacontableegreso3sForeignKey.add(cuentacontableegreso3Aux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoParametroConta) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosParametroConta(esParaCancelar);				
				this.cancelarNuevoParametroConta(esParaCancelar);								
			}
			
			this.parametroconta=new ParametroConta();
			
			this.inicializarParametroConta();
			
			this.actualizarEstadoCeldasBotonesParametroConta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarParametroConta() throws Exception {
		try {
			ParametroContaConstantesFunciones.inicializarParametroConta(this.parametroconta);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.parametrocontaLogic.getParametroContas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteParametroContas(String sAccionBusqueda,List<ParametroConta> parametrocontasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ParametroConta"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ParametroContaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ParametroContaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ParametroConta"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Parametro Contabilidads");		
		parameters.put("busquedapor", ParametroContaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(ParametroContaDetalle.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					ParametroContaLogic parametrocontaLogicAuxiliar=new ParametroContaLogic();
					parametrocontaLogicAuxiliar.setDatosCliente(parametrocontaLogic.getDatosCliente());				
					parametrocontaLogicAuxiliar.setParametroContas(parametrocontasParaReportes);
					
					parametrocontaLogicAuxiliar.cargarRelacionesLoteForeignKeyParametroContaWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					parametrocontasParaReportes=parametrocontaLogicAuxiliar.getParametroContas();
					
					//parametrocontaLogic.getNewConnexionToDeep();
					
					//for (ParametroConta parametroconta:parametrocontasParaReportes) {
					//	parametrocontaLogic.deepLoad(parametroconta, false, DeepLoadType.INCLUDE, classes);
					//}						
					//parametrocontaLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//parametrocontaLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileParametroContaDetalle = AuxiliarReportes.class.getResourceAsStream("ParametroContaDetalleDetalleRelacionesDesign.jasper");
			parameters.put("subreport_parametrocontadetalle", reportFileParametroContaDetalle);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceParametroConta=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ParametroContaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ParametroContaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceParametroConta=new JRBeanArrayDataSource(ParametroContaJInternalFrame.TraerParametroContaBeans(parametrocontasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceParametroConta);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ParametroContaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ParametroContaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ParametroContaBean.TraerParametroContaBeans(parametrocontasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteParametroContas(sAccionBusqueda,sTipoArchivoReporte,parametrocontasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalParametroContas(sAccionBusqueda,sTipoArchivoReporte,parametrocontasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoParametroContaActionPerformed(null);
					//this.generarExcelReporteParametroContas(sAccionBusqueda,sTipoArchivoReporte,parametrocontasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalParametroContas(sAccionBusqueda,sTipoArchivoReporte,parametrocontasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesParametroContas(sAccionBusqueda,sTipoArchivoReporte,parametrocontasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesParametroContas(sAccionBusqueda,sTipoArchivoReporte,parametrocontasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteParametroContas(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroConta> parametrocontasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametroconta";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroContas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroConta("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ParametroConta parametroconta : parametrocontasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ParametroContaConstantesFunciones.generarExcelReporteDataParametroConta("NORMAL",row,workbook,parametroconta,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderParametroConta(String sTipo,Row row,Workbook workbook) {
		
		ParametroContaConstantesFunciones.generarExcelReporteHeaderParametroConta(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalParametroContas(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroConta> parametrocontasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametroconta_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroContas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ParametroConta parametroconta : parametrocontasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ParametroContaConstantesFunciones.getParametroContaDescripcion(parametroconta));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getmonedaextranjera_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_CONMASCARA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONMASCARA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametroconta.getcon_mascara()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_NUMERONIVEL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_NUMERONIVEL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getnumero_nivel());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametroconta.getes_presupuesto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_ESLOTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_ESLOTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametroconta.getes_lote()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametroconta.getcon_secuencial_automatico()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametroconta.getcon_cuentas_niff()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametroconta.getcon_centro_costo_mascara()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametroconta.getcon_centro_costo_nueva_estructura()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcentro_costo_numero_nivel());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableactivo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontablepasivo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontablepatrimonio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableingreso_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableegreso_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableresumen_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontabledeudor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableacreedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableingreso1_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableingreso2_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableingreso3_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableegreso1_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableegreso2_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametroconta.getcuentacontableegreso3_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesParametroContas(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroConta> parametrocontasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ParametroConta> parametrocontasRespaldo=null;
		
		classes=ParametroContaConstantesFunciones.getClassesRelationshipsOfParametroConta(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.parametrocontaLogic.setDatosCliente(this.datosCliente);
		this.parametrocontaLogic.setDatosDeep(this.datosDeep);
		this.parametrocontaLogic.setIsConDeep(true);
		
		parametrocontasRespaldo=this.parametrocontaLogic.getParametroContas();
		
		this.parametrocontaLogic.setParametroContas(parametrocontasParaReportes);	
		this.parametrocontaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		parametrocontasParaReportes=this.parametrocontaLogic.getParametroContas();
		this.parametrocontaLogic.setParametroContas(parametrocontasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametroconta_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroContas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroConta("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ParametroConta parametroconta : parametrocontasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderParametroConta("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ParametroContaConstantesFunciones.generarExcelReporteDataParametroConta("NORMAL",row,workbook,parametroconta,cellStyleDataAux);
		
			
			


				//ParametroContaDetalle
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ParametroContaDetalleConstantesFunciones.SCLASSWEBTITULO))) {

				if(parametroconta.getParametroContaDetalles()!=null && parametroconta.getParametroContaDetalles().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ParametroContaDetalleConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ParametroContaDetalleConstantesFunciones.generarExcelReporteHeaderParametroContaDetalle("RELACIONADO",row,workbook);
				}

				if(parametroconta.getParametroContaDetalles()!=null) {
					i2=0;
					for(ParametroContaDetalle parametrocontadetalle : parametroconta.getParametroContaDetalles()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ParametroContaDetalleConstantesFunciones.generarExcelReporteDataParametroContaDetalle("RELACIONADO",row,workbook,parametrocontadetalle,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ParametroContaConstantesFunciones.getParametroContaDescripcion(parametroconta));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroConta.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessParametroConta() throws Exception {		
		this.startProcessParametroConta(true);
	}
	
	public void startProcessParametroConta(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasParametroConta ,this.jPanelParametrosReportesParametroConta, this.jScrollPanelDatosParametroConta,this.jPanelPaginacionParametroConta, this.jScrollPanelDatosEdicionParametroConta, this.jPanelAccionesParametroConta,this.jPanelAccionesFormularioParametroConta,this.jmenuBarParametroConta,this.jmenuBarDetalleParametroConta,this.jTtoolBarParametroConta,this.jTtoolBarDetalleParametroConta);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroConta=this.jTabbedPaneBusquedasParametroConta; 
		
		final JPanel jPanelParametrosReportesParametroConta=this.jPanelParametrosReportesParametroConta;
		//final JScrollPane jScrollPanelDatosParametroConta=this.jScrollPanelDatosParametroConta;
		final JTable jTableDatosParametroConta=this.jTableDatosParametroConta;		
		final JPanel jPanelPaginacionParametroConta=this.jPanelPaginacionParametroConta;
		//final JScrollPane jScrollPanelDatosEdicionParametroConta=this.jScrollPanelDatosEdicionParametroConta;
		final JPanel jPanelAccionesParametroConta=this.jPanelAccionesParametroConta;
		
		JPanel jPanelCamposAuxiliarParametroConta=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarParametroConta=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) {
			jPanelCamposAuxiliarParametroConta=this.jInternalFrameDetalleFormParametroConta.jPanelCamposParametroConta;
			jPanelAccionesFormularioAuxiliarParametroConta=this.jInternalFrameDetalleFormParametroConta.jPanelAccionesFormularioParametroConta;
		}
		
		final JPanel jPanelCamposParametroConta=jPanelCamposAuxiliarParametroConta;
		final JPanel jPanelAccionesFormularioParametroConta=jPanelAccionesFormularioAuxiliarParametroConta;
		
		
		final JMenuBar jmenuBarParametroConta=this.jmenuBarParametroConta;
		final JToolBar jTtoolBarParametroConta=this.jTtoolBarParametroConta;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarParametroConta=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroConta=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) {
			jmenuBarDetalleAuxiliarParametroConta=this.jInternalFrameDetalleFormParametroConta.jmenuBarDetalleParametroConta;
			jTtoolBarDetalleAuxiliarParametroConta=this.jInternalFrameDetalleFormParametroConta.jTtoolBarDetalleParametroConta;
		}
		
		final JMenuBar jmenuBarDetalleParametroConta=jmenuBarDetalleAuxiliarParametroConta;
		final JToolBar jTtoolBarDetalleParametroConta=jTtoolBarDetalleAuxiliarParametroConta;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroConta;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroConta;
			processRunnable.jTableDatos=jTableDatosParametroConta;
			processRunnable.jPanelCampos=jPanelCamposParametroConta;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroConta;
			processRunnable.jPanelAcciones=jPanelAccionesParametroConta;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroConta;
			
			
			processRunnable.jmenuBar=jmenuBarParametroConta;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroConta;
			processRunnable.jTtoolBar=jTtoolBarParametroConta;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroConta;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroConta ,jPanelParametrosReportesParametroConta,jTableDatosParametroConta, /*jScrollPanelDatosParametroConta,*/jPanelCamposParametroConta,jPanelPaginacionParametroConta, /*jScrollPanelDatosEdicionParametroConta,*/ jPanelAccionesParametroConta,jPanelAccionesFormularioParametroConta,jmenuBarParametroConta,jmenuBarDetalleParametroConta,jTtoolBarParametroConta,jTtoolBarDetalleParametroConta);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroConta ,jPanelParametrosReportesParametroConta, jScrollPanelDatosParametroConta,jPanelPaginacionParametroConta, jScrollPanelDatosEdicionParametroConta, jPanelAccionesParametroConta,jPanelAccionesFormularioParametroConta,jmenuBarParametroConta,jmenuBarDetalleParametroConta,jTtoolBarParametroConta,jTtoolBarDetalleParametroConta);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessParametroConta() {// throws Exception 
		this.finishProcessParametroConta(true);
	}
	
	public void finishProcessParametroConta(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasParametroConta ,this.jPanelParametrosReportesParametroConta, this.jScrollPanelDatosParametroConta,this.jPanelPaginacionParametroConta, this.jScrollPanelDatosEdicionParametroConta, this.jPanelAccionesParametroConta,this.jPanelAccionesFormularioParametroConta,this.jmenuBarParametroConta,this.jmenuBarDetalleParametroConta,this.jTtoolBarParametroConta,this.jTtoolBarDetalleParametroConta);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroConta=this.jTabbedPaneBusquedasParametroConta; 
		
		final JPanel jPanelParametrosReportesParametroConta=this.jPanelParametrosReportesParametroConta;
		//final JScrollPane jScrollPanelDatosParametroConta=this.jScrollPanelDatosParametroConta;
		final JTable jTableDatosParametroConta=this.jTableDatosParametroConta;		
		final JPanel jPanelPaginacionParametroConta=this.jPanelPaginacionParametroConta;
		//final JScrollPane jScrollPanelDatosEdicionParametroConta=this.jScrollPanelDatosEdicionParametroConta;
		final JPanel jPanelAccionesParametroConta=this.jPanelAccionesParametroConta;
		
		JPanel jPanelCamposAuxiliarParametroConta=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarParametroConta=new JPanel();
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) {
			jPanelCamposAuxiliarParametroConta=this.jInternalFrameDetalleFormParametroConta.jPanelCamposParametroConta;
			jPanelAccionesFormularioAuxiliarParametroConta=this.jInternalFrameDetalleFormParametroConta.jPanelAccionesFormularioParametroConta;
		}
		
		final JPanel jPanelCamposParametroConta=jPanelCamposAuxiliarParametroConta;
		final JPanel jPanelAccionesFormularioParametroConta=jPanelAccionesFormularioAuxiliarParametroConta;
		
		
		final JMenuBar jmenuBarParametroConta=this.jmenuBarParametroConta;		
		final JToolBar jTtoolBarParametroConta=this.jTtoolBarParametroConta;
				
		JMenuBar jmenuBarDetalleAuxiliarParametroConta=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroConta=new JToolBar();
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) {
			jmenuBarDetalleAuxiliarParametroConta=this.jInternalFrameDetalleFormParametroConta.jmenuBarDetalleParametroConta;
			jTtoolBarDetalleAuxiliarParametroConta=this.jInternalFrameDetalleFormParametroConta.jTtoolBarDetalleParametroConta;		
		}
		
		final JMenuBar jmenuBarDetalleParametroConta=jmenuBarDetalleAuxiliarParametroConta;
		final JToolBar jTtoolBarDetalleParametroConta=jTtoolBarDetalleAuxiliarParametroConta;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroConta;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroConta;
			processRunnable.jTableDatos=jTableDatosParametroConta;
			processRunnable.jPanelCampos=jPanelCamposParametroConta;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroConta;
			processRunnable.jPanelAcciones=jPanelAccionesParametroConta;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroConta;
			
			
			processRunnable.jmenuBar=jmenuBarParametroConta;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroConta;
			processRunnable.jTtoolBar=jTtoolBarParametroConta;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroConta;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasParametroConta ,jPanelParametrosReportesParametroConta, jTableDatosParametroConta,/*jScrollPanelDatosParametroConta,*/jPanelCamposParametroConta,jPanelPaginacionParametroConta, /*jScrollPanelDatosEdicionParametroConta,*/ jPanelAccionesParametroConta,jPanelAccionesFormularioParametroConta,jmenuBarParametroConta,jmenuBarDetalleParametroConta,jTtoolBarParametroConta,jTtoolBarDetalleParametroConta));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesParametroConta(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarParametroConta(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuParametroConta(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarParametroConta(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarParametroConta,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleParametroConta,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuParametroConta(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarParametroConta,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleParametroConta,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.parametrocontaConstantesFunciones.getsFinalQueryParametroConta();
		String  finalQueryPaginacionTodos=this.parametrocontaConstantesFunciones.getsFinalQueryParametroConta();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ParametroContaConstantesFunciones.getArrayColumnasGlobalesNoParametroConta(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ParametroContaConstantesFunciones.getArrayColumnasGlobalesParametroConta(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ParametroContaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.parametrocontasEliminados= new ArrayList<ParametroConta>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessParametroConta();
		
				///*ParametroContaSessionBean*/this.parametrocontaSessionBean=new ParametroContaSessionBean();
			
			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ParametroContaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ParametroContaConstantesFunciones.getClassesForeignKeysOfParametroConta(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/parametroconta."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			parametrocontasAux= new ArrayList<ParametroConta>();
			
				
			parametrocontaLogic.setDatosCliente(this.datosCliente);
			parametrocontaLogic.setDatosDeep(this.datosDeep);
			parametrocontaLogic.setIsConDeep(true);
			
			
			parametrocontaLogic.getParametroContaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					parametrocontaLogic.getTodosParametroContas(finalQueryGlobal,pagination);
					
					//parametrocontaLogic.getTodosParametroContasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(parametrocontaLogic.getParametroContas()==null|| parametrocontaLogic.getParametroContas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrocontasAux= new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux= new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrocontaLogic.getTodosParametroContas(finalQueryGlobal+"",this.pagination);												
							
							//parametrocontaLogic.getTodosParametroContasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteParametroContas("Todos",parametrocontaLogic.getParametroContas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());					
							parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idParametroConta=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idParametroConta=this.idActual;
				
				} else if(this.idParametroContaActual!=null && this.idParametroContaActual!=0L) {
					idParametroConta=idParametroContaActual;
				}
				
					
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndicePorId(idParametroConta);
				
				this.parametrocontas=new ArrayList<ParametroConta>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					parametrocontaLogic.getEntity(idParametroConta);
					
					//parametrocontaLogic.getEntityWithConnection(idParametroConta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
					parametrocontaLogic.getParametroContas().add(parametrocontaLogic.getParametroConta());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocontas=new ArrayList<ParametroConta>();
					this.parametrocontas.add(parametroconta);
				}
				
				if(parametrocontaLogic.getParametroConta()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCuentaContableAcreedor")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableAcreedor(id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableAcreedor(finalQueryGlobal,pagination,id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableAcreedor(id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableAcreedor(id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableAcreedor(finalQueryGlobal,pagination,id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableAcreedor(id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableAcreedor(id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableAcreedor",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableAcreedor",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableActivo")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableActivo(id_cuenta_contable_activoFK_IdCuentaContableActivo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableActivo(finalQueryGlobal,pagination,id_cuenta_contable_activoFK_IdCuentaContableActivo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableActivo(id_cuenta_contable_activoFK_IdCuentaContableActivo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableActivo(id_cuenta_contable_activoFK_IdCuentaContableActivo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableActivo(finalQueryGlobal,pagination,id_cuenta_contable_activoFK_IdCuentaContableActivo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableActivo(id_cuenta_contable_activoFK_IdCuentaContableActivo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableActivo(id_cuenta_contable_activoFK_IdCuentaContableActivo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableActivo",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableActivo",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableDeudor")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableDeudor(id_cuenta_contable_deudorFK_IdCuentaContableDeudor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableDeudor(finalQueryGlobal,pagination,id_cuenta_contable_deudorFK_IdCuentaContableDeudor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableDeudor(id_cuenta_contable_deudorFK_IdCuentaContableDeudor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableDeudor(id_cuenta_contable_deudorFK_IdCuentaContableDeudor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableDeudor(finalQueryGlobal,pagination,id_cuenta_contable_deudorFK_IdCuentaContableDeudor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableDeudor(id_cuenta_contable_deudorFK_IdCuentaContableDeudor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableDeudor(id_cuenta_contable_deudorFK_IdCuentaContableDeudor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableDeudor",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableDeudor",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableEgreso")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso(id_cuenta_contable_egresoFK_IdCuentaContableEgreso);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso(finalQueryGlobal,pagination,id_cuenta_contable_egresoFK_IdCuentaContableEgreso);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso(id_cuenta_contable_egresoFK_IdCuentaContableEgreso);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso(id_cuenta_contable_egresoFK_IdCuentaContableEgreso);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso(finalQueryGlobal,pagination,id_cuenta_contable_egresoFK_IdCuentaContableEgreso);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso(id_cuenta_contable_egresoFK_IdCuentaContableEgreso);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso(id_cuenta_contable_egresoFK_IdCuentaContableEgreso);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableEgreso",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableEgreso",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableEgreso1")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso1(id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso1(finalQueryGlobal,pagination,id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso1(id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso1(id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso1(finalQueryGlobal,pagination,id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso1(id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso1(id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableEgreso1",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableEgreso1",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableEgreso2")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso2(id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso2(finalQueryGlobal,pagination,id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso2(id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso2(id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso2(finalQueryGlobal,pagination,id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso2(id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso2(id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableEgreso2",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableEgreso2",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableEgreso3")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso3(id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso3(finalQueryGlobal,pagination,id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso3(id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso3(id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso3(finalQueryGlobal,pagination,id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso3(id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEgreso3(id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableEgreso3",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableEgreso3",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableIngreso")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso(id_cuenta_contable_ingresoFK_IdCuentaContableIngreso);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso(finalQueryGlobal,pagination,id_cuenta_contable_ingresoFK_IdCuentaContableIngreso);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso(id_cuenta_contable_ingresoFK_IdCuentaContableIngreso);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso(id_cuenta_contable_ingresoFK_IdCuentaContableIngreso);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso(finalQueryGlobal,pagination,id_cuenta_contable_ingresoFK_IdCuentaContableIngreso);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso(id_cuenta_contable_ingresoFK_IdCuentaContableIngreso);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso(id_cuenta_contable_ingresoFK_IdCuentaContableIngreso);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableIngreso",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableIngreso",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableIngreso1")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso1(id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso1(finalQueryGlobal,pagination,id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso1(id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso1(id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso1(finalQueryGlobal,pagination,id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso1(id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso1(id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableIngreso1",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableIngreso1",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableIngreso2")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso2(id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso2(finalQueryGlobal,pagination,id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso2(id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso2(id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso2(finalQueryGlobal,pagination,id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso2(id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso2(id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableIngreso2",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableIngreso2",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableIngreso3")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso3(id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso3(finalQueryGlobal,pagination,id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso3(id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso3(id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso3(finalQueryGlobal,pagination,id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso3(id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngreso3(id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableIngreso3",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableIngreso3",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContablePasivo")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePasivo(id_cuenta_contable_pasivoFK_IdCuentaContablePasivo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContablePasivo(finalQueryGlobal,pagination,id_cuenta_contable_pasivoFK_IdCuentaContablePasivo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePasivo(id_cuenta_contable_pasivoFK_IdCuentaContablePasivo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePasivo(id_cuenta_contable_pasivoFK_IdCuentaContablePasivo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContablePasivo(finalQueryGlobal,pagination,id_cuenta_contable_pasivoFK_IdCuentaContablePasivo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePasivo(id_cuenta_contable_pasivoFK_IdCuentaContablePasivo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePasivo(id_cuenta_contable_pasivoFK_IdCuentaContablePasivo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContablePasivo",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContablePasivo",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContablePatrimonio")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePatrimonio(id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContablePatrimonio(finalQueryGlobal,pagination,id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePatrimonio(id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePatrimonio(id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContablePatrimonio(finalQueryGlobal,pagination,id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePatrimonio(id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContablePatrimonio(id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContablePatrimonio",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContablePatrimonio",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableResumen")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResumen(id_cuenta_contable_resumenFK_IdCuentaContableResumen);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdCuentaContableResumen(finalQueryGlobal,pagination,id_cuenta_contable_resumenFK_IdCuentaContableResumen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResumen(id_cuenta_contable_resumenFK_IdCuentaContableResumen);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResumen(id_cuenta_contable_resumenFK_IdCuentaContableResumen);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdCuentaContableResumen(finalQueryGlobal,pagination,id_cuenta_contable_resumenFK_IdCuentaContableResumen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResumen(id_cuenta_contable_resumenFK_IdCuentaContableResumen);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResumen(id_cuenta_contable_resumenFK_IdCuentaContableResumen);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdCuentaContableResumen",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdCuentaContableResumen",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdEmpresa",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdEmpresa",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdMoneda",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdMoneda",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMonedaExtranjera")) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMonedaExtranjera(id_moneda_extranjeraFK_IdMonedaExtranjera);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocontaLogic.getParametroContasFK_IdMonedaExtranjera(finalQueryGlobal,pagination,id_moneda_extranjeraFK_IdMonedaExtranjera);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMonedaExtranjera(id_moneda_extranjeraFK_IdMonedaExtranjera);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMonedaExtranjera(id_moneda_extranjeraFK_IdMonedaExtranjera);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocontaLogic.getParametroContas()==null||parametrocontaLogic.getParametroContas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocontas==null|| parametrocontas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontasAux=new ArrayList<ParametroConta>();
						parametrocontasAux.addAll(parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontasAux=new ArrayList<ParametroConta>();
							parametrocontasAux.addAll(parametrocontas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocontaLogic.getParametroContasFK_IdMonedaExtranjera(finalQueryGlobal,pagination,id_moneda_extranjeraFK_IdMonedaExtranjera);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMonedaExtranjera(id_moneda_extranjeraFK_IdMonedaExtranjera);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroContaConstantesFunciones.getDetalleIndiceFK_IdMonedaExtranjera(id_moneda_extranjeraFK_IdMonedaExtranjera);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroContas("FK_IdMonedaExtranjera",parametrocontaLogic.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroContas("FK_IdMonedaExtranjera",parametrocontas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaLogic.setParametroContas(new ArrayList<ParametroConta>());
						parametrocontaLogic.getParametroContas().addAll(parametrocontasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontas=new ArrayList<ParametroConta>();
							parametrocontas.addAll(parametrocontasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesParametroConta();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessParametroConta();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrocontaLogic.getParametroContas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrocontas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrocontaLogic.getParametroContas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrocontas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ParametroConta parametroconta) {
		Boolean permite=true;
		
		if(this.parametroconta.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ParametroContaConstantesFunciones.getOrderByListaParametroConta();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ParametroContaConstantesFunciones.getOrderByListaParametroConta();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroConta parametroconta:parametrocontaLogic.getParametroContas()) {
				if(parametroconta.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocontaTotales=parametroconta;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroConta parametroconta:this.parametrocontas) {
				if(parametroconta.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocontaTotales=parametroconta;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.parametrocontaAux=new ParametroConta();
			this.parametrocontaAux.setsType(Constantes2.S_TOTALES);
			this.parametrocontaAux.setIsNew(false);
			this.parametrocontaAux.setIsChanged(false);
			this.parametrocontaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ParametroContaConstantesFunciones.TotalizarValoresFilaParametroConta(this.parametrocontaLogic.getParametroContas(),this.parametrocontaAux);
				
				this.parametrocontaLogic.getParametroContas().add(this.parametrocontaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ParametroContaConstantesFunciones.TotalizarValoresFilaParametroConta(this.parametrocontas,this.parametrocontaAux);
				
				this.parametrocontas.add(this.parametrocontaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		parametrocontaTotales=new ParametroConta();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrocontaLogic.getParametroContas().remove(parametrocontaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrocontas.remove(parametrocontaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		parametrocontaTotales=new ParametroConta();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroConta parametroconta:parametrocontaLogic.getParametroContas()) {
				if(parametroconta.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocontaTotales=parametroconta;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroContaConstantesFunciones.TotalizarValoresFilaParametroConta(this.parametrocontaLogic.getParametroContas(),parametrocontaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroConta parametroconta:this.parametrocontas) {
				if(parametroconta.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocontaTotales=parametroconta;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroContaConstantesFunciones.TotalizarValoresFilaParametroConta(this.parametrocontas,parametrocontaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getParametroContasFK_IdCuentaContableAcreedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableAcreedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableActivo()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableActivo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableDeudor()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableDeudor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableEgreso()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableEgreso";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableEgreso1()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableEgreso1";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableEgreso2()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableEgreso2";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableEgreso3()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableEgreso3";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableIngreso()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIngreso";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableIngreso1()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIngreso1";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableIngreso2()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIngreso2";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableIngreso3()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIngreso3";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContablePasivo()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContablePasivo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContablePatrimonio()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContablePatrimonio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdCuentaContableResumen()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableResumen";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroContasFK_IdMonedaExtranjera()throws Exception {
		try {
			sAccionBusqueda="FK_IdMonedaExtranjera";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getParametroContasFK_IdCuentaContableAcreedor(String sFinalQuery,Long id_cuenta_contable_acreedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableAcreedor(sFinalQuery,this.pagination,id_cuenta_contable_acreedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableActivo(String sFinalQuery,Long id_cuenta_contable_activo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableActivo(sFinalQuery,this.pagination,id_cuenta_contable_activo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableDeudor(String sFinalQuery,Long id_cuenta_contable_deudor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableDeudor(sFinalQuery,this.pagination,id_cuenta_contable_deudor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableEgreso(String sFinalQuery,Long id_cuenta_contable_egreso)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso(sFinalQuery,this.pagination,id_cuenta_contable_egreso);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableEgreso1(String sFinalQuery,Long id_cuenta_contable_egreso1)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso1(sFinalQuery,this.pagination,id_cuenta_contable_egreso1);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableEgreso2(String sFinalQuery,Long id_cuenta_contable_egreso2)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso2(sFinalQuery,this.pagination,id_cuenta_contable_egreso2);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableEgreso3(String sFinalQuery,Long id_cuenta_contable_egreso3)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableEgreso3(sFinalQuery,this.pagination,id_cuenta_contable_egreso3);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableIngreso(String sFinalQuery,Long id_cuenta_contable_ingreso)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso(sFinalQuery,this.pagination,id_cuenta_contable_ingreso);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableIngreso1(String sFinalQuery,Long id_cuenta_contable_ingreso1)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso1(sFinalQuery,this.pagination,id_cuenta_contable_ingreso1);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableIngreso2(String sFinalQuery,Long id_cuenta_contable_ingreso2)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso2(sFinalQuery,this.pagination,id_cuenta_contable_ingreso2);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableIngreso3(String sFinalQuery,Long id_cuenta_contable_ingreso3)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableIngreso3(sFinalQuery,this.pagination,id_cuenta_contable_ingreso3);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContablePasivo(String sFinalQuery,Long id_cuenta_contable_pasivo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContablePasivo(sFinalQuery,this.pagination,id_cuenta_contable_pasivo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContablePatrimonio(String sFinalQuery,Long id_cuenta_contable_patrimonio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContablePatrimonio(sFinalQuery,this.pagination,id_cuenta_contable_patrimonio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdCuentaContableResumen(String sFinalQuery,Long id_cuenta_contable_resumen)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdCuentaContableResumen(sFinalQuery,this.pagination,id_cuenta_contable_resumen);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroContasFK_IdMonedaExtranjera(String sFinalQuery,Long id_moneda_extranjera)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLogic.getParametroContasFK_IdMonedaExtranjera(sFinalQuery,this.pagination,id_moneda_extranjera);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosParametroConta() {
		this.isPermisoTodoParametroConta=false;
		this.isPermisoNuevoParametroConta=false;
		this.isPermisoActualizarParametroConta=false;
		this.isPermisoActualizarOriginalParametroConta=false;
		this.isPermisoEliminarParametroConta=false;
		this.isPermisoGuardarCambiosParametroConta=false;
		this.isPermisoConsultaParametroConta=false;
		this.isPermisoBusquedaParametroConta=false;
		this.isPermisoReporteParametroConta=false;		
		this.isPermisoOrdenParametroConta=false;		
		this.isPermisoPaginacionMedioParametroConta=false;		
		this.isPermisoPaginacionAltoParametroConta=false;
		this.isPermisoPaginacionTodoParametroConta=false;
		this.isPermisoCopiarParametroConta=false;		
		this.isPermisoVerFormParametroConta=false;		
		this.isPermisoDuplicarParametroConta=false;		
		this.isPermisoOrdenParametroConta=false;		
	}
	
	public void setPermisosUsuarioParametroConta(Boolean isPermiso) {
		this.isPermisoTodoParametroConta=isPermiso;
		this.isPermisoNuevoParametroConta=isPermiso;
		this.isPermisoActualizarParametroConta=isPermiso;
		this.isPermisoActualizarOriginalParametroConta=isPermiso;
		this.isPermisoEliminarParametroConta=isPermiso;
		this.isPermisoGuardarCambiosParametroConta=isPermiso;
		this.isPermisoConsultaParametroConta=isPermiso;
		this.isPermisoBusquedaParametroConta=isPermiso;
		this.isPermisoReporteParametroConta=isPermiso;
		this.isPermisoOrdenParametroConta=isPermiso;		
		this.isPermisoPaginacionMedioParametroConta=isPermiso;		
		this.isPermisoPaginacionAltoParametroConta=isPermiso;		
		this.isPermisoPaginacionTodoParametroConta=isPermiso;		
		this.isPermisoCopiarParametroConta=isPermiso;		
		this.isPermisoVerFormParametroConta=isPermiso;		
		this.isPermisoDuplicarParametroConta=isPermiso;
		this.isPermisoOrdenParametroConta=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioParametroConta(Boolean isPermiso) {
		//this.isPermisoTodoParametroConta=isPermiso;
		this.isPermisoNuevoParametroConta=isPermiso;
		this.isPermisoActualizarParametroConta=isPermiso;
		this.isPermisoActualizarOriginalParametroConta=isPermiso;
		this.isPermisoEliminarParametroConta=isPermiso;
		this.isPermisoGuardarCambiosParametroConta=isPermiso;
		//this.isPermisoConsultaParametroConta=isPermiso;
		//this.isPermisoBusquedaParametroConta=isPermiso;
		//this.isPermisoReporteParametroConta=isPermiso;
		//this.isPermisoOrdenParametroConta=isPermiso;		
		//this.isPermisoPaginacionMedioParametroConta=isPermiso;		
		//this.isPermisoPaginacionAltoParametroConta=isPermiso;		
		//this.isPermisoPaginacionTodoParametroConta=isPermiso;		
		//this.isPermisoCopiarParametroConta=isPermiso;		
		//this.isPermisoDuplicarParametroConta=isPermiso;
		//this.isPermisoOrdenParametroConta=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioParametroContaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(ParametroContaDetalleConstantesFunciones.SNOMBREOPCION);
		
		if(ParametroContaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosParametroContaDetalle=false;
		this.isTienePermisosParametroContaDetalle=this.verificarGetPermisosUsuarioOpcionParametroContaClaseRelacionada(this.opcionsRelacionadas,ParametroContaDetalleConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebParametroConta(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioParametroContaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosParametroContaDetalle=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioParametroContaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionParametroContaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioParametroContaClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosParametroContaDetalle && this.jInternalFrameDetalleFormParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.remove(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioParametroConta() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ParametroContaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ParametroContaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoParametroConta=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarParametroConta=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalParametroConta=this.isPermisoActualizarParametroConta;
			this.isPermisoEliminarParametroConta=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosParametroConta=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaParametroConta=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaParametroConta=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoParametroConta=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteParametroConta=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroConta=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioParametroConta=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoParametroConta=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoParametroConta=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarParametroConta=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormParametroConta=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarParametroConta=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroConta=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosParametroConta.setToolTipText(this.jTableDatosParametroConta.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioParametroConta(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioParametroConta(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ParametroContaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ParametroContaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioParametroConta() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosParametroContaDetalle && this.parametrocontaConstantesFunciones.mostrarParametroContaDetalleParametroConta && !ParametroContaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Parametro Conta Detalle");
			reporte.setsDescripcion("Parametro Conta Detalle");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyParametroContaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.monedaextranjerasForeignKey=new ArrayList();
				this.cuentacontableactivosForeignKey=new ArrayList();
				this.cuentacontablepasivosForeignKey=new ArrayList();
				this.cuentacontablepatrimoniosForeignKey=new ArrayList();
				this.cuentacontableingresosForeignKey=new ArrayList();
				this.cuentacontableegresosForeignKey=new ArrayList();
				this.cuentacontableresumensForeignKey=new ArrayList();
				this.cuentacontabledeudorsForeignKey=new ArrayList();
				this.cuentacontableacreedorsForeignKey=new ArrayList();
				this.cuentacontableingreso1sForeignKey=new ArrayList();
				this.cuentacontableingreso2sForeignKey=new ArrayList();
				this.cuentacontableingreso3sForeignKey=new ArrayList();
				this.cuentacontableegreso1sForeignKey=new ArrayList();
				this.cuentacontableegreso2sForeignKey=new ArrayList();
				this.cuentacontableegreso3sForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyParametroContaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ParametroContaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyParametroContaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaExtranjeraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableActivoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContablePasivoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContablePatrimonioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIngresoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableEgresoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableResumenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableDeudorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableAcreedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIngreso1Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIngreso2Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIngreso3Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableEgreso1Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableEgreso2Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableEgreso3Listas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaExtranjeraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedaextranjerasForeignKey==null||this.monedaextranjerasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedaExtranjerasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableActivoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableactivosForeignKey==null||this.cuentacontableactivosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableActivosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContablePasivoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablepasivosForeignKey==null||this.cuentacontablepasivosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablePasivosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContablePatrimonioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablepatrimoniosForeignKey==null||this.cuentacontablepatrimoniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablePatrimoniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngresoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableingresosForeignKey==null||this.cuentacontableingresosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIngresosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEgresoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableegresosForeignKey==null||this.cuentacontableegresosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableEgresosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableResumenListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableresumensForeignKey==null||this.cuentacontableresumensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableResumensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDeudorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontabledeudorsForeignKey==null||this.cuentacontabledeudorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableDeudorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableAcreedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableacreedorsForeignKey==null||this.cuentacontableacreedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableAcreedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngreso1Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableingreso1sForeignKey==null||this.cuentacontableingreso1sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIngreso1sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngreso2Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableingreso2sForeignKey==null||this.cuentacontableingreso2sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIngreso2sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngreso3Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableingreso3sForeignKey==null||this.cuentacontableingreso3sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIngreso3sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEgreso1Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableegreso1sForeignKey==null||this.cuentacontableegreso1sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableEgreso1sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEgreso2Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableegreso2sForeignKey==null||this.cuentacontableegreso2sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableEgreso2sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEgreso3Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableegreso3sForeignKey==null||this.cuentacontableegreso3sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableEgreso3sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyParametroContaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ParametroContaParameterReturnGeneral parametrocontaReturnGeneral=new ParametroContaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_empresaParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_empresaParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_monedaParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_monedaParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalMonedaExtranjera="";

				if(((this.monedaextranjerasForeignKey==null||this.monedaextranjerasForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_moneda_extranjeraParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_moneda_extranjeraParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionMonedaExtranjera()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMonedaExtranjera=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMonedaExtranjera=Funciones.GetFinalQueryAppend(finalQueryGlobalMonedaExtranjera, "");
						finalQueryGlobalMonedaExtranjera+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedaExtranjerasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMonedaExtranjera=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidMonedaExtranjeraActual();
					}
				} else {
					finalQueryGlobalMonedaExtranjera="NONE";
				}


				String finalQueryGlobalCuentaContableActivo="";

				if(((this.cuentacontableactivosForeignKey==null||this.cuentacontableactivosForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_activoParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_activoParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableActivo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableActivo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableActivo=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableActivo, "");
						finalQueryGlobalCuentaContableActivo+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableActivosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableActivo=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableActivoActual();
					}
				} else {
					finalQueryGlobalCuentaContableActivo="NONE";
				}


				String finalQueryGlobalCuentaContablePasivo="";

				if(((this.cuentacontablepasivosForeignKey==null||this.cuentacontablepasivosForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_pasivoParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_pasivoParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContablePasivo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContablePasivo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContablePasivo=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContablePasivo, "");
						finalQueryGlobalCuentaContablePasivo+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablePasivosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContablePasivo=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContablePasivoActual();
					}
				} else {
					finalQueryGlobalCuentaContablePasivo="NONE";
				}


				String finalQueryGlobalCuentaContablePatrimonio="";

				if(((this.cuentacontablepatrimoniosForeignKey==null||this.cuentacontablepatrimoniosForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_patrimonioParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_patrimonioParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContablePatrimonio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContablePatrimonio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContablePatrimonio=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContablePatrimonio, "");
						finalQueryGlobalCuentaContablePatrimonio+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablePatrimoniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContablePatrimonio=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContablePatrimonioActual();
					}
				} else {
					finalQueryGlobalCuentaContablePatrimonio="NONE";
				}


				String finalQueryGlobalCuentaContableIngreso="";

				if(((this.cuentacontableingresosForeignKey==null||this.cuentacontableingresosForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingresoParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingresoParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIngreso=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIngreso=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIngreso, "");
						finalQueryGlobalCuentaContableIngreso+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIngresosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIngreso=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableIngresoActual();
					}
				} else {
					finalQueryGlobalCuentaContableIngreso="NONE";
				}


				String finalQueryGlobalCuentaContableEgreso="";

				if(((this.cuentacontableegresosForeignKey==null||this.cuentacontableegresosForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egresoParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egresoParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableEgreso=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableEgreso=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableEgreso, "");
						finalQueryGlobalCuentaContableEgreso+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableEgresosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableEgreso=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableEgresoActual();
					}
				} else {
					finalQueryGlobalCuentaContableEgreso="NONE";
				}


				String finalQueryGlobalCuentaContableResumen="";

				if(((this.cuentacontableresumensForeignKey==null||this.cuentacontableresumensForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_resumenParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_resumenParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableResumen()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableResumen=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableResumen=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableResumen, "");
						finalQueryGlobalCuentaContableResumen+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableResumensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableResumen=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableResumenActual();
					}
				} else {
					finalQueryGlobalCuentaContableResumen="NONE";
				}


				String finalQueryGlobalCuentaContableDeudor="";

				if(((this.cuentacontabledeudorsForeignKey==null||this.cuentacontabledeudorsForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_deudorParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_deudorParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDeudor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableDeudor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableDeudor=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableDeudor, "");
						finalQueryGlobalCuentaContableDeudor+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableDeudorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableDeudor=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableDeudorActual();
					}
				} else {
					finalQueryGlobalCuentaContableDeudor="NONE";
				}


				String finalQueryGlobalCuentaContableAcreedor="";

				if(((this.cuentacontableacreedorsForeignKey==null||this.cuentacontableacreedorsForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_acreedorParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_acreedorParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableAcreedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableAcreedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableAcreedor=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableAcreedor, "");
						finalQueryGlobalCuentaContableAcreedor+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableAcreedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableAcreedor=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableAcreedorActual();
					}
				} else {
					finalQueryGlobalCuentaContableAcreedor="NONE";
				}


				String finalQueryGlobalCuentaContableIngreso1="";

				if(((this.cuentacontableingreso1sForeignKey==null||this.cuentacontableingreso1sForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso1ParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso1ParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso1()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIngreso1=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIngreso1=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIngreso1, "");
						finalQueryGlobalCuentaContableIngreso1+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIngreso1sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIngreso1=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableIngreso1Actual();
					}
				} else {
					finalQueryGlobalCuentaContableIngreso1="NONE";
				}


				String finalQueryGlobalCuentaContableIngreso2="";

				if(((this.cuentacontableingreso2sForeignKey==null||this.cuentacontableingreso2sForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso2ParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso2ParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso2()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIngreso2=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIngreso2=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIngreso2, "");
						finalQueryGlobalCuentaContableIngreso2+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIngreso2sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIngreso2=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableIngreso2Actual();
					}
				} else {
					finalQueryGlobalCuentaContableIngreso2="NONE";
				}


				String finalQueryGlobalCuentaContableIngreso3="";

				if(((this.cuentacontableingreso3sForeignKey==null||this.cuentacontableingreso3sForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso3ParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso3ParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso3()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIngreso3=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIngreso3=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIngreso3, "");
						finalQueryGlobalCuentaContableIngreso3+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIngreso3sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIngreso3=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableIngreso3Actual();
					}
				} else {
					finalQueryGlobalCuentaContableIngreso3="NONE";
				}


				String finalQueryGlobalCuentaContableEgreso1="";

				if(((this.cuentacontableegreso1sForeignKey==null||this.cuentacontableegreso1sForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso1ParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso1ParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso1()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableEgreso1=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableEgreso1=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableEgreso1, "");
						finalQueryGlobalCuentaContableEgreso1+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableEgreso1sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableEgreso1=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableEgreso1Actual();
					}
				} else {
					finalQueryGlobalCuentaContableEgreso1="NONE";
				}


				String finalQueryGlobalCuentaContableEgreso2="";

				if(((this.cuentacontableegreso2sForeignKey==null||this.cuentacontableegreso2sForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso2ParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso2ParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso2()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableEgreso2=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableEgreso2=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableEgreso2, "");
						finalQueryGlobalCuentaContableEgreso2+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableEgreso2sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableEgreso2=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableEgreso2Actual();
					}
				} else {
					finalQueryGlobalCuentaContableEgreso2="NONE";
				}


				String finalQueryGlobalCuentaContableEgreso3="";

				if(((this.cuentacontableegreso3sForeignKey==null||this.cuentacontableegreso3sForeignKey.size()<=0) && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso3ParametroConta)
					 || (this.esRecargarFks && this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso3ParametroConta)) {

					if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso3()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableEgreso3=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableEgreso3=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableEgreso3, "");
						finalQueryGlobalCuentaContableEgreso3+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableEgreso3sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableEgreso3=" WHERE " + ConstantesSql.ID + "="+parametrocontaSessionBean.getlidCuentaContableEgreso3Actual();
					}
				} else {
					finalQueryGlobalCuentaContableEgreso3="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				parametrocontaReturnGeneral=parametrocontaLogic.cargarCombosLoteForeignKeyParametroConta(finalQueryGlobalEmpresa,finalQueryGlobalMoneda,finalQueryGlobalMonedaExtranjera,finalQueryGlobalCuentaContableActivo,finalQueryGlobalCuentaContablePasivo,finalQueryGlobalCuentaContablePatrimonio,finalQueryGlobalCuentaContableIngreso,finalQueryGlobalCuentaContableEgreso,finalQueryGlobalCuentaContableResumen,finalQueryGlobalCuentaContableDeudor,finalQueryGlobalCuentaContableAcreedor,finalQueryGlobalCuentaContableIngreso1,finalQueryGlobalCuentaContableIngreso2,finalQueryGlobalCuentaContableIngreso3,finalQueryGlobalCuentaContableEgreso1,finalQueryGlobalCuentaContableEgreso2,finalQueryGlobalCuentaContableEgreso3);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=parametrocontaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=parametrocontaReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalMonedaExtranjera.equals("NONE")) {
				this.monedaextranjerasForeignKey=parametrocontaReturnGeneral.getmonedaextranjerasForeignKey();
			}

			if(!finalQueryGlobalCuentaContableActivo.equals("NONE")) {
				this.cuentacontableactivosForeignKey=parametrocontaReturnGeneral.getcuentacontableactivosForeignKey();
			}

			if(!finalQueryGlobalCuentaContablePasivo.equals("NONE")) {
				this.cuentacontablepasivosForeignKey=parametrocontaReturnGeneral.getcuentacontablepasivosForeignKey();
			}

			if(!finalQueryGlobalCuentaContablePatrimonio.equals("NONE")) {
				this.cuentacontablepatrimoniosForeignKey=parametrocontaReturnGeneral.getcuentacontablepatrimoniosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIngreso.equals("NONE")) {
				this.cuentacontableingresosForeignKey=parametrocontaReturnGeneral.getcuentacontableingresosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableEgreso.equals("NONE")) {
				this.cuentacontableegresosForeignKey=parametrocontaReturnGeneral.getcuentacontableegresosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableResumen.equals("NONE")) {
				this.cuentacontableresumensForeignKey=parametrocontaReturnGeneral.getcuentacontableresumensForeignKey();
			}

			if(!finalQueryGlobalCuentaContableDeudor.equals("NONE")) {
				this.cuentacontabledeudorsForeignKey=parametrocontaReturnGeneral.getcuentacontabledeudorsForeignKey();
			}

			if(!finalQueryGlobalCuentaContableAcreedor.equals("NONE")) {
				this.cuentacontableacreedorsForeignKey=parametrocontaReturnGeneral.getcuentacontableacreedorsForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIngreso1.equals("NONE")) {
				this.cuentacontableingreso1sForeignKey=parametrocontaReturnGeneral.getcuentacontableingreso1sForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIngreso2.equals("NONE")) {
				this.cuentacontableingreso2sForeignKey=parametrocontaReturnGeneral.getcuentacontableingreso2sForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIngreso3.equals("NONE")) {
				this.cuentacontableingreso3sForeignKey=parametrocontaReturnGeneral.getcuentacontableingreso3sForeignKey();
			}

			if(!finalQueryGlobalCuentaContableEgreso1.equals("NONE")) {
				this.cuentacontableegreso1sForeignKey=parametrocontaReturnGeneral.getcuentacontableegreso1sForeignKey();
			}

			if(!finalQueryGlobalCuentaContableEgreso2.equals("NONE")) {
				this.cuentacontableegreso2sForeignKey=parametrocontaReturnGeneral.getcuentacontableegreso2sForeignKey();
			}

			if(!finalQueryGlobalCuentaContableEgreso3.equals("NONE")) {
				this.cuentacontableegreso3sForeignKey=parametrocontaReturnGeneral.getcuentacontableegreso3sForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyParametroConta()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyMonedaExtranjera();
			this.addItemDefectoCombosForeignKeyCuentaContableActivo();
			this.addItemDefectoCombosForeignKeyCuentaContablePasivo();
			this.addItemDefectoCombosForeignKeyCuentaContablePatrimonio();
			this.addItemDefectoCombosForeignKeyCuentaContableIngreso();
			this.addItemDefectoCombosForeignKeyCuentaContableEgreso();
			this.addItemDefectoCombosForeignKeyCuentaContableResumen();
			this.addItemDefectoCombosForeignKeyCuentaContableDeudor();
			this.addItemDefectoCombosForeignKeyCuentaContableAcreedor();
			this.addItemDefectoCombosForeignKeyCuentaContableIngreso1();
			this.addItemDefectoCombosForeignKeyCuentaContableIngreso2();
			this.addItemDefectoCombosForeignKeyCuentaContableIngreso3();
			this.addItemDefectoCombosForeignKeyCuentaContableEgreso1();
			this.addItemDefectoCombosForeignKeyCuentaContableEgreso2();
			this.addItemDefectoCombosForeignKeyCuentaContableEgreso3();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMonedaExtranjera()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionMonedaExtranjera()) {
				Moneda monedaextranjera=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(monedaextranjera,Constantes.SMENSAJE_ESCOJA_OPCION);
				monedaextranjera.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedaextranjerasForeignKey,monedaextranjera,true)) {

					this.monedaextranjerasForeignKey.add(0,monedaextranjera);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableActivo()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableActivo()) {
				CuentaContable cuentacontableactivo=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableactivo,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableactivo.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableactivosForeignKey,cuentacontableactivo,true)) {

					this.cuentacontableactivosForeignKey.add(0,cuentacontableactivo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContablePasivo()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContablePasivo()) {
				CuentaContable cuentacontablepasivo=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablepasivo,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablepasivo.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablepasivosForeignKey,cuentacontablepasivo,true)) {

					this.cuentacontablepasivosForeignKey.add(0,cuentacontablepasivo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContablePatrimonio()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContablePatrimonio()) {
				CuentaContable cuentacontablepatrimonio=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablepatrimonio,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablepatrimonio.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablepatrimoniosForeignKey,cuentacontablepatrimonio,true)) {

					this.cuentacontablepatrimoniosForeignKey.add(0,cuentacontablepatrimonio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIngreso()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso()) {
				CuentaContable cuentacontableingreso=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableingreso,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableingreso.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableingresosForeignKey,cuentacontableingreso,true)) {

					this.cuentacontableingresosForeignKey.add(0,cuentacontableingreso);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableEgreso()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso()) {
				CuentaContable cuentacontableegreso=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableegreso,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableegreso.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableegresosForeignKey,cuentacontableegreso,true)) {

					this.cuentacontableegresosForeignKey.add(0,cuentacontableegreso);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableResumen()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableResumen()) {
				CuentaContable cuentacontableresumen=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableresumen,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableresumen.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableresumensForeignKey,cuentacontableresumen,true)) {

					this.cuentacontableresumensForeignKey.add(0,cuentacontableresumen);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableDeudor()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDeudor()) {
				CuentaContable cuentacontabledeudor=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontabledeudor,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontabledeudor.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontabledeudorsForeignKey,cuentacontabledeudor,true)) {

					this.cuentacontabledeudorsForeignKey.add(0,cuentacontabledeudor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableAcreedor()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableAcreedor()) {
				CuentaContable cuentacontableacreedor=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableacreedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableacreedor.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableacreedorsForeignKey,cuentacontableacreedor,true)) {

					this.cuentacontableacreedorsForeignKey.add(0,cuentacontableacreedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIngreso1()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso1()) {
				CuentaContable cuentacontableingreso1=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableingreso1,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableingreso1.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableingreso1sForeignKey,cuentacontableingreso1,true)) {

					this.cuentacontableingreso1sForeignKey.add(0,cuentacontableingreso1);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIngreso2()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso2()) {
				CuentaContable cuentacontableingreso2=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableingreso2,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableingreso2.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableingreso2sForeignKey,cuentacontableingreso2,true)) {

					this.cuentacontableingreso2sForeignKey.add(0,cuentacontableingreso2);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIngreso3()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngreso3()) {
				CuentaContable cuentacontableingreso3=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableingreso3,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableingreso3.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableingreso3sForeignKey,cuentacontableingreso3,true)) {

					this.cuentacontableingreso3sForeignKey.add(0,cuentacontableingreso3);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableEgreso1()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso1()) {
				CuentaContable cuentacontableegreso1=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableegreso1,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableegreso1.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableegreso1sForeignKey,cuentacontableegreso1,true)) {

					this.cuentacontableegreso1sForeignKey.add(0,cuentacontableegreso1);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableEgreso2()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso2()) {
				CuentaContable cuentacontableegreso2=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableegreso2,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableegreso2.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableegreso2sForeignKey,cuentacontableegreso2,true)) {

					this.cuentacontableegreso2sForeignKey.add(0,cuentacontableegreso2);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableEgreso3()throws Exception {
		try {

			if(!this.parametrocontaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEgreso3()) {
				CuentaContable cuentacontableegreso3=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableegreso3,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableegreso3.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableegreso3sForeignKey,cuentacontableegreso3,true)) {

					this.cuentacontableegreso3sForeignKey.add(0,cuentacontableegreso3);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyParametroConta()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyParametroConta(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyParametroConta()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroConta();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyParametroConta(ParametroConta parametroconta)throws Exception {	
		try {
			
			this.setActualMonedaExtranjeraForeignKey(parametroconta.getid_moneda_extranjera(),false,"Formulario");
			this.setActualCuentaContableActivoForeignKey(parametroconta.getid_cuenta_contable_activo(),false,"Formulario");
			this.setActualCuentaContablePasivoForeignKey(parametroconta.getid_cuenta_contable_pasivo(),false,"Formulario");
			this.setActualCuentaContablePatrimonioForeignKey(parametroconta.getid_cuenta_contable_patrimonio(),false,"Formulario");
			this.setActualCuentaContableIngresoForeignKey(parametroconta.getid_cuenta_contable_ingreso(),false,"Formulario");
			this.setActualCuentaContableEgresoForeignKey(parametroconta.getid_cuenta_contable_egreso(),false,"Formulario");
			this.setActualCuentaContableResumenForeignKey(parametroconta.getid_cuenta_contable_resumen(),false,"Formulario");
			this.setActualCuentaContableDeudorForeignKey(parametroconta.getid_cuenta_contable_deudor(),false,"Formulario");
			this.setActualCuentaContableAcreedorForeignKey(parametroconta.getid_cuenta_contable_acreedor(),false,"Formulario");
			this.setActualCuentaContableIngreso1ForeignKey(parametroconta.getid_cuenta_contable_ingreso1(),false,"Formulario");
			this.setActualCuentaContableIngreso2ForeignKey(parametroconta.getid_cuenta_contable_ingreso2(),false,"Formulario");
			this.setActualCuentaContableIngreso3ForeignKey(parametroconta.getid_cuenta_contable_ingreso3(),false,"Formulario");
			this.setActualCuentaContableEgreso1ForeignKey(parametroconta.getid_cuenta_contable_egreso1(),false,"Formulario");
			this.setActualCuentaContableEgreso2ForeignKey(parametroconta.getid_cuenta_contable_egreso2(),false,"Formulario");
			this.setActualCuentaContableEgreso3ForeignKey(parametroconta.getid_cuenta_contable_egreso3(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyParametroConta(ParametroConta parametroconta,String sTipoEvento)throws Exception {	
		try {
			
			

				if(parametroconta.getCuentaContableActivo()!=null && !sTipoEvento.equals("id_cuenta_contable_activoParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableactivosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableactivosForeignKey.add(parametroconta.getCuentaContableActivo());

					this.addItemDefectoCombosForeignKeyCuentaContableActivo();
					this.cargarCombosFrameCuentaContableActivosForeignKey("Todos");
				}

				if(parametroconta.getCuentaContablePasivo()!=null && !sTipoEvento.equals("id_cuenta_contable_pasivoParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablepasivosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablepasivosForeignKey.add(parametroconta.getCuentaContablePasivo());

					this.addItemDefectoCombosForeignKeyCuentaContablePasivo();
					this.cargarCombosFrameCuentaContablePasivosForeignKey("Todos");
				}

				if(parametroconta.getCuentaContablePatrimonio()!=null && !sTipoEvento.equals("id_cuenta_contable_patrimonioParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablepatrimoniosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablepatrimoniosForeignKey.add(parametroconta.getCuentaContablePatrimonio());

					this.addItemDefectoCombosForeignKeyCuentaContablePatrimonio();
					this.cargarCombosFrameCuentaContablePatrimoniosForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableIngreso()!=null && !sTipoEvento.equals("id_cuenta_contable_ingresoParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableingresosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableingresosForeignKey.add(parametroconta.getCuentaContableIngreso());

					this.addItemDefectoCombosForeignKeyCuentaContableIngreso();
					this.cargarCombosFrameCuentaContableIngresosForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableEgreso()!=null && !sTipoEvento.equals("id_cuenta_contable_egresoParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableegresosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableegresosForeignKey.add(parametroconta.getCuentaContableEgreso());

					this.addItemDefectoCombosForeignKeyCuentaContableEgreso();
					this.cargarCombosFrameCuentaContableEgresosForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableResumen()!=null && !sTipoEvento.equals("id_cuenta_contable_resumenParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableresumensForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableresumensForeignKey.add(parametroconta.getCuentaContableResumen());

					this.addItemDefectoCombosForeignKeyCuentaContableResumen();
					this.cargarCombosFrameCuentaContableResumensForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableDeudor()!=null && !sTipoEvento.equals("id_cuenta_contable_deudorParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontabledeudorsForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontabledeudorsForeignKey.add(parametroconta.getCuentaContableDeudor());

					this.addItemDefectoCombosForeignKeyCuentaContableDeudor();
					this.cargarCombosFrameCuentaContableDeudorsForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableAcreedor()!=null && !sTipoEvento.equals("id_cuenta_contable_acreedorParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableacreedorsForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableacreedorsForeignKey.add(parametroconta.getCuentaContableAcreedor());

					this.addItemDefectoCombosForeignKeyCuentaContableAcreedor();
					this.cargarCombosFrameCuentaContableAcreedorsForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableIngreso1()!=null && !sTipoEvento.equals("id_cuenta_contable_ingreso1ParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableingreso1sForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableingreso1sForeignKey.add(parametroconta.getCuentaContableIngreso1());

					this.addItemDefectoCombosForeignKeyCuentaContableIngreso1();
					this.cargarCombosFrameCuentaContableIngreso1sForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableIngreso2()!=null && !sTipoEvento.equals("id_cuenta_contable_ingreso2ParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableingreso2sForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableingreso2sForeignKey.add(parametroconta.getCuentaContableIngreso2());

					this.addItemDefectoCombosForeignKeyCuentaContableIngreso2();
					this.cargarCombosFrameCuentaContableIngreso2sForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableIngreso3()!=null && !sTipoEvento.equals("id_cuenta_contable_ingreso3ParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableingreso3sForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableingreso3sForeignKey.add(parametroconta.getCuentaContableIngreso3());

					this.addItemDefectoCombosForeignKeyCuentaContableIngreso3();
					this.cargarCombosFrameCuentaContableIngreso3sForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableEgreso1()!=null && !sTipoEvento.equals("id_cuenta_contable_egreso1ParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableegreso1sForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableegreso1sForeignKey.add(parametroconta.getCuentaContableEgreso1());

					this.addItemDefectoCombosForeignKeyCuentaContableEgreso1();
					this.cargarCombosFrameCuentaContableEgreso1sForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableEgreso2()!=null && !sTipoEvento.equals("id_cuenta_contable_egreso2ParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableegreso2sForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableegreso2sForeignKey.add(parametroconta.getCuentaContableEgreso2());

					this.addItemDefectoCombosForeignKeyCuentaContableEgreso2();
					this.cargarCombosFrameCuentaContableEgreso2sForeignKey("Todos");
				}

				if(parametroconta.getCuentaContableEgreso3()!=null && !sTipoEvento.equals("id_cuenta_contable_egreso3ParametroConta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableegreso3sForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableegreso3sForeignKey.add(parametroconta.getCuentaContableEgreso3());

					this.addItemDefectoCombosForeignKeyCuentaContableEgreso3();
					this.cargarCombosFrameCuentaContableEgreso3sForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyParametroConta()throws Exception {	
		try {
			
			this.setActualMonedaExtranjeraForeignKey(this.parametrocontaConstantesFunciones.getid_moneda_extranjera(),false,"Formulario");
			this.setActualCuentaContableActivoForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_activo(),false,"Formulario");
			this.setActualCuentaContablePasivoForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_pasivo(),false,"Formulario");
			this.setActualCuentaContablePatrimonioForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_patrimonio(),false,"Formulario");
			this.setActualCuentaContableIngresoForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_ingreso(),false,"Formulario");
			this.setActualCuentaContableEgresoForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_egreso(),false,"Formulario");
			this.setActualCuentaContableResumenForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_resumen(),false,"Formulario");
			this.setActualCuentaContableDeudorForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_deudor(),false,"Formulario");
			this.setActualCuentaContableAcreedorForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_acreedor(),false,"Formulario");
			this.setActualCuentaContableIngreso1ForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_ingreso1(),false,"Formulario");
			this.setActualCuentaContableIngreso2ForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_ingreso2(),false,"Formulario");
			this.setActualCuentaContableIngreso3ForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_ingreso3(),false,"Formulario");
			this.setActualCuentaContableEgreso1ForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_egreso1(),false,"Formulario");
			this.setActualCuentaContableEgreso2ForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_egreso2(),false,"Formulario");
			this.setActualCuentaContableEgreso3ForeignKey(this.parametrocontaConstantesFunciones.getid_cuenta_contable_egreso3(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyParametroConta()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyParametroConta()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyParametroConta()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroParametroConta()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyParametroConta()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameMonedaExtranjerasForeignKey("Todos");
			this.cargarCombosFrameCuentaContableActivosForeignKey("Todos");
			this.cargarCombosFrameCuentaContablePasivosForeignKey("Todos");
			this.cargarCombosFrameCuentaContablePatrimoniosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIngresosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableEgresosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableResumensForeignKey("Todos");
			this.cargarCombosFrameCuentaContableDeudorsForeignKey("Todos");
			this.cargarCombosFrameCuentaContableAcreedorsForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIngreso1sForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIngreso2sForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIngreso3sForeignKey("Todos");
			this.cargarCombosFrameCuentaContableEgreso1sForeignKey("Todos");
			this.cargarCombosFrameCuentaContableEgreso2sForeignKey("Todos");
			this.cargarCombosFrameCuentaContableEgreso3sForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyParametroConta(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedaExtranjerasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableActivosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablePasivosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablePatrimoniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIngresosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableEgresosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableResumensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableDeudorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableAcreedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIngreso1sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIngreso2sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIngreso3sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableEgreso1sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableEgreso2sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableEgreso3sForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyParametroConta()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	


































	
	

	public ParametroContaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ParametroContaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ParametroContaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.parametrocontaSessionBean=new ParametroContaSessionBean(); 
		this.parametrocontaConstantesFunciones=new ParametroContaConstantesFunciones(); 
		this.parametrocontaBean=new ParametroConta();//(this.parametrocontaConstantesFunciones); 		
		this.parametrocontaReturnGeneral=new ParametroContaParameterReturnGeneral(); 
		
		this.parametrocontaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.parametrocontaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ParametroContaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ParametroContaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ParametroContaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessParametroConta(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.parametrocontaConstantesFunciones=new ParametroContaConstantesFunciones(); 
			this.parametrocontaBean=new ParametroConta();//this.parametrocontaConstantesFunciones); 			
			this.parametrocontaReturnGeneral=new ParametroContaParameterReturnGeneral(); 
		
			ParametroContaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Parametro Contabilidad Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.parametroconta=new ParametroConta();
			this.parametrocontas = new ArrayList<ParametroConta>();
			this.parametrocontasAux = new ArrayList<ParametroConta>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic=new ParametroContaLogic();
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}
			
			//this.parametrocontaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.parametrocontaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormParametroConta);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoParametroConta!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroConta);	
					}
					
					if(this.jInternalFrameImportacionParametroConta!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroConta);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByParametroConta!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByParametroConta);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormParametroConta!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroConta);
				this.jInternalFrameDetalleFormParametroConta.setVisible(false);
				this.jInternalFrameDetalleFormParametroConta.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroConta!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroConta);
					this.jInternalFrameReporteDinamicoParametroConta.setVisible(false);
					this.jInternalFrameReporteDinamicoParametroConta.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionParametroConta!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionParametroConta);
					this.jInternalFrameImportacionParametroConta.setVisible(false);
					this.jInternalFrameImportacionParametroConta.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByParametroConta!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByParametroConta);
					this.jInternalFrameOrderByParametroConta.setVisible(false);
					this.jInternalFrameOrderByParametroConta.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idParametroContaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ParametroContaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.parametrocontaReturnGeneral=new ParametroContaParameterReturnGeneral();
			
			this.parametrocontaParameterGeneral=new ParametroContaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.parametrocontaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ParametroContaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(ParametroContaDetalleConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroContaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrocontaSessionBean.getEsGuardarRelacionado(),this.parametrocontaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroContaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrocontaSessionBean.getEsGuardarRelacionado(),this.parametrocontaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoParametroConta=false;
			this.isVisibilidadCeldaDuplicarParametroConta=true;
			this.isVisibilidadCeldaCopiarParametroConta=true;
			this.isVisibilidadCeldaVerFormParametroConta=true;
			this.isVisibilidadCeldaOrdenParametroConta=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=false;
			this.isVisibilidadCeldaModificarParametroConta=false;
			this.isVisibilidadCeldaActualizarParametroConta=false;
			this.isVisibilidadCeldaEliminarParametroConta=false;
			this.isVisibilidadCeldaCancelarParametroConta=false;
			this.isVisibilidadCeldaGuardarParametroConta=false;
			this.isVisibilidadCeldaGuardarCambiosParametroConta=false;
			
			
			this.isVisibilidadFK_IdCuentaContableAcreedor=true;
			this.isVisibilidadFK_IdCuentaContableActivo=true;
			this.isVisibilidadFK_IdCuentaContableDeudor=true;
			this.isVisibilidadFK_IdCuentaContableEgreso=true;
			this.isVisibilidadFK_IdCuentaContableEgreso1=true;
			this.isVisibilidadFK_IdCuentaContableEgreso2=true;
			this.isVisibilidadFK_IdCuentaContableEgreso3=true;
			this.isVisibilidadFK_IdCuentaContableIngreso=true;
			this.isVisibilidadFK_IdCuentaContableIngreso1=true;
			this.isVisibilidadFK_IdCuentaContableIngreso2=true;
			this.isVisibilidadFK_IdCuentaContableIngreso3=true;
			this.isVisibilidadFK_IdCuentaContablePasivo=true;
			this.isVisibilidadFK_IdCuentaContablePatrimonio=true;
			this.isVisibilidadFK_IdCuentaContableResumen=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdMonedaExtranjera=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesParametroConta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosParametroConta();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioParametroConta(false);
			
			this.setPermisosUsuarioParametroConta();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrocontaSessionBean.getEsGuardarRelacionado() 
				|| (this.parametrocontaSessionBean.getEsGuardarRelacionado() && this.parametrocontaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioParametroContaClasesRelacionadas();
			}
			
			if(this.parametrocontaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioParametroContaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosParametroConta();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualParametroConta();
			}
			
			if(!this.isPermisoBusquedaParametroConta) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasParametroConta.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioParametroConta,this.isPermisoPaginacionMedioParametroConta,this.isPermisoPaginacionTodoParametroConta);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ParametroContaConstantesFunciones.getTiposSeleccionarParametroConta());
				
				this.tiposColumnasSelect=ParametroContaConstantesFunciones.getTiposSeleccionarParametroConta(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectParametroConta();				
				//this.tiposRelacionesSelect=ParametroContaConstantesFunciones.getTiposRelacionesParametroConta(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioParametroConta();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioParametroConta(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioParametroConta(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroConta() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.parametrocontadetalleLogic=new ParametroContaDetalleLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.monedaLogic=new MonedaLogic();
			this.monedaextranjeraLogic=new MonedaLogic();
			this.cuentacontableactivoLogic=new CuentaContableLogic();
			this.cuentacontablepasivoLogic=new CuentaContableLogic();
			this.cuentacontablepatrimonioLogic=new CuentaContableLogic();
			this.cuentacontableingresoLogic=new CuentaContableLogic();
			this.cuentacontableegresoLogic=new CuentaContableLogic();
			this.cuentacontableresumenLogic=new CuentaContableLogic();
			this.cuentacontabledeudorLogic=new CuentaContableLogic();
			this.cuentacontableacreedorLogic=new CuentaContableLogic();
			this.cuentacontableingreso1Logic=new CuentaContableLogic();
			this.cuentacontableingreso2Logic=new CuentaContableLogic();
			this.cuentacontableingreso3Logic=new CuentaContableLogic();
			this.cuentacontableegreso1Logic=new CuentaContableLogic();
			this.cuentacontableegreso2Logic=new CuentaContableLogic();
			this.cuentacontableegreso3Logic=new CuentaContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				parametrocontaImplementable= (ParametroContaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroContaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				parametrocontaImplementableHome= (ParametroContaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroContaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.parametrocontas= new ArrayList<ParametroConta>();
			this.parametrocontasEliminados= new ArrayList<ParametroConta>();
						
			this.isEsNuevoParametroConta=false;
			this.esParaAccionDesdeFormularioParametroConta=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCuentaContableActivoActual=0L;
			this.idCuentaContablePasivoActual=0L;
			this.idCuentaContablePatrimonioActual=0L;
			this.idCuentaContableIngresoActual=0L;
			this.idCuentaContableEgresoActual=0L;
			this.idCuentaContableResumenActual=0L;
			this.idCuentaContableDeudorActual=0L;
			this.idCuentaContableAcreedorActual=0L;
			this.idCuentaContableIngreso1Actual=0L;
			this.idCuentaContableIngreso2Actual=0L;
			this.idCuentaContableIngreso3Actual=0L;
			this.idCuentaContableEgreso1Actual=0L;
			this.idCuentaContableEgreso2Actual=0L;
			this.idCuentaContableEgreso3Actual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.monedaextranjerasForeignKey=new ArrayList<Moneda>() ;
			this.cuentacontableactivosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablepasivosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablepatrimoniosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableingresosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableegresosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableresumensForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontabledeudorsForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableacreedorsForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableingreso1sForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableingreso2sForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableingreso3sForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableegreso1sForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableegreso2sForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableegreso3sForeignKey=new ArrayList<CuentaContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyParametroConta(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroParametroConta();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ParametroContaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ParametroContaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesParametroConta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingParametroConta(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormParametroConta!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioParametroConta();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioParametroConta();
			}
			
			ParametroContaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasParametroConta.getTabCount(); i++) {
					this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessParametroConta(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ParametroConta: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectParametroConta() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(ParametroContaDetalleConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ParametroContaDetalleConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesParametroConta")) {
				iIndex=this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();	
				
				

				if(sTitle.equals("Parametro Conta Detalles")) {
					if(!ParametroContaDetalleJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessParametroConta();

						this.cargarParteTabPanelRelacionadaParametroContaDetalle(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessParametroConta();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaParametroContaDetalle(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormParametroConta.cargarSessionConBeanSwingJInternalFrameParametroContaDetalle(false,true,iIndex);
		this.jButtonParametroContaDetalleActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaParametroContaDetalle();

		//this.jTabbedPaneRelacionesParametroConta.updateUI();
		//this.jTabbedPaneRelacionesParametroConta.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesParametroConta.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("ParametroContaDetalle")) {
				int row=this.jTableDatosParametroConta.getSelectedRow();
				jButtonParametroContaDetalleActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Parametro Conta Detalle")) {

					if(this.isTienePermisosParametroContaDetalle && this.parametrocontaConstantesFunciones.mostrarParametroContaDetalleParametroConta && !ParametroContaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Parametro Conta Detalles"+"("+ParametroContaDetalleConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Parametro Conta Detalles");

						if(parametrocontaConstantesFunciones.resaltarParametroContaDetalleParametroConta!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(parametrocontaConstantesFunciones.resaltarParametroContaDetalleParametroConta);
						}

						jmenuItem.setEnabled(this.parametrocontaConstantesFunciones.activarParametroContaDetalleParametroConta);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ParametroContaDetalle"));

						

						this.jInternalFrameDetalleFormParametroConta.jmenuDetalleParametroConta.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyParametroConta(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyParametroConta(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyParametroConta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyParametroContaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyParametroConta();
		
		this.cargarCombosFrameForeignKeyParametroConta();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyParametroConta();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyParametroConta();
		}
	}
	
	

	public void cargarCombosForeignKeyMonedaExtranjera(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMonedaExtranjeraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMonedaExtranjera();
				this.cargarCombosFrameMonedaExtranjerasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMonedaExtranjera(this.monedaextranjerasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableActivo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableActivoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableActivo();
				this.cargarCombosFrameCuentaContableActivosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableActivo(this.cuentacontableactivosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContablePasivo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContablePasivoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContablePasivo();
				this.cargarCombosFrameCuentaContablePasivosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContablePasivo(this.cuentacontablepasivosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContablePatrimonio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContablePatrimonioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContablePatrimonio();
				this.cargarCombosFrameCuentaContablePatrimoniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContablePatrimonio(this.cuentacontablepatrimoniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngreso(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIngresoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIngreso();
				this.cargarCombosFrameCuentaContableIngresosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableIngreso(this.cuentacontableingresosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEgreso(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableEgresoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableEgreso();
				this.cargarCombosFrameCuentaContableEgresosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableEgreso(this.cuentacontableegresosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableResumen(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableResumenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableResumen();
				this.cargarCombosFrameCuentaContableResumensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableResumen(this.cuentacontableresumensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDeudor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableDeudorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableDeudor();
				this.cargarCombosFrameCuentaContableDeudorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableDeudor(this.cuentacontabledeudorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableAcreedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableAcreedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableAcreedor();
				this.cargarCombosFrameCuentaContableAcreedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableAcreedor(this.cuentacontableacreedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngreso1(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIngreso1Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIngreso1();
				this.cargarCombosFrameCuentaContableIngreso1sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableIngreso1(this.cuentacontableingreso1sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngreso2(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIngreso2Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIngreso2();
				this.cargarCombosFrameCuentaContableIngreso2sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableIngreso2(this.cuentacontableingreso2sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngreso3(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIngreso3Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIngreso3();
				this.cargarCombosFrameCuentaContableIngreso3sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableIngreso3(this.cuentacontableingreso3sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEgreso1(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableEgreso1Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableEgreso1();
				this.cargarCombosFrameCuentaContableEgreso1sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableEgreso1(this.cuentacontableegreso1sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEgreso2(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableEgreso2Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableEgreso2();
				this.cargarCombosFrameCuentaContableEgreso2sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableEgreso2(this.cuentacontableegreso2sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEgreso3(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableEgreso3Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableEgreso3();
				this.cargarCombosFrameCuentaContableEgreso3sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableEgreso3(this.cuentacontableegreso3sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoParametroContaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.parametrocontaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
			
			if(jTableDatosParametroConta.getRowCount()>=1) {
				jTableDatosParametroConta.removeRowSelectionInterval(0, jTableDatosParametroConta.getRowCount()-1);						
			}
			
			this.isEsNuevoParametroConta=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoParametroConta(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesParametroConta(true);			
			//this.parametroconta=new ParametroConta();
			//this.parametroconta.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroConta(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroConta() ;
			
			if(ParametroContaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroConta(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.parametroconta);	
			this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);				
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
			if(this.parametrocontaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ParametroConta: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarParametroContaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosParametroConta.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosParametroConta.getSelectedRows().length;			
			}
			
			parametrocontasSeleccionados=this.getParametroContasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoParametroConta--;			
				//ParametroConta parametrocontaAux= new ParametroConta();			
				//parametrocontaAux.setId(this.iIdNuevoParametroConta);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ParametroConta parametrocontaOrigen=new ParametroConta();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ParametroConta parametrocontaOrigen : parametrocontasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							parametrocontaOrigen =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocontaOrigen =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaParametroConta();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.parametroconta.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosParametroConta(parametrocontaOrigen,this.parametroconta,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrocontaLogic.getParametroContas().add(this.parametrocontaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrocontas.add(this.parametrocontaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaParametroConta(false);
				
				this.jTableDatosParametroConta.setRowSelectionInterval(this.getIndiceNuevoParametroConta(), this.getIndiceNuevoParametroConta());
				
				int iLastRow =  this.jTableDatosParametroConta.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroConta.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroConta.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroConta(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();									
		
			ParametroConta parametrocontaOrigen=new ParametroConta();
			ParametroConta parametrocontaDestino=new ParametroConta();
				
			parametrocontasSeleccionados=this.getParametroContasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosParametroConta.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || parametrocontasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosParametroConta.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaOrigen =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrocontaOrigen =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocontaDestino =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrocontaDestino =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				parametrocontaOrigen =parametrocontasSeleccionados.get(0);
				parametrocontaDestino =parametrocontasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosParametroConta(parametrocontaOrigen,parametrocontaDestino,true,false);
				
				parametrocontaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrocontaDestino,parametrocontaLogic.getParametroContas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocontaDestino,parametrocontas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaParametroConta(false);
				
				//this.jTableDatosParametroConta.setRowSelectionInterval(this.getIndiceNuevoParametroConta(), this.getIndiceNuevoParametroConta());
				
				int iLastRow =  this.jTableDatosParametroConta.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroConta.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroConta.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroConta(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormParametroConta.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesParametroConta.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasParametroConta.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesParametroConta.setVisible(!isVisible);
			this.jPanelPaginacionParametroConta.setVisible(!isVisible);
			this.jPanelAccionesParametroConta.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameParametroConta();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoParametroConta();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionParametroConta();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByParametroConta();
			
			this.abrirFrameOrderByParametroConta();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByParametroConta();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleParametroConta(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroConta);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormParametroConta.isMaximum()) {
					this.jInternalFrameDetalleFormParametroConta.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormParametroConta.setSize(this.jInternalFrameDetalleFormParametroConta.iWidthFormulario,this.jInternalFrameDetalleFormParametroConta.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormParametroConta.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormParametroConta.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormParametroConta.isMaximum()) {
						this.jInternalFrameDetalleFormParametroConta.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormParametroConta.jContentPaneDetalleParametroConta.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormParametroConta.jContentPaneDetalleParametroConta.getWidth(),ParametroContaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormParametroConta.jContentPaneDetalleParametroConta.getWidth(),ParametroContaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormParametroConta.jContentPaneDetalleParametroConta.getWidth(),ParametroContaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(ParametroContaDetalleJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaParametroContaDetalle();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormParametroConta.setVisible(true);
	        this.jInternalFrameDetalleFormParametroConta.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByParametroConta() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByParametroConta==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByParametroConta=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroConta,false,this);
				} else {
					this.jInternalFrameOrderByParametroConta=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroConta,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByParametroConta);
				this.jInternalFrameOrderByParametroConta.setVisible(false);
				this.jInternalFrameOrderByParametroConta.setSelected(false);
				
				this.jInternalFrameOrderByParametroConta.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroConta"));
				
				this.inicializarActualizarBindingTablaOrderByParametroConta();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionParametroConta() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionParametroConta==null) {
				
				this.jInternalFrameImportacionParametroConta=new ImportacionJInternalFrame(ParametroContaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroConta);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionParametroConta);
				this.jInternalFrameImportacionParametroConta.setVisible(false);
				this.jInternalFrameImportacionParametroConta.setSelected(false);


				this.jInternalFrameImportacionParametroConta.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroConta"));
				this.jInternalFrameImportacionParametroConta.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroConta"));
				this.jInternalFrameImportacionParametroConta.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroConta"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoParametroConta() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoParametroConta==null) {
				this.jInternalFrameReporteDinamicoParametroConta=new ReporteDinamicoJInternalFrame(ParametroContaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroConta);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroConta);
				this.jInternalFrameReporteDinamicoParametroConta.setVisible(false);
				this.jInternalFrameReporteDinamicoParametroConta.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoParametroConta.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroConta"));
				this.jInternalFrameReporteDinamicoParametroConta.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroConta"));
				this.jInternalFrameReporteDinamicoParametroConta.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroConta"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroConta();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaParametroContaDetalle() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.jScrollPanelDatosParametroContaDetalle.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormParametroConta.jContentPaneDetalleParametroConta.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.jScrollPanelDatosParametroContaDetalle.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.jScrollPanelDatosParametroContaDetalle.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.jScrollPanelDatosParametroContaDetalle.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleParametroConta() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroConta);
			
	       	this.jInternalFrameDetalleFormParametroConta.setVisible(false);
	        this.jInternalFrameDetalleFormParametroConta.setSelected(false);
			
			//this.jInternalFrameDetalleFormParametroConta.dispose();
			//this.jInternalFrameDetalleFormParametroConta=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoParametroConta() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoParametroConta.setVisible(true);
	        this.jInternalFrameReporteDinamicoParametroConta.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionParametroConta() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionParametroConta.setVisible(true);
	        this.jInternalFrameImportacionParametroConta.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByParametroConta() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByParametroConta.setVisible(true);
	        this.jInternalFrameOrderByParametroConta.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByParametroConta() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByParametroConta.setVisible(false);
	        this.jInternalFrameOrderByParametroConta.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoParametroConta() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoParametroConta.setVisible(false);
	        this.jInternalFrameReporteDinamicoParametroConta.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionParametroConta() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionParametroConta.setVisible(false);
	        this.jInternalFrameImportacionParametroConta.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContableActivo(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableActivo";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableActivo=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableActivo.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableActivo(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContablePasivo(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContablePasivo";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContablePasivo=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContablePasivo.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContablePasivo(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContablePatrimonio(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContablePatrimonio";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContablePatrimonio=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContablePatrimonio.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContablePatrimonio(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIngreso(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIngreso";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableIngreso=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIngreso.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIngreso(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableEgreso(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableEgreso";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableEgreso=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableEgreso.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableEgreso(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableResumen(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableResumen";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableResumen=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableResumen.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableResumen(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableDeudor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableDeudor";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableDeudor=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableDeudor.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableDeudor(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableAcreedor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableAcreedor";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableAcreedor=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableAcreedor.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableAcreedor(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIngreso1(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIngreso1";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableIngreso1=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIngreso1.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIngreso1(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIngreso2(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIngreso2";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableIngreso2=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIngreso2.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIngreso2(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIngreso3(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIngreso3";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableIngreso3=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIngreso3.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIngreso3(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableEgreso1(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableEgreso1";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableEgreso1=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableEgreso1.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableEgreso1(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableEgreso2(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableEgreso2";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableEgreso2=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableEgreso2.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableEgreso2(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableEgreso3(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableEgreso3";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderCuentaContableEgreso3=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableEgreso3.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableEgreso3(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarParametroConta(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarParametroConta(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesParametroConta(true);
			//this.isEsNuevoParametroConta=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesParametroConta("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroConta(false) ;
			
			if(parametrocontaSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleSessionBean.getEsGuardarRelacionado() && ParametroContaDetalleJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParametroContaDetalleActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(ParametroContaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroConta(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroConta(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaParametroContaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarParametroConta(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesParametroConta(true);
			//this.isEsNuevoParametroConta=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.parametroconta.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesParametroConta("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesParametroConta(false) ;
			
			if(ParametroContaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroConta(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroConta(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CuentaContableActivo")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_activoParametroConta) {
					this.cargarCombosCuentaContableActivosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableActivosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_activo (id);

				this.recargarComboTablaCuentaContableActivo(this.cuentacontableactivosForeignKey);

			}
			
			if(sType.equals("CuentaContablePasivo")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_pasivoParametroConta) {
					this.cargarCombosCuentaContablePasivosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContablePasivosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_pasivo (id);

				this.recargarComboTablaCuentaContablePasivo(this.cuentacontablepasivosForeignKey);

			}
			
			if(sType.equals("CuentaContablePatrimonio")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_patrimonioParametroConta) {
					this.cargarCombosCuentaContablePatrimoniosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContablePatrimoniosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_patrimonio (id);

				this.recargarComboTablaCuentaContablePatrimonio(this.cuentacontablepatrimoniosForeignKey);

			}
			
			if(sType.equals("CuentaContableIngreso")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingresoParametroConta) {
					this.cargarCombosCuentaContableIngresosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableIngresosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso (id);

				this.recargarComboTablaCuentaContableIngreso(this.cuentacontableingresosForeignKey);

			}
			
			if(sType.equals("CuentaContableEgreso")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egresoParametroConta) {
					this.cargarCombosCuentaContableEgresosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableEgresosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso (id);

				this.recargarComboTablaCuentaContableEgreso(this.cuentacontableegresosForeignKey);

			}
			
			if(sType.equals("CuentaContableResumen")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_resumenParametroConta) {
					this.cargarCombosCuentaContableResumensForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableResumensForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_resumen (id);

				this.recargarComboTablaCuentaContableResumen(this.cuentacontableresumensForeignKey);

			}
			
			if(sType.equals("CuentaContableDeudor")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_deudorParametroConta) {
					this.cargarCombosCuentaContableDeudorsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableDeudorsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_deudor (id);

				this.recargarComboTablaCuentaContableDeudor(this.cuentacontabledeudorsForeignKey);

			}
			
			if(sType.equals("CuentaContableAcreedor")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_acreedorParametroConta) {
					this.cargarCombosCuentaContableAcreedorsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableAcreedorsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_acreedor (id);

				this.recargarComboTablaCuentaContableAcreedor(this.cuentacontableacreedorsForeignKey);

			}
			
			if(sType.equals("CuentaContableIngreso1")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso1ParametroConta) {
					this.cargarCombosCuentaContableIngreso1sForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableIngreso1sForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso1 (id);

				this.recargarComboTablaCuentaContableIngreso1(this.cuentacontableingreso1sForeignKey);

			}
			
			if(sType.equals("CuentaContableIngreso2")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso2ParametroConta) {
					this.cargarCombosCuentaContableIngreso2sForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableIngreso2sForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso2 (id);

				this.recargarComboTablaCuentaContableIngreso2(this.cuentacontableingreso2sForeignKey);

			}
			
			if(sType.equals("CuentaContableIngreso3")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso3ParametroConta) {
					this.cargarCombosCuentaContableIngreso3sForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableIngreso3sForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso3 (id);

				this.recargarComboTablaCuentaContableIngreso3(this.cuentacontableingreso3sForeignKey);

			}
			
			if(sType.equals("CuentaContableEgreso1")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso1ParametroConta) {
					this.cargarCombosCuentaContableEgreso1sForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableEgreso1sForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso1 (id);

				this.recargarComboTablaCuentaContableEgreso1(this.cuentacontableegreso1sForeignKey);

			}
			
			if(sType.equals("CuentaContableEgreso2")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso2ParametroConta) {
					this.cargarCombosCuentaContableEgreso2sForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableEgreso2sForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso2 (id);

				this.recargarComboTablaCuentaContableEgreso2(this.cuentacontableegreso2sForeignKey);

			}
			
			if(sType.equals("CuentaContableEgreso3")) {
				if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso3ParametroConta) {
					this.cargarCombosCuentaContableEgreso3sForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroConta(false,false);
					this.cargarCombosFrameCuentaContableEgreso3sForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso3 (id);

				this.recargarComboTablaCuentaContableEgreso3(this.cuentacontableegreso3sForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaMonedaExtranjera(List<Moneda> monedaextranjerasForeignKey)throws Exception{
		TableColumn tableColumnMonedaExtranjera=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA));
		TableCellEditor tableCellEditorMonedaExtranjera =tableColumnMonedaExtranjera.getCellEditor();

		MonedaTableCell monedaTableCellFk=(MonedaTableCell)tableCellEditorMonedaExtranjera;

		if(monedaTableCellFk!=null) {
			monedaTableCellFk.setmonedasForeignKey(monedaextranjerasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//monedaTableCellFk.setRowActual(intSelectedRow);
			//monedaTableCellFk.setmonedasForeignKeyActual(monedaextranjerasForeignKey);
		//}


		if(monedaTableCellFk!=null) {
			monedaTableCellFk.RecargarMonedasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableActivo(List<CuentaContable> cuentacontableactivosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableActivo=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO));
		TableCellEditor tableCellEditorCuentaContableActivo =tableColumnCuentaContableActivo.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableActivo;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableactivosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableactivosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContablePasivo(List<CuentaContable> cuentacontablepasivosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContablePasivo=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO));
		TableCellEditor tableCellEditorCuentaContablePasivo =tableColumnCuentaContablePasivo.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContablePasivo;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablepasivosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablepasivosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContablePatrimonio(List<CuentaContable> cuentacontablepatrimoniosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContablePatrimonio=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO));
		TableCellEditor tableCellEditorCuentaContablePatrimonio =tableColumnCuentaContablePatrimonio.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContablePatrimonio;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablepatrimoniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablepatrimoniosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIngreso(List<CuentaContable> cuentacontableingresosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIngreso=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO));
		TableCellEditor tableCellEditorCuentaContableIngreso =tableColumnCuentaContableIngreso.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIngreso;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableingresosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableingresosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableEgreso(List<CuentaContable> cuentacontableegresosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableEgreso=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO));
		TableCellEditor tableCellEditorCuentaContableEgreso =tableColumnCuentaContableEgreso.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableEgreso;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableegresosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableegresosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableResumen(List<CuentaContable> cuentacontableresumensForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableResumen=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN));
		TableCellEditor tableCellEditorCuentaContableResumen =tableColumnCuentaContableResumen.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableResumen;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableresumensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableresumensForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableDeudor(List<CuentaContable> cuentacontabledeudorsForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableDeudor=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR));
		TableCellEditor tableCellEditorCuentaContableDeudor =tableColumnCuentaContableDeudor.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableDeudor;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontabledeudorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontabledeudorsForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableAcreedor(List<CuentaContable> cuentacontableacreedorsForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableAcreedor=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR));
		TableCellEditor tableCellEditorCuentaContableAcreedor =tableColumnCuentaContableAcreedor.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableAcreedor;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableacreedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableacreedorsForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIngreso1(List<CuentaContable> cuentacontableingreso1sForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIngreso1=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1));
		TableCellEditor tableCellEditorCuentaContableIngreso1 =tableColumnCuentaContableIngreso1.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIngreso1;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableingreso1sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableingreso1sForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIngreso2(List<CuentaContable> cuentacontableingreso2sForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIngreso2=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2));
		TableCellEditor tableCellEditorCuentaContableIngreso2 =tableColumnCuentaContableIngreso2.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIngreso2;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableingreso2sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableingreso2sForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIngreso3(List<CuentaContable> cuentacontableingreso3sForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIngreso3=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3));
		TableCellEditor tableCellEditorCuentaContableIngreso3 =tableColumnCuentaContableIngreso3.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIngreso3;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableingreso3sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableingreso3sForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableEgreso1(List<CuentaContable> cuentacontableegreso1sForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableEgreso1=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1));
		TableCellEditor tableCellEditorCuentaContableEgreso1 =tableColumnCuentaContableEgreso1.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableEgreso1;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableegreso1sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableegreso1sForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableEgreso2(List<CuentaContable> cuentacontableegreso2sForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableEgreso2=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2));
		TableCellEditor tableCellEditorCuentaContableEgreso2 =tableColumnCuentaContableEgreso2.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableEgreso2;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableegreso2sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableegreso2sForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableEgreso3(List<CuentaContable> cuentacontableegreso3sForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableEgreso3=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3));
		TableCellEditor tableCellEditorCuentaContableEgreso3 =tableColumnCuentaContableEgreso3.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableEgreso3;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableegreso3sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableegreso3sForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_activo (Long id) throws Exception {
		this.setActualCuentaContableActivoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_pasivo (Long id) throws Exception {
		this.setActualCuentaContablePasivoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_patrimonio (Long id) throws Exception {
		this.setActualCuentaContablePatrimonioForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso (Long id) throws Exception {
		this.setActualCuentaContableIngresoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso (Long id) throws Exception {
		this.setActualCuentaContableEgresoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_resumen (Long id) throws Exception {
		this.setActualCuentaContableResumenForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_deudor (Long id) throws Exception {
		this.setActualCuentaContableDeudorForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_acreedor (Long id) throws Exception {
		this.setActualCuentaContableAcreedorForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso1 (Long id) throws Exception {
		this.setActualCuentaContableIngreso1ForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso2 (Long id) throws Exception {
		this.setActualCuentaContableIngreso2ForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso3 (Long id) throws Exception {
		this.setActualCuentaContableIngreso3ForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso1 (Long id) throws Exception {
		this.setActualCuentaContableEgreso1ForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso2 (Long id) throws Exception {
		this.setActualCuentaContableEgreso2ForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso3 (Long id) throws Exception {
		this.setActualCuentaContableEgreso3ForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesParametroConta(false);
			
			//if(!this.isEsNuevoParametroConta) {								
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				
			}
			
			if(this.permiteMantenimiento(this.parametroconta)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoParametroConta=true;
					this.inicializarActualizarBindingTablaParametroConta(false);
					this.isEsNuevoParametroConta=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoParametroConta=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoParametroConta=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroConta(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroConta(false);
				
				this.habilitarDeshabilitarControlesParametroConta(false);
			
												
				
				if(ParametroContaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleParametroConta();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoParametroContaActionPerformed(evt,parametrocontaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualParametroConta(this.parametroconta,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,parametrocontaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.parametroconta.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarParametroContaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				this.parametroconta.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				this.parametroconta.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.parametroconta)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ParametroContaModel) this.jTableDatosParametroConta.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoParametroConta=true;
				this.inicializarActualizarBindingTablaParametroConta(false);
				this.isEsNuevoParametroConta=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroConta(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroConta(false);
				
				this.habilitarDeshabilitarControlesParametroConta(false);
				
				
				
				if(ParametroContaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleParametroConta();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarParametroContaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosParametroConta.getRowCount()>=1) {
				jTableDatosParametroConta.removeRowSelectionInterval(0, jTableDatosParametroConta.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesParametroConta(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaParametroConta(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroConta(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroConta(false) ;
			
			this.isEsNuevoParametroConta=false;
			
			if(ParametroContaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleParametroConta();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosParametroContaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingParametroConta(false);
				
				//SI ES MANUAL
				if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualParametroConta();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosParametroContaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoParametroConta--;			
			//ParametroConta parametrocontaAux= new ParametroConta();			
			//parametrocontaAux.setId(this.iIdNuevoParametroConta);
			
			if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaParametroConta();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
			
			this.parametroconta.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.parametrocontaLogic.getParametroContas().add(this.parametrocontaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.parametrocontas.add(this.parametrocontaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaParametroConta(false);
			
			this.jTableDatosParametroConta.setRowSelectionInterval(this.getIndiceNuevoParametroConta(), this.getIndiceNuevoParametroConta());
			
			int iLastRow =  this.jTableDatosParametroConta.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosParametroConta.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosParametroConta.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaParametroConta(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionParametroContaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametroConta(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroConta(false);
			
			//SI ES MANUAL
			if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroConta();
			}
			
			//this.abrirFrameTreeParametroConta();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionParametroContaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Parametro ContabilidadS ?", "MANTENIMIENTO DE Parametro Contabilidad", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionParametroConta.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralParametroConta();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.parametrocontaReturnGeneral=parametrocontaLogic.procesarImportacionParametroContasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.parametrocontaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarParametroContaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionParametroContaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionParametroConta.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionParametroConta.setFileImportacion(this.jInternalFrameImportacionParametroConta.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionParametroConta.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionParametroConta.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionParametroConta.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionParametroConta.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoParametroContaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();		

		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ParametroContaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ParametroContaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteParametroContas("Todos",parametrocontasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroContaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_MonedaExtranjera_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_MonedaExtranjera_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_MonedaExtranjera_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_MonedaExtranjera_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_CONMASCARA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nMascara_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nMascara_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nMascara_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nMascara_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_NUMERONIVEL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroNivel_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroNivel_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroNivel_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroNivel_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Presupuesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Presupuesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Presupuesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Presupuesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_ESLOTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Lote_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Lote_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Lote_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Lote_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nSecuencialAutomatico_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nSecuencialAutomatico_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nSecuencialAutomatico_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nSecuencialAutomatico_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCuentasNiff_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCuentasNiff_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCuentasNiff_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCuentasNiff_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCentroCostoMascara_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCentroCostoMascara_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCentroCostoMascara_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCentroCostoMascara_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCentroCostoNuevaEstructura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCentroCostoNuevaEstructura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCentroCostoNuevaEstructura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCentroCostoNuevaEstructura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntroCostoNumeroNivel_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntroCostoNumeroNivel_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntroCostoNumeroNivel_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntroCostoNumeroNivel_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableActivo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableActivo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableActivo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableActivo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContablePasivo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContablePasivo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContablePasivo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContablePasivo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContablePatrimonio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContablePatrimonio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContablePatrimonio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContablePatrimonio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIngreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIngreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIngreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIngreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableEgreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableEgreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableEgreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableEgreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableResumen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableResumen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableResumen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableResumen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableDeudor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableDeudor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableDeudor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableDeudor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableAcreedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableAcreedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableAcreedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableAcreedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIngreso1_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIngreso1_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIngreso1_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIngreso1_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIngreso2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIngreso2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIngreso2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIngreso2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIngreso3_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIngreso3_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIngreso3_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIngreso3_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableEgreso1_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableEgreso1_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableEgreso1_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableEgreso1_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableEgreso2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableEgreso2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableEgreso2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableEgreso2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableEgreso3_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableEgreso3_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableEgreso3_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableEgreso3_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoParametroConta.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ParametroContaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA:
					sNombreCampoCategoria="id_moneda_extranjera";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONMASCARA:
					sNombreCampoCategoria="con_mascara";
					break;

				case ParametroContaConstantesFunciones.LABEL_NUMERONIVEL:
					sNombreCampoCategoria="numero_nivel";
					break;

				case ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO:
					sNombreCampoCategoria="es_presupuesto";
					break;

				case ParametroContaConstantesFunciones.LABEL_ESLOTE:
					sNombreCampoCategoria="es_lote";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO:
					sNombreCampoCategoria="con_secuencial_automatico";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF:
					sNombreCampoCategoria="con_cuentas_niff";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA:
					sNombreCampoCategoria="con_centro_costo_mascara";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA:
					sNombreCampoCategoria="con_centro_costo_nueva_estructura";
					break;

				case ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL:
					sNombreCampoCategoria="centro_costo_numero_nivel";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO:
					sNombreCampoCategoria="id_cuenta_contable_activo";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO:
					sNombreCampoCategoria="id_cuenta_contable_pasivo";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO:
					sNombreCampoCategoria="id_cuenta_contable_patrimonio";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO:
					sNombreCampoCategoria="id_cuenta_contable_ingreso";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO:
					sNombreCampoCategoria="id_cuenta_contable_egreso";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN:
					sNombreCampoCategoria="id_cuenta_contable_resumen";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR:
					sNombreCampoCategoria="id_cuenta_contable_deudor";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR:
					sNombreCampoCategoria="id_cuenta_contable_acreedor";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1:
					sNombreCampoCategoria="id_cuenta_contable_ingreso1";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2:
					sNombreCampoCategoria="id_cuenta_contable_ingreso2";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3:
					sNombreCampoCategoria="id_cuenta_contable_ingreso3";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1:
					sNombreCampoCategoria="id_cuenta_contable_egreso1";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2:
					sNombreCampoCategoria="id_cuenta_contable_egreso2";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3:
					sNombreCampoCategoria="id_cuenta_contable_egreso3";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ParametroContaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA:
					sNombreCampoCategoriaValor="id_moneda_extranjera";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONMASCARA:
					sNombreCampoCategoriaValor="con_mascara";
					break;

				case ParametroContaConstantesFunciones.LABEL_NUMERONIVEL:
					sNombreCampoCategoriaValor="numero_nivel";
					break;

				case ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO:
					sNombreCampoCategoriaValor="es_presupuesto";
					break;

				case ParametroContaConstantesFunciones.LABEL_ESLOTE:
					sNombreCampoCategoriaValor="es_lote";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO:
					sNombreCampoCategoriaValor="con_secuencial_automatico";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF:
					sNombreCampoCategoriaValor="con_cuentas_niff";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA:
					sNombreCampoCategoriaValor="con_centro_costo_mascara";
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA:
					sNombreCampoCategoriaValor="con_centro_costo_nueva_estructura";
					break;

				case ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL:
					sNombreCampoCategoriaValor="centro_costo_numero_nivel";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO:
					sNombreCampoCategoriaValor="id_cuenta_contable_activo";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO:
					sNombreCampoCategoriaValor="id_cuenta_contable_pasivo";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO:
					sNombreCampoCategoriaValor="id_cuenta_contable_patrimonio";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO:
					sNombreCampoCategoriaValor="id_cuenta_contable_ingreso";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO:
					sNombreCampoCategoriaValor="id_cuenta_contable_egreso";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN:
					sNombreCampoCategoriaValor="id_cuenta_contable_resumen";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR:
					sNombreCampoCategoriaValor="id_cuenta_contable_deudor";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR:
					sNombreCampoCategoriaValor="id_cuenta_contable_acreedor";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1:
					sNombreCampoCategoriaValor="id_cuenta_contable_ingreso1";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2:
					sNombreCampoCategoriaValor="id_cuenta_contable_ingreso2";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3:
					sNombreCampoCategoriaValor="id_cuenta_contable_ingreso3";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1:
					sNombreCampoCategoriaValor="id_cuenta_contable_egreso1";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2:
					sNombreCampoCategoriaValor="id_cuenta_contable_egreso2";
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3:
					sNombreCampoCategoriaValor="id_cuenta_contable_egreso3";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroContaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda Local",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda Extranjera",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda_extranjera");
					break;

				case ParametroContaConstantesFunciones.LABEL_CONMASCARA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mascara",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_mascara");
					break;

				case ParametroContaConstantesFunciones.LABEL_NUMERONIVEL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Nivel",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_nivel");
					break;

				case ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Presupuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_presupuesto");
					break;

				case ParametroContaConstantesFunciones.LABEL_ESLOTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lote",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_lote");
					break;

				case ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial  Auto.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_secuencial_automatico");
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuentas Niff",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_cuentas_niff");
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mascara Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_centro_costo_mascara");
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nueva Estructura Centro C.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_centro_costo_nueva_estructura");
					break;

				case ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro C. No Nivel",sNombreCampoCategoria,sNombreCampoCategoriaValor,"centro_costo_numero_nivel");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Activo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_activo");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Pasivo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_pasivo");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Patrimonio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_patrimonio");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Ingreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_ingreso");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Egreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_egreso");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Resumen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_resumen");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Deudor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_deudor");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Acreedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_acreedor");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Ingreso1",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_ingreso1");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Ingreso 2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_ingreso2");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Ingreso 3",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_ingreso3");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Egreso 1",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_egreso1");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Egreso 2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_egreso2");
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Egreso 3",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_egreso3");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoParametroContaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();		
		
		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametroconta";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ParametroContas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ParametroContaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getmonedaextranjera_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_CONMASCARA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONMASCARA);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcon_mascara());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_NUMERONIVEL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_NUMERONIVEL);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getnumero_nivel());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getes_presupuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_ESLOTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_ESLOTE);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getes_lote());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcon_secuencial_automatico());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcon_cuentas_niff());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcon_centro_costo_mascara());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcon_centro_costo_nueva_estructura());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcentro_costo_numero_nivel());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableactivo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontablepasivo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontablepatrimonio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableingreso_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableegreso_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableresumen_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontabledeudor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableacreedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableingreso1_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableingreso2_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableingreso3_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableegreso1_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableegreso2_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3);
					iRow++;

					for(ParametroConta parametroconta:parametrocontasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametroconta.getcuentacontableegreso3_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelParametroConta(row);				
			//	iRow++;
			//}				
			
			//for(ParametroConta parametrocontaAux:parametrocontasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelParametroConta(parametrocontaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroConta(false);
			
			//SI ES MANUAL
			if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroConta();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresParametroContaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroConta(false);
			
			//SI ES MANUAL
			if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroConta();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesParametroContaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroConta(false);
			
			//SI ES MANUAL
			if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroConta();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaParametroConta() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosParametroConta.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosParametroConta.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosParametroConta.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosParametroConta.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosParametroConta.setMinimumSize(dimensionMinimum);
		this.jTableDatosParametroConta.setMaximumSize(dimensionMaximum);
		this.jTableDatosParametroConta.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingParametroConta(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingParametroConta(esInicializar,true);
	}
	
	public void inicializarActualizarBindingParametroConta(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaParametroConta(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesParametroConta(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasParametroConta(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroConta(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesParametroConta(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ParametroContaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualParametroConta() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaParametroConta();
		
		this.inicializarActualizarBindingBotonesManualParametroConta(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualParametroConta();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroConta() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualParametroConta(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualParametroConta(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosParametroConta.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosParametroConta.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteParametroConta.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormParametroConta!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormParametroConta.jCheckBoxPostAccionNuevoParametroConta.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormParametroConta.jCheckBoxPostAccionSinCerrarParametroConta.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormParametroConta.jCheckBoxPostAccionSinMensajeParametroConta.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosParametroConta.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosParametroConta.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteParametroConta.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormParametroConta!=null) {
				this.jInternalFrameDetalleFormParametroConta.jCheckBoxPostAccionNuevoParametroConta.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormParametroConta.jCheckBoxPostAccionSinCerrarParametroConta.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormParametroConta.jCheckBoxPostAccionSinMensajeParametroConta.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionParametroConta.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionParametroConta.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormParametroConta!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesParametroConta.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoParametroConta!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesParametroConta.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesParametroConta.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarParametroConta.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesParametroConta.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoParametroConta!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesParametroConta.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralParametroConta.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesParametroConta(Boolean esInicializar) throws Exception {
		try	{	
			if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualParametroConta(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesParametroConta() throws Exception {
		try	{
			if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroConta();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroConta() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroConta() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesParametroConta.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesParametroConta.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesParametroConta.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesParametroConta.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesParametroConta.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesParametroConta.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionParametroConta.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionParametroConta.addItem(reporte);
			}
			
			
			if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionParametroConta.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionParametroConta.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesParametroConta.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesParametroConta.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesParametroConta.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesParametroConta.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarParametroConta.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarParametroConta.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarParametroConta.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroConta();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroConta() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroConta!=null) {
				this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroConta!=null) {
				this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroConta.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoParametroConta!=null) {
				
				if(this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroConta.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoParametroConta.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroConta.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroConta.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualParametroConta()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_acreedorFK_IdCuentaContableAcreedor=((CuentaContable)this.jComboBoxid_cuenta_contable_acreedorFK_IdCuentaContableAcreedorParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_activoFK_IdCuentaContableActivo=((CuentaContable)this.jComboBoxid_cuenta_contable_activoFK_IdCuentaContableActivoParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_deudorFK_IdCuentaContableDeudor=((CuentaContable)this.jComboBoxid_cuenta_contable_deudorFK_IdCuentaContableDeudorParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_egresoFK_IdCuentaContableEgreso=((CuentaContable)this.jComboBoxid_cuenta_contable_egresoFK_IdCuentaContableEgresoParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_egreso1FK_IdCuentaContableEgreso1=((CuentaContable)this.jComboBoxid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1ParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_egreso2FK_IdCuentaContableEgreso2=((CuentaContable)this.jComboBoxid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2ParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_egreso3FK_IdCuentaContableEgreso3=((CuentaContable)this.jComboBoxid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3ParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_ingresoFK_IdCuentaContableIngreso=((CuentaContable)this.jComboBoxid_cuenta_contable_ingresoFK_IdCuentaContableIngresoParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1=((CuentaContable)this.jComboBoxid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1ParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2=((CuentaContable)this.jComboBoxid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2ParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3=((CuentaContable)this.jComboBoxid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3ParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_pasivoFK_IdCuentaContablePasivo=((CuentaContable)this.jComboBoxid_cuenta_contable_pasivoFK_IdCuentaContablePasivoParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio=((CuentaContable)this.jComboBoxid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonioParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.getSelectedItem()!=null){this.id_cuenta_contable_resumenFK_IdCuentaContableResumen=((CuentaContable)this.jComboBoxid_cuenta_contable_resumenFK_IdCuentaContableResumenParametroConta.getSelectedItem()).getId();}
		if(this.jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.getSelectedItem()!=null){this.id_moneda_extranjeraFK_IdMonedaExtranjera=((Moneda)this.jComboBoxid_moneda_extranjeraFK_IdMonedaExtranjeraParametroConta.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasParametroConta(Boolean esInicializar) throws Exception {				
		if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualParametroConta();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaParametroConta() throws Exception {
		this.inicializarActualizarBindingTablaParametroConta(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByParametroConta() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByParametroConta.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByParametroConta.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroConta.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByParametroConta.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroConta.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosParametroContaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroContaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByParametroConta.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroConta.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByParametroConta.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaParametroConta(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=parametrocontaLogic.getParametroContas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=parametrocontas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosParametroConta.setModel(new ParametroContaModel(this.parametrocontaLogic.getParametroContas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosParametroConta.setModel(new ParametroContaModel(this.parametrocontas,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByParametroConta!=null && this.jInternalFrameOrderByParametroConta.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByParametroConta();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ParametroContaConstantesFunciones.SCLASSWEBTITULO,parametrocontaConstantesFunciones.resaltarSeleccionarParametroConta,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ParametroContaConstantesFunciones.SCLASSWEBTITULO,parametrocontaConstantesFunciones.resaltarSeleccionarParametroConta,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_ID));

		if(this.parametrocontaConstantesFunciones.mostraridParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrocontaConstantesFunciones.resaltaridParametroConta,this.parametrocontaConstantesFunciones.activaridParametroConta,this,true,"idParametroConta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocontaConstantesFunciones.resaltaridParametroConta,this.parametrocontaConstantesFunciones.activaridParametroConta,this,true,"idParametroConta","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.parametrocontaConstantesFunciones.mostrarid_empresaParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.parametrocontaConstantesFunciones.resaltarid_empresaParametroConta,this,this.parametrocontaConstantesFunciones.activarid_empresaParametroConta));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.parametrocontaConstantesFunciones.resaltarid_empresaParametroConta,this,this.parametrocontaConstantesFunciones.activarid_empresaParametroConta,false,"id_empresaParametroConta","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDMONEDA));

		if(this.parametrocontaConstantesFunciones.mostrarid_monedaParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.parametrocontaConstantesFunciones.resaltarid_monedaParametroConta,this,this.parametrocontaConstantesFunciones.activarid_monedaParametroConta));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.parametrocontaConstantesFunciones.resaltarid_monedaParametroConta,this,this.parametrocontaConstantesFunciones.activarid_monedaParametroConta,false,"id_monedaParametroConta","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA));

		if(this.parametrocontaConstantesFunciones.mostrarid_moneda_extranjeraParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedaextranjerasForeignKey,this.parametrocontaConstantesFunciones.resaltarid_moneda_extranjeraParametroConta,this,this.parametrocontaConstantesFunciones.activarid_moneda_extranjeraParametroConta));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedaextranjerasForeignKey,this.parametrocontaConstantesFunciones.resaltarid_moneda_extranjeraParametroConta,this,this.parametrocontaConstantesFunciones.activarid_moneda_extranjeraParametroConta,true,"id_moneda_extranjeraParametroConta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_CONMASCARA));

		if(this.parametrocontaConstantesFunciones.mostrarcon_mascaraParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_CONMASCARA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrocontaConstantesFunciones.resaltarcon_mascaraParametroConta,this.parametrocontaConstantesFunciones.activarcon_mascaraParametroConta));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrocontaConstantesFunciones.resaltarcon_mascaraParametroConta,this.parametrocontaConstantesFunciones.activarcon_mascaraParametroConta,this,true,"con_mascaraParametroConta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_NUMERONIVEL));

		if(this.parametrocontaConstantesFunciones.mostrarnumero_nivelParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_NUMERONIVEL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrocontaConstantesFunciones.resaltarnumero_nivelParametroConta,this.parametrocontaConstantesFunciones.activarnumero_nivelParametroConta,this,true,"numero_nivelParametroConta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocontaConstantesFunciones.resaltarnumero_nivelParametroConta,this.parametrocontaConstantesFunciones.activarnumero_nivelParametroConta,this,true,"numero_nivelParametroConta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO));

		if(this.parametrocontaConstantesFunciones.mostrares_presupuestoParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrocontaConstantesFunciones.resaltares_presupuestoParametroConta,this.parametrocontaConstantesFunciones.activares_presupuestoParametroConta));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrocontaConstantesFunciones.resaltares_presupuestoParametroConta,this.parametrocontaConstantesFunciones.activares_presupuestoParametroConta,this,true,"es_presupuestoParametroConta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_ESLOTE));

		if(this.parametrocontaConstantesFunciones.mostrares_loteParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_ESLOTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrocontaConstantesFunciones.resaltares_loteParametroConta,this.parametrocontaConstantesFunciones.activares_loteParametroConta));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrocontaConstantesFunciones.resaltares_loteParametroConta,this.parametrocontaConstantesFunciones.activares_loteParametroConta,this,true,"es_loteParametroConta","BASICO"));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO));

		if(this.parametrocontaConstantesFunciones.mostrarcon_secuencial_automaticoParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrocontaConstantesFunciones.resaltarcon_secuencial_automaticoParametroConta,this.parametrocontaConstantesFunciones.activarcon_secuencial_automaticoParametroConta));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrocontaConstantesFunciones.resaltarcon_secuencial_automaticoParametroConta,this.parametrocontaConstantesFunciones.activarcon_secuencial_automaticoParametroConta,this,true,"con_secuencial_automaticoParametroConta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF));

		if(this.parametrocontaConstantesFunciones.mostrarcon_cuentas_niffParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrocontaConstantesFunciones.resaltarcon_cuentas_niffParametroConta,this.parametrocontaConstantesFunciones.activarcon_cuentas_niffParametroConta));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrocontaConstantesFunciones.resaltarcon_cuentas_niffParametroConta,this.parametrocontaConstantesFunciones.activarcon_cuentas_niffParametroConta,this,true,"con_cuentas_niffParametroConta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA));

		if(this.parametrocontaConstantesFunciones.mostrarcon_centro_costo_mascaraParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrocontaConstantesFunciones.resaltarcon_centro_costo_mascaraParametroConta,this.parametrocontaConstantesFunciones.activarcon_centro_costo_mascaraParametroConta));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrocontaConstantesFunciones.resaltarcon_centro_costo_mascaraParametroConta,this.parametrocontaConstantesFunciones.activarcon_centro_costo_mascaraParametroConta,this,true,"con_centro_costo_mascaraParametroConta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA));

		if(this.parametrocontaConstantesFunciones.mostrarcon_centro_costo_nueva_estructuraParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrocontaConstantesFunciones.resaltarcon_centro_costo_nueva_estructuraParametroConta,this.parametrocontaConstantesFunciones.activarcon_centro_costo_nueva_estructuraParametroConta));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrocontaConstantesFunciones.resaltarcon_centro_costo_nueva_estructuraParametroConta,this.parametrocontaConstantesFunciones.activarcon_centro_costo_nueva_estructuraParametroConta,this,true,"con_centro_costo_nueva_estructuraParametroConta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL));

		if(this.parametrocontaConstantesFunciones.mostrarcentro_costo_numero_nivelParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrocontaConstantesFunciones.resaltarcentro_costo_numero_nivelParametroConta,this.parametrocontaConstantesFunciones.activarcentro_costo_numero_nivelParametroConta,this,true,"centro_costo_numero_nivelParametroConta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocontaConstantesFunciones.resaltarcentro_costo_numero_nivelParametroConta,this.parametrocontaConstantesFunciones.activarcentro_costo_numero_nivelParametroConta,this,true,"centro_costo_numero_nivelParametroConta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_activoParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableactivosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_activoParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_activoParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableactivosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_activoParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_activoParametroConta,true,"id_cuenta_contable_activoParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_pasivoParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablepasivosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_pasivoParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_pasivoParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablepasivosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_pasivoParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_pasivoParametroConta,true,"id_cuenta_contable_pasivoParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_patrimonioParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablepatrimoniosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_patrimonioParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_patrimonioParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablepatrimoniosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_patrimonioParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_patrimonioParametroConta,true,"id_cuenta_contable_patrimonioParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingresoParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableingresosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingresoParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingresoParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableingresosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingresoParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingresoParametroConta,true,"id_cuenta_contable_ingresoParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egresoParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableegresosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egresoParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egresoParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableegresosForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egresoParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egresoParametroConta,true,"id_cuenta_contable_egresoParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_resumenParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableresumensForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_resumenParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_resumenParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableresumensForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_resumenParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_resumenParametroConta,true,"id_cuenta_contable_resumenParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_deudorParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontabledeudorsForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_deudorParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_deudorParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontabledeudorsForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_deudorParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_deudorParametroConta,true,"id_cuenta_contable_deudorParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_acreedorParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableacreedorsForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_acreedorParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_acreedorParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableacreedorsForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_acreedorParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_acreedorParametroConta,true,"id_cuenta_contable_acreedorParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso1ParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableingreso1sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso1ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso1ParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableingreso1sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso1ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso1ParametroConta,true,"id_cuenta_contable_ingreso1ParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso2ParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableingreso2sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso2ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso2ParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableingreso2sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso2ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso2ParametroConta,true,"id_cuenta_contable_ingreso2ParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso3ParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableingreso3sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso3ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso3ParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableingreso3sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso3ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso3ParametroConta,true,"id_cuenta_contable_ingreso3ParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso1ParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableegreso1sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso1ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso1ParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableegreso1sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso1ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso1ParametroConta,true,"id_cuenta_contable_egreso1ParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso2ParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableegreso2sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso2ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso2ParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableegreso2sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso2ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso2ParametroConta,true,"id_cuenta_contable_egreso2ParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3));

		if(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso3ParametroConta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableegreso3sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso3ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso3ParametroConta));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableegreso3sForeignKey,this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso3ParametroConta,this,this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso3ParametroConta,true,"id_cuenta_contable_egreso3ParametroConta","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroContaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosParametroContaDetalle && this.parametrocontaConstantesFunciones.mostrarParametroContaDetalleParametroConta && !ParametroContaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Parametro Conta Detalles");
				tableColumn.setHeaderValue("Parametro Conta Detalles");
				tableColumn.setCellRenderer(new ParametroContaDetalleTableCell(parametrocontaConstantesFunciones.resaltarParametroContaDetalleParametroConta,this,this.parametrocontaConstantesFunciones.activarParametroContaDetalleParametroConta));
				tableColumn.setCellEditor(new ParametroContaDetalleTableCell(parametrocontaConstantesFunciones.resaltarParametroContaDetalleParametroConta,this,this.parametrocontaConstantesFunciones.activarParametroContaDetalleParametroConta));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosParametroConta.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrocontaSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrocontaSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroConta.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrocontaSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrocontaSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroConta.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarParametroConta && this.isPermisoGuardarCambiosParametroConta) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.parametrocontaSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.parametrocontaSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosParametroConta.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.parametrocontaSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false));
					tableColumn.setCellEditor(new IdTableCell(this,true,false));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosParametroConta.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosParametroConta.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroConta && this.isPermisoGuardarCambiosParametroConta) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.parametrocontaSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroConta && this.isPermisoGuardarCambiosParametroConta) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosParametroConta.moveColumn(this.jTableDatosParametroConta.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosParametroConta.moveColumn(this.jTableDatosParametroConta.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.parametrocontaSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosParametroConta.moveColumn(this.jTableDatosParametroConta.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosParametroConta.moveColumn(this.jTableDatosParametroConta.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosParametroConta.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosParametroConta.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosParametroConta,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosParametroConta.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosParametroConta.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosParametroConta.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosParametroConta.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosParametroConta.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=parametrocontaLogic.getParametroContas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=parametrocontas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosParametroConta.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosParametroConta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosParametroConta();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoParametroConta=false;
					
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
				if(this.parametrocontaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormParametroConta==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroConta.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.parametroconta.getsType().equals("DUPLICADO")
				   || this.parametroconta.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoParametroConta=true;
				
				} else {
					this.isEsNuevoParametroConta=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
					if(this.parametroconta.getId()>=0 && !this.parametroconta.getIsNew()) {						
						this.isEsNuevoParametroConta=false;
						
					} else {
						this.isEsNuevoParametroConta=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoParametroConta(esRelaciones);						
				
				this.seleccionarParametroConta(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.parametroconta.getId()<0) {
					this.isEsNuevoParametroConta=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarParametroConta(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarParametroConta(evt,rowIndex);
				}	
				
				if(this.parametrocontaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ParametroConta: " + this.dDif); 
					}
				}								
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarParametroConta(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.parametroconta)) {
					if(this.parametroconta.getId()>0) {
						this.parametroconta.setIsDeleted(true);
						
						this.parametrocontasEliminados.add(this.parametroconta);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrocontaLogic.getParametroContas().remove(this.parametroconta);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrocontas.remove(this.parametroconta);				
					}
					
					
					((ParametroContaModel) this.jTableDatosParametroConta.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroConta(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarParametroConta(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoParametroConta) {
			
			if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroConta.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroConta.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioParametroConta(this.parametroconta);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.parametrocontaConstantesFunciones.cargarid_empresaParametroConta || this.parametrocontaConstantesFunciones.event_dependid_empresaParametroConta) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.parametroconta.getid_empresa());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(parametroconta.getEmpresa()!=null) {
							this.empresasForeignKey.add(parametroconta.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.parametroconta.getid_empresa(),false,"Formulario");

					//Moneda
					if(!this.parametrocontaConstantesFunciones.cargarid_monedaParametroConta || this.parametrocontaConstantesFunciones.event_dependid_monedaParametroConta) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.parametroconta.getid_moneda());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(parametroconta.getMoneda()!=null) {
							this.monedasForeignKey.add(parametroconta.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.parametroconta.getid_moneda(),false,"Formulario");

					//MonedaExtranjera
					if(!this.parametrocontaConstantesFunciones.cargarid_moneda_extranjeraParametroConta || this.parametrocontaConstantesFunciones.event_dependid_moneda_extranjeraParametroConta) {
						//this.cargarCombosMonedaExtranjerasForeignKeyLista(" where id="+this.parametroconta.getid_moneda_extranjera());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.monedaextranjerasForeignKey=new ArrayList<Moneda>();

						if(parametroconta.getMonedaExtranjera()!=null) {
							this.monedaextranjerasForeignKey.add(parametroconta.getMonedaExtranjera());
						}

						this.addItemDefectoCombosForeignKeyMonedaExtranjera();
						this.cargarCombosFrameMonedaExtranjerasForeignKey("Todos");
					}
					this.setActualMonedaExtranjeraForeignKey(this.parametroconta.getid_moneda_extranjera(),false,"Formulario");

					//CuentaContableActivo
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_activoParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_activoParametroConta) {
						//this.cargarCombosCuentaContableActivosForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_activo());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableactivosForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableActivo()!=null) {
							this.cuentacontableactivosForeignKey.add(parametroconta.getCuentaContableActivo());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableActivo();
						this.cargarCombosFrameCuentaContableActivosForeignKey("Todos");
					}
					this.setActualCuentaContableActivoForeignKey(this.parametroconta.getid_cuenta_contable_activo(),false,"Formulario");

					//CuentaContablePasivo
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_pasivoParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_pasivoParametroConta) {
						//this.cargarCombosCuentaContablePasivosForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_pasivo());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontablepasivosForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContablePasivo()!=null) {
							this.cuentacontablepasivosForeignKey.add(parametroconta.getCuentaContablePasivo());
						}

						this.addItemDefectoCombosForeignKeyCuentaContablePasivo();
						this.cargarCombosFrameCuentaContablePasivosForeignKey("Todos");
					}
					this.setActualCuentaContablePasivoForeignKey(this.parametroconta.getid_cuenta_contable_pasivo(),false,"Formulario");

					//CuentaContablePatrimonio
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_patrimonioParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_patrimonioParametroConta) {
						//this.cargarCombosCuentaContablePatrimoniosForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_patrimonio());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontablepatrimoniosForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContablePatrimonio()!=null) {
							this.cuentacontablepatrimoniosForeignKey.add(parametroconta.getCuentaContablePatrimonio());
						}

						this.addItemDefectoCombosForeignKeyCuentaContablePatrimonio();
						this.cargarCombosFrameCuentaContablePatrimoniosForeignKey("Todos");
					}
					this.setActualCuentaContablePatrimonioForeignKey(this.parametroconta.getid_cuenta_contable_patrimonio(),false,"Formulario");

					//CuentaContableIngreso
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingresoParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_ingresoParametroConta) {
						//this.cargarCombosCuentaContableIngresosForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_ingreso());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableingresosForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableIngreso()!=null) {
							this.cuentacontableingresosForeignKey.add(parametroconta.getCuentaContableIngreso());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIngreso();
						this.cargarCombosFrameCuentaContableIngresosForeignKey("Todos");
					}
					this.setActualCuentaContableIngresoForeignKey(this.parametroconta.getid_cuenta_contable_ingreso(),false,"Formulario");

					//CuentaContableEgreso
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egresoParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_egresoParametroConta) {
						//this.cargarCombosCuentaContableEgresosForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_egreso());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableegresosForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableEgreso()!=null) {
							this.cuentacontableegresosForeignKey.add(parametroconta.getCuentaContableEgreso());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableEgreso();
						this.cargarCombosFrameCuentaContableEgresosForeignKey("Todos");
					}
					this.setActualCuentaContableEgresoForeignKey(this.parametroconta.getid_cuenta_contable_egreso(),false,"Formulario");

					//CuentaContableResumen
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_resumenParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_resumenParametroConta) {
						//this.cargarCombosCuentaContableResumensForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_resumen());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableresumensForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableResumen()!=null) {
							this.cuentacontableresumensForeignKey.add(parametroconta.getCuentaContableResumen());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableResumen();
						this.cargarCombosFrameCuentaContableResumensForeignKey("Todos");
					}
					this.setActualCuentaContableResumenForeignKey(this.parametroconta.getid_cuenta_contable_resumen(),false,"Formulario");

					//CuentaContableDeudor
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_deudorParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_deudorParametroConta) {
						//this.cargarCombosCuentaContableDeudorsForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_deudor());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontabledeudorsForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableDeudor()!=null) {
							this.cuentacontabledeudorsForeignKey.add(parametroconta.getCuentaContableDeudor());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableDeudor();
						this.cargarCombosFrameCuentaContableDeudorsForeignKey("Todos");
					}
					this.setActualCuentaContableDeudorForeignKey(this.parametroconta.getid_cuenta_contable_deudor(),false,"Formulario");

					//CuentaContableAcreedor
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_acreedorParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_acreedorParametroConta) {
						//this.cargarCombosCuentaContableAcreedorsForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_acreedor());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableacreedorsForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableAcreedor()!=null) {
							this.cuentacontableacreedorsForeignKey.add(parametroconta.getCuentaContableAcreedor());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableAcreedor();
						this.cargarCombosFrameCuentaContableAcreedorsForeignKey("Todos");
					}
					this.setActualCuentaContableAcreedorForeignKey(this.parametroconta.getid_cuenta_contable_acreedor(),false,"Formulario");

					//CuentaContableIngreso1
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso1ParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_ingreso1ParametroConta) {
						//this.cargarCombosCuentaContableIngreso1sForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_ingreso1());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableingreso1sForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableIngreso1()!=null) {
							this.cuentacontableingreso1sForeignKey.add(parametroconta.getCuentaContableIngreso1());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIngreso1();
						this.cargarCombosFrameCuentaContableIngreso1sForeignKey("Todos");
					}
					this.setActualCuentaContableIngreso1ForeignKey(this.parametroconta.getid_cuenta_contable_ingreso1(),false,"Formulario");

					//CuentaContableIngreso2
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso2ParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_ingreso2ParametroConta) {
						//this.cargarCombosCuentaContableIngreso2sForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_ingreso2());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableingreso2sForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableIngreso2()!=null) {
							this.cuentacontableingreso2sForeignKey.add(parametroconta.getCuentaContableIngreso2());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIngreso2();
						this.cargarCombosFrameCuentaContableIngreso2sForeignKey("Todos");
					}
					this.setActualCuentaContableIngreso2ForeignKey(this.parametroconta.getid_cuenta_contable_ingreso2(),false,"Formulario");

					//CuentaContableIngreso3
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_ingreso3ParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_ingreso3ParametroConta) {
						//this.cargarCombosCuentaContableIngreso3sForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_ingreso3());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableingreso3sForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableIngreso3()!=null) {
							this.cuentacontableingreso3sForeignKey.add(parametroconta.getCuentaContableIngreso3());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIngreso3();
						this.cargarCombosFrameCuentaContableIngreso3sForeignKey("Todos");
					}
					this.setActualCuentaContableIngreso3ForeignKey(this.parametroconta.getid_cuenta_contable_ingreso3(),false,"Formulario");

					//CuentaContableEgreso1
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso1ParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_egreso1ParametroConta) {
						//this.cargarCombosCuentaContableEgreso1sForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_egreso1());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableegreso1sForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableEgreso1()!=null) {
							this.cuentacontableegreso1sForeignKey.add(parametroconta.getCuentaContableEgreso1());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableEgreso1();
						this.cargarCombosFrameCuentaContableEgreso1sForeignKey("Todos");
					}
					this.setActualCuentaContableEgreso1ForeignKey(this.parametroconta.getid_cuenta_contable_egreso1(),false,"Formulario");

					//CuentaContableEgreso2
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso2ParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_egreso2ParametroConta) {
						//this.cargarCombosCuentaContableEgreso2sForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_egreso2());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableegreso2sForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableEgreso2()!=null) {
							this.cuentacontableegreso2sForeignKey.add(parametroconta.getCuentaContableEgreso2());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableEgreso2();
						this.cargarCombosFrameCuentaContableEgreso2sForeignKey("Todos");
					}
					this.setActualCuentaContableEgreso2ForeignKey(this.parametroconta.getid_cuenta_contable_egreso2(),false,"Formulario");

					//CuentaContableEgreso3
					if(!this.parametrocontaConstantesFunciones.cargarid_cuenta_contable_egreso3ParametroConta || this.parametrocontaConstantesFunciones.event_dependid_cuenta_contable_egreso3ParametroConta) {
						//this.cargarCombosCuentaContableEgreso3sForeignKeyLista(" where id="+this.parametroconta.getid_cuenta_contable_egreso3());
									//this.inicializarActualizarBindingParametroConta(false,false);
						this.cuentacontableegreso3sForeignKey=new ArrayList<CuentaContable>();

						if(parametroconta.getCuentaContableEgreso3()!=null) {
							this.cuentacontableegreso3sForeignKey.add(parametroconta.getCuentaContableEgreso3());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableEgreso3();
						this.cargarCombosFrameCuentaContableEgreso3sForeignKey("Todos");
					}
					this.setActualCuentaContableEgreso3ForeignKey(this.parametroconta.getid_cuenta_contable_egreso3(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesParametroConta("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesParametroConta(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroConta() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroConta(ParametroConta parametroconta) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoParametroConta(parametroconta,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroConta(ParametroConta parametroconta,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioParametroConta(parametroconta);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyParametroConta(parametroconta,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyParametroConta(parametroconta);
	}
	
	public void setVariablesObjetoActualToFormularioParametroConta(ParametroConta parametroconta) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.setText(parametroconta.getId().toString());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_mascaraParametroConta.setSelected(parametroconta.getcon_mascara());
			this.jInternalFrameDetalleFormParametroConta.jTextFieldnumero_nivelParametroConta.setText(parametroconta.getnumero_nivel().toString());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_presupuestoParametroConta.setSelected(parametroconta.getes_presupuesto());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_loteParametroConta.setSelected(parametroconta.getes_lote());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_secuencial_automaticoParametroConta.setSelected(parametroconta.getcon_secuencial_automatico());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_cuentas_niffParametroConta.setSelected(parametroconta.getcon_cuentas_niff());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_mascaraParametroConta.setSelected(parametroconta.getcon_centro_costo_mascara());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_nueva_estructuraParametroConta.setSelected(parametroconta.getcon_centro_costo_nueva_estructura());
			this.jInternalFrameDetalleFormParametroConta.jTextFieldcentro_costo_numero_nivelParametroConta.setText(parametroconta.getcentro_costo_numero_nivel().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ParametroConta parametrocontaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,parametrocontaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ParametroConta parametrocontaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				parametrocontaLocal=this.parametroconta;
			} else {
				parametrocontaLocal=this.parametrocontaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(parametrocontaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoParametroConta(parametrocontaLocal,true);
					
					if(parametrocontaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(parametrocontaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(parametrocontaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoParametroConta(ParametroConta parametroconta,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroConta(parametroconta,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(parametroconta);
	}
	
	public void setVariablesFormularioToObjetoActualParametroConta(ParametroConta parametroconta,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroConta(parametroconta,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualParametroConta(ParametroConta parametroconta,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.getText()==null || this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.getText()=="" || this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.getText()=="Id") {
				this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.setText("0");
			}

			if(conColumnasBase) {parametroconta.setId(Long.parseLong(this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelIdParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametroconta.setcon_mascara(this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_mascaraParametroConta.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_CONMASCARA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_mascaraParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametroconta.setnumero_nivel(Integer.parseInt(this.jInternalFrameDetalleFormParametroConta.jTextFieldnumero_nivelParametroConta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_NUMERONIVEL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelnumero_nivelParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametroconta.setes_presupuesto(this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_presupuestoParametroConta.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabeles_presupuestoParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametroconta.setes_lote(this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_loteParametroConta.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_ESLOTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabeles_loteParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametroconta.setcon_secuencial_automatico(this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_secuencial_automaticoParametroConta.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_secuencial_automaticoParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametroconta.setcon_cuentas_niff(this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_cuentas_niffParametroConta.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_cuentas_niffParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametroconta.setcon_centro_costo_mascara(this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_mascaraParametroConta.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_centro_costo_mascaraParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametroconta.setcon_centro_costo_nueva_estructura(this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_nueva_estructuraParametroConta.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcon_centro_costo_nueva_estructuraParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametroconta.setcentro_costo_numero_nivel(Integer.parseInt(this.jInternalFrameDetalleFormParametroConta.jTextFieldcentro_costo_numero_nivelParametroConta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroConta.jLabelcentro_costo_numero_nivelParametroConta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroConta(ParametroConta parametrocontaBean,ParametroConta parametroconta,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && parametrocontaBean.getid_moneda_extranjera()!=null && !parametrocontaBean.getid_moneda_extranjera().equals(-1L))) {parametroconta.setid_moneda_extranjera(parametrocontaBean.getid_moneda_extranjera());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_activo()!=null && !parametrocontaBean.getid_cuenta_contable_activo().equals(-1L))) {parametroconta.setid_cuenta_contable_activo(parametrocontaBean.getid_cuenta_contable_activo());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_pasivo()!=null && !parametrocontaBean.getid_cuenta_contable_pasivo().equals(-1L))) {parametroconta.setid_cuenta_contable_pasivo(parametrocontaBean.getid_cuenta_contable_pasivo());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_patrimonio()!=null && !parametrocontaBean.getid_cuenta_contable_patrimonio().equals(-1L))) {parametroconta.setid_cuenta_contable_patrimonio(parametrocontaBean.getid_cuenta_contable_patrimonio());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_ingreso()!=null && !parametrocontaBean.getid_cuenta_contable_ingreso().equals(-1L))) {parametroconta.setid_cuenta_contable_ingreso(parametrocontaBean.getid_cuenta_contable_ingreso());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_egreso()!=null && !parametrocontaBean.getid_cuenta_contable_egreso().equals(-1L))) {parametroconta.setid_cuenta_contable_egreso(parametrocontaBean.getid_cuenta_contable_egreso());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_resumen()!=null && !parametrocontaBean.getid_cuenta_contable_resumen().equals(-1L))) {parametroconta.setid_cuenta_contable_resumen(parametrocontaBean.getid_cuenta_contable_resumen());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_deudor()!=null && !parametrocontaBean.getid_cuenta_contable_deudor().equals(-1L))) {parametroconta.setid_cuenta_contable_deudor(parametrocontaBean.getid_cuenta_contable_deudor());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_acreedor()!=null && !parametrocontaBean.getid_cuenta_contable_acreedor().equals(-1L))) {parametroconta.setid_cuenta_contable_acreedor(parametrocontaBean.getid_cuenta_contable_acreedor());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_ingreso1()!=null && !parametrocontaBean.getid_cuenta_contable_ingreso1().equals(null))) {parametroconta.setid_cuenta_contable_ingreso1(parametrocontaBean.getid_cuenta_contable_ingreso1());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_ingreso2()!=null && !parametrocontaBean.getid_cuenta_contable_ingreso2().equals(null))) {parametroconta.setid_cuenta_contable_ingreso2(parametrocontaBean.getid_cuenta_contable_ingreso2());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_ingreso3()!=null && !parametrocontaBean.getid_cuenta_contable_ingreso3().equals(null))) {parametroconta.setid_cuenta_contable_ingreso3(parametrocontaBean.getid_cuenta_contable_ingreso3());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_egreso1()!=null && !parametrocontaBean.getid_cuenta_contable_egreso1().equals(null))) {parametroconta.setid_cuenta_contable_egreso1(parametrocontaBean.getid_cuenta_contable_egreso1());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_egreso2()!=null && !parametrocontaBean.getid_cuenta_contable_egreso2().equals(null))) {parametroconta.setid_cuenta_contable_egreso2(parametrocontaBean.getid_cuenta_contable_egreso2());}
			if(conDefault || (!conDefault && parametrocontaBean.getid_cuenta_contable_egreso3()!=null && !parametrocontaBean.getid_cuenta_contable_egreso3().equals(null))) {parametroconta.setid_cuenta_contable_egreso3(parametrocontaBean.getid_cuenta_contable_egreso3());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosParametroConta(ParametroConta parametrocontaOrigen,ParametroConta parametroconta,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrocontaOrigen.getId()!=null && !parametrocontaOrigen.getId().equals(0L))) {parametroconta.setId(parametrocontaOrigen.getId());}}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_moneda_extranjera()!=null && !parametrocontaOrigen.getid_moneda_extranjera().equals(-1L))) {parametroconta.setid_moneda_extranjera(parametrocontaOrigen.getid_moneda_extranjera());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getcon_mascara()!=null && !parametrocontaOrigen.getcon_mascara().equals(false))) {parametroconta.setcon_mascara(parametrocontaOrigen.getcon_mascara());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getnumero_nivel()!=null && !parametrocontaOrigen.getnumero_nivel().equals(0))) {parametroconta.setnumero_nivel(parametrocontaOrigen.getnumero_nivel());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getes_presupuesto()!=null && !parametrocontaOrigen.getes_presupuesto().equals(false))) {parametroconta.setes_presupuesto(parametrocontaOrigen.getes_presupuesto());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getes_lote()!=null && !parametrocontaOrigen.getes_lote().equals(false))) {parametroconta.setes_lote(parametrocontaOrigen.getes_lote());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getcon_secuencial_automatico()!=null && !parametrocontaOrigen.getcon_secuencial_automatico().equals(false))) {parametroconta.setcon_secuencial_automatico(parametrocontaOrigen.getcon_secuencial_automatico());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getcon_cuentas_niff()!=null && !parametrocontaOrigen.getcon_cuentas_niff().equals(false))) {parametroconta.setcon_cuentas_niff(parametrocontaOrigen.getcon_cuentas_niff());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getcon_centro_costo_mascara()!=null && !parametrocontaOrigen.getcon_centro_costo_mascara().equals(false))) {parametroconta.setcon_centro_costo_mascara(parametrocontaOrigen.getcon_centro_costo_mascara());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getcon_centro_costo_nueva_estructura()!=null && !parametrocontaOrigen.getcon_centro_costo_nueva_estructura().equals(false))) {parametroconta.setcon_centro_costo_nueva_estructura(parametrocontaOrigen.getcon_centro_costo_nueva_estructura());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getcentro_costo_numero_nivel()!=null && !parametrocontaOrigen.getcentro_costo_numero_nivel().equals(0))) {parametroconta.setcentro_costo_numero_nivel(parametrocontaOrigen.getcentro_costo_numero_nivel());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_activo()!=null && !parametrocontaOrigen.getid_cuenta_contable_activo().equals(-1L))) {parametroconta.setid_cuenta_contable_activo(parametrocontaOrigen.getid_cuenta_contable_activo());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_pasivo()!=null && !parametrocontaOrigen.getid_cuenta_contable_pasivo().equals(-1L))) {parametroconta.setid_cuenta_contable_pasivo(parametrocontaOrigen.getid_cuenta_contable_pasivo());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_patrimonio()!=null && !parametrocontaOrigen.getid_cuenta_contable_patrimonio().equals(-1L))) {parametroconta.setid_cuenta_contable_patrimonio(parametrocontaOrigen.getid_cuenta_contable_patrimonio());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_ingreso()!=null && !parametrocontaOrigen.getid_cuenta_contable_ingreso().equals(-1L))) {parametroconta.setid_cuenta_contable_ingreso(parametrocontaOrigen.getid_cuenta_contable_ingreso());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_egreso()!=null && !parametrocontaOrigen.getid_cuenta_contable_egreso().equals(-1L))) {parametroconta.setid_cuenta_contable_egreso(parametrocontaOrigen.getid_cuenta_contable_egreso());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_resumen()!=null && !parametrocontaOrigen.getid_cuenta_contable_resumen().equals(-1L))) {parametroconta.setid_cuenta_contable_resumen(parametrocontaOrigen.getid_cuenta_contable_resumen());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_deudor()!=null && !parametrocontaOrigen.getid_cuenta_contable_deudor().equals(-1L))) {parametroconta.setid_cuenta_contable_deudor(parametrocontaOrigen.getid_cuenta_contable_deudor());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_acreedor()!=null && !parametrocontaOrigen.getid_cuenta_contable_acreedor().equals(-1L))) {parametroconta.setid_cuenta_contable_acreedor(parametrocontaOrigen.getid_cuenta_contable_acreedor());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_ingreso1()!=null && !parametrocontaOrigen.getid_cuenta_contable_ingreso1().equals(null))) {parametroconta.setid_cuenta_contable_ingreso1(parametrocontaOrigen.getid_cuenta_contable_ingreso1());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_ingreso2()!=null && !parametrocontaOrigen.getid_cuenta_contable_ingreso2().equals(null))) {parametroconta.setid_cuenta_contable_ingreso2(parametrocontaOrigen.getid_cuenta_contable_ingreso2());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_ingreso3()!=null && !parametrocontaOrigen.getid_cuenta_contable_ingreso3().equals(null))) {parametroconta.setid_cuenta_contable_ingreso3(parametrocontaOrigen.getid_cuenta_contable_ingreso3());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_egreso1()!=null && !parametrocontaOrigen.getid_cuenta_contable_egreso1().equals(null))) {parametroconta.setid_cuenta_contable_egreso1(parametrocontaOrigen.getid_cuenta_contable_egreso1());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_egreso2()!=null && !parametrocontaOrigen.getid_cuenta_contable_egreso2().equals(null))) {parametroconta.setid_cuenta_contable_egreso2(parametrocontaOrigen.getid_cuenta_contable_egreso2());}
			if(conDefault || (!conDefault && parametrocontaOrigen.getid_cuenta_contable_egreso3()!=null && !parametrocontaOrigen.getid_cuenta_contable_egreso3().equals(null))) {parametroconta.setid_cuenta_contable_egreso3(parametrocontaOrigen.getid_cuenta_contable_egreso3());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroConta(ParametroConta parametroconta) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.setText(parametroconta.getId().toString());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_mascaraParametroConta.setSelected(parametroconta.getcon_mascara());
			this.jInternalFrameDetalleFormParametroConta.jTextFieldnumero_nivelParametroConta.setText(parametroconta.getnumero_nivel().toString());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_presupuestoParametroConta.setSelected(parametroconta.getes_presupuesto());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_loteParametroConta.setSelected(parametroconta.getes_lote());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_secuencial_automaticoParametroConta.setSelected(parametroconta.getcon_secuencial_automatico());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_cuentas_niffParametroConta.setSelected(parametroconta.getcon_cuentas_niff());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_mascaraParametroConta.setSelected(parametroconta.getcon_centro_costo_mascara());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_nueva_estructuraParametroConta.setSelected(parametroconta.getcon_centro_costo_nueva_estructura());
			this.jInternalFrameDetalleFormParametroConta.jTextFieldcentro_costo_numero_nivelParametroConta.setText(parametroconta.getcentro_costo_numero_nivel().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroConta(ParametroContaBean parametrocontaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.setText(parametrocontaBean.getId().toString());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_mascaraParametroConta.setSelected(parametrocontaBean.getcon_mascara());
			this.jInternalFrameDetalleFormParametroConta.jTextFieldnumero_nivelParametroConta.setText(parametrocontaBean.getnumero_nivel().toString());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_presupuestoParametroConta.setSelected(parametrocontaBean.getes_presupuesto());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_loteParametroConta.setSelected(parametrocontaBean.getes_lote());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_secuencial_automaticoParametroConta.setSelected(parametrocontaBean.getcon_secuencial_automatico());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_cuentas_niffParametroConta.setSelected(parametrocontaBean.getcon_cuentas_niff());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_mascaraParametroConta.setSelected(parametrocontaBean.getcon_centro_costo_mascara());
			this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_nueva_estructuraParametroConta.setSelected(parametrocontaBean.getcon_centro_costo_nueva_estructura());
			this.jInternalFrameDetalleFormParametroConta.jTextFieldcentro_costo_numero_nivelParametroConta.setText(parametrocontaBean.getcentro_costo_numero_nivel().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanParametroConta(ParametroContaParameterReturnGeneral parametrocontaReturnGeneral,ParametroContaBean parametrocontaBean,Boolean conDefault) throws Exception { 
		try {
			ParametroConta parametrocontaLocal=new ParametroConta();
			
			parametrocontaLocal=parametrocontaReturnGeneral.getParametroConta();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrocontaLocal.getId()!=null && !parametrocontaLocal.getId().equals(0L))) {parametrocontaBean.setId(parametrocontaLocal.getId());}}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_moneda_extranjera()!=null && !parametrocontaLocal.getid_moneda_extranjera().equals(-1L))) {parametrocontaBean.setid_moneda_extranjera(parametrocontaLocal.getid_moneda_extranjera());}
			if(conDefault || (!conDefault && parametrocontaLocal.getcon_mascara()!=null && !parametrocontaLocal.getcon_mascara().equals(false))) {parametrocontaBean.setcon_mascara(parametrocontaLocal.getcon_mascara());}
			if(conDefault || (!conDefault && parametrocontaLocal.getnumero_nivel()!=null && !parametrocontaLocal.getnumero_nivel().equals(0))) {parametrocontaBean.setnumero_nivel(parametrocontaLocal.getnumero_nivel());}
			if(conDefault || (!conDefault && parametrocontaLocal.getes_presupuesto()!=null && !parametrocontaLocal.getes_presupuesto().equals(false))) {parametrocontaBean.setes_presupuesto(parametrocontaLocal.getes_presupuesto());}
			if(conDefault || (!conDefault && parametrocontaLocal.getes_lote()!=null && !parametrocontaLocal.getes_lote().equals(false))) {parametrocontaBean.setes_lote(parametrocontaLocal.getes_lote());}
			if(conDefault || (!conDefault && parametrocontaLocal.getcon_secuencial_automatico()!=null && !parametrocontaLocal.getcon_secuencial_automatico().equals(false))) {parametrocontaBean.setcon_secuencial_automatico(parametrocontaLocal.getcon_secuencial_automatico());}
			if(conDefault || (!conDefault && parametrocontaLocal.getcon_cuentas_niff()!=null && !parametrocontaLocal.getcon_cuentas_niff().equals(false))) {parametrocontaBean.setcon_cuentas_niff(parametrocontaLocal.getcon_cuentas_niff());}
			if(conDefault || (!conDefault && parametrocontaLocal.getcon_centro_costo_mascara()!=null && !parametrocontaLocal.getcon_centro_costo_mascara().equals(false))) {parametrocontaBean.setcon_centro_costo_mascara(parametrocontaLocal.getcon_centro_costo_mascara());}
			if(conDefault || (!conDefault && parametrocontaLocal.getcon_centro_costo_nueva_estructura()!=null && !parametrocontaLocal.getcon_centro_costo_nueva_estructura().equals(false))) {parametrocontaBean.setcon_centro_costo_nueva_estructura(parametrocontaLocal.getcon_centro_costo_nueva_estructura());}
			if(conDefault || (!conDefault && parametrocontaLocal.getcentro_costo_numero_nivel()!=null && !parametrocontaLocal.getcentro_costo_numero_nivel().equals(0))) {parametrocontaBean.setcentro_costo_numero_nivel(parametrocontaLocal.getcentro_costo_numero_nivel());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_activo()!=null && !parametrocontaLocal.getid_cuenta_contable_activo().equals(-1L))) {parametrocontaBean.setid_cuenta_contable_activo(parametrocontaLocal.getid_cuenta_contable_activo());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_pasivo()!=null && !parametrocontaLocal.getid_cuenta_contable_pasivo().equals(-1L))) {parametrocontaBean.setid_cuenta_contable_pasivo(parametrocontaLocal.getid_cuenta_contable_pasivo());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_patrimonio()!=null && !parametrocontaLocal.getid_cuenta_contable_patrimonio().equals(-1L))) {parametrocontaBean.setid_cuenta_contable_patrimonio(parametrocontaLocal.getid_cuenta_contable_patrimonio());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_ingreso()!=null && !parametrocontaLocal.getid_cuenta_contable_ingreso().equals(-1L))) {parametrocontaBean.setid_cuenta_contable_ingreso(parametrocontaLocal.getid_cuenta_contable_ingreso());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_egreso()!=null && !parametrocontaLocal.getid_cuenta_contable_egreso().equals(-1L))) {parametrocontaBean.setid_cuenta_contable_egreso(parametrocontaLocal.getid_cuenta_contable_egreso());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_resumen()!=null && !parametrocontaLocal.getid_cuenta_contable_resumen().equals(-1L))) {parametrocontaBean.setid_cuenta_contable_resumen(parametrocontaLocal.getid_cuenta_contable_resumen());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_deudor()!=null && !parametrocontaLocal.getid_cuenta_contable_deudor().equals(-1L))) {parametrocontaBean.setid_cuenta_contable_deudor(parametrocontaLocal.getid_cuenta_contable_deudor());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_acreedor()!=null && !parametrocontaLocal.getid_cuenta_contable_acreedor().equals(-1L))) {parametrocontaBean.setid_cuenta_contable_acreedor(parametrocontaLocal.getid_cuenta_contable_acreedor());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_ingreso1()!=null && !parametrocontaLocal.getid_cuenta_contable_ingreso1().equals(null))) {parametrocontaBean.setid_cuenta_contable_ingreso1(parametrocontaLocal.getid_cuenta_contable_ingreso1());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_ingreso2()!=null && !parametrocontaLocal.getid_cuenta_contable_ingreso2().equals(null))) {parametrocontaBean.setid_cuenta_contable_ingreso2(parametrocontaLocal.getid_cuenta_contable_ingreso2());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_ingreso3()!=null && !parametrocontaLocal.getid_cuenta_contable_ingreso3().equals(null))) {parametrocontaBean.setid_cuenta_contable_ingreso3(parametrocontaLocal.getid_cuenta_contable_ingreso3());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_egreso1()!=null && !parametrocontaLocal.getid_cuenta_contable_egreso1().equals(null))) {parametrocontaBean.setid_cuenta_contable_egreso1(parametrocontaLocal.getid_cuenta_contable_egreso1());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_egreso2()!=null && !parametrocontaLocal.getid_cuenta_contable_egreso2().equals(null))) {parametrocontaBean.setid_cuenta_contable_egreso2(parametrocontaLocal.getid_cuenta_contable_egreso2());}
			if(conDefault || (!conDefault && parametrocontaLocal.getid_cuenta_contable_egreso3()!=null && !parametrocontaLocal.getid_cuenta_contable_egreso3().equals(null))) {parametrocontaBean.setid_cuenta_contable_egreso3(parametrocontaLocal.getid_cuenta_contable_egreso3());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxParametroContaGenerico(Long idParametroContaSeleccionado,JComboBox jComboBoxParametroConta,List<ParametroConta> parametrocontasLocal)throws Exception {
		try {
			ParametroConta  parametrocontaTemp=null;

			for(ParametroConta parametrocontaAux:parametrocontasLocal) {
				if(parametrocontaAux.getId()!=null && parametrocontaAux.getId().equals(idParametroContaSeleccionado)) {
					parametrocontaTemp=parametrocontaAux;
					break;
				}
			}

			jComboBoxParametroConta.setSelectedItem(parametrocontaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxParametroContaGenerico(JComboBox jComboBoxParametroConta,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxParametroConta.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroConta.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxParametroConta.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroConta.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroConta.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxParametroConta.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroConta.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxParametroConta.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxParametroConta.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxParametroConta.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("ParametroContaDetalle")) {
			jButtonParametroContaDetalleActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametroconta=(ParametroConta) parametrocontaLogic.getParametroContas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametroconta =(ParametroConta) parametrocontas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("MonedaExtranjera")) {
			//sDescripcion=this.getActualMonedaExtranjeraForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getmonedaextranjera_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaExtranjeraForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getmonedaextranjera_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableActivo")) {
			//sDescripcion=this.getActualCuentaContableActivoForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableactivo_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableActivoForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableactivo_descripcion();
			}
		}

		if(sTipo.equals("CuentaContablePasivo")) {
			//sDescripcion=this.getActualCuentaContablePasivoForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontablepasivo_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContablePasivoForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontablepasivo_descripcion();
			}
		}

		if(sTipo.equals("CuentaContablePatrimonio")) {
			//sDescripcion=this.getActualCuentaContablePatrimonioForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontablepatrimonio_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContablePatrimonioForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontablepatrimonio_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIngreso")) {
			//sDescripcion=this.getActualCuentaContableIngresoForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableingreso_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIngresoForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableingreso_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableEgreso")) {
			//sDescripcion=this.getActualCuentaContableEgresoForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableegreso_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableEgresoForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableegreso_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableResumen")) {
			//sDescripcion=this.getActualCuentaContableResumenForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableresumen_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableResumenForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableresumen_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableDeudor")) {
			//sDescripcion=this.getActualCuentaContableDeudorForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontabledeudor_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableDeudorForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontabledeudor_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableAcreedor")) {
			//sDescripcion=this.getActualCuentaContableAcreedorForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableacreedor_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableAcreedorForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableacreedor_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIngreso1")) {
			//sDescripcion=this.getActualCuentaContableIngreso1ForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableingreso1_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIngreso1ForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableingreso1_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIngreso2")) {
			//sDescripcion=this.getActualCuentaContableIngreso2ForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableingreso2_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIngreso2ForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableingreso2_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIngreso3")) {
			//sDescripcion=this.getActualCuentaContableIngreso3ForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableingreso3_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIngreso3ForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableingreso3_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableEgreso1")) {
			//sDescripcion=this.getActualCuentaContableEgreso1ForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableegreso1_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableEgreso1ForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableegreso1_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableEgreso2")) {
			//sDescripcion=this.getActualCuentaContableEgreso2ForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableegreso2_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableEgreso2ForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableegreso2_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableEgreso3")) {
			//sDescripcion=this.getActualCuentaContableEgreso3ForeignKeyDescripcion((Long)value);
			if(!parametroconta.getIsNew() && !parametroconta.getIsChanged() && !parametroconta.getIsDeleted()) {
				sDescripcion=parametroconta.getcuentacontableegreso3_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableEgreso3ForeignKeyDescripcion((Long)value);
				sDescripcion=parametroconta.getcuentacontableegreso3_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ParametroConta parametrocontaRow=new ParametroConta();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrocontaRow=(ParametroConta) parametrocontaLogic.getParametroContas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrocontaRow=(ParametroConta) parametrocontas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonParametroContaDetalleActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,ParametroConta parametroconta) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormParametroConta==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta = (ParametroConta)this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.parametroconta = (ParametroConta)this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(parametroconta!=null) {
						this.parametroconta = parametroconta;
					} else {
						this.parametroconta = new ParametroConta();
					}
				}

				if(this.isTienePermisosParametroContaDetalle && this.permiteMantenimiento(this.parametroconta)) {
					ParametroContaDetalleBeanSwingJInternalFrame parametrocontadetalleBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFramePopup=new ParametroContaDetalleBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						parametrocontadetalleBeanSwingJInternalFrame=this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFramePopup;
					} else {
						parametrocontadetalleBeanSwingJInternalFrame=this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame;
					}

					List<ParametroConta> parametrocontas=new ArrayList<ParametroConta>();
					parametrocontas.add(this.parametroconta);
					if(!esRelacionado) {
						//parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleSessionBean.setConGuardarRelaciones(false);
						//parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					parametrocontadetalleBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormParametroConta.cargarParametroContaDetalleBeanSwingJInternalFrame(parametrocontas,this.parametroconta,parametrocontadetalleBeanSwingJInternalFrame,/*conInicializar,*/parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleSessionBean.getConGuardarRelaciones(),parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleSessionBean.getEsGuardarRelacionado());
					parametrocontadetalleBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						parametrocontadetalleBeanSwingJInternalFrame.actualizarEstadoPanelsParametroContaDetalle("no_relacionado");

						parametrocontadetalleBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ParametroContaDetalleConstantesFunciones.ITAMANIOFILATABLA + (ParametroContaDetalleConstantesFunciones.ITAMANIOFILATABLA/2));

						parametrocontadetalleBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
						TitledBorder titledBorderParametroContaDetalle=(TitledBorder)parametrocontadetalleBeanSwingJInternalFrame.jScrollPanelDatosParametroContaDetalle.getBorder();

						titledBorderParametroContaDetalle.setTitle(titledBorderParametroConta.getTitle() + " -> Parametro Conta Detalle");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,parametrocontadetalleBeanSwingJInternalFrame);
						}

						parametrocontadetalleBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(parametrocontadetalleBeanSwingJInternalFrame);

						parametrocontadetalleBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.parametrocontaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Parametro Conta Detalle",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualParametroConta(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoParametroConta.setVisible((this.isVisibilidadCeldaNuevoParametroConta && this.isPermisoNuevoParametroConta));			
			this.jButtonDuplicarParametroConta.setVisible((this.isVisibilidadCeldaDuplicarParametroConta && this.isPermisoDuplicarParametroConta));			
			this.jButtonCopiarParametroConta.setVisible((this.isVisibilidadCeldaCopiarParametroConta && this.isPermisoCopiarParametroConta));
			this.jButtonVerFormParametroConta.setVisible((this.isVisibilidadCeldaVerFormParametroConta && this.isPermisoVerFormParametroConta));
			
			this.jButtonAbrirOrderByParametroConta.setVisible((this.isVisibilidadCeldaOrdenParametroConta && this.isPermisoOrdenParametroConta));			
			
			this.jButtonNuevoRelacionesParametroConta.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroConta && this.isPermisoNuevoParametroConta));			
			this.jButtonNuevoGuardarCambiosParametroConta.setVisible((this.isVisibilidadCeldaNuevoParametroConta && this.isPermisoNuevoParametroConta && this.isPermisoGuardarCambiosParametroConta));
			
			if(this.jInternalFrameDetalleFormParametroConta!=null) {
			this.jInternalFrameDetalleFormParametroConta.jButtonModificarParametroConta.setVisible((this.isVisibilidadCeldaModificarParametroConta && this.isPermisoActualizarParametroConta));	
			this.jInternalFrameDetalleFormParametroConta.jButtonActualizarParametroConta.setVisible((this.isVisibilidadCeldaActualizarParametroConta && this.isPermisoActualizarParametroConta));	
			this.jInternalFrameDetalleFormParametroConta.jButtonEliminarParametroConta.setVisible((this.isVisibilidadCeldaEliminarParametroConta && this.isPermisoEliminarParametroConta));
			this.jInternalFrameDetalleFormParametroConta.jButtonCancelarParametroConta.setVisible(this.isVisibilidadCeldaCancelarParametroConta);							
			this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosParametroConta.setVisible((this.isVisibilidadCeldaGuardarParametroConta && this.isPermisoGuardarCambiosParametroConta));			
			
			}
						
			this.jButtonGuardarCambiosTablaParametroConta.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroConta && this.isPermisoGuardarCambiosParametroConta));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarParametroConta.setVisible((this.isVisibilidadCeldaNuevoParametroConta && this.isPermisoNuevoParametroConta));						
			this.jButtonDuplicarToolBarParametroConta.setVisible((this.isVisibilidadCeldaDuplicarParametroConta && this.isPermisoDuplicarParametroConta));						
			this.jButtonCopiarToolBarParametroConta.setVisible((this.isVisibilidadCeldaCopiarParametroConta && this.isPermisoCopiarParametroConta));			
			this.jButtonVerFormToolBarParametroConta.setVisible((this.isVisibilidadCeldaVerFormParametroConta && this.isPermisoVerFormParametroConta));			
			this.jButtonAbrirOrderByToolBarParametroConta.setVisible((this.isVisibilidadCeldaOrdenParametroConta && this.isPermisoOrdenParametroConta));
			this.jButtonNuevoRelacionesToolBarParametroConta.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroConta && this.isPermisoNuevoParametroConta));			
			this.jButtonNuevoGuardarCambiosToolBarParametroConta.setVisible((this.isVisibilidadCeldaNuevoParametroConta && this.isPermisoNuevoParametroConta && this.isPermisoGuardarCambiosParametroConta));			
			
			if(this.jInternalFrameDetalleFormParametroConta!=null) {
			this.jInternalFrameDetalleFormParametroConta.jButtonModificarToolBarParametroConta.setVisible((this.isVisibilidadCeldaModificarParametroConta && this.isPermisoActualizarParametroConta));	
			this.jInternalFrameDetalleFormParametroConta.jButtonActualizarToolBarParametroConta.setVisible((this.isVisibilidadCeldaActualizarParametroConta  && this.isPermisoActualizarParametroConta));	
			this.jInternalFrameDetalleFormParametroConta.jButtonEliminarToolBarParametroConta.setVisible((this.isVisibilidadCeldaEliminarParametroConta && this.isPermisoEliminarParametroConta));
			this.jInternalFrameDetalleFormParametroConta.jButtonCancelarToolBarParametroConta.setVisible(this.isVisibilidadCeldaCancelarParametroConta);				
			this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosToolBarParametroConta.setVisible((this.isVisibilidadCeldaGuardarParametroConta && this.isPermisoGuardarCambiosParametroConta));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarParametroConta.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroConta && this.isPermisoGuardarCambiosParametroConta));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoParametroConta.setVisible((this.isVisibilidadCeldaNuevoParametroConta && this.isPermisoNuevoParametroConta));			
			this.jMenuItemDuplicarParametroConta.setVisible((this.isVisibilidadCeldaDuplicarParametroConta && this.isPermisoDuplicarParametroConta));			
			this.jMenuItemCopiarParametroConta.setVisible((this.isVisibilidadCeldaCopiarParametroConta && this.isPermisoCopiarParametroConta));			
			this.jMenuItemVerFormParametroConta.setVisible((this.isVisibilidadCeldaVerFormParametroConta && this.isPermisoVerFormParametroConta));			
			this.jMenuItemAbrirOrderByParametroConta.setVisible((this.isVisibilidadCeldaOrdenParametroConta && this.isPermisoOrdenParametroConta));			
			//this.jMenuItemMostrarOcultarParametroConta.setVisible((this.isVisibilidadCeldaOrdenParametroConta && this.isPermisoOrdenParametroConta));
			this.jMenuItemDetalleAbrirOrderByParametroConta.setVisible((this.isVisibilidadCeldaOrdenParametroConta && this.isPermisoOrdenParametroConta));			
			//this.jMenuItemDetalleMostrarOcultarParametroConta.setVisible((this.isVisibilidadCeldaOrdenParametroConta && this.isPermisoOrdenParametroConta));			
			this.jMenuItemNuevoRelacionesParametroConta.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroConta && this.isPermisoNuevoParametroConta));			
			this.jMenuItemNuevoGuardarCambiosParametroConta.setVisible((this.isVisibilidadCeldaNuevoParametroConta && this.isPermisoNuevoParametroConta && this.isPermisoGuardarCambiosParametroConta));									
			
			if(this.jInternalFrameDetalleFormParametroConta!=null) {
			this.jInternalFrameDetalleFormParametroConta.jMenuItemModificarParametroConta.setVisible((this.isVisibilidadCeldaModificarParametroConta && this.isPermisoActualizarParametroConta));	
			this.jInternalFrameDetalleFormParametroConta.jMenuItemActualizarParametroConta.setVisible((this.isVisibilidadCeldaActualizarParametroConta && this.isPermisoActualizarParametroConta));	
			this.jInternalFrameDetalleFormParametroConta.jMenuItemEliminarParametroConta.setVisible((this.isVisibilidadCeldaEliminarParametroConta && this.isPermisoEliminarParametroConta));
			this.jInternalFrameDetalleFormParametroConta.jMenuItemCancelarParametroConta.setVisible(this.isVisibilidadCeldaCancelarParametroConta);				
			}
			
			this.jMenuItemGuardarCambiosParametroConta.setVisible((this.isVisibilidadCeldaGuardarParametroConta && this.isPermisoGuardarCambiosParametroConta));						
			this.jMenuItemGuardarCambiosTablaParametroConta.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroConta && this.isPermisoGuardarCambiosParametroConta));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoParametroConta=this.jButtonNuevoParametroConta.isVisible();
			this.isVisibilidadCeldaDuplicarParametroConta=this.jButtonDuplicarParametroConta.isVisible();
			this.isVisibilidadCeldaCopiarParametroConta=this.jButtonCopiarParametroConta.isVisible();
			this.isVisibilidadCeldaVerFormParametroConta=this.jButtonVerFormParametroConta.isVisible();
			
			this.isVisibilidadCeldaOrdenParametroConta=this.jButtonAbrirOrderByParametroConta.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=this.jButtonNuevoRelacionesParametroConta.isVisible();
			this.isVisibilidadCeldaModificarParametroConta=this.jButtonModificarParametroConta.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroConta!=null) {
			this.isVisibilidadCeldaActualizarParametroConta=this.jInternalFrameDetalleFormParametroConta.jButtonActualizarParametroConta.isVisible();
			this.isVisibilidadCeldaEliminarParametroConta=this.jInternalFrameDetalleFormParametroConta.jButtonEliminarParametroConta.isVisible();
			this.isVisibilidadCeldaCancelarParametroConta=this.jInternalFrameDetalleFormParametroConta.jButtonCancelarParametroConta.isVisible();
			this.isVisibilidadCeldaGuardarParametroConta=this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosParametroConta.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosParametroConta=this.jButtonGuardarCambiosTablaParametroConta.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoParametroConta=this.jButtonNuevoToolBarParametroConta.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=this.jButtonNuevoRelacionesToolBarParametroConta.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroConta!=null) {
			this.isVisibilidadCeldaModificarParametroConta=this.jInternalFrameDetalleFormParametroConta.jButtonModificarToolBarParametroConta.isVisible();
			this.isVisibilidadCeldaActualizarParametroConta=this.jInternalFrameDetalleFormParametroConta.jButtonActualizarToolBarParametroConta.isVisible();
			this.isVisibilidadCeldaEliminarParametroConta=this.jInternalFrameDetalleFormParametroConta.jButtonEliminarToolBarParametroConta.isVisible();
			this.isVisibilidadCeldaCancelarParametroConta=this.jInternalFrameDetalleFormParametroConta.jButtonCancelarToolBarParametroConta.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroConta=this.jButtonGuardarCambiosToolBarParametroConta.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroConta=this.jButtonGuardarCambiosTablaToolBarParametroConta.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoParametroConta=this.jMenuItemNuevoParametroConta.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=this.jMenuItemNuevoRelacionesParametroConta.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroConta!=null) {
			this.isVisibilidadCeldaModificarParametroConta=this.jInternalFrameDetalleFormParametroConta.jMenuItemModificarParametroConta.isVisible();
			this.isVisibilidadCeldaActualizarParametroConta=this.jInternalFrameDetalleFormParametroConta.jMenuItemActualizarParametroConta.isVisible();
			this.isVisibilidadCeldaEliminarParametroConta=this.jInternalFrameDetalleFormParametroConta.jMenuItemEliminarParametroConta.isVisible();
			this.isVisibilidadCeldaCancelarParametroConta=this.jInternalFrameDetalleFormParametroConta.jMenuItemCancelarParametroConta.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroConta=this.jMenuItemGuardarCambiosParametroConta.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroConta=this.jMenuItemGuardarCambiosTablaParametroConta.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesParametroConta(Boolean esInicializar) {
		if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.parametrocontaSessionBean.getConGuardarRelaciones()) {
				//if(this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesParametroConta();
			}
			
			this.inicializarActualizarBindingBotonesManualParametroConta(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualParametroConta() {
		this.jButtonNuevoParametroConta.setVisible(this.isPermisoNuevoParametroConta);			
		this.jButtonDuplicarParametroConta.setVisible(this.isPermisoDuplicarParametroConta);			
		this.jButtonCopiarParametroConta.setVisible(this.isPermisoCopiarParametroConta);			
		this.jButtonVerFormParametroConta.setVisible(this.isPermisoVerFormParametroConta);			
		
		this.jButtonAbrirOrderByParametroConta.setVisible(this.isPermisoOrdenParametroConta);					
		
		this.jButtonNuevoRelacionesParametroConta.setVisible(this.isPermisoNuevoParametroConta);			
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonModificarParametroConta.setVisible(this.isPermisoActualizarParametroConta);	
			this.jInternalFrameDetalleFormParametroConta.jButtonActualizarParametroConta.setVisible(this.isPermisoActualizarParametroConta);	
			this.jInternalFrameDetalleFormParametroConta.jButtonEliminarParametroConta.setVisible(this.isPermisoEliminarParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonCancelarParametroConta.setVisible(this.isVisibilidadCeldaCancelarParametroConta);						
			this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosParametroConta.setVisible(this.isPermisoGuardarCambiosParametroConta);							
		}
		
		this.jButtonGuardarCambiosTablaParametroConta.setVisible(this.isPermisoActualizarParametroConta);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroConta() {
		this.jInternalFrameDetalleFormParametroConta.jButtonModificarParametroConta.setVisible(this.isPermisoActualizarParametroConta);	
		this.jInternalFrameDetalleFormParametroConta.jButtonActualizarParametroConta.setVisible(this.isPermisoActualizarParametroConta);	
		this.jInternalFrameDetalleFormParametroConta.jButtonEliminarParametroConta.setVisible(this.isPermisoEliminarParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jButtonCancelarParametroConta.setVisible(this.isVisibilidadCeldaCancelarParametroConta);							
		this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosParametroConta.setVisible((this.isVisibilidadCeldaGuardarParametroConta && this.isPermisoGuardarCambiosParametroConta));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosParametroConta() {
		if(ParametroContaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualParametroConta();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesParametroConta() {
	}
	
	public void jTableDatosParametroContaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarParametroConta(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.parametroconta.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebParametroConta(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderParametroConta.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.parametroconta.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebParametroConta(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderParametroConta.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.parametroconta.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moneda_extranjeraParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomonedaextranjera=true;

			idTienePermisomonedaextranjera=this.tienePermisosUsuarioEnPaginaWebParametroConta(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomonedaextranjera) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.monedaextranjeraBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaextranjeraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaextranjeraBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_moneda_extranjera()!=null) {
					this.monedaextranjeraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaextranjeraBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_moneda_extranjera());
					this.monedaextranjeraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaextranjeraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaextranjeraBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaextranjeraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordermonedaextranjera=(TitledBorder)this.monedaextranjeraBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermonedaextranjera.setTitle(titledBorderParametroConta.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moneda_extranjeraParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_moneda_extranjera()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda_extranjera = "+this.parametroconta.getid_moneda_extranjera().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_mascaraParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getcon_mascara()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_mascara = "+this.parametroconta.getcon_mascara().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_nivelParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getnumero_nivel()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_nivel = "+this.parametroconta.getnumero_nivel().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_presupuestoParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getes_presupuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_presupuesto = "+this.parametroconta.getes_presupuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_loteParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getes_lote()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_lote = "+this.parametroconta.getes_lote().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_secuencial_automaticoParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getcon_secuencial_automatico()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_secuencial_automatico = "+this.parametroconta.getcon_secuencial_automatico().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_cuentas_niffParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getcon_cuentas_niff()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_cuentas_niff = "+this.parametroconta.getcon_cuentas_niff().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_centro_costo_mascaraParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getcon_centro_costo_mascara()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_centro_costo_mascara = "+this.parametroconta.getcon_centro_costo_mascara().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_centro_costo_nueva_estructuraParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getcon_centro_costo_nueva_estructura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_centro_costo_nueva_estructura = "+this.parametroconta.getcon_centro_costo_nueva_estructura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncentro_costo_numero_nivelParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getcentro_costo_numero_nivel()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where centro_costo_numero_nivel = "+this.parametroconta.getcentro_costo_numero_nivel().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_activoParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableactivoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableactivoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableactivoBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableActivo";

			if(!this.sFinalQueryGeneral_cuentacontableactivo.equals("")) {
				this.cuentacontableactivoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableactivo);
				this.cuentacontableactivoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableactivoBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableactivoBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableactivoBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableActivo.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableactivoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableactivo=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableactivo=(TitledBorder)this.cuentacontableactivoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableactivo.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_activoParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableactivo=true;

			idTienePermisocuentacontableactivo=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableactivo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableactivoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableactivoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableactivoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_activo()!=null) {
					this.cuentacontableactivoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableactivoBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_activo());
					this.cuentacontableactivoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableactivoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableactivoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableactivoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableactivo=(TitledBorder)this.cuentacontableactivoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableactivo.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_activoParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_activo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_activo = "+this.parametroconta.getid_cuenta_contable_activo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_pasivoParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontablepasivoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontablepasivoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontablepasivoBeanSwingJInternalFrame.sTipoBusqueda="CuentaContablePasivo";

			if(!this.sFinalQueryGeneral_cuentacontablepasivo.equals("")) {
				this.cuentacontablepasivoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontablepasivo);
				this.cuentacontablepasivoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontablepasivoBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontablepasivoBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontablepasivoBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContablePasivo.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontablepasivoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontablepasivo=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontablepasivo=(TitledBorder)this.cuentacontablepasivoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablepasivo.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_pasivoParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablepasivo=true;

			idTienePermisocuentacontablepasivo=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablepasivo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontablepasivoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablepasivoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablepasivoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_pasivo()!=null) {
					this.cuentacontablepasivoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablepasivoBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_pasivo());
					this.cuentacontablepasivoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablepasivoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablepasivoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablepasivoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontablepasivo=(TitledBorder)this.cuentacontablepasivoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablepasivo.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_pasivoParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_pasivo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_pasivo = "+this.parametroconta.getid_cuenta_contable_pasivo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_patrimonioParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontablepatrimonioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontablepatrimonioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontablepatrimonioBeanSwingJInternalFrame.sTipoBusqueda="CuentaContablePatrimonio";

			if(!this.sFinalQueryGeneral_cuentacontablepatrimonio.equals("")) {
				this.cuentacontablepatrimonioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontablepatrimonio);
				this.cuentacontablepatrimonioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontablepatrimonioBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontablepatrimonioBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontablepatrimonioBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContablePatrimonio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontablepatrimonioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontablepatrimonio=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontablepatrimonio=(TitledBorder)this.cuentacontablepatrimonioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablepatrimonio.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_patrimonioParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablepatrimonio=true;

			idTienePermisocuentacontablepatrimonio=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablepatrimonio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontablepatrimonioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablepatrimonioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablepatrimonioBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_patrimonio()!=null) {
					this.cuentacontablepatrimonioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablepatrimonioBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_patrimonio());
					this.cuentacontablepatrimonioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablepatrimonioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablepatrimonioBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablepatrimonioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontablepatrimonio=(TitledBorder)this.cuentacontablepatrimonioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablepatrimonio.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_patrimonioParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_patrimonio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_patrimonio = "+this.parametroconta.getid_cuenta_contable_patrimonio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_ingresoParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableingresoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableingresoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableingresoBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableIngreso";

			if(!this.sFinalQueryGeneral_cuentacontableingreso.equals("")) {
				this.cuentacontableingresoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableingreso);
				this.cuentacontableingresoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableingresoBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableingresoBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableingresoBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableIngreso.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableingresoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableingreso=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableingreso=(TitledBorder)this.cuentacontableingresoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingreso.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_ingresoParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableingreso=true;

			idTienePermisocuentacontableingreso=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableingreso) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableingresoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableingresoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableingresoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_ingreso()!=null) {
					this.cuentacontableingresoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableingresoBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_ingreso());
					this.cuentacontableingresoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableingresoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableingresoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableingresoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableingreso=(TitledBorder)this.cuentacontableingresoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingreso.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_ingresoParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_ingreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_ingreso = "+this.parametroconta.getid_cuenta_contable_ingreso().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_egresoParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableegresoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableegresoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableegresoBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableEgreso";

			if(!this.sFinalQueryGeneral_cuentacontableegreso.equals("")) {
				this.cuentacontableegresoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableegreso);
				this.cuentacontableegresoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableegresoBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableegresoBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableegresoBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableEgreso.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableegresoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableegreso=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableegreso=(TitledBorder)this.cuentacontableegresoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableegreso.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_egresoParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableegreso=true;

			idTienePermisocuentacontableegreso=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableegreso) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableegresoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableegresoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableegresoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_egreso()!=null) {
					this.cuentacontableegresoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableegresoBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_egreso());
					this.cuentacontableegresoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableegresoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableegresoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableegresoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableegreso=(TitledBorder)this.cuentacontableegresoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableegreso.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_egresoParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_egreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_egreso = "+this.parametroconta.getid_cuenta_contable_egreso().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_resumenParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableresumenBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableresumenBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableresumenBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableResumen";

			if(!this.sFinalQueryGeneral_cuentacontableresumen.equals("")) {
				this.cuentacontableresumenBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableresumen);
				this.cuentacontableresumenBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableresumenBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableresumenBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableresumenBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableResumen.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableresumenBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableresumen=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableresumen=(TitledBorder)this.cuentacontableresumenBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableresumen.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_resumenParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableresumen=true;

			idTienePermisocuentacontableresumen=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableresumen) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableresumenBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableresumenBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableresumenBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_resumen()!=null) {
					this.cuentacontableresumenBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableresumenBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_resumen());
					this.cuentacontableresumenBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableresumenBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableresumenBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableresumenBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableresumen=(TitledBorder)this.cuentacontableresumenBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableresumen.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_resumenParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_resumen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_resumen = "+this.parametroconta.getid_cuenta_contable_resumen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_deudorParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontabledeudorBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontabledeudorBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontabledeudorBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableDeudor";

			if(!this.sFinalQueryGeneral_cuentacontabledeudor.equals("")) {
				this.cuentacontabledeudorBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontabledeudor);
				this.cuentacontabledeudorBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontabledeudorBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontabledeudorBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontabledeudorBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableDeudor.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontabledeudorBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontabledeudor=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontabledeudor=(TitledBorder)this.cuentacontabledeudorBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontabledeudor.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_deudorParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontabledeudor=true;

			idTienePermisocuentacontabledeudor=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontabledeudor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontabledeudorBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontabledeudorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontabledeudorBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_deudor()!=null) {
					this.cuentacontabledeudorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontabledeudorBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_deudor());
					this.cuentacontabledeudorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontabledeudorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontabledeudorBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontabledeudorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontabledeudor=(TitledBorder)this.cuentacontabledeudorBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontabledeudor.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_deudorParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_deudor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_deudor = "+this.parametroconta.getid_cuenta_contable_deudor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_acreedorParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableacreedorBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableacreedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableacreedorBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableAcreedor";

			if(!this.sFinalQueryGeneral_cuentacontableacreedor.equals("")) {
				this.cuentacontableacreedorBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableacreedor);
				this.cuentacontableacreedorBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableacreedorBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableacreedorBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableacreedorBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableAcreedor.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableacreedorBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableacreedor=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableacreedor=(TitledBorder)this.cuentacontableacreedorBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableacreedor.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_acreedorParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableacreedor=true;

			idTienePermisocuentacontableacreedor=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableacreedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableacreedorBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableacreedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableacreedorBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_acreedor()!=null) {
					this.cuentacontableacreedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableacreedorBeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_acreedor());
					this.cuentacontableacreedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableacreedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableacreedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableacreedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableacreedor=(TitledBorder)this.cuentacontableacreedorBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableacreedor.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_acreedorParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_acreedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_acreedor = "+this.parametroconta.getid_cuenta_contable_acreedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_ingreso1ParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableingreso1BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableingreso1BeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableingreso1BeanSwingJInternalFrame.sTipoBusqueda="CuentaContableIngreso1";

			if(!this.sFinalQueryGeneral_cuentacontableingreso1.equals("")) {
				this.cuentacontableingreso1BeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableingreso1);
				this.cuentacontableingreso1BeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableingreso1BeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableingreso1BeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableingreso1BeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableIngreso1.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableingreso1BeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableingreso1=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableingreso1=(TitledBorder)this.cuentacontableingreso1BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingreso1.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_ingreso1ParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableingreso1=true;

			idTienePermisocuentacontableingreso1=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableingreso1) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableingreso1BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableingreso1BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableingreso1BeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_ingreso1()!=null) {
					this.cuentacontableingreso1BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableingreso1BeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_ingreso1());
					this.cuentacontableingreso1BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableingreso1BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableingreso1BeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableingreso1BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableingreso1=(TitledBorder)this.cuentacontableingreso1BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingreso1.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_ingreso1ParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_ingreso1()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_ingreso1 = "+this.parametroconta.getid_cuenta_contable_ingreso1().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_ingreso2ParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableingreso2BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableingreso2BeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableingreso2BeanSwingJInternalFrame.sTipoBusqueda="CuentaContableIngreso2";

			if(!this.sFinalQueryGeneral_cuentacontableingreso2.equals("")) {
				this.cuentacontableingreso2BeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableingreso2);
				this.cuentacontableingreso2BeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableingreso2BeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableingreso2BeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableingreso2BeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableIngreso2.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableingreso2BeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableingreso2=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableingreso2=(TitledBorder)this.cuentacontableingreso2BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingreso2.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_ingreso2ParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableingreso2=true;

			idTienePermisocuentacontableingreso2=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableingreso2) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableingreso2BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableingreso2BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableingreso2BeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_ingreso2()!=null) {
					this.cuentacontableingreso2BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableingreso2BeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_ingreso2());
					this.cuentacontableingreso2BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableingreso2BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableingreso2BeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableingreso2BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableingreso2=(TitledBorder)this.cuentacontableingreso2BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingreso2.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_ingreso2ParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_ingreso2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_ingreso2 = "+this.parametroconta.getid_cuenta_contable_ingreso2().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_ingreso3ParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableingreso3BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableingreso3BeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableingreso3BeanSwingJInternalFrame.sTipoBusqueda="CuentaContableIngreso3";

			if(!this.sFinalQueryGeneral_cuentacontableingreso3.equals("")) {
				this.cuentacontableingreso3BeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableingreso3);
				this.cuentacontableingreso3BeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableingreso3BeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableingreso3BeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableingreso3BeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableIngreso3.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableingreso3BeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableingreso3=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableingreso3=(TitledBorder)this.cuentacontableingreso3BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingreso3.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_ingreso3ParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableingreso3=true;

			idTienePermisocuentacontableingreso3=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableingreso3) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableingreso3BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableingreso3BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableingreso3BeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_ingreso3()!=null) {
					this.cuentacontableingreso3BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableingreso3BeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_ingreso3());
					this.cuentacontableingreso3BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableingreso3BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableingreso3BeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableingreso3BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableingreso3=(TitledBorder)this.cuentacontableingreso3BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingreso3.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_ingreso3ParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_ingreso3()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_ingreso3 = "+this.parametroconta.getid_cuenta_contable_ingreso3().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_egreso1ParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableegreso1BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableegreso1BeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableegreso1BeanSwingJInternalFrame.sTipoBusqueda="CuentaContableEgreso1";

			if(!this.sFinalQueryGeneral_cuentacontableegreso1.equals("")) {
				this.cuentacontableegreso1BeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableegreso1);
				this.cuentacontableegreso1BeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableegreso1BeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableegreso1BeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableegreso1BeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableEgreso1.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableegreso1BeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableegreso1=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableegreso1=(TitledBorder)this.cuentacontableegreso1BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableegreso1.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_egreso1ParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableegreso1=true;

			idTienePermisocuentacontableegreso1=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableegreso1) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableegreso1BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableegreso1BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableegreso1BeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_egreso1()!=null) {
					this.cuentacontableegreso1BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableegreso1BeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_egreso1());
					this.cuentacontableegreso1BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableegreso1BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableegreso1BeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableegreso1BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableegreso1=(TitledBorder)this.cuentacontableegreso1BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableegreso1.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_egreso1ParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_egreso1()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_egreso1 = "+this.parametroconta.getid_cuenta_contable_egreso1().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_egreso2ParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableegreso2BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableegreso2BeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableegreso2BeanSwingJInternalFrame.sTipoBusqueda="CuentaContableEgreso2";

			if(!this.sFinalQueryGeneral_cuentacontableegreso2.equals("")) {
				this.cuentacontableegreso2BeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableegreso2);
				this.cuentacontableegreso2BeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableegreso2BeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableegreso2BeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableegreso2BeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableEgreso2.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableegreso2BeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableegreso2=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableegreso2=(TitledBorder)this.cuentacontableegreso2BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableegreso2.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_egreso2ParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableegreso2=true;

			idTienePermisocuentacontableegreso2=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableegreso2) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableegreso2BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableegreso2BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableegreso2BeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_egreso2()!=null) {
					this.cuentacontableegreso2BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableegreso2BeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_egreso2());
					this.cuentacontableegreso2BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableegreso2BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableegreso2BeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableegreso2BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableegreso2=(TitledBorder)this.cuentacontableegreso2BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableegreso2.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_egreso2ParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_egreso2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_egreso2 = "+this.parametroconta.getid_cuenta_contable_egreso2().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_egreso3ParametroContaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableegreso3BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableegreso3BeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableegreso3BeanSwingJInternalFrame.sTipoBusqueda="CuentaContableEgreso3";

			if(!this.sFinalQueryGeneral_cuentacontableegreso3.equals("")) {
				this.cuentacontableegreso3BeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableegreso3);
				this.cuentacontableegreso3BeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableegreso3BeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableegreso3BeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableegreso3BeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableEgreso3.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableegreso3BeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroConta=null;
			TitledBorder titledBordercuentacontableegreso3=null;

			if(!this.jScrollPanelDatosParametroConta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				titledBordercuentacontableegreso3=(TitledBorder)this.cuentacontableegreso3BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableegreso3.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_egreso3ParametroContaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableegreso3=true;

			idTienePermisocuentacontableegreso3=this.tienePermisosUsuarioEnPaginaWebParametroConta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableegreso3) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroConta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroConta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);

				this.cuentacontableegreso3BeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableegreso3BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableegreso3BeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocontaLogic.getConnexion());

				if(this.parametroconta.getid_cuenta_contable_egreso3()!=null) {
					this.cuentacontableegreso3BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableegreso3BeanSwingJInternalFrame.setIdActual(this.parametroconta.getid_cuenta_contable_egreso3());
					this.cuentacontableegreso3BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableegreso3BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableegreso3BeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableegreso3BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroConta=(TitledBorder)this.jScrollPanelDatosParametroConta.getBorder();
				TitledBorder titledBordercuentacontableegreso3=(TitledBorder)this.cuentacontableegreso3BeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableegreso3.setTitle(titledBorderParametroConta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_egreso3ParametroContaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.getparametroconta(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametroconta==null) {
						this.parametroconta = new ParametroConta();
					}

					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);
				}

				if(this.parametroconta.getid_cuenta_contable_egreso3()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_egreso3 = "+this.parametroconta.getid_cuenta_contable_egreso3().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroConta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdCuentaContableAcreedorParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableAcreedor();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableActivoParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableActivo();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableDeudorParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableDeudor();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableEgresoParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableEgreso();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableEgreso1ParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableEgreso1();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableEgreso2ParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableEgreso2();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableEgreso3ParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableEgreso3();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIngresoParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableIngreso();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIngreso1ParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableIngreso1();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIngreso2ParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableIngreso2();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIngreso3ParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableIngreso3();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContablePasivoParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContablePasivo();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContablePatrimonioParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContablePatrimonio();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableResumenParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdCuentaContableResumen();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdEmpresa();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdMoneda();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaExtranjeraParametroContaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroConta(false,false);

			this.getParametroContasFK_IdMonedaExtranjera();

			this.inicializarActualizarBindingParametroConta(false);

			//if(ParametroContaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroConta(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocontaLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameParametroConta() {
		if(this.jInternalFrameDetalleFormParametroConta!=null) {
		

		if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) {
			this.jInternalFrameDetalleFormParametroConta.setVisible(false);	    			
			this.jInternalFrameDetalleFormParametroConta.dispose();
			this.jInternalFrameDetalleFormParametroConta=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoParametroConta!=null) {
			this.jInternalFrameReporteDinamicoParametroConta.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoParametroConta.dispose();
			this.jInternalFrameReporteDinamicoParametroConta=null;
		}
		
		if(this.jInternalFrameImportacionParametroConta!=null) {
			this.jInternalFrameImportacionParametroConta.setVisible(false);	    			
			this.jInternalFrameImportacionParametroConta.dispose();
			this.jInternalFrameImportacionParametroConta=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessParametroConta();
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
			
			if(sTipo.equals("NuevoParametroConta")) {
				jButtonNuevoParametroContaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarParametroConta")) {
				jButtonDuplicarParametroContaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarParametroConta")) {
				jButtonCopiarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("VerFormParametroConta")) {
				jButtonVerFormParametroContaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarParametroConta")) {
				jButtonNuevoParametroContaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarParametroConta")) {
				jButtonDuplicarParametroContaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoParametroConta")) {
				jButtonNuevoParametroContaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarParametroConta")) {
				jButtonDuplicarParametroContaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesParametroConta")) {
				jButtonNuevoParametroContaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarParametroConta")) {
				jButtonNuevoParametroContaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesParametroConta")) {
				jButtonNuevoParametroContaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarParametroConta")) {
				jButtonModificarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarParametroConta")) {
				jButtonModificarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarParametroConta")) {
				jButtonModificarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarParametroConta")) {
				jButtonActualizarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarParametroConta")) {
				jButtonActualizarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarParametroConta")) {
				jButtonActualizarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("EliminarParametroConta")) {
				jButtonEliminarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarParametroConta")) {
				jButtonEliminarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarParametroConta")) {
				jButtonEliminarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("CancelarParametroConta")) {
				jButtonCancelarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarParametroConta")) {
				jButtonCancelarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarParametroConta")) {
				jButtonCancelarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("CerrarParametroConta")) {
				jButtonCerrarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarParametroConta")) {
				jButtonCerrarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarParametroConta")) {
				jButtonCerrarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarParametroConta")) {
				jButtonMostrarOcultarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarParametroConta")) {
				jButtonCancelarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosParametroConta")) {
				jButtonGuardarCambiosParametroContaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarParametroConta")) {
				jButtonGuardarCambiosParametroContaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarParametroConta")) {
				jButtonCopiarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarParametroConta")) {
				jButtonVerFormParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosParametroConta")) {
				jButtonGuardarCambiosParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarParametroConta")) {
				jButtonCopiarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormParametroConta")) {
				jButtonVerFormParametroContaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaParametroConta")) {
				jButtonGuardarCambiosParametroContaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarParametroConta")) {
				jButtonGuardarCambiosParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaParametroConta")) {
				jButtonGuardarCambiosParametroContaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionParametroConta")) {
				jButtonRecargarInformacionParametroContaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarParametroConta")) {
				jButtonRecargarInformacionParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionParametroConta")) {
				jButtonRecargarInformacionParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresParametroConta")) {
				jButtonAnterioresParametroContaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarParametroConta")) {
				jButtonAnterioresParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreParametroConta")) {
				jButtonAnterioresParametroContaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesParametroConta")) {
				jButtonSiguientesParametroContaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarParametroConta")) {
				jButtonSiguientesParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesParametroConta")) {
				jButtonSiguientesParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByParametroConta") || sTipo.equals("MenuItemDetalleAbrirOrderByParametroConta")) {
				jButtonAbrirOrderByParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarParametroConta") || sTipo.equals("MenuItemDetalleMostrarOcultarParametroConta")) {
				jButtonMostrarOcultarParametroContaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosParametroConta")) {
				jButtonNuevoGuardarCambiosParametroContaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarParametroConta")) {
				jButtonNuevoGuardarCambiosParametroContaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosParametroConta")) {
				jButtonNuevoGuardarCambiosParametroContaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoParametroConta")) {
				jButtonCerrarReporteDinamicoParametroContaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoParametroConta")) {
				jButtonGenerarReporteDinamicoParametroContaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoParametroConta")) {
				
				jButtonGenerarExcelReporteDinamicoParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionParametroConta")) {
				jButtonCerrarImportacionParametroContaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionParametroConta")) {
				
				jButtonGenerarImportacionParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionParametroConta")) {
				
				jButtonAbrirImportacionParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesParametroConta")) {
				jComboBoxTiposAccionesParametroContaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesParametroConta")) {
				jComboBoxTiposRelacionesParametroContaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioParametroConta")) {
				jComboBoxTiposAccionesParametroContaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarParametroConta")) {
				
				jComboBoxTiposSeleccionarParametroContaActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralParametroConta")) {
				jTextFieldValorCampoGeneralParametroContaActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByParametroConta")) {
				jButtonAbrirOrderByParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarParametroConta")) {
				jButtonAbrirOrderByParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByParametroConta")) {
				jButtonCerrarOrderByParametroContaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroContaBusqueda")) {
				this.jButtonidParametroContaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroContaUpdate")) {
				this.jButtonid_empresaParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroContaBusqueda")) {
				this.jButtonid_empresaParametroContaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaParametroContaUpdate")) {
				this.jButtonid_monedaParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaParametroContaBusqueda")) {
				this.jButtonid_monedaParametroContaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moneda_extranjeraParametroContaUpdate")) {
				this.jButtonid_moneda_extranjeraParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moneda_extranjeraParametroContaBusqueda")) {
				this.jButtonid_moneda_extranjeraParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_mascaraParametroContaBusqueda")) {
				this.jButtoncon_mascaraParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_nivelParametroContaBusqueda")) {
				this.jButtonnumero_nivelParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_presupuestoParametroContaBusqueda")) {
				this.jButtones_presupuestoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_loteParametroContaBusqueda")) {
				this.jButtones_loteParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_secuencial_automaticoParametroContaBusqueda")) {
				this.jButtoncon_secuencial_automaticoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cuentas_niffParametroContaBusqueda")) {
				this.jButtoncon_cuentas_niffParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_centro_costo_mascaraParametroContaBusqueda")) {
				this.jButtoncon_centro_costo_mascaraParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_centro_costo_nueva_estructuraParametroContaBusqueda")) {
				this.jButtoncon_centro_costo_nueva_estructuraParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("centro_costo_numero_nivelParametroContaBusqueda")) {
				this.jButtoncentro_costo_numero_nivelParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_activoParametroConta")) {
				this.jButtonid_cuenta_contable_activoParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_activoParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableActivo("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_activoParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_activoParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_activoParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_activoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_pasivoParametroConta")) {
				this.jButtonid_cuenta_contable_pasivoParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_pasivoParametroContaArbol")) {
				this.abrirFrameTreeCuentaContablePasivo("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_pasivoParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_pasivoParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_pasivoParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_pasivoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_patrimonioParametroConta")) {
				this.jButtonid_cuenta_contable_patrimonioParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_patrimonioParametroContaArbol")) {
				this.abrirFrameTreeCuentaContablePatrimonio("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_patrimonioParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_patrimonioParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_patrimonioParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_patrimonioParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingresoParametroConta")) {
				this.jButtonid_cuenta_contable_ingresoParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingresoParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableIngreso("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingresoParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_ingresoParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingresoParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_ingresoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_egresoParametroConta")) {
				this.jButtonid_cuenta_contable_egresoParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egresoParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableEgreso("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_egresoParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_egresoParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egresoParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_egresoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_resumenParametroConta")) {
				this.jButtonid_cuenta_contable_resumenParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_resumenParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableResumen("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_resumenParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_resumenParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_resumenParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_resumenParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_deudorParametroConta")) {
				this.jButtonid_cuenta_contable_deudorParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_deudorParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableDeudor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_deudorParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_deudorParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_deudorParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_deudorParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_acreedorParametroConta")) {
				this.jButtonid_cuenta_contable_acreedorParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_acreedorParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableAcreedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_acreedorParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_acreedorParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_acreedorParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_acreedorParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso1ParametroConta")) {
				this.jButtonid_cuenta_contable_ingreso1ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso1ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableIngreso1("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso1ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_ingreso1ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso1ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso1ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso2ParametroConta")) {
				this.jButtonid_cuenta_contable_ingreso2ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso2ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableIngreso2("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso2ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_ingreso2ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso2ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso2ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso3ParametroConta")) {
				this.jButtonid_cuenta_contable_ingreso3ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso3ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableIngreso3("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso3ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_ingreso3ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso3ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso3ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso1ParametroConta")) {
				this.jButtonid_cuenta_contable_egreso1ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso1ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableEgreso1("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso1ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_egreso1ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso1ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_egreso1ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso2ParametroConta")) {
				this.jButtonid_cuenta_contable_egreso2ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso2ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableEgreso2("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso2ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_egreso2ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso2ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_egreso2ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso3ParametroConta")) {
				this.jButtonid_cuenta_contable_egreso3ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso3ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableEgreso3("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso3ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_egreso3ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso3ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_egreso3ParametroContaBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_cuenta_contable_acreedorParametroConta")) {
				this.jButtonid_cuenta_contable_acreedorParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_activoParametroConta")) {
				this.jButtonid_cuenta_contable_activoParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_deudorParametroConta")) {
				this.jButtonid_cuenta_contable_deudorParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_egresoParametroConta")) {
				this.jButtonid_cuenta_contable_egresoParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_egreso1ParametroConta")) {
				this.jButtonid_cuenta_contable_egreso1ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_egreso2ParametroConta")) {
				this.jButtonid_cuenta_contable_egreso2ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_egreso3ParametroConta")) {
				this.jButtonid_cuenta_contable_egreso3ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_ingresoParametroConta")) {
				this.jButtonid_cuenta_contable_ingresoParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_ingreso1ParametroConta")) {
				this.jButtonid_cuenta_contable_ingreso1ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_ingreso2ParametroConta")) {
				this.jButtonid_cuenta_contable_ingreso2ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_ingreso3ParametroConta")) {
				this.jButtonid_cuenta_contable_ingreso3ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_pasivoParametroConta")) {
				this.jButtonid_cuenta_contable_pasivoParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_patrimonioParametroConta")) {
				this.jButtonid_cuenta_contable_patrimonioParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_resumenParametroConta")) {
				this.jButtonid_cuenta_contable_resumenParametroContaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCuentaContableAcreedorParametroConta")) {
				this.jButtonFK_IdCuentaContableAcreedorParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableActivoParametroConta")) {
				this.jButtonFK_IdCuentaContableActivoParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableDeudorParametroConta")) {
				this.jButtonFK_IdCuentaContableDeudorParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableEgresoParametroConta")) {
				this.jButtonFK_IdCuentaContableEgresoParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableEgreso1ParametroConta")) {
				this.jButtonFK_IdCuentaContableEgreso1ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableEgreso2ParametroConta")) {
				this.jButtonFK_IdCuentaContableEgreso2ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableEgreso3ParametroConta")) {
				this.jButtonFK_IdCuentaContableEgreso3ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableIngresoParametroConta")) {
				this.jButtonFK_IdCuentaContableIngresoParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableIngreso1ParametroConta")) {
				this.jButtonFK_IdCuentaContableIngreso1ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableIngreso2ParametroConta")) {
				this.jButtonFK_IdCuentaContableIngreso2ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableIngreso3ParametroConta")) {
				this.jButtonFK_IdCuentaContableIngreso3ParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContablePasivoParametroConta")) {
				this.jButtonFK_IdCuentaContablePasivoParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContablePatrimonioParametroConta")) {
				this.jButtonFK_IdCuentaContablePatrimonioParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableResumenParametroConta")) {
				this.jButtonFK_IdCuentaContableResumenParametroContaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdMonedaExtranjeraParametroConta")) {
				this.jButtonFK_IdMonedaExtranjeraParametroContaActionPerformed(evt);
			}
			
			;
			
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessParametroConta();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroContaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				


				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ParametroConta parametrocontaLocal=null;
			
			if(!this.getEsControlTabla()) {
				parametrocontaLocal=this.parametroconta;
			} else {
				parametrocontaLocal=this.parametrocontaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
							
				
				


				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroContaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroContaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
								
						
				


				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
								
				
				


				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroContaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroContaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroContaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
							
				
				


				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroContaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocontaAnterior =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrocontaAnterior =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroContaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
								
				
				


				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroContaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroContaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroContaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosParametroConta")) {
					jCheckBoxSeleccionarTodosParametroContaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosParametroConta")) {
					jCheckBoxSeleccionadosParametroContaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarParametroConta")) {
					
				}
				
				


				
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
												
				
				


				
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroContaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocontaAnterior =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrocontaAnterior =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroContaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroContaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametroconta);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametroconta);
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroConta.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroConta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroContaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocontaAnterior =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarParametroConta")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosParametroContaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosParametroConta.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.parametroconta =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.parametroconta =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.parametroconta);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarParametroConta")) {
				
				}
				
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarParametroConta")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosParametroConta.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarParametroConta")) {
			
			}
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessParametroConta();
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
			if(sTipo.equals("NuevoParametroConta")) {
				jButtonNuevoParametroContaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarParametroConta")) {
				jButtonDuplicarParametroContaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarParametroConta")) {
				jButtonCopiarParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormParametroConta")) {
				jButtonVerFormParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesParametroConta")) {
				jButtonNuevoParametroContaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarParametroConta")) {
				jButtonModificarParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarParametroConta")) {
				jButtonActualizarParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarParametroConta")) {
				jButtonEliminarParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaParametroConta")) {
				jButtonGuardarCambiosParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarParametroConta")) {
				jButtonCancelarParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarParametroConta")) {
				jButtonCerrarParametroContaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosParametroConta")) {
				jButtonGuardarCambiosParametroContaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosParametroConta")) {
				jButtonNuevoGuardarCambiosParametroContaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByParametroConta")) {
				jButtonAbrirOrderByParametroContaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionParametroConta")) {
				jButtonRecargarInformacionParametroContaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresParametroConta")) {
				jButtonAnterioresParametroContaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesParametroConta")) {
				jButtonSiguientesParametroContaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroContaBusqueda")) {
				this.jButtonidParametroContaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroContaUpdate")) {
				this.jButtonid_empresaParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroContaBusqueda")) {
				this.jButtonid_empresaParametroContaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaParametroContaUpdate")) {
				this.jButtonid_monedaParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaParametroContaBusqueda")) {
				this.jButtonid_monedaParametroContaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moneda_extranjeraParametroContaUpdate")) {
				this.jButtonid_moneda_extranjeraParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moneda_extranjeraParametroContaBusqueda")) {
				this.jButtonid_moneda_extranjeraParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_mascaraParametroContaBusqueda")) {
				this.jButtoncon_mascaraParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_nivelParametroContaBusqueda")) {
				this.jButtonnumero_nivelParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_presupuestoParametroContaBusqueda")) {
				this.jButtones_presupuestoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_loteParametroContaBusqueda")) {
				this.jButtones_loteParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_secuencial_automaticoParametroContaBusqueda")) {
				this.jButtoncon_secuencial_automaticoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cuentas_niffParametroContaBusqueda")) {
				this.jButtoncon_cuentas_niffParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_centro_costo_mascaraParametroContaBusqueda")) {
				this.jButtoncon_centro_costo_mascaraParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_centro_costo_nueva_estructuraParametroContaBusqueda")) {
				this.jButtoncon_centro_costo_nueva_estructuraParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("centro_costo_numero_nivelParametroContaBusqueda")) {
				this.jButtoncentro_costo_numero_nivelParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_activoParametroConta")) {
				this.jButtonid_cuenta_contable_activoParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_activoParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableActivo("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_activoParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_activoParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_activoParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_activoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_pasivoParametroConta")) {
				this.jButtonid_cuenta_contable_pasivoParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_pasivoParametroContaArbol")) {
				this.abrirFrameTreeCuentaContablePasivo("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_pasivoParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_pasivoParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_pasivoParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_pasivoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_patrimonioParametroConta")) {
				this.jButtonid_cuenta_contable_patrimonioParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_patrimonioParametroContaArbol")) {
				this.abrirFrameTreeCuentaContablePatrimonio("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_patrimonioParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_patrimonioParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_patrimonioParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_patrimonioParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingresoParametroConta")) {
				this.jButtonid_cuenta_contable_ingresoParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingresoParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableIngreso("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingresoParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_ingresoParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingresoParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_ingresoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_egresoParametroConta")) {
				this.jButtonid_cuenta_contable_egresoParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egresoParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableEgreso("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_egresoParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_egresoParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egresoParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_egresoParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_resumenParametroConta")) {
				this.jButtonid_cuenta_contable_resumenParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_resumenParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableResumen("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_resumenParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_resumenParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_resumenParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_resumenParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_deudorParametroConta")) {
				this.jButtonid_cuenta_contable_deudorParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_deudorParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableDeudor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_deudorParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_deudorParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_deudorParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_deudorParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_acreedorParametroConta")) {
				this.jButtonid_cuenta_contable_acreedorParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_acreedorParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableAcreedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_acreedorParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_acreedorParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_acreedorParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_acreedorParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso1ParametroConta")) {
				this.jButtonid_cuenta_contable_ingreso1ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso1ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableIngreso1("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso1ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_ingreso1ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso1ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso1ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso2ParametroConta")) {
				this.jButtonid_cuenta_contable_ingreso2ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso2ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableIngreso2("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso2ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_ingreso2ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso2ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso2ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso3ParametroConta")) {
				this.jButtonid_cuenta_contable_ingreso3ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso3ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableIngreso3("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso3ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_ingreso3ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso3ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso3ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso1ParametroConta")) {
				this.jButtonid_cuenta_contable_egreso1ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso1ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableEgreso1("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso1ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_egreso1ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso1ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_egreso1ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso2ParametroConta")) {
				this.jButtonid_cuenta_contable_egreso2ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso2ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableEgreso2("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso2ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_egreso2ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso2ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_egreso2ParametroContaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso3ParametroConta")) {
				this.jButtonid_cuenta_contable_egreso3ParametroContaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso3ParametroContaArbol")) {
				this.abrirFrameTreeCuentaContableEgreso3("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso3ParametroContaUpdate")) {
				this.jButtonid_cuenta_contable_egreso3ParametroContaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_egreso3ParametroContaBusqueda")) {
				this.jButtonid_cuenta_contable_egreso3ParametroContaBusquedaActionPerformed(evt);
			}
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessParametroConta();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameParametroConta")) {
				closingInternalFrameParametroConta();
				
			} else if(sTipo.equals("jButtonCancelarParametroConta")) {
				JInternalFrameBase jInternalFrameDetalleFormParametroConta = (JInternalFrameBase)evt.getSource();
	            	
	            ParametroContaBeanSwingJInternalFrame jInternalFrameParent=(ParametroContaBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroConta.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarParametroContaActionPerformed(null);
			}
			
			ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametroconta,new Object(),this.parametrocontaParameterGeneral,this.parametrocontaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormParametroConta(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormParametroConta(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormParametroConta(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.parametroconta)) {
			if(!esControlTabla) {
				if(ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);			
				}
				
				if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualParametroConta(this.parametroconta,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrocontaReturnGeneral=parametrocontaLogic.procesarEventosParametroContasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocontaLogic.getParametroContas(),this.parametroconta,this.parametrocontaParameterGeneral,this.isEsNuevoParametroConta,classes);//this.parametrocontaLogic.getParametroConta()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanParametroConta(this.parametrocontaReturnGeneral,this.parametrocontaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanParametroConta(classes,this.parametrocontaReturnGeneral,this.parametrocontaBean,false);
					}
						
					if(this.parametrocontaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyParametroConta(this.parametrocontaReturnGeneral.getParametroConta());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioParametroConta(this.parametrocontaReturnGeneral.getParametroConta());	
					}
						
					if(this.parametrocontaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioParametroConta(this.parametrocontaReturnGeneral.getParametroConta(),classes);//this.parametrocontaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioParametroConta(this.parametroconta,classes);//this.parametrocontaBean);									
				}
			
				if(ParametroContaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualParametroConta(this.parametroconta,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroConta(this.parametroconta);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.parametrocontaAnterior!=null) {
						this.parametroconta=this.parametrocontaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrocontaReturnGeneral=parametrocontaLogic.procesarEventosParametroContasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocontaLogic.getParametroContas(),this.parametroconta,this.parametrocontaParameterGeneral,this.isEsNuevoParametroConta,classes);//this.parametrocontaLogic.getParametroConta()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrocontaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrocontaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.parametrocontaReturnGeneral.getParametroConta(),parametrocontaLogic.getParametroContas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.parametrocontaReturnGeneral.getParametroConta(),this.parametrocontas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosParametroConta.repaint();
				
				//((AbstractTableModel) this.jTableDatosParametroConta.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosParametroConta();
			}
		}
	}
	
	public void actualizarVisualTableDatosParametroConta() throws Exception {
		
		ParametroContaModel parametrocontaModel=(ParametroContaModel)this.jTableDatosParametroConta.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrocontaModel.parametrocontas=this.parametrocontaLogic.getParametroContas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			parametrocontaModel.parametrocontas=this.parametrocontas;
		}
		
		
		((ParametroContaModel) this.jTableDatosParametroConta.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaParametroConta() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getparametrocontaAnterior(),this.parametrocontaLogic.getParametroContas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getparametrocontaAnterior(),this.parametrocontas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosParametroConta();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioParametroConta(ParametroConta parametroconta,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroContaDetalle.class)) {
					this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.setParametroContaDetalles(parametroconta.getParametroContaDetalles());
					this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.inicializarActualizarBindingTablaParametroContaDetalle(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametroconta,new Object(),generalEntityParameterGeneral,this.parametrocontaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.parametrocontaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ParametroContaConstantesFunciones.getClassesRelationshipsOfParametroConta(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ParametroContaConstantesFunciones.getClassesRelationshipsFromStringsOfParametroConta(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormParametroConta(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ParametroContaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametroconta,new Object(),generalEntityParameterGeneral,this.parametrocontaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioParametroConta(ParametroContaBean parametrocontaBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroContaDetalle.class)) {
					this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.setParametroContaDetalles(parametroconta.getParametroContaDetalles());
					this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.inicializarActualizarBindingTablaParametroContaDetalle(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanParametroConta(ArrayList<Classe> classes,ParametroContaReturnGeneral parametrocontaReturnGeneral,ParametroContaBean parametrocontaBean,Boolean conDefault) throws Exception {
		
			this.parametrocontaBean.setParametroContaDetalles(parametrocontaReturnGeneral.getParametroConta().getParametroContaDetalles());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualParametroConta(ParametroConta parametroconta,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroContaDetalle.class)) {
					parametroconta.setParametroContaDetalles(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleBeanSwingJInternalFrame.parametrocontadetalleLogic.getParametroContaDetalles());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.parametroconta)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormParametroConta = new ParametroContaDetalleFormJInternalFrame(jDesktopPane,this.parametrocontaSessionBean.getConGuardarRelaciones(),this.parametrocontaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroConta);
		this.jInternalFrameDetalleFormParametroConta.setVisible(false);
		this.jInternalFrameDetalleFormParametroConta.setSelected(false);						
		
		this.jInternalFrameDetalleFormParametroConta.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormParametroConta.parametrocontaLogic=this.parametrocontaLogic;
		
		this.cargarCombosFrameForeignKeyParametroConta("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroConta();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroConta();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyParametroConta("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyParametroConta();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormParametroConta.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroConta"));
		
		this.jInternalFrameDetalleFormParametroConta.jButtonModificarParametroConta.addActionListener(new ButtonActionListener(this,"ModificarParametroConta"));

		
		this.jInternalFrameDetalleFormParametroConta.jButtonModificarToolBarParametroConta.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroConta"));
					
		this.jInternalFrameDetalleFormParametroConta.jMenuItemModificarParametroConta.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroConta"));		
		
		
		
		this.jInternalFrameDetalleFormParametroConta.jButtonActualizarParametroConta.addActionListener (new ButtonActionListener(this,"ActualizarParametroConta"));
		
		
		this.jInternalFrameDetalleFormParametroConta.jButtonActualizarToolBarParametroConta.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroConta"));
						
		this.jInternalFrameDetalleFormParametroConta.jMenuItemActualizarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroConta"));		
		
		
		
		this.jInternalFrameDetalleFormParametroConta.jButtonEliminarParametroConta.addActionListener (new ButtonActionListener(this,"EliminarParametroConta"));
		
		
		this.jInternalFrameDetalleFormParametroConta.jButtonEliminarToolBarParametroConta.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroConta"));
								
		this.jInternalFrameDetalleFormParametroConta.jMenuItemEliminarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroConta"));		
		
		
		
		this.jInternalFrameDetalleFormParametroConta.jButtonCancelarParametroConta.addActionListener (new ButtonActionListener(this,"CancelarParametroConta"));
		
		
		this.jInternalFrameDetalleFormParametroConta.jButtonCancelarToolBarParametroConta.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroConta"));
					
		this.jInternalFrameDetalleFormParametroConta.jMenuItemCancelarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroConta"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormParametroConta.jMenuItemDetalleCerrarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroConta"));		
		
		
		
		this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosToolBarParametroConta.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroConta"));
		
		
		
		this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosToolBarParametroConta.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroConta"));
		
		
		
		this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroConta"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonidParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"idParametroContaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_empresaParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_empresaParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroContaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_monedaParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_monedaParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_monedaParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaParametroContaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_moneda_extranjeraParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_moneda_extranjeraParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_moneda_extranjeraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_moneda_extranjeraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_mascaraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_mascaraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonnumero_nivelParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"numero_nivelParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtones_presupuestoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"es_presupuestoParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtones_loteParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"es_loteParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_secuencial_automaticoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_secuencial_automaticoParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_cuentas_niffParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_cuentas_niffParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_centro_costo_mascaraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costo_mascaraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_centro_costo_nueva_estructuraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costo_nueva_estructuraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncentro_costo_numero_nivelParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"centro_costo_numero_nivelParametroContaBusqueda"));
		//jButtonid_cuenta_contable_activoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_activoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroConta"));
		//jButtonid_cuenta_contable_activoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableActivo("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_pasivoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_pasivoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroConta"));
		//jButtonid_cuenta_contable_pasivoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContablePasivo("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_patrimonioParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_patrimonioParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroConta"));
		//jButtonid_cuenta_contable_patrimonioParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContablePatrimonio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingresoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingresoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroConta"));
		//jButtonid_cuenta_contable_ingresoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egresoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egresoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroConta"));
		//jButtonid_cuenta_contable_egresoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_resumenParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_resumenParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroConta"));
		//jButtonid_cuenta_contable_resumenParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableResumen("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroContaBusqueda"));
		//jButtonid_cuenta_contable_deudorParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_deudorParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroConta"));
		//jButtonid_cuenta_contable_deudorParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableDeudor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroContaBusqueda"));
		//jButtonid_cuenta_contable_acreedorParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_acreedorParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroConta"));
		//jButtonid_cuenta_contable_acreedorParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableAcreedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingreso1ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingreso1ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroConta"));
		//jButtonid_cuenta_contable_ingreso1ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso1("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingreso2ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingreso2ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroConta"));
		//jButtonid_cuenta_contable_ingreso2ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso2("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingreso3ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingreso3ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroConta"));
		//jButtonid_cuenta_contable_ingreso3ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso3("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egreso1ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egreso1ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroConta"));
		//jButtonid_cuenta_contable_egreso1ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso1("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egreso2ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egreso2ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroConta"));
		//jButtonid_cuenta_contable_egreso2ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso2("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egreso3ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egreso3ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroConta"));
		//jButtonid_cuenta_contable_egreso3ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso3("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroContaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroConta"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameParametroConta"));
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroConta"));
		}
		
		this.jTableDatosParametroConta.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarParametroConta"));
		
		this.jTableDatosParametroConta.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarParametroConta"));
		
		this.jButtonNuevoParametroConta.addActionListener(new ButtonActionListener(this,"NuevoParametroConta"));
		
		this.jButtonDuplicarParametroConta.addActionListener(new ButtonActionListener(this,"DuplicarParametroConta"));
		
		this.jButtonCopiarParametroConta.addActionListener(new ButtonActionListener(this,"CopiarParametroConta"));
		
		this.jButtonVerFormParametroConta.addActionListener(new ButtonActionListener(this,"VerFormParametroConta"));
		
		
		this.jButtonNuevoToolBarParametroConta.addActionListener(new ButtonActionListener(this,"NuevoToolBarParametroConta"));
			
		this.jButtonDuplicarToolBarParametroConta.addActionListener(new ButtonActionListener(this,"DuplicarToolBarParametroConta"));
			
		this.jMenuItemNuevoParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemNuevoParametroConta"));
			
		this.jMenuItemDuplicarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarParametroConta"));		
		
		
		this.jButtonNuevoRelacionesParametroConta.addActionListener (new ButtonActionListener(this,"NuevoRelacionesParametroConta"));
		
		
		this.jButtonNuevoRelacionesToolBarParametroConta.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarParametroConta"));
			
		this.jMenuItemNuevoRelacionesParametroConta.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesParametroConta"));		
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonModificarParametroConta.addActionListener(new ButtonActionListener(this,"ModificarParametroConta"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonModificarToolBarParametroConta.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroConta"));
			
			this.jInternalFrameDetalleFormParametroConta.jMenuItemModificarParametroConta.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroConta"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormParametroConta.jButtonActualizarParametroConta.addActionListener (new ButtonActionListener(this,"ActualizarParametroConta"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonActualizarToolBarParametroConta.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroConta"));
				
			this.jInternalFrameDetalleFormParametroConta.jMenuItemActualizarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroConta"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonEliminarParametroConta.addActionListener (new ButtonActionListener(this,"EliminarParametroConta"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonEliminarToolBarParametroConta.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroConta"));
						
			this.jInternalFrameDetalleFormParametroConta.jMenuItemEliminarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroConta"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonCancelarParametroConta.addActionListener (new ButtonActionListener(this,"CancelarParametroConta"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonCancelarToolBarParametroConta.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroConta"));
			
			this.jInternalFrameDetalleFormParametroConta.jMenuItemCancelarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroConta"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarParametroConta.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarParametroConta"));		
		
		
		this.jButtonCerrarParametroConta.addActionListener (new ButtonActionListener(this,"CerrarParametroConta"));
		
		
		this.jButtonCerrarToolBarParametroConta.addActionListener (new ButtonActionListener(this,"CerrarToolBarParametroConta"));
			
		this.jMenuItemCerrarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemCerrarParametroConta"));
			
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jMenuItemDetalleCerrarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroConta"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosParametroConta.addActionListener (new ButtonActionListener(this,"GuardarCambiosParametroConta"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosToolBarParametroConta.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroConta"));
		}
		
		this.jButtonCopiarToolBarParametroConta.addActionListener (new ButtonActionListener(this,"CopiarToolBarParametroConta"));
			
		this.jButtonVerFormToolBarParametroConta.addActionListener (new ButtonActionListener(this,"VerFormToolBarParametroConta"));
		
		this.jMenuItemGuardarCambiosParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosParametroConta"));
			
		this.jMenuItemCopiarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemCopiarParametroConta"));		
		
		this.jMenuItemVerFormParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemVerFormParametroConta"));		
		
		
		this.jButtonGuardarCambiosTablaParametroConta.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroConta"));
		
		
		this.jButtonGuardarCambiosTablaToolBarParametroConta.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarParametroConta"));
			
		this.jMenuItemGuardarCambiosTablaParametroConta.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroConta"));		
		
		
		
		this.jButtonRecargarInformacionParametroConta.addActionListener (new ButtonActionListener(this,"RecargarInformacionParametroConta"));
					
		this.jButtonRecargarInformacionToolBarParametroConta.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarParametroConta"));
		
		this.jMenuItemRecargarInformacionParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionParametroConta"));		
		
		
		
		this.jButtonAnterioresParametroConta.addActionListener (new ButtonActionListener(this,"AnterioresParametroConta"));
		
		
		this.jButtonAnterioresToolBarParametroConta.addActionListener (new ButtonActionListener(this,"AnterioresToolBarParametroConta"));
		
		this.jMenuItemAnterioresParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresParametroConta"));		
		
		
		this.jButtonSiguientesParametroConta.addActionListener (new ButtonActionListener(this,"SiguientesParametroConta"));
		
		
		this.jButtonSiguientesToolBarParametroConta.addActionListener (new ButtonActionListener(this,"SiguientesToolBarParametroConta"));
			
		this.jMenuItemSiguientesParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesParametroConta"));
			
		this.jMenuItemAbrirOrderByParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByParametroConta"));
			
		this.jMenuItemMostrarOcultarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarParametroConta"));
			
		this.jMenuItemDetalleAbrirOrderByParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByParametroConta"));
			
		this.jMenuItemDetalleMostarOcultarParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarParametroConta"));		
		
		
		this.jButtonNuevoGuardarCambiosParametroConta.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosParametroConta"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarParametroConta.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarParametroConta"));
			
		this.jMenuItemNuevoGuardarCambiosParametroConta.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosParametroConta"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosParametroConta.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosParametroConta"));

		this.jCheckBoxSeleccionadosParametroConta.addItemListener(new CheckBoxItemListener(this,"SeleccionadosParametroConta"));
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroConta"));
		}
		
		
		this.jComboBoxTiposRelacionesParametroConta.addActionListener (new ButtonActionListener(this,"TiposRelacionesParametroConta"));
			
		this.jComboBoxTiposAccionesParametroConta.addActionListener (new ButtonActionListener(this,"TiposAccionesParametroConta"));
					
		this.jComboBoxTiposSeleccionarParametroConta.addActionListener (new ButtonActionListener(this,"TiposSeleccionarParametroConta"));
			
		this.jTextFieldValorCampoGeneralParametroConta.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralParametroConta"));		
		
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonidParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"idParametroContaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_empresaParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_empresaParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroContaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_monedaParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_monedaParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_monedaParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaParametroContaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_moneda_extranjeraParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_moneda_extranjeraParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_moneda_extranjeraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_moneda_extranjeraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_mascaraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_mascaraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonnumero_nivelParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"numero_nivelParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtones_presupuestoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"es_presupuestoParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtones_loteParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"es_loteParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_secuencial_automaticoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_secuencial_automaticoParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_cuentas_niffParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_cuentas_niffParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_centro_costo_mascaraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costo_mascaraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_centro_costo_nueva_estructuraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costo_nueva_estructuraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncentro_costo_numero_nivelParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"centro_costo_numero_nivelParametroContaBusqueda"));
		//jButtonid_cuenta_contable_activoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_activoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroConta"));
		//jButtonid_cuenta_contable_activoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableActivo("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_pasivoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_pasivoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroConta"));
		//jButtonid_cuenta_contable_pasivoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContablePasivo("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_patrimonioParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_patrimonioParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroConta"));
		//jButtonid_cuenta_contable_patrimonioParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContablePatrimonio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingresoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingresoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroConta"));
		//jButtonid_cuenta_contable_ingresoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egresoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egresoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroConta"));
		//jButtonid_cuenta_contable_egresoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_resumenParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_resumenParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroConta"));
		//jButtonid_cuenta_contable_resumenParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableResumen("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroContaBusqueda"));
		//jButtonid_cuenta_contable_deudorParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_deudorParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroConta"));
		//jButtonid_cuenta_contable_deudorParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableDeudor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroContaBusqueda"));
		//jButtonid_cuenta_contable_acreedorParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_acreedorParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroConta"));
		//jButtonid_cuenta_contable_acreedorParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableAcreedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingreso1ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingreso1ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroConta"));
		//jButtonid_cuenta_contable_ingreso1ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso1("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingreso2ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingreso2ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroConta"));
		//jButtonid_cuenta_contable_ingreso2ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso2("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingreso3ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingreso3ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroConta"));
		//jButtonid_cuenta_contable_ingreso3ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso3("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egreso1ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egreso1ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroConta"));
		//jButtonid_cuenta_contable_egreso1ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso1("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egreso2ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egreso2ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroConta"));
		//jButtonid_cuenta_contable_egreso2ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso2("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egreso3ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egreso3ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroConta"));
		//jButtonid_cuenta_contable_egreso3ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso3("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroContaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCuentaContableAcreedorParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableAcreedorParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableAcreedorid_cuenta_contable_acreedorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroConta"));

			this.jButtonFK_IdCuentaContableActivoParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableActivoParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableActivoid_cuenta_contable_activoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroConta"));

			this.jButtonFK_IdCuentaContableDeudorParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableDeudorParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableDeudorid_cuenta_contable_deudorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroConta"));

			this.jButtonFK_IdCuentaContableEgresoParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEgresoParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableEgresoid_cuenta_contable_egresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroConta"));

			this.jButtonFK_IdCuentaContableEgreso1ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEgreso1ParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableEgreso1id_cuenta_contable_egreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroConta"));

			this.jButtonFK_IdCuentaContableEgreso2ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEgreso2ParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableEgreso2id_cuenta_contable_egreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroConta"));

			this.jButtonFK_IdCuentaContableEgreso3ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEgreso3ParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableEgreso3id_cuenta_contable_egreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroConta"));

			this.jButtonFK_IdCuentaContableIngresoParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngresoParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableIngresoid_cuenta_contable_ingresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroConta"));

			this.jButtonFK_IdCuentaContableIngreso1ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngreso1ParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableIngreso1id_cuenta_contable_ingreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroConta"));

			this.jButtonFK_IdCuentaContableIngreso2ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngreso2ParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableIngreso2id_cuenta_contable_ingreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroConta"));

			this.jButtonFK_IdCuentaContableIngreso3ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngreso3ParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableIngreso3id_cuenta_contable_ingreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroConta"));

			this.jButtonFK_IdCuentaContablePasivoParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContablePasivoParametroConta"));

			this.jButtonBuscarFK_IdCuentaContablePasivoid_cuenta_contable_pasivoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroConta"));

			this.jButtonFK_IdCuentaContablePatrimonioParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContablePatrimonioParametroConta"));

			this.jButtonBuscarFK_IdCuentaContablePatrimonioid_cuenta_contable_patrimonioParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroConta"));

			this.jButtonFK_IdCuentaContableResumenParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableResumenParametroConta"));

			this.jButtonBuscarFK_IdCuentaContableResumenid_cuenta_contable_resumenParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroConta"));

			this.jButtonFK_IdMonedaExtranjeraParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdMonedaExtranjeraParametroConta"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoParametroConta!=null) {
				this.jInternalFrameReporteDinamicoParametroConta.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroConta"));
				this.jInternalFrameReporteDinamicoParametroConta.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroConta"));
				this.jInternalFrameReporteDinamicoParametroConta.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroConta"));
			}
			
			//this.jButtonCerrarReporteDinamicoParametroConta.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroConta"));				
			//this.jButtonGenerarReporteDinamicoParametroConta.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroConta"));
			//this.jButtonGenerarExcelReporteDinamicoParametroConta.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroConta"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionParametroConta!=null) {
				this.jInternalFrameImportacionParametroConta.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroConta"));
				this.jInternalFrameImportacionParametroConta.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroConta"));
				this.jInternalFrameImportacionParametroConta.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroConta"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByParametroConta.addActionListener (new ButtonActionListener(this,"AbrirOrderByParametroConta"));
			
			this.jButtonAbrirOrderByToolBarParametroConta.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarParametroConta"));			
			
			if(this.jInternalFrameOrderByParametroConta!=null) {
				this.jInternalFrameOrderByParametroConta.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroConta"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormParametroConta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroConta.jTabbedPaneRelacionesParametroConta.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroConta"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameParametroConta();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormParametroConta.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormParametroConta = (JInternalFrameBase)event.getSource();
	            	
	            ParametroContaBeanSwingJInternalFrame jInternalFrameParent=(ParametroContaBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroConta.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarParametroContaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosParametroConta.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosParametroContaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosParametroConta.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosParametroConta.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroContaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroContaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroContaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoParametroConta";
		inputMap = this.jButtonNuevoParametroConta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoParametroConta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroContaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroContaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroContaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroContaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesParametroConta";
		inputMap = this.jButtonNuevoRelacionesParametroConta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesParametroConta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroContaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarParametroConta";
		inputMap = this.jButtonModificarParametroConta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarParametroConta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarParametroContaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarParametroConta";
		inputMap = this.jButtonActualizarParametroConta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarParametroConta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarParametroContaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarParametroConta";
		inputMap = this.jButtonEliminarParametroConta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarParametroConta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarParametroContaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarParametroConta";
		inputMap = this.jButtonCancelarParametroConta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarParametroConta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarParametroContaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarParametroConta";
		inputMap = this.jButtonCerrarParametroConta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarParametroConta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarParametroContaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosParametroConta";
		inputMap = this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosParametroConta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormParametroConta.jButtonGuardarCambiosParametroConta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosParametroContaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosParametroConta.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosParametroContaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesParametroConta.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesParametroContaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarParametroConta.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarParametroContaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralParametroConta.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralParametroContaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonidParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"idParametroContaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_empresaParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_empresaParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroContaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_monedaParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_monedaParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_monedaParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaParametroContaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_moneda_extranjeraParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_moneda_extranjeraParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_moneda_extranjeraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_moneda_extranjeraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_mascaraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_mascaraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonnumero_nivelParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"numero_nivelParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtones_presupuestoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"es_presupuestoParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtones_loteParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"es_loteParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_secuencial_automaticoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_secuencial_automaticoParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_cuentas_niffParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_cuentas_niffParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_centro_costo_mascaraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costo_mascaraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncon_centro_costo_nueva_estructuraParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costo_nueva_estructuraParametroContaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtoncentro_costo_numero_nivelParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"centro_costo_numero_nivelParametroContaBusqueda"));
		//jButtonid_cuenta_contable_activoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_activoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroConta"));
		//jButtonid_cuenta_contable_activoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableActivo("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_pasivoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_pasivoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroConta"));
		//jButtonid_cuenta_contable_pasivoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContablePasivo("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_patrimonioParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_patrimonioParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroConta"));
		//jButtonid_cuenta_contable_patrimonioParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContablePatrimonio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingresoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingresoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroConta"));
		//jButtonid_cuenta_contable_ingresoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egresoParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egresoParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroConta"));
		//jButtonid_cuenta_contable_egresoParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroContaBusqueda"));
		//jButtonid_cuenta_contable_resumenParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_resumenParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroConta"));
		//jButtonid_cuenta_contable_resumenParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableResumen("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroContaBusqueda"));
		//jButtonid_cuenta_contable_deudorParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_deudorParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroConta"));
		//jButtonid_cuenta_contable_deudorParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableDeudor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroContaBusqueda"));
		//jButtonid_cuenta_contable_acreedorParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_acreedorParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroConta"));
		//jButtonid_cuenta_contable_acreedorParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableAcreedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingreso1ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingreso1ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroConta"));
		//jButtonid_cuenta_contable_ingreso1ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso1("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingreso2ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingreso2ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroConta"));
		//jButtonid_cuenta_contable_ingreso2ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso2("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_ingreso3ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_ingreso3ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroConta"));
		//jButtonid_cuenta_contable_ingreso3ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIngreso3("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egreso1ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egreso1ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroConta"));
		//jButtonid_cuenta_contable_egreso1ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso1("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egreso2ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egreso2ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroConta"));
		//jButtonid_cuenta_contable_egreso2ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso2("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroContaBusqueda"));
		//jButtonid_cuenta_contable_egreso3ParametroConta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_egreso3ParametroContaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroConta"));
		//jButtonid_cuenta_contable_egreso3ParametroContaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableEgreso3("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroContaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroContaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroContaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroContaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroContaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroContaBusqueda"));
		
		
		this.jButtonFK_IdCuentaContableAcreedorParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableAcreedorParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableAcreedorid_cuenta_contable_acreedorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_acreedorParametroConta"));

		this.jButtonFK_IdCuentaContableActivoParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableActivoParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableActivoid_cuenta_contable_activoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_activoParametroConta"));

		this.jButtonFK_IdCuentaContableDeudorParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableDeudorParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableDeudorid_cuenta_contable_deudorParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_deudorParametroConta"));

		this.jButtonFK_IdCuentaContableEgresoParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEgresoParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableEgresoid_cuenta_contable_egresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egresoParametroConta"));

		this.jButtonFK_IdCuentaContableEgreso1ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEgreso1ParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableEgreso1id_cuenta_contable_egreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso1ParametroConta"));

		this.jButtonFK_IdCuentaContableEgreso2ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEgreso2ParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableEgreso2id_cuenta_contable_egreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso2ParametroConta"));

		this.jButtonFK_IdCuentaContableEgreso3ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEgreso3ParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableEgreso3id_cuenta_contable_egreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_egreso3ParametroConta"));

		this.jButtonFK_IdCuentaContableIngresoParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngresoParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableIngresoid_cuenta_contable_ingresoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingresoParametroConta"));

		this.jButtonFK_IdCuentaContableIngreso1ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngreso1ParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableIngreso1id_cuenta_contable_ingreso1ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso1ParametroConta"));

		this.jButtonFK_IdCuentaContableIngreso2ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngreso2ParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableIngreso2id_cuenta_contable_ingreso2ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso2ParametroConta"));

		this.jButtonFK_IdCuentaContableIngreso3ParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngreso3ParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableIngreso3id_cuenta_contable_ingreso3ParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso3ParametroConta"));

		this.jButtonFK_IdCuentaContablePasivoParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContablePasivoParametroConta"));

		this.jButtonBuscarFK_IdCuentaContablePasivoid_cuenta_contable_pasivoParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_pasivoParametroConta"));

		this.jButtonFK_IdCuentaContablePatrimonioParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContablePatrimonioParametroConta"));

		this.jButtonBuscarFK_IdCuentaContablePatrimonioid_cuenta_contable_patrimonioParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_patrimonioParametroConta"));

		this.jButtonFK_IdCuentaContableResumenParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableResumenParametroConta"));

		this.jButtonBuscarFK_IdCuentaContableResumenid_cuenta_contable_resumenParametroConta.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resumenParametroConta"));

		this.jButtonFK_IdMonedaExtranjeraParametroConta.addActionListener(new ButtonActionListener(this,"FK_IdMonedaExtranjeraParametroConta"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionParametroConta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionParametroContaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarParametroContaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarParametroConta.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosParametroConta(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ParametroConta parametrocontaAux:this.parametrocontaLogic.getParametroContas()) {
					parametrocontaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroConta parametrocontaAux:parametrocontas) {
					parametrocontaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosParametroContaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroConta(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroConta parametrocontaAux:this.parametrocontaLogic.getParametroContas()) {
						parametrocontaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroConta parametrocontaAux:parametrocontas) {
						parametrocontaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ParametroConta parametrocontaAux:this.parametrocontaLogic.getParametroContas()) {
					
						if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONMASCARA)) {
							existe=true;
							parametrocontaAux.setcon_mascara(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO)) {
							existe=true;
							parametrocontaAux.setes_presupuesto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_ESLOTE)) {
							existe=true;
							parametrocontaAux.setes_lote(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO)) {
							existe=true;
							parametrocontaAux.setcon_secuencial_automatico(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF)) {
							existe=true;
							parametrocontaAux.setcon_cuentas_niff(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA)) {
							existe=true;
							parametrocontaAux.setcon_centro_costo_mascara(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA)) {
							existe=true;
							parametrocontaAux.setcon_centro_costo_nueva_estructura(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroConta parametrocontaAux:parametrocontas) {
						
						if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONMASCARA)) {
							existe=true;
							parametrocontaAux.setcon_mascara(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO)) {
							existe=true;
							parametrocontaAux.setes_presupuesto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_ESLOTE)) {
							existe=true;
							parametrocontaAux.setes_lote(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO)) {
							existe=true;
							parametrocontaAux.setcon_secuencial_automatico(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF)) {
							existe=true;
							parametrocontaAux.setcon_cuentas_niff(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA)) {
							existe=true;
							parametrocontaAux.setcon_centro_costo_mascara(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA)) {
							existe=true;
							parametrocontaAux.setcon_centro_costo_nueva_estructura(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaParametroConta(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroConta.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroConta.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosParametroContaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroConta(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosParametroConta.getSelectedRows();
			
			ParametroConta parametrocontaLocal=new ParametroConta();
			
			//this.seleccionarTodosParametroConta(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocontaLocal =(ParametroConta) this.parametrocontaLogic.getParametroContas().toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					parametrocontaLocal =(ParametroConta) this.parametrocontas.toArray()[this.jTableDatosParametroConta.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				parametrocontaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroConta parametrocontaAux:this.parametrocontaLogic.getParametroContas()) {
						parametrocontaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroConta parametrocontaAux:parametrocontas) {
						parametrocontaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaParametroConta(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroConta.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroConta.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroConta,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualParametroContaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarParametroContaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralParametroContaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingParametroConta(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralParametroConta.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroConta parametrocontaAux:this.parametrocontaLogic.getParametroContas()) {
				
						if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_NUMERONIVEL)) {
							existe=true;
							parametrocontaAux.setnumero_nivel(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL)) {
							existe=true;
							parametrocontaAux.setcentro_costo_numero_nivel(Integer.parseInt(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroConta parametrocontaAux:parametrocontas) {
					
						if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_NUMERONIVEL)) {
							existe=true;
							parametrocontaAux.setnumero_nivel(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL)) {
							existe=true;
							parametrocontaAux.setcentro_costo_numero_nivel(Integer.parseInt(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaParametroConta(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesParametroContaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingParametroConta(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioParametroConta=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesParametroConta.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteParametroConta) {				
					conSplash=true;//false;										
					
					//this.startProcessParametroConta(conSplash);
				
					this.generarReporteParametroContasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoParametroContasSeleccionados();
				//this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroContasSeleccionados(false);
				//this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroContasSeleccionados(true);
				//this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroConta();
				
				this.exportarParametroContasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionParametroContas();
				//this.importarParametroContas();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroConta();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelParametroContasSeleccionados();
				//this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Parametro Contabilidad", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessParametroConta();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoParametroConta)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyParametroConta(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.setSelectedIndex(0);					
				}	
			} 			
			else if(ParametroContaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteParametroConta) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessParametroConta(conSplash);
					
						//this.actualizarParametrosGeneralParametroConta();
						
						this.generarReporteProcesoAccionParametroContasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ParametroContaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Parametro ContabilidadS SELECCIONADOS?", "MANTENIMIENTO DE Parametro Contabilidad", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessParametroConta();
				
						this.actualizarParametrosGeneralParametroConta();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.parametrocontaReturnGeneral=parametrocontaLogic.procesarAccionParametroContasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.parametrocontaLogic.getParametroContas(),this.parametrocontaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarParametroContaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralParametroConta();
					
					ParametroContaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarParametroContaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroConta.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroConta.jComboBoxTiposAccionesFormularioParametroConta.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessParametroConta(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesParametroContaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessParametroConta();
			
			if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();		
			ParametroConta parametroconta=new ParametroConta();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingParametroConta(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesParametroConta.getSelectedItem();
			
			
			
			
			parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
			//this.sTipoAccion;
			
			if(parametrocontasSeleccionados.size()==1) {
				for(ParametroConta parametrocontaAux:parametrocontasSeleccionados) {
					parametroconta=parametrocontaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Parametro Conta Detalle")) {
					jButtonParametroContaDetalleActionPerformed(null,rowIndex,true,false,parametroconta);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessParametroConta();
			
      		//this.finishProcessParametroConta(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarParametroContaReturnGeneral() throws Exception {
		if(this.parametrocontaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.parametrocontaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.parametrocontaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.parametrocontaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.parametrocontaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.parametrocontaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingParametroConta(false);
		}
		
		if(this.parametrocontaReturnGeneral.getConRetornoLista() || this.parametrocontaReturnGeneral.getConRetornoObjeto()) {
			if(this.parametrocontaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrocontaLogic.setParametroContas(this.parametrocontaReturnGeneral.getParametroContas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.parametrocontaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrocontaLogic.setParametroConta(this.parametrocontaReturnGeneral.getParametroConta());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingParametroConta(false);
		}
	}
	
	public void actualizarParametrosGeneralParametroConta() throws Exception {
		
		
	}
	
	public ArrayList<ParametroConta> getParametroContasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioParametroConta) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ParametroConta parametrocontaAux:parametrocontaLogic.getParametroContas()) {
					if(parametrocontaAux.getIsSelected()) {
						parametrocontasSeleccionados.add(parametrocontaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroConta parametrocontaAux:this.parametrocontas) {
					if(parametrocontaAux.getIsSelected()) {
						parametrocontasSeleccionados.add(parametrocontaAux);				
					}
				}
			}
			
			if(parametrocontasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						parametrocontasSeleccionados.addAll(this.parametrocontaLogic.getParametroContas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						parametrocontasSeleccionados.addAll(this.parametrocontas);				
					}
				}
			}
		} else {
			parametrocontasSeleccionados.add(this.parametroconta);
		}
		
		return parametrocontasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteParametroContasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalParametroContasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoParametroContasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroContasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroContasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesParametroContasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Parametro Contabilidad",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesParametroContasSeleccionados() throws Exception {
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();		
		
		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteParametroContas("Todos",parametrocontasSeleccionados);
		
	}	
	
	public void generarReporteNormalParametroContasSeleccionados() throws Exception {
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();		
		
		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteParametroContas("Todos",parametrocontasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionParametroContasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();
		
		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteParametroContas("Todos",parametrocontasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoParametroContasSeleccionados() throws Exception {
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();		
		
		
		this.abrirInicializarFrameReporteDinamicoParametroConta();
		
		
		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoParametroConta();
		
		
		//this.generarReporteParametroContas("Todos",parametrocontasSeleccionados ,parametrocontaImplementable,parametrocontaImplementableHome);
	}
	
	public void mostrarImportacionParametroContas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionParametroConta();
		
		this.abrirFrameImportacionParametroConta();		
		
			
		//this.generarReporteParametroContas("Todos",parametrocontasSeleccionados ,parametrocontaImplementable,parametrocontaImplementableHome);
	}
	
	public void importarParametroContas() throws Exception {		
	
	}
	
	public void exportarParametroContasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelParametroContasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoParametroContasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlParametroContasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Parametro Contabilidad",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoParametroContasSeleccionados() throws Exception {
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();		
		
		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametroconta."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarParametroConta(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ParametroConta parametrocontaAux:parametrocontasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarParametroConta(parametrocontaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//parametrocontaAux.setsDetalleGeneralEntityReporte(parametrocontaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarParametroConta(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_CONMASCARA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_NUMERONIVEL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_ESLOTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarParametroConta(ParametroConta parametroconta,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=parametroconta.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getmonedaextranjera_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcon_mascara().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getnumero_nivel().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getes_presupuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getes_lote().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcon_secuencial_automatico().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcon_cuentas_niff().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcon_centro_costo_mascara().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcon_centro_costo_nueva_estructura().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcentro_costo_numero_nivel().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableactivo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontablepasivo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontablepatrimonio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableingreso_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableegreso_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableresumen_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontabledeudor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableacreedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableingreso1_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableingreso2_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableingreso3_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableegreso1_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableegreso2_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametroconta.getcuentacontableegreso3_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelParametroContasSeleccionados() throws Exception {
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();		
		
		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametroconta.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ParametroContas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelParametroConta(row);				
				iRow++;
			}				
			
			for(ParametroConta parametrocontaAux:parametrocontasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelParametroConta(parametrocontaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlParametroContasSeleccionados() throws Exception {
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();		
		
		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametroconta.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("parametrocontas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("parametroconta");
			//elementRoot.appendChild(element);
		
			for(ParametroConta parametrocontaAux:parametrocontasSeleccionados) {
				element = document.createElement("parametroconta");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlParametroConta(parametrocontaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Contabilidad",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelParametroConta(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONMASCARA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_NUMERONIVEL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_ESLOTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelParametroConta(ParametroConta parametroconta,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getmonedaextranjera_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcon_mascara());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getnumero_nivel());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getes_presupuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getes_lote());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcon_secuencial_automatico());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcon_cuentas_niff());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcon_centro_costo_mascara());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcon_centro_costo_nueva_estructura());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcentro_costo_numero_nivel());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableactivo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontablepasivo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontablepatrimonio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableingreso_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableegreso_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableresumen_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontabledeudor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableacreedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableingreso1_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableingreso2_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableingreso3_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableegreso1_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableegreso2_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametroconta.getcuentacontableegreso3_descripcion());				
	}
	
	public void setFilaDatosExportarXmlParametroConta(ParametroConta parametroconta,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ParametroContaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(parametroconta.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ParametroContaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(parametroconta.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ParametroContaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(parametroconta.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementmoneda_descripcion = document.createElement(ParametroContaConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(parametroconta.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementmonedaextranjera_descripcion = document.createElement(ParametroContaConstantesFunciones.IDMONEDAEXTRANJERA);
		elementmonedaextranjera_descripcion.appendChild(document.createTextNode(parametroconta.getmonedaextranjera_descripcion()));
		element.appendChild(elementmonedaextranjera_descripcion);

		Element elementcon_mascara = document.createElement(ParametroContaConstantesFunciones.CONMASCARA);
		elementcon_mascara.appendChild(document.createTextNode(parametroconta.getcon_mascara().toString().trim()));
		element.appendChild(elementcon_mascara);

		Element elementnumero_nivel = document.createElement(ParametroContaConstantesFunciones.NUMERONIVEL);
		elementnumero_nivel.appendChild(document.createTextNode(parametroconta.getnumero_nivel().toString().trim()));
		element.appendChild(elementnumero_nivel);

		Element elementes_presupuesto = document.createElement(ParametroContaConstantesFunciones.ESPRESUPUESTO);
		elementes_presupuesto.appendChild(document.createTextNode(parametroconta.getes_presupuesto().toString().trim()));
		element.appendChild(elementes_presupuesto);

		Element elementes_lote = document.createElement(ParametroContaConstantesFunciones.ESLOTE);
		elementes_lote.appendChild(document.createTextNode(parametroconta.getes_lote().toString().trim()));
		element.appendChild(elementes_lote);

		Element elementcon_secuencial_automatico = document.createElement(ParametroContaConstantesFunciones.CONSECUENCIALAUTOMATICO);
		elementcon_secuencial_automatico.appendChild(document.createTextNode(parametroconta.getcon_secuencial_automatico().toString().trim()));
		element.appendChild(elementcon_secuencial_automatico);

		Element elementcon_cuentas_niff = document.createElement(ParametroContaConstantesFunciones.CONCUENTASNIFF);
		elementcon_cuentas_niff.appendChild(document.createTextNode(parametroconta.getcon_cuentas_niff().toString().trim()));
		element.appendChild(elementcon_cuentas_niff);

		Element elementcon_centro_costo_mascara = document.createElement(ParametroContaConstantesFunciones.CONCENTROCOSTOMASCARA);
		elementcon_centro_costo_mascara.appendChild(document.createTextNode(parametroconta.getcon_centro_costo_mascara().toString().trim()));
		element.appendChild(elementcon_centro_costo_mascara);

		Element elementcon_centro_costo_nueva_estructura = document.createElement(ParametroContaConstantesFunciones.CONCENTROCOSTONUEVAESTRUCTURA);
		elementcon_centro_costo_nueva_estructura.appendChild(document.createTextNode(parametroconta.getcon_centro_costo_nueva_estructura().toString().trim()));
		element.appendChild(elementcon_centro_costo_nueva_estructura);

		Element elementcentro_costo_numero_nivel = document.createElement(ParametroContaConstantesFunciones.CENTROCOSTONUMERONIVEL);
		elementcentro_costo_numero_nivel.appendChild(document.createTextNode(parametroconta.getcentro_costo_numero_nivel().toString().trim()));
		element.appendChild(elementcentro_costo_numero_nivel);

		Element elementcuentacontableactivo_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEACTIVO);
		elementcuentacontableactivo_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableactivo_descripcion()));
		element.appendChild(elementcuentacontableactivo_descripcion);

		Element elementcuentacontablepasivo_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEPASIVO);
		elementcuentacontablepasivo_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontablepasivo_descripcion()));
		element.appendChild(elementcuentacontablepasivo_descripcion);

		Element elementcuentacontablepatrimonio_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEPATRIMONIO);
		elementcuentacontablepatrimonio_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontablepatrimonio_descripcion()));
		element.appendChild(elementcuentacontablepatrimonio_descripcion);

		Element elementcuentacontableingreso_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEINGRESO);
		elementcuentacontableingreso_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableingreso_descripcion()));
		element.appendChild(elementcuentacontableingreso_descripcion);

		Element elementcuentacontableegreso_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEEGRESO);
		elementcuentacontableegreso_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableegreso_descripcion()));
		element.appendChild(elementcuentacontableegreso_descripcion);

		Element elementcuentacontableresumen_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLERESUMEN);
		elementcuentacontableresumen_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableresumen_descripcion()));
		element.appendChild(elementcuentacontableresumen_descripcion);

		Element elementcuentacontabledeudor_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEDEUDOR);
		elementcuentacontabledeudor_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontabledeudor_descripcion()));
		element.appendChild(elementcuentacontabledeudor_descripcion);

		Element elementcuentacontableacreedor_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEACREEDOR);
		elementcuentacontableacreedor_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableacreedor_descripcion()));
		element.appendChild(elementcuentacontableacreedor_descripcion);

		Element elementcuentacontableingreso1_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEINGRESO1);
		elementcuentacontableingreso1_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableingreso1_descripcion()));
		element.appendChild(elementcuentacontableingreso1_descripcion);

		Element elementcuentacontableingreso2_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEINGRESO2);
		elementcuentacontableingreso2_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableingreso2_descripcion()));
		element.appendChild(elementcuentacontableingreso2_descripcion);

		Element elementcuentacontableingreso3_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEINGRESO3);
		elementcuentacontableingreso3_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableingreso3_descripcion()));
		element.appendChild(elementcuentacontableingreso3_descripcion);

		Element elementcuentacontableegreso1_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEEGRESO1);
		elementcuentacontableegreso1_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableegreso1_descripcion()));
		element.appendChild(elementcuentacontableegreso1_descripcion);

		Element elementcuentacontableegreso2_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEEGRESO2);
		elementcuentacontableegreso2_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableegreso2_descripcion()));
		element.appendChild(elementcuentacontableegreso2_descripcion);

		Element elementcuentacontableegreso3_descripcion = document.createElement(ParametroContaConstantesFunciones.IDCUENTACONTABLEEGRESO3);
		elementcuentacontableegreso3_descripcion.appendChild(document.createTextNode(parametroconta.getcuentacontableegreso3_descripcion()));
		element.appendChild(elementcuentacontableegreso3_descripcion);
	}
	
	public void generarReporteGroupGenericoParametroContasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ParametroConta> parametrocontasSeleccionados=new ArrayList<ParametroConta>();
		
		parametrocontasSeleccionados=this.getParametroContasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoParametroConta(parametrocontasSeleccionados);
		
		this.generarReporteParametroContas("Todos",parametrocontasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoParametroConta(ArrayList<ParametroConta> parametrocontasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ParametroConta parametrocontaAux:parametrocontasSeleccionados) {
				parametrocontaAux.setsDetalleGeneralEntityReporte(parametrocontaAux.toString());
			
				if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDMONEDAEXTRANJERA)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getmonedaextranjera_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONMASCARA)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrocontaAux.getcon_mascara()));
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_NUMERONIVEL)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getnumero_nivel().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_ESPRESUPUESTO)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrocontaAux.getes_presupuesto()));
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_ESLOTE)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrocontaAux.getes_lote()));
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONSECUENCIALAUTOMATICO)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrocontaAux.getcon_secuencial_automatico()));
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONCUENTASNIFF)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrocontaAux.getcon_cuentas_niff()));
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTOMASCARA)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrocontaAux.getcon_centro_costo_mascara()));
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CONCENTROCOSTONUEVAESTRUCTURA)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrocontaAux.getcon_centro_costo_nueva_estructura()));
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_CENTROCOSTONUMERONIVEL)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcentro_costo_numero_nivel().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACTIVO)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableactivo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPASIVO)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontablepasivo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEPATRIMONIO)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontablepatrimonio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableingreso_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableegreso_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLERESUMEN)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableresumen_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEDEUDOR)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontabledeudor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEACREEDOR)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableacreedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO1)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableingreso1_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO2)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableingreso2_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESO3)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableingreso3_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO1)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableegreso1_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO2)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableegreso2_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroContaConstantesFunciones.LABEL_IDCUENTACONTABLEEGRESO3)) {
					existe=true;
					parametrocontaAux.setsDescripcionGeneralEntityReporte1(parametrocontaAux.getcuentacontableegreso3_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroContaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesParametroConta(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoParametroConta=true;
				this.isVisibilidadCeldaNuevoRelacionesParametroConta=true;
				this.isVisibilidadCeldaGuardarCambiosParametroConta=true;
			}
			
			this.isVisibilidadCeldaModificarParametroConta=false;
			this.isVisibilidadCeldaActualizarParametroConta=false;
			this.isVisibilidadCeldaEliminarParametroConta=false;
			this.isVisibilidadCeldaCancelarParametroConta=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroConta=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoParametroConta=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=false;
			this.isVisibilidadCeldaGuardarCambiosParametroConta=false;
			this.isVisibilidadCeldaModificarParametroConta=false;
			this.isVisibilidadCeldaActualizarParametroConta=true;
			this.isVisibilidadCeldaEliminarParametroConta=false;
			this.isVisibilidadCeldaCancelarParametroConta=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroConta=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoParametroConta=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=false;
			this.isVisibilidadCeldaGuardarCambiosParametroConta=false;
			this.isVisibilidadCeldaModificarParametroConta=false;
			this.isVisibilidadCeldaActualizarParametroConta=true;
			this.isVisibilidadCeldaEliminarParametroConta=true;
			this.isVisibilidadCeldaCancelarParametroConta=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroConta=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoParametroConta=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=false;
			this.isVisibilidadCeldaGuardarCambiosParametroConta=false;
			this.isVisibilidadCeldaModificarParametroConta=false;
			this.isVisibilidadCeldaActualizarParametroConta=true;
			this.isVisibilidadCeldaEliminarParametroConta=false;
			this.isVisibilidadCeldaCancelarParametroConta=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoParametroConta=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=true;
			this.isVisibilidadCeldaGuardarCambiosParametroConta=true;
			this.isVisibilidadCeldaModificarParametroConta=false;
			this.isVisibilidadCeldaActualizarParametroConta=false;
			this.isVisibilidadCeldaEliminarParametroConta=false;
			this.isVisibilidadCeldaCancelarParametroConta=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroConta=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoParametroConta=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=false;
			this.isVisibilidadCeldaGuardarCambiosParametroConta=false;
			this.isVisibilidadCeldaActualizarParametroConta=false;
			this.isVisibilidadCeldaEliminarParametroConta=false;
			this.isVisibilidadCeldaCancelarParametroConta=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoParametroConta=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=false;
			this.isVisibilidadCeldaGuardarCambiosParametroConta=false;
			this.isVisibilidadCeldaModificarParametroConta=true;
			this.isVisibilidadCeldaActualizarParametroConta=false;
			this.isVisibilidadCeldaEliminarParametroConta=false;
			this.isVisibilidadCeldaCancelarParametroConta=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroConta=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ParametroContaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoParametroConta=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=true;
			this.isVisibilidadCeldaGuardarCambiosParametroConta=true;
		} else {
			this.actualizarEstadoPanelsParametroConta(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarParametroConta=false;
			//this.isVisibilidadCeldaVerFormParametroConta=false;
			this.isVisibilidadCeldaDuplicarParametroConta=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!parametrocontaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=false;
		} else {
			this.isVisibilidadCeldaNuevoParametroConta=false;
			this.isVisibilidadCeldaGuardarCambiosParametroConta=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(parametrocontaSessionBean.getEsGuardarRelacionado()) {
			if(!parametrocontaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesParametroConta=false;												
			}
			
			this.jButtonCerrarParametroConta.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesParametroConta=false;
		}
		
		if(!this.permiteMantenimiento(this.parametroconta)) {
			this.isVisibilidadCeldaActualizarParametroConta=false;
			this.isVisibilidadCeldaEliminarParametroConta=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesParametroConta() {
		this.isVisibilidadCeldaNuevoParametroConta=false;
		this.isVisibilidadCeldaGuardarCambiosParametroConta=false;
	}
	
	public void actualizarEstadoPanelsParametroConta(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionParametroConta!=null) {
				this.jScrollPanelDatosEdicionParametroConta.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroConta!=null) {
				this.jTabbedPaneBusquedasParametroConta.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroConta!=null) {
				this.jScrollPanelDatosParametroConta.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroConta!=null) {
				this.jPanelPaginacionParametroConta.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroConta!=null) {
				this.jPanelParametrosReportesParametroConta.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionParametroConta!=null) {
				this.jScrollPanelDatosEdicionParametroConta.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroConta!=null) {
				this.jTabbedPaneBusquedasParametroConta.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosParametroConta!=null) {
				this.jScrollPanelDatosParametroConta.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroConta!=null) {
				this.jPanelPaginacionParametroConta.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroConta!=null) {
				this.jPanelParametrosReportesParametroConta.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionParametroConta!=null) {
				this.jScrollPanelDatosEdicionParametroConta.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroConta!=null) {
				this.jTabbedPaneBusquedasParametroConta.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroConta!=null) {
				this.jScrollPanelDatosParametroConta.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroConta!=null) {
				this.jPanelPaginacionParametroConta.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroConta!=null) {
				this.jPanelParametrosReportesParametroConta.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionParametroConta!=null) {
				this.jScrollPanelDatosEdicionParametroConta.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroConta!=null) {
				this.jTabbedPaneBusquedasParametroConta.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroConta!=null) {
				this.jScrollPanelDatosParametroConta.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroConta!=null) {
				this.jPanelPaginacionParametroConta.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroConta!=null) {
				this.jPanelParametrosReportesParametroConta.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionParametroConta!=null) {
				this.jScrollPanelDatosEdicionParametroConta.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroConta!=null) {
				this.jTabbedPaneBusquedasParametroConta.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroConta!=null) {
				this.jScrollPanelDatosParametroConta.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroConta!=null) {
				this.jPanelPaginacionParametroConta.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroConta!=null) {
				this.jPanelParametrosReportesParametroConta.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionParametroConta!=null) {
				this.jScrollPanelDatosEdicionParametroConta.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroConta!=null) {
				this.jTabbedPaneBusquedasParametroConta.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroConta!=null) {
				this.jScrollPanelDatosParametroConta.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroConta!=null) {
				this.jPanelPaginacionParametroConta.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroConta!=null) {
				this.jPanelParametrosReportesParametroConta.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionParametroConta!=null) {
				this.jScrollPanelDatosEdicionParametroConta.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroConta!=null) {
				this.jTabbedPaneBusquedasParametroConta.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroConta!=null) {
				this.jScrollPanelDatosParametroConta.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroConta!=null) {
				this.jPanelPaginacionParametroConta.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroConta!=null) {
				this.jPanelParametrosReportesParametroConta.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasParametroConta!=null) {
					this.jTabbedPaneBusquedasParametroConta.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesParametroConta!=null) {
				this.jPanelParametrosReportesParametroConta.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.parametrocontaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroConta!=null) {
				this.jTabbedPaneBusquedasParametroConta.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesParametroConta!=null) {
				this.jPanelParametrosReportesParametroConta.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaMonedaExtranjera(Boolean isParaMonedaExtranjera){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaExtranjeraNegation=!isParaMonedaExtranjera;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaMonedaExtranjeraNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaMonedaExtranjera;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableActivo(Boolean isParaCuentaContableActivo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableActivoNegation=!isParaCuentaContableActivo;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableActivo;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableActivoNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContablePasivo(Boolean isParaCuentaContablePasivo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContablePasivoNegation=!isParaCuentaContablePasivo;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContablePasivo;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContablePasivoNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContablePatrimonio(Boolean isParaCuentaContablePatrimonio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContablePatrimonioNegation=!isParaCuentaContablePatrimonio;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContablePatrimonio;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContablePatrimonioNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIngreso(Boolean isParaCuentaContableIngreso){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIngresoNegation=!isParaCuentaContableIngreso;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableIngreso;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableIngresoNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableEgreso(Boolean isParaCuentaContableEgreso){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableEgresoNegation=!isParaCuentaContableEgreso;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableEgreso;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableEgresoNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableResumen(Boolean isParaCuentaContableResumen){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableResumenNegation=!isParaCuentaContableResumen;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableResumen;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableResumenNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableDeudor(Boolean isParaCuentaContableDeudor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableDeudorNegation=!isParaCuentaContableDeudor;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableDeudor;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableDeudorNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableAcreedor(Boolean isParaCuentaContableAcreedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableAcreedorNegation=!isParaCuentaContableAcreedor;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableAcreedor;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableAcreedorNegation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIngreso1(Boolean isParaCuentaContableIngreso1){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIngreso1Negation=!isParaCuentaContableIngreso1;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableIngreso1;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableIngreso1Negation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIngreso2(Boolean isParaCuentaContableIngreso2){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIngreso2Negation=!isParaCuentaContableIngreso2;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableIngreso2;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableIngreso2Negation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIngreso3(Boolean isParaCuentaContableIngreso3){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIngreso3Negation=!isParaCuentaContableIngreso3;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableIngreso3;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableIngreso3Negation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableEgreso1(Boolean isParaCuentaContableEgreso1){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableEgreso1Negation=!isParaCuentaContableEgreso1;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableEgreso1;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableEgreso1Negation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableEgreso2(Boolean isParaCuentaContableEgreso2){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableEgreso2Negation=!isParaCuentaContableEgreso2;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableEgreso2;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableEgreso2Negation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableEgreso3(Boolean isParaCuentaContableEgreso3){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableEgreso3Negation=!isParaCuentaContableEgreso3;

			this.isVisibilidadFK_IdCuentaContableAcreedor=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableAcreedor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableAcreedorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableActivo=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableActivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableActivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableDeudor=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableDeudor) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableDeudorParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso1=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso2=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableEgreso3=isParaCuentaContableEgreso3;
			if(!this.isVisibilidadFK_IdCuentaContableEgreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableEgreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngresoParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso1=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso1) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso1ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso2=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso2) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso2ParametroConta);}

			this.isVisibilidadFK_IdCuentaContableIngreso3=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableIngreso3) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableIngreso3ParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePasivo=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePasivo) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePasivoParametroConta);}

			this.isVisibilidadFK_IdCuentaContablePatrimonio=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContablePatrimonio) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContablePatrimonioParametroConta);}

			this.isVisibilidadFK_IdCuentaContableResumen=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdCuentaContableResumen) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdCuentaContableResumenParametroConta);}

			this.isVisibilidadFK_IdMonedaExtranjera=isParaCuentaContableEgreso3Negation;
			if(!this.isVisibilidadFK_IdMonedaExtranjera) {this.jTabbedPaneBusquedasParametroConta.remove(jPanelFK_IdMonedaExtranjeraParametroConta);}
		}
		
	}
	
	

	public String registrarSesionParametroContaParaParametroContaDetalles() throws Exception {
		Boolean isPaginaPopupParametroContaDetalle=false;

		try {

			if(this.parametrocontaSessionBean==null) {
				this.parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleSessionBean==null) {
				this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleSessionBean=new ParametroContaDetalleSessionBean();
			}

			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleSessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ParametroContaDetalleConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupParametroContaDetalle=this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeParametroContaDetalle(true);
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeParametroContaDetalle(ParametroContaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			this.jInternalFrameDetalleFormParametroConta.parametrocontadetalleSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionParametroContaParaBusquedaCuentaContableActivos() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableactivoSessionBean==null) {
				cuentacontableactivoSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableactivoSessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableactivoSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableactivoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableactivoSessionBean.getisPaginaPopup();
			cuentacontableactivoSessionBean.setisPaginaPopup(false);
			cuentacontableactivoSessionBean.setEstaModoBusqueda(true);
			cuentacontableactivoSessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_activo(TO_REPLACE);");
			cuentacontableactivoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableactivoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContablePasivos() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontablepasivoSessionBean==null) {
				cuentacontablepasivoSessionBean=new CuentaContableSessionBean();
			}

			cuentacontablepasivoSessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontablepasivoSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontablepasivoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontablepasivoSessionBean.getisPaginaPopup();
			cuentacontablepasivoSessionBean.setisPaginaPopup(false);
			cuentacontablepasivoSessionBean.setEstaModoBusqueda(true);
			cuentacontablepasivoSessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_pasivo(TO_REPLACE);");
			cuentacontablepasivoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontablepasivoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContablePatrimonios() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontablepatrimonioSessionBean==null) {
				cuentacontablepatrimonioSessionBean=new CuentaContableSessionBean();
			}

			cuentacontablepatrimonioSessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontablepatrimonioSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontablepatrimonioSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontablepatrimonioSessionBean.getisPaginaPopup();
			cuentacontablepatrimonioSessionBean.setisPaginaPopup(false);
			cuentacontablepatrimonioSessionBean.setEstaModoBusqueda(true);
			cuentacontablepatrimonioSessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_patrimonio(TO_REPLACE);");
			cuentacontablepatrimonioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontablepatrimonioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableIngresos() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableingresoSessionBean==null) {
				cuentacontableingresoSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableingresoSessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableingresoSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableingresoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableingresoSessionBean.getisPaginaPopup();
			cuentacontableingresoSessionBean.setisPaginaPopup(false);
			cuentacontableingresoSessionBean.setEstaModoBusqueda(true);
			cuentacontableingresoSessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso(TO_REPLACE);");
			cuentacontableingresoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableingresoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableEgresos() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableegresoSessionBean==null) {
				cuentacontableegresoSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableegresoSessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableegresoSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableegresoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableegresoSessionBean.getisPaginaPopup();
			cuentacontableegresoSessionBean.setisPaginaPopup(false);
			cuentacontableegresoSessionBean.setEstaModoBusqueda(true);
			cuentacontableegresoSessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso(TO_REPLACE);");
			cuentacontableegresoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableegresoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableResumens() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableresumenSessionBean==null) {
				cuentacontableresumenSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableresumenSessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableresumenSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableresumenSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableresumenSessionBean.getisPaginaPopup();
			cuentacontableresumenSessionBean.setisPaginaPopup(false);
			cuentacontableresumenSessionBean.setEstaModoBusqueda(true);
			cuentacontableresumenSessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_resumen(TO_REPLACE);");
			cuentacontableresumenSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableresumenSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableDeudors() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontabledeudorSessionBean==null) {
				cuentacontabledeudorSessionBean=new CuentaContableSessionBean();
			}

			cuentacontabledeudorSessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontabledeudorSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontabledeudorSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontabledeudorSessionBean.getisPaginaPopup();
			cuentacontabledeudorSessionBean.setisPaginaPopup(false);
			cuentacontabledeudorSessionBean.setEstaModoBusqueda(true);
			cuentacontabledeudorSessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_deudor(TO_REPLACE);");
			cuentacontabledeudorSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontabledeudorSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableAcreedors() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableacreedorSessionBean==null) {
				cuentacontableacreedorSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableacreedorSessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableacreedorSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableacreedorSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableacreedorSessionBean.getisPaginaPopup();
			cuentacontableacreedorSessionBean.setisPaginaPopup(false);
			cuentacontableacreedorSessionBean.setEstaModoBusqueda(true);
			cuentacontableacreedorSessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_acreedor(TO_REPLACE);");
			cuentacontableacreedorSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableacreedorSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableIngreso1s() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableingreso1SessionBean==null) {
				cuentacontableingreso1SessionBean=new CuentaContableSessionBean();
			}

			cuentacontableingreso1SessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableingreso1SessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableingreso1SessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableingreso1SessionBean.getisPaginaPopup();
			cuentacontableingreso1SessionBean.setisPaginaPopup(false);
			cuentacontableingreso1SessionBean.setEstaModoBusqueda(true);
			cuentacontableingreso1SessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso1(TO_REPLACE);");
			cuentacontableingreso1SessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableingreso1SessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableIngreso2s() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableingreso2SessionBean==null) {
				cuentacontableingreso2SessionBean=new CuentaContableSessionBean();
			}

			cuentacontableingreso2SessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableingreso2SessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableingreso2SessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableingreso2SessionBean.getisPaginaPopup();
			cuentacontableingreso2SessionBean.setisPaginaPopup(false);
			cuentacontableingreso2SessionBean.setEstaModoBusqueda(true);
			cuentacontableingreso2SessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso2(TO_REPLACE);");
			cuentacontableingreso2SessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableingreso2SessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableIngreso3s() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableingreso3SessionBean==null) {
				cuentacontableingreso3SessionBean=new CuentaContableSessionBean();
			}

			cuentacontableingreso3SessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableingreso3SessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableingreso3SessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableingreso3SessionBean.getisPaginaPopup();
			cuentacontableingreso3SessionBean.setisPaginaPopup(false);
			cuentacontableingreso3SessionBean.setEstaModoBusqueda(true);
			cuentacontableingreso3SessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_ingreso3(TO_REPLACE);");
			cuentacontableingreso3SessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableingreso3SessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableEgreso1s() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableegreso1SessionBean==null) {
				cuentacontableegreso1SessionBean=new CuentaContableSessionBean();
			}

			cuentacontableegreso1SessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableegreso1SessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableegreso1SessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableegreso1SessionBean.getisPaginaPopup();
			cuentacontableegreso1SessionBean.setisPaginaPopup(false);
			cuentacontableegreso1SessionBean.setEstaModoBusqueda(true);
			cuentacontableegreso1SessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso1(TO_REPLACE);");
			cuentacontableegreso1SessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableegreso1SessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableEgreso2s() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableegreso2SessionBean==null) {
				cuentacontableegreso2SessionBean=new CuentaContableSessionBean();
			}

			cuentacontableegreso2SessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableegreso2SessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableegreso2SessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableegreso2SessionBean.getisPaginaPopup();
			cuentacontableegreso2SessionBean.setisPaginaPopup(false);
			cuentacontableegreso2SessionBean.setEstaModoBusqueda(true);
			cuentacontableegreso2SessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso2(TO_REPLACE);");
			cuentacontableegreso2SessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableegreso2SessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroContaParaBusquedaCuentaContableEgreso3s() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrocontaSessionBean==null) {
				parametrocontaSessionBean=new ParametroContaSessionBean();
			}

			if(cuentacontableegreso3SessionBean==null) {
				cuentacontableegreso3SessionBean=new CuentaContableSessionBean();
			}

			cuentacontableegreso3SessionBean.setsPathNavegacionActual(parametrocontaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableegreso3SessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableegreso3SessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableegreso3SessionBean.getisPaginaPopup();
			cuentacontableegreso3SessionBean.setisPaginaPopup(false);
			cuentacontableegreso3SessionBean.setEstaModoBusqueda(true);
			cuentacontableegreso3SessionBean.setsFuncionBusquedaRapida("window.opener.parametrocontaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_egreso3(TO_REPLACE);");
			cuentacontableegreso3SessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableegreso3SessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroContaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroConta(true);
			//cuentacontableSessionBean.setlidParametroContaActual(this.idParametroContaActual);

			parametrocontaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroConta(true);
			parametrocontaSessionBean.setlIdParametroContaActualForeignKey(this.idParametroContaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ParametroContaSessionBean parametrocontaSessionBean=new ParametroContaSessionBean();
		
		if(this.parametrocontaSessionBean==null) {
			this.parametrocontaSessionBean=new ParametroContaSessionBean();
		}
		
		this.parametrocontaSessionBean.setsUltimaBusquedaParametroConta(this.getsAccionBusqueda());
		this.parametrocontaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.parametrocontaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableAcreedor")) {
			parametrocontaSessionBean.setid_cuenta_contable_acreedor(this.getid_cuenta_contable_acreedorFK_IdCuentaContableAcreedor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableActivo")) {
			parametrocontaSessionBean.setid_cuenta_contable_activo(this.getid_cuenta_contable_activoFK_IdCuentaContableActivo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableDeudor")) {
			parametrocontaSessionBean.setid_cuenta_contable_deudor(this.getid_cuenta_contable_deudorFK_IdCuentaContableDeudor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEgreso")) {
			parametrocontaSessionBean.setid_cuenta_contable_egreso(this.getid_cuenta_contable_egresoFK_IdCuentaContableEgreso());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEgreso1")) {
			parametrocontaSessionBean.setid_cuenta_contable_egreso1(this.getid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEgreso2")) {
			parametrocontaSessionBean.setid_cuenta_contable_egreso2(this.getid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEgreso3")) {
			parametrocontaSessionBean.setid_cuenta_contable_egreso3(this.getid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngreso")) {
			parametrocontaSessionBean.setid_cuenta_contable_ingreso(this.getid_cuenta_contable_ingresoFK_IdCuentaContableIngreso());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngreso1")) {
			parametrocontaSessionBean.setid_cuenta_contable_ingreso1(this.getid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngreso2")) {
			parametrocontaSessionBean.setid_cuenta_contable_ingreso2(this.getid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngreso3")) {
			parametrocontaSessionBean.setid_cuenta_contable_ingreso3(this.getid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContablePasivo")) {
			parametrocontaSessionBean.setid_cuenta_contable_pasivo(this.getid_cuenta_contable_pasivoFK_IdCuentaContablePasivo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContablePatrimonio")) {
			parametrocontaSessionBean.setid_cuenta_contable_patrimonio(this.getid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableResumen")) {
			parametrocontaSessionBean.setid_cuenta_contable_resumen(this.getid_cuenta_contable_resumenFK_IdCuentaContableResumen());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			parametrocontaSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			parametrocontaSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMonedaExtranjera")) {
			parametrocontaSessionBean.setid_moneda_extranjera(this.getid_moneda_extranjeraFK_IdMonedaExtranjera());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ParametroContaSessionBean parametrocontaSessionBean=new ParametroContaSessionBean();
		
		if(this.parametrocontaSessionBean==null) {
			this.parametrocontaSessionBean=new ParametroContaSessionBean();
		}
		
		if(this.parametrocontaSessionBean.getsUltimaBusquedaParametroConta()!=null&&!this.parametrocontaSessionBean.getsUltimaBusquedaParametroConta().equals("")) {
			this.setsAccionBusqueda(parametrocontaSessionBean.getsUltimaBusquedaParametroConta());
			this.setiNumeroPaginacion(parametrocontaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(parametrocontaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableAcreedor")) {
				this.setid_cuenta_contable_acreedorFK_IdCuentaContableAcreedor(parametrocontaSessionBean.getid_cuenta_contable_acreedor());
				parametrocontaSessionBean.setid_cuenta_contable_acreedor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableActivo")) {
				this.setid_cuenta_contable_activoFK_IdCuentaContableActivo(parametrocontaSessionBean.getid_cuenta_contable_activo());
				parametrocontaSessionBean.setid_cuenta_contable_activo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableDeudor")) {
				this.setid_cuenta_contable_deudorFK_IdCuentaContableDeudor(parametrocontaSessionBean.getid_cuenta_contable_deudor());
				parametrocontaSessionBean.setid_cuenta_contable_deudor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEgreso")) {
				this.setid_cuenta_contable_egresoFK_IdCuentaContableEgreso(parametrocontaSessionBean.getid_cuenta_contable_egreso());
				parametrocontaSessionBean.setid_cuenta_contable_egreso(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEgreso1")) {
				this.setid_cuenta_contable_egreso1FK_IdCuentaContableEgreso1(parametrocontaSessionBean.getid_cuenta_contable_egreso1());
				parametrocontaSessionBean.setid_cuenta_contable_egreso1(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEgreso2")) {
				this.setid_cuenta_contable_egreso2FK_IdCuentaContableEgreso2(parametrocontaSessionBean.getid_cuenta_contable_egreso2());
				parametrocontaSessionBean.setid_cuenta_contable_egreso2(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEgreso3")) {
				this.setid_cuenta_contable_egreso3FK_IdCuentaContableEgreso3(parametrocontaSessionBean.getid_cuenta_contable_egreso3());
				parametrocontaSessionBean.setid_cuenta_contable_egreso3(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngreso")) {
				this.setid_cuenta_contable_ingresoFK_IdCuentaContableIngreso(parametrocontaSessionBean.getid_cuenta_contable_ingreso());
				parametrocontaSessionBean.setid_cuenta_contable_ingreso(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngreso1")) {
				this.setid_cuenta_contable_ingreso1FK_IdCuentaContableIngreso1(parametrocontaSessionBean.getid_cuenta_contable_ingreso1());
				parametrocontaSessionBean.setid_cuenta_contable_ingreso1(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngreso2")) {
				this.setid_cuenta_contable_ingreso2FK_IdCuentaContableIngreso2(parametrocontaSessionBean.getid_cuenta_contable_ingreso2());
				parametrocontaSessionBean.setid_cuenta_contable_ingreso2(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngreso3")) {
				this.setid_cuenta_contable_ingreso3FK_IdCuentaContableIngreso3(parametrocontaSessionBean.getid_cuenta_contable_ingreso3());
				parametrocontaSessionBean.setid_cuenta_contable_ingreso3(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContablePasivo")) {
				this.setid_cuenta_contable_pasivoFK_IdCuentaContablePasivo(parametrocontaSessionBean.getid_cuenta_contable_pasivo());
				parametrocontaSessionBean.setid_cuenta_contable_pasivo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContablePatrimonio")) {
				this.setid_cuenta_contable_patrimonioFK_IdCuentaContablePatrimonio(parametrocontaSessionBean.getid_cuenta_contable_patrimonio());
				parametrocontaSessionBean.setid_cuenta_contable_patrimonio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableResumen")) {
				this.setid_cuenta_contable_resumenFK_IdCuentaContableResumen(parametrocontaSessionBean.getid_cuenta_contable_resumen());
				parametrocontaSessionBean.setid_cuenta_contable_resumen(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(parametrocontaSessionBean.getid_empresa());
				parametrocontaSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(parametrocontaSessionBean.getid_moneda());
				parametrocontaSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMonedaExtranjera")) {
				this.setid_moneda_extranjeraFK_IdMonedaExtranjera(parametrocontaSessionBean.getid_moneda_extranjera());
				parametrocontaSessionBean.setid_moneda_extranjera(-1L);
			}
		}
		
		this.parametrocontaSessionBean.setsUltimaBusquedaParametroConta("");
		this.parametrocontaSessionBean.setiNumeroPaginacion(ParametroContaConstantesFunciones.INUMEROPAGINACION);
		this.parametrocontaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaParametroConta(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioParametroConta() {
		this.updateBorderResaltarBusquedasFormularioParametroConta();
		this.updateVisibilidadBusquedasFormularioParametroConta();
		this.updateHabilitarBusquedasFormularioParametroConta();
	}
	
	public void updateBorderResaltarBusquedasFormularioParametroConta() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasParametroConta.getComponents().length>0) {
	

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableAcreedorParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableAcreedorParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableAcreedorParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableActivoParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableActivoParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableActivoParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableDeudorParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableDeudorParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableDeudorParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgresoParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgresoParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgresoParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgreso1ParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso1ParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgreso1ParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgreso2ParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso2ParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgreso2ParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgreso3ParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso3ParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgreso3ParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngresoParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngresoParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngreso1ParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso1ParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngreso1ParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngreso2ParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso2ParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngreso2ParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngreso3ParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso3ParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngreso3ParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContablePasivoParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContablePasivoParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContablePasivoParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContablePatrimonioParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContablePatrimonioParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContablePatrimonioParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableResumenParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableResumenParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableResumenParametroConta);
			}
		}

		if(this.parametrocontaConstantesFunciones.resaltarFK_IdMonedaExtranjeraParametroConta!=null) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdMonedaExtranjeraParametroConta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdMonedaExtranjeraParametroConta);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioParametroConta() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasParametroConta.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableAcreedorParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableAcreedorParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableAcreedorParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableActivoParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableActivoParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableActivoParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableDeudorParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableDeudorParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableDeudorParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgresoParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableEgresoParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableEgresoParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso1ParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableEgreso1ParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableEgreso1ParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso2ParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableEgreso2ParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableEgreso2ParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso3ParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableEgreso3ParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableEgreso3ParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableIngresoParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableIngresoParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso1ParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableIngreso1ParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableIngreso1ParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso2ParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableIngreso2ParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableIngreso2ParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso3ParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableIngreso3ParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableIngreso3ParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContablePasivoParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContablePasivoParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContablePasivoParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContablePatrimonioParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContablePatrimonioParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContablePatrimonioParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableResumenParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableResumenParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdCuentaContableResumenParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdMonedaExtranjeraParametroConta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocontaConstantesFunciones.mostrarFK_IdMonedaExtranjeraParametroConta);
			if(!this.parametrocontaConstantesFunciones.mostrarFK_IdMonedaExtranjeraParametroConta && index>-1) {
				this.jTabbedPaneBusquedasParametroConta.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioParametroConta() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasParametroConta.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableAcreedorParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableAcreedorParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableAcreedorParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableActivoParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableActivoParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableActivoParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableDeudorParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableDeudorParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableDeudorParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgresoParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableEgresoParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableEgresoParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso1ParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableEgreso1ParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableEgreso1ParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso2ParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableEgreso2ParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableEgreso2ParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso3ParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableEgreso3ParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableEgreso3ParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableIngresoParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableIngresoParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso1ParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableIngreso1ParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableIngreso1ParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso2ParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableIngreso2ParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableIngreso2ParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso3ParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableIngreso3ParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableIngreso3ParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContablePasivoParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContablePasivoParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContablePasivoParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContablePatrimonioParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContablePatrimonioParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContablePatrimonioParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableResumenParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableResumenParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdCuentaContableResumenParametroConta);
			}

			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdMonedaExtranjeraParametroConta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocontaConstantesFunciones.activarFK_IdMonedaExtranjeraParametroConta);
				this.jTabbedPaneBusquedasParametroConta.setEnabledAt(index,this.parametrocontaConstantesFunciones.activarFK_IdMonedaExtranjeraParametroConta);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaParametroConta(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCuentaContableAcreedor")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableAcreedorParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableAcreedorParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableAcreedorParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableActivo")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableActivoParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableActivoParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableActivoParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableDeudor")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableDeudorParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableDeudorParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableDeudorParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableEgreso")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgresoParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableEgresoParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgresoParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableEgreso1")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso1ParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableEgreso1ParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgreso1ParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableEgreso2")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso2ParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableEgreso2ParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgreso2ParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableEgreso3")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableEgreso3ParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableEgreso3ParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableEgreso3ParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableIngreso")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableIngresoParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngresoParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableIngreso1")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso1ParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableIngreso1ParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngreso1ParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableIngreso2")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso2ParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableIngreso2ParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngreso2ParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableIngreso3")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableIngreso3ParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableIngreso3ParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableIngreso3ParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContablePasivo")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContablePasivoParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContablePasivoParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContablePasivoParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContablePatrimonio")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContablePatrimonioParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContablePatrimonioParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContablePatrimonioParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableResumen")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdCuentaContableResumenParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdCuentaContableResumenParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdCuentaContableResumenParametroConta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdMonedaExtranjera")) {
			index= this.jTabbedPaneBusquedasParametroConta.indexOfComponent(this.jPanelFK_IdMonedaExtranjeraParametroConta);

			this.jTabbedPaneBusquedasParametroConta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroConta.getComponent(index);

			this.parametrocontaConstantesFunciones.setResaltarFK_IdMonedaExtranjeraParametroConta(resaltar);

			jPanel.setBorder(this.parametrocontaConstantesFunciones.resaltarFK_IdMonedaExtranjeraParametroConta);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarParametroConta.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioParametroConta() throws Exception {

		if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioParametroConta();
		this.updateVisibilidadResaltarControlesFormularioParametroConta();
		this.updateHabilitarResaltarControlesFormularioParametroConta();
		
	}
	
	public void updateBorderResaltarControlesFormularioParametroConta() throws Exception {
		if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.parametrocontaConstantesFunciones.resaltaridParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltaridParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_empresaParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_empresaParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_monedaParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_monedaParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_moneda_extranjeraParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_moneda_extranjeraParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarcon_mascaraParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_mascaraParametroConta.setBorderPainted(true);this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_mascaraParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarcon_mascaraParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarnumero_nivelParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jTextFieldnumero_nivelParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarnumero_nivelParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltares_presupuestoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_presupuestoParametroConta.setBorderPainted(true);this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_presupuestoParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltares_presupuestoParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltares_loteParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_loteParametroConta.setBorderPainted(true);this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_loteParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltares_loteParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarcon_secuencial_automaticoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_secuencial_automaticoParametroConta.setBorderPainted(true);this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_secuencial_automaticoParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarcon_secuencial_automaticoParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarcon_cuentas_niffParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_cuentas_niffParametroConta.setBorderPainted(true);this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_cuentas_niffParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarcon_cuentas_niffParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarcon_centro_costo_mascaraParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_mascaraParametroConta.setBorderPainted(true);this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_mascaraParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarcon_centro_costo_mascaraParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarcon_centro_costo_nueva_estructuraParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_nueva_estructuraParametroConta.setBorderPainted(true);this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_nueva_estructuraParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarcon_centro_costo_nueva_estructuraParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarcentro_costo_numero_nivelParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jTextFieldcentro_costo_numero_nivelParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarcentro_costo_numero_nivelParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_activoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_activoParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_pasivoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_pasivoParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_patrimonioParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_patrimonioParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingresoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingresoParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egresoParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egresoParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_resumenParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_resumenParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_deudorParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_deudorParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_acreedorParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_acreedorParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso1ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso1ParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso2ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso2ParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso3ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_ingreso3ParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso1ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso1ParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso2ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso2ParametroConta);}
		if(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso3ParametroConta!=null && this.jInternalFrameDetalleFormParametroConta!=null) {this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.setBorder(this.parametrocontaConstantesFunciones.resaltarid_cuenta_contable_egreso3ParametroConta);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioParametroConta() throws Exception {		
		if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) {
	
		//this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostraridParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelidParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostraridParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_empresaParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_empresaParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_empresaParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_monedaParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_monedaParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_monedaParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_moneda_extranjeraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_moneda_extranjeraParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_moneda_extranjeraParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_mascaraParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_mascaraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelcon_mascaraParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_mascaraParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jTextFieldnumero_nivelParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarnumero_nivelParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelnumero_nivelParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarnumero_nivelParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_presupuestoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrares_presupuestoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPaneles_presupuestoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrares_presupuestoParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_loteParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrares_loteParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPaneles_loteParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrares_loteParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_secuencial_automaticoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_secuencial_automaticoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelcon_secuencial_automaticoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_secuencial_automaticoParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_cuentas_niffParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_cuentas_niffParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelcon_cuentas_niffParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_cuentas_niffParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_mascaraParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_centro_costo_mascaraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelcon_centro_costo_mascaraParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_centro_costo_mascaraParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_nueva_estructuraParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_centro_costo_nueva_estructuraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelcon_centro_costo_nueva_estructuraParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcon_centro_costo_nueva_estructuraParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jTextFieldcentro_costo_numero_nivelParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcentro_costo_numero_nivelParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelcentro_costo_numero_nivelParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarcentro_costo_numero_nivelParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_activoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_activoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_activoParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_activoParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_pasivoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_pasivoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_pasivoParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_pasivoParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_patrimonioParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_patrimonioParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_patrimonioParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_patrimonioParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingresoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_ingresoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingresoParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingresoParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egresoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_egresoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egresoParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egresoParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_resumenParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_resumenParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_resumenParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_resumenParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_deudorParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_deudorParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_deudorParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_deudorParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_acreedorParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_acreedorParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_acreedorParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_acreedorParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso1ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_ingreso1ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso1ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso1ParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso2ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_ingreso2ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso2ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso2ParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso3ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_ingreso3ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso3ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_ingreso3ParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso1ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_egreso1ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso1ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso1ParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso2ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_egreso2ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso2ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso2ParametroConta);
		//this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso3ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jPanelid_cuenta_contable_egreso3ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso3ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroConta.setVisible(this.parametrocontaConstantesFunciones.mostrarid_cuenta_contable_egreso3ParametroConta);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioParametroConta() throws Exception {
		if(this.jInternalFrameDetalleFormParametroConta==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroConta!=null) {
	
		this.jInternalFrameDetalleFormParametroConta.jLabelidParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activaridParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_empresaParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_empresaParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_monedaParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_monedaParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_moneda_extranjeraParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_moneda_extranjeraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_mascaraParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarcon_mascaraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jTextFieldnumero_nivelParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarnumero_nivelParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_presupuestoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activares_presupuestoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxes_loteParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activares_loteParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_secuencial_automaticoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarcon_secuencial_automaticoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_cuentas_niffParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarcon_cuentas_niffParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_mascaraParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarcon_centro_costo_mascaraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jCheckBoxcon_centro_costo_nueva_estructuraParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarcon_centro_costo_nueva_estructuraParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jTextFieldcentro_costo_numero_nivelParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarcentro_costo_numero_nivelParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_activoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_activoParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_activoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_activoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_pasivoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_pasivoParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_pasivoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_pasivoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_patrimonioParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_patrimonioParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_patrimonioParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_patrimonioParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingresoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingresoParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingresoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingresoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egresoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egresoParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egresoParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egresoParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_resumenParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_resumenParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_resumenParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_resumenParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_deudorParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_deudorParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_deudorParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_deudorParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_acreedorParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_acreedorParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_acreedorParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_acreedorParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso1ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso1ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso1ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso1ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso2ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso2ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso2ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso2ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_ingreso3ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso3ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_ingreso3ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_ingreso3ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso1ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso1ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso1ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso1ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso2ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso2ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso2ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso2ParametroConta);
		this.jInternalFrameDetalleFormParametroConta.jComboBoxid_cuenta_contable_egreso3ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso3ParametroConta);
			this.jInternalFrameDetalleFormParametroConta.jButtonid_cuenta_contable_egreso3ParametroConta.setEnabled(this.parametrocontaConstantesFunciones.activarid_cuenta_contable_egreso3ParametroConta);
		}
	}
	
		
}