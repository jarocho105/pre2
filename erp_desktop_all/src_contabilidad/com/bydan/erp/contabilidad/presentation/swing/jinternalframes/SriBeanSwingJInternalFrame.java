/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.contabilidad.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.contabilidad.util.SriConstantesFunciones;
import com.bydan.erp.contabilidad.util.SriParameterReturnGeneral;
//import com.bydan.erp.contabilidad.util.SriParameterGeneral;
//import com.bydan.erp.contabilidad.presentation.report.source.SriBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.contabilidad.resources.reportes.AuxiliarReportes;


import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.contabilidad.business.logic.*;

import com.bydan.erp.cartera.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.contabilidad.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;

import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class SriBeanSwingJInternalFrame extends SriJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(SriBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<Sri> sriValidator = new ClassValidator<Sri>(Sri.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public Sri sri;	
	public Sri sriAux;
	public Sri sriAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Sri sriTotales;
	public Long idSriActual;
	public Long iIdNuevoSri=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

	public String sFinalQueryComboTransaccionConta="";

	public List<TransaccionConta> transaccioncontasForeignKey;

	public List<TransaccionConta> gettransaccioncontasForeignKey() {
		return transaccioncontasForeignKey;
	}

	public void settransaccioncontasForeignKey(List<TransaccionConta> transaccioncontasForeignKey) {
		this.transaccioncontasForeignKey = transaccioncontasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TransaccionConta transaccioncontaForeignKey;

	public TransaccionConta gettransaccioncontaForeignKey() {
		return transaccioncontaForeignKey;
	}

	public void settransaccioncontaForeignKey(TransaccionConta transaccioncontaForeignKey) {
		this.transaccioncontaForeignKey = transaccioncontaForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboTipoComprobante="";

	public List<TipoComprobante> tipocomprobantesForeignKey;

	public List<TipoComprobante> gettipocomprobantesForeignKey() {
		return tipocomprobantesForeignKey;
	}

	public void settipocomprobantesForeignKey(List<TipoComprobante> tipocomprobantesForeignKey) {
		this.tipocomprobantesForeignKey = tipocomprobantesForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoComprobante tipocomprobanteForeignKey;

	public TipoComprobante gettipocomprobanteForeignKey() {
		return tipocomprobanteForeignKey;
	}

	public void settipocomprobanteForeignKey(TipoComprobante tipocomprobanteForeignKey) {
		this.tipocomprobanteForeignKey = tipocomprobanteForeignKey;
	}

	public String sFinalQueryComboTipoTributario="";

	public List<TipoTributario> tipotributariosForeignKey;

	public List<TipoTributario> gettipotributariosForeignKey() {
		return tipotributariosForeignKey;
	}

	public void settipotributariosForeignKey(List<TipoTributario> tipotributariosForeignKey) {
		this.tipotributariosForeignKey = tipotributariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTributario tipotributarioForeignKey;

	public TipoTributario gettipotributarioForeignKey() {
		return tipotributarioForeignKey;
	}

	public void settipotributarioForeignKey(TipoTributario tipotributarioForeignKey) {
		this.tipotributarioForeignKey = tipotributarioForeignKey;
	}

	public String sFinalQueryComboTipoIva="";

	public List<TipoIva> tipoivasForeignKey;

	public List<TipoIva> gettipoivasForeignKey() {
		return tipoivasForeignKey;
	}

	public void settipoivasForeignKey(List<TipoIva> tipoivasForeignKey) {
		this.tipoivasForeignKey = tipoivasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoIva tipoivaForeignKey;

	public TipoIva gettipoivaForeignKey() {
		return tipoivaForeignKey;
	}

	public void settipoivaForeignKey(TipoIva tipoivaForeignKey) {
		this.tipoivaForeignKey = tipoivaForeignKey;
	}

	public String sFinalQueryComboTipoRetencionIvaBien="";

	public List<TipoRetencionIva> tiporetencionivabiensForeignKey;

	public List<TipoRetencionIva> gettiporetencionivabiensForeignKey() {
		return tiporetencionivabiensForeignKey;
	}

	public void settiporetencionivabiensForeignKey(List<TipoRetencionIva> tiporetencionivabiensForeignKey) {
		this.tiporetencionivabiensForeignKey = tiporetencionivabiensForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRetencionIva tiporetencionivabienForeignKey;

	public TipoRetencionIva gettiporetencionivabienForeignKey() {
		return tiporetencionivabienForeignKey;
	}

	public void settiporetencionivabienForeignKey(TipoRetencionIva tiporetencionivabienForeignKey) {
		this.tiporetencionivabienForeignKey = tiporetencionivabienForeignKey;
	}

	public String sFinalQueryComboTipoRetencionIvaServicio="";

	public List<TipoRetencionIva> tiporetencionivaserviciosForeignKey;

	public List<TipoRetencionIva> gettiporetencionivaserviciosForeignKey() {
		return tiporetencionivaserviciosForeignKey;
	}

	public void settiporetencionivaserviciosForeignKey(List<TipoRetencionIva> tiporetencionivaserviciosForeignKey) {
		this.tiporetencionivaserviciosForeignKey = tiporetencionivaserviciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRetencionIva tiporetencionivaservicioForeignKey;

	public TipoRetencionIva gettiporetencionivaservicioForeignKey() {
		return tiporetencionivaservicioForeignKey;
	}

	public void settiporetencionivaservicioForeignKey(TipoRetencionIva tiporetencionivaservicioForeignKey) {
		this.tiporetencionivaservicioForeignKey = tiporetencionivaservicioForeignKey;
	}

	public String sFinalQueryComboTipoMovimiento="";

	public List<TipoMovimiento> tipomovimientosForeignKey;

	public List<TipoMovimiento> gettipomovimientosForeignKey() {
		return tipomovimientosForeignKey;
	}

	public void settipomovimientosForeignKey(List<TipoMovimiento> tipomovimientosForeignKey) {
		this.tipomovimientosForeignKey = tipomovimientosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoMovimiento tipomovimientoForeignKey;

	public TipoMovimiento gettipomovimientoForeignKey() {
		return tipomovimientoForeignKey;
	}

	public void settipomovimientoForeignKey(TipoMovimiento tipomovimientoForeignKey) {
		this.tipomovimientoForeignKey = tipomovimientoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoSri;
	public Boolean isPermisoNuevoSri;
	public Boolean isPermisoActualizarSri;
	public Boolean isPermisoActualizarOriginalSri;
	public Boolean isPermisoEliminarSri;
	public Boolean isPermisoGuardarCambiosSri;
	public Boolean isPermisoConsultaSri;
	public Boolean isPermisoBusquedaSri;
	public Boolean isPermisoReporteSri;
	public Boolean isPermisoPaginacionMedioSri;
	public Boolean isPermisoPaginacionAltoSri;
	public Boolean isPermisoPaginacionTodoSri;
	public Boolean isPermisoCopiarSri;
	public Boolean isPermisoVerFormSri;
	public Boolean isPermisoDuplicarSri;
	public Boolean isPermisoOrdenSri;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public SriParameterReturnGeneral sriReturnGeneral;
	public SriParameterReturnGeneral sriParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoSri=false;
	public Boolean esParaAccionDesdeFormularioSri=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected SriSessionBeanAdditional sriSessionBeanAdditional=null;
	
	public SriSessionBeanAdditional getSriSessionBeanAdditional() {
		return this.sriSessionBeanAdditional;
	}
	
	public void setSriSessionBeanAdditional(SriSessionBeanAdditional sriSessionBeanAdditional) {
		try {
			this.sriSessionBeanAdditional=sriSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected SriBeanSwingJInternalFrameAdditional sriBeanSwingJInternalFrameAdditional=null;
	//public class SriBeanSwingJInternalFrame
	
	public SriBeanSwingJInternalFrameAdditional getSriBeanSwingJInternalFrameAdditional() {
		return this.sriBeanSwingJInternalFrameAdditional;
	}
	
	public void setSriBeanSwingJInternalFrameAdditional(SriBeanSwingJInternalFrameAdditional sriBeanSwingJInternalFrameAdditional) {
		try {
			this.sriBeanSwingJInternalFrameAdditional=sriBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public SriLogic sriLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public Sri sriBean;
	public SriConstantesFunciones sriConstantesFunciones;
	//public SriParameterReturnGeneral sriReturnGeneral;
	
	//FK
	
	public AsientoContableLogic asientocontableLogic;
	public TransaccionContaLogic transaccioncontaLogic;
	public ClienteLogic clienteLogic;
	public TipoComprobanteLogic tipocomprobanteLogic;
	public TipoTributarioLogic tipotributarioLogic;
	public TipoIvaLogic tipoivaLogic;
	public TipoRetencionIvaLogic tiporetencionivabienLogic;
	public TipoRetencionIvaLogic tiporetencionivaservicioLogic;
	public TipoMovimientoLogic tipomovimientoLogic;
	
	//PARAMETROS
	
	
	//public List<Sri> sris;	
	//public List<Sri> srisEliminados;
	//public List<Sri> srisAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoSri=false;
	public Boolean isVisibilidadCeldaDuplicarSri=true;
	public Boolean isVisibilidadCeldaCopiarSri=true;
	public Boolean isVisibilidadCeldaVerFormSri=true;
	public Boolean isVisibilidadCeldaOrdenSri=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesSri=false;
	public Boolean isVisibilidadCeldaModificarSri=false;
	public Boolean isVisibilidadCeldaActualizarSri=false;
	public Boolean isVisibilidadCeldaEliminarSri=false;
	public Boolean isVisibilidadCeldaCancelarSri=false;
	public Boolean isVisibilidadCeldaGuardarSri=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosSri=false;	
	
	
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdTipoComprobante=false;
	public Boolean isVisibilidadFK_IdTipoIva=false;
	public Boolean isVisibilidadFK_IdTipoMovimiento=false;
	public Boolean isVisibilidadFK_IdTipoRetencionIvaBien=false;
	public Boolean isVisibilidadFK_IdTipoRetencionIvaServicio=false;
	public Boolean isVisibilidadFK_IdTipoTributario=false;
	public Boolean isVisibilidadFK_IdTransaccionConta=false;
	
	public Long getiIdNuevoSri() {
		return this.iIdNuevoSri;
	}

	public void setiIdNuevoSri(Long iIdNuevoSri) {
		this.iIdNuevoSri = iIdNuevoSri;
	}
	
	public Long getidSriActual() {
		return this.idSriActual;
	}

	public void setidSriActual(Long idSriActual) {
		this.idSriActual = idSriActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public Sri getsri() {
		return this.sri;
	}

	public void setsri(Sri sri) {
		this.sri = sri;
	}
	
	public Sri getsriAux() {
		return this.sriAux;
	}

	public void setsriAux(Sri sriAux) {
		this.sriAux = sriAux;
	}				
	
	public Sri getsriAnterior() {
		return this.sriAnterior;
	}

	public void setsriAnterior(Sri sriAnterior) {
		this.sriAnterior = sriAnterior;
	}	
	
	public Sri getsriTotales() {
		return this.sriTotales;
	}

	public void setsriTotales(Sri sriTotales) {
		this.sriTotales = sriTotales;
	}	
	
	public Sri getsriBean() {
		return this.sriBean;
	}

	public void setsriBean(Sri sriBean) {
		this.sriBean = sriBean;
	}	
	
	public SriParameterReturnGeneral getsriReturnGeneral() {
		return this.sriReturnGeneral;
	}

	public void setsriReturnGeneral(SriParameterReturnGeneral sriReturnGeneral) {
		this.sriReturnGeneral = sriReturnGeneral;
	}	
	
	
	public Long id_asiento_contableFK_IdAsientoContable=-1L;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long tipo_comprobanteFK_IdTipoComprobante=-1L;

	public Long gettipo_comprobanteFK_IdTipoComprobante() {
		return this.tipo_comprobanteFK_IdTipoComprobante;
	}

	public void settipo_comprobanteFK_IdTipoComprobante(Long tipo_comprobanteFK_IdTipoComprobante) {
		this.tipo_comprobanteFK_IdTipoComprobante = tipo_comprobanteFK_IdTipoComprobante;
	}

	public Long id_tipo_ivaFK_IdTipoIva=-1L;

	public Long getid_tipo_ivaFK_IdTipoIva() {
		return this.id_tipo_ivaFK_IdTipoIva;
	}

	public void setid_tipo_ivaFK_IdTipoIva(Long id_tipo_ivaFK_IdTipoIva) {
		this.id_tipo_ivaFK_IdTipoIva = id_tipo_ivaFK_IdTipoIva;
	}

	public Long id_tipo_movimientoFK_IdTipoMovimiento=-1L;

	public Long getid_tipo_movimientoFK_IdTipoMovimiento() {
		return this.id_tipo_movimientoFK_IdTipoMovimiento;
	}

	public void setid_tipo_movimientoFK_IdTipoMovimiento(Long id_tipo_movimientoFK_IdTipoMovimiento) {
		this.id_tipo_movimientoFK_IdTipoMovimiento = id_tipo_movimientoFK_IdTipoMovimiento;
	}

	public Long id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien=-1L;

	public Long getid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien() {
		return this.id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien;
	}

	public void setid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien(Long id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien) {
		this.id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien = id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien;
	}

	public Long id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio=-1L;

	public Long getid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio() {
		return this.id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio;
	}

	public void setid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio(Long id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio) {
		this.id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio = id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio;
	}

	public Long tipo_tributarioFK_IdTipoTributario=-1L;

	public Long gettipo_tributarioFK_IdTipoTributario() {
		return this.tipo_tributarioFK_IdTipoTributario;
	}

	public void settipo_tributarioFK_IdTipoTributario(Long tipo_tributarioFK_IdTipoTributario) {
		this.tipo_tributarioFK_IdTipoTributario = tipo_tributarioFK_IdTipoTributario;
	}

	public Long id_transaccion_contaFK_IdTransaccionConta=-1L;

	public Long getid_transaccion_contaFK_IdTransaccionConta() {
		return this.id_transaccion_contaFK_IdTransaccionConta;
	}

	public void setid_transaccion_contaFK_IdTransaccionConta(Long id_transaccion_contaFK_IdTransaccionConta) {
		this.id_transaccion_contaFK_IdTransaccionConta = id_transaccion_contaFK_IdTransaccionConta;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public SriLogic getSriLogic()	{		
		return sriLogic;
	}

	public void setSriLogic(SriLogic sriLogic) {
		this.sriLogic = sriLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoSri() {
		return isEsNuevoSri;
	}

	public void setIsEsNuevoSri(Boolean isEsNuevoSri) {
		this.isEsNuevoSri = isEsNuevoSri;
	}

	public Boolean getEsParaAccionDesdeFormularioSri() {
		return esParaAccionDesdeFormularioSri;
	}
	
	public void setEsParaAccionDesdeFormularioSri(Boolean esParaAccionDesdeFormularioSri) {
		this.esParaAccionDesdeFormularioSri = esParaAccionDesdeFormularioSri;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(sriSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionContasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncontasForeignKey=new ArrayList<TransaccionConta>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionContaLogic transaccioncontaLogic=new TransaccionContaLogic();

			transaccioncontaLogic.getTransaccionContaDataAccess().setIsForForeingKeyData(true);

			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionConta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccioncontaLogic.getTransaccionContaDataAccess().setIsForForeingKeyData(true);

					transaccioncontaLogic.getTodosTransaccionContasWithConnection(sFinalQuery,new Pagination());

					this.transaccioncontasForeignKey=transaccioncontaLogic.getTransaccionContas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionConta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccioncontaLogic.getEntityWithConnection(sriSessionBean.getlidTransaccionContaActual());
					this.transaccioncontasForeignKey.add(transaccioncontaLogic.getTransaccionConta());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(sriSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoComprobantesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocomprobantesForeignKey=new ArrayList<TipoComprobante>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoComprobanteLogic tipocomprobanteLogic=new TipoComprobanteLogic();

			tipocomprobanteLogic.getTipoComprobanteDataAccess().setIsForForeingKeyData(true);

			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoComprobante()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocomprobanteLogic.getTipoComprobanteDataAccess().setIsForForeingKeyData(true);

					tipocomprobanteLogic.getTodosTipoComprobantesWithConnection(sFinalQuery,new Pagination());

					this.tipocomprobantesForeignKey=tipocomprobanteLogic.getTipoComprobantes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoComprobante(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocomprobanteLogic.getEntityWithConnection(sriSessionBean.getlidTipoComprobanteActual());
					this.tipocomprobantesForeignKey.add(tipocomprobanteLogic.getTipoComprobante());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTributariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotributariosForeignKey=new ArrayList<TipoTributario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTributarioLogic tipotributarioLogic=new TipoTributarioLogic();

			tipotributarioLogic.getTipoTributarioDataAccess().setIsForForeingKeyData(true);

			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoTributario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotributarioLogic.getTipoTributarioDataAccess().setIsForForeingKeyData(true);

					tipotributarioLogic.getTodosTipoTributariosWithConnection(sFinalQuery,new Pagination());

					this.tipotributariosForeignKey=tipotributarioLogic.getTipoTributarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTributario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotributarioLogic.getEntityWithConnection(sriSessionBean.getlidTipoTributarioActual());
					this.tipotributariosForeignKey.add(tipotributarioLogic.getTipoTributario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoIvasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoivasForeignKey=new ArrayList<TipoIva>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoIvaLogic tipoivaLogic=new TipoIvaLogic();

			tipoivaLogic.getTipoIvaDataAccess().setIsForForeingKeyData(true);

			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoIva()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoivaLogic.getTipoIvaDataAccess().setIsForForeingKeyData(true);

					tipoivaLogic.getTodosTipoIvasWithConnection(sFinalQuery,new Pagination());

					this.tipoivasForeignKey=tipoivaLogic.getTipoIvas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoIva(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoivaLogic.getEntityWithConnection(sriSessionBean.getlidTipoIvaActual());
					this.tipoivasForeignKey.add(tipoivaLogic.getTipoIva());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRetencionIvaBiensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporetencionivabiensForeignKey=new ArrayList<TipoRetencionIva>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRetencionIvaLogic tiporetencionivaLogic=new TipoRetencionIvaLogic();

			tiporetencionivaLogic.getTipoRetencionIvaDataAccess().setIsForForeingKeyData(true);

			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaBien()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionivabienLogic.getTipoRetencionIvaDataAccess().setIsForForeingKeyData(true);

					tiporetencionivaLogic.getTodosTipoRetencionIvasWithConnection(sFinalQuery,new Pagination());

					this.tiporetencionivabiensForeignKey=tiporetencionivaLogic.getTipoRetencionIvas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRetencionIvaBien(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionivaLogic.getEntityWithConnection(sriSessionBean.getlidTipoRetencionIvaBienActual());
					this.tiporetencionivabiensForeignKey.add(tiporetencionivaLogic.getTipoRetencionIva());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRetencionIvaServiciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporetencionivaserviciosForeignKey=new ArrayList<TipoRetencionIva>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRetencionIvaLogic tiporetencionivaLogic=new TipoRetencionIvaLogic();

			tiporetencionivaLogic.getTipoRetencionIvaDataAccess().setIsForForeingKeyData(true);

			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaServicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionivaservicioLogic.getTipoRetencionIvaDataAccess().setIsForForeingKeyData(true);

					tiporetencionivaLogic.getTodosTipoRetencionIvasWithConnection(sFinalQuery,new Pagination());

					this.tiporetencionivaserviciosForeignKey=tiporetencionivaLogic.getTipoRetencionIvas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRetencionIvaServicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionivaLogic.getEntityWithConnection(sriSessionBean.getlidTipoRetencionIvaServicioActual());
					this.tiporetencionivaserviciosForeignKey.add(tiporetencionivaLogic.getTipoRetencionIva());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoMovimientosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoMovimientoLogic tipomovimientoLogic=new TipoMovimientoLogic();

			tipomovimientoLogic.getTipoMovimientoDataAccess().setIsForForeingKeyData(true);

			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipomovimientoLogic.getTipoMovimientoDataAccess().setIsForForeingKeyData(true);

					tipomovimientoLogic.getTodosTipoMovimientosWithConnection(sFinalQuery,new Pagination());

					this.tipomovimientosForeignKey=tipomovimientoLogic.getTipoMovimientos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoMovimiento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipomovimientoLogic.getEntityWithConnection(sriSessionBean.getlidTipoMovimientoActual());
					this.tipomovimientosForeignKey.add(tipomovimientoLogic.getTipoMovimiento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.sri!=null) {
						this.sri.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormSri!=null) {
						this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contableSri.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormSri!=null) {
						if(this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.getItemCount()>0) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContableSri!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContableSri.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContableSri!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContableSri.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContableSri.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContableSri.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contableSriGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contableSriGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contableSriGenerico!=null && jComboBoxid_asiento_contableSriGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contableSriGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionContaForeignKey(Long idTransaccionContaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TransaccionConta  transaccioncontaTemp=null;

			for(TransaccionConta transaccioncontaAux:transaccioncontasForeignKey) {
				if(transaccioncontaAux.getId()!=null && transaccioncontaAux.getId().equals(idTransaccionContaSeleccionado)) {
					transaccioncontaTemp=transaccioncontaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncontaTemp!=null) {

					if(this.sri!=null) {
						this.sri.setTransaccionConta(transaccioncontaTemp);
					}

					if(this.jInternalFrameDetalleFormSri!=null) {
						this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.setSelectedItem(transaccioncontaTemp);
					}
				} else {
					//jComboBoxid_transaccion_contaSri.setSelectedItem(transaccioncontaTemp);
					if(this.jInternalFrameDetalleFormSri!=null) {
						if(this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.getItemCount()>0) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionConta") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncontaTemp!=null && jComboBoxid_transaccion_contaFK_IdTransaccionContaSri!=null) {
						jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.setSelectedItem(transaccioncontaTemp);
					} else {
						if(jComboBoxid_transaccion_contaFK_IdTransaccionContaSri!=null) {
							//jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.setSelectedItem(transaccioncontaTemp);
							if(jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.getItemCount()>0) {
								jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionContaForeignKeyDescripcion(Long idTransaccionContaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TransaccionConta  transaccioncontaTemp=null;

			for(TransaccionConta transaccioncontaAux:transaccioncontasForeignKey) {
				if(transaccioncontaAux.getId()!=null && transaccioncontaAux.getId().equals(idTransaccionContaSeleccionado)) {
					transaccioncontaTemp=transaccioncontaAux;
					break;
				}
			}


			sDescripcion=TransaccionContaConstantesFunciones.getTransaccionContaDescripcion(transaccioncontaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionContaForeignKeyGenerico(Long idTransaccionContaSeleccionado,JComboBox jComboBoxid_transaccion_contaSriGenerico)throws Exception
	{
		try
		{
			TransaccionConta  transaccioncontaTemp=null;

			for(TransaccionConta transaccioncontaAux:transaccioncontasForeignKey) {
				if(transaccioncontaAux.getId()!=null && transaccioncontaAux.getId().equals(idTransaccionContaSeleccionado)) {
					transaccioncontaTemp=transaccioncontaAux;
					break;
				}
			}

			if(transaccioncontaTemp!=null) {
				jComboBoxid_transaccion_contaSriGenerico.setSelectedItem(transaccioncontaTemp);
			} else {
				if(jComboBoxid_transaccion_contaSriGenerico!=null && jComboBoxid_transaccion_contaSriGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_contaSriGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.sri!=null) {
						this.sri.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormSri!=null) {
						this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteSri.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormSri!=null) {
						if(this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.getItemCount()>0) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteSri!=null) {
						jComboBoxid_clienteFK_IdClienteSri.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteSri!=null) {
							//jComboBoxid_clienteFK_IdClienteSri.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteSri.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteSri.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteSriGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteSriGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteSriGenerico!=null && jComboBoxid_clienteSriGenerico.getItemCount()>0) {
					jComboBoxid_clienteSriGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoComprobanteForeignKey(Long idTipoComprobanteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoComprobante  tipocomprobanteTemp=null;

			for(TipoComprobante tipocomprobanteAux:tipocomprobantesForeignKey) {
				if(tipocomprobanteAux.getId()!=null && tipocomprobanteAux.getId().equals(idTipoComprobanteSeleccionado)) {
					tipocomprobanteTemp=tipocomprobanteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocomprobanteTemp!=null) {

					if(this.sri!=null) {
						this.sri.setTipoComprobante(tipocomprobanteTemp);
					}

					if(this.jInternalFrameDetalleFormSri!=null) {
						this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.setSelectedItem(tipocomprobanteTemp);
					}
				} else {
					//jComboBoxtipo_comprobanteSri.setSelectedItem(tipocomprobanteTemp);
					if(this.jInternalFrameDetalleFormSri!=null) {
						if(this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.getItemCount()>0) {
							this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoComprobante") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocomprobanteTemp!=null && jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri!=null) {
						jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.setSelectedItem(tipocomprobanteTemp);
					} else {
						if(jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri!=null) {
							//jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.setSelectedItem(tipocomprobanteTemp);
							if(jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.getItemCount()>0) {
								jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoComprobanteForeignKeyDescripcion(Long idTipoComprobanteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoComprobante  tipocomprobanteTemp=null;

			for(TipoComprobante tipocomprobanteAux:tipocomprobantesForeignKey) {
				if(tipocomprobanteAux.getId()!=null && tipocomprobanteAux.getId().equals(idTipoComprobanteSeleccionado)) {
					tipocomprobanteTemp=tipocomprobanteAux;
					break;
				}
			}


			sDescripcion=TipoComprobanteConstantesFunciones.getTipoComprobanteDescripcion(tipocomprobanteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoComprobanteForeignKeyGenerico(Long idTipoComprobanteSeleccionado,JComboBox jComboBoxtipo_comprobanteSriGenerico)throws Exception
	{
		try
		{
			TipoComprobante  tipocomprobanteTemp=null;

			for(TipoComprobante tipocomprobanteAux:tipocomprobantesForeignKey) {
				if(tipocomprobanteAux.getId()!=null && tipocomprobanteAux.getId().equals(idTipoComprobanteSeleccionado)) {
					tipocomprobanteTemp=tipocomprobanteAux;
					break;
				}
			}

			if(tipocomprobanteTemp!=null) {
				jComboBoxtipo_comprobanteSriGenerico.setSelectedItem(tipocomprobanteTemp);
			} else {
				if(jComboBoxtipo_comprobanteSriGenerico!=null && jComboBoxtipo_comprobanteSriGenerico.getItemCount()>0) {
					jComboBoxtipo_comprobanteSriGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTributarioForeignKey(Long idTipoTributarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTributario  tipotributarioTemp=null;

			for(TipoTributario tipotributarioAux:tipotributariosForeignKey) {
				if(tipotributarioAux.getId()!=null && tipotributarioAux.getId().equals(idTipoTributarioSeleccionado)) {
					tipotributarioTemp=tipotributarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotributarioTemp!=null) {

					if(this.sri!=null) {
						this.sri.setTipoTributario(tipotributarioTemp);
					}

					if(this.jInternalFrameDetalleFormSri!=null) {
						this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.setSelectedItem(tipotributarioTemp);
					}
				} else {
					//jComboBoxtipo_tributarioSri.setSelectedItem(tipotributarioTemp);
					if(this.jInternalFrameDetalleFormSri!=null) {
						if(this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.getItemCount()>0) {
							this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTributario") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotributarioTemp!=null && jComboBoxtipo_tributarioFK_IdTipoTributarioSri!=null) {
						jComboBoxtipo_tributarioFK_IdTipoTributarioSri.setSelectedItem(tipotributarioTemp);
					} else {
						if(jComboBoxtipo_tributarioFK_IdTipoTributarioSri!=null) {
							//jComboBoxtipo_tributarioFK_IdTipoTributarioSri.setSelectedItem(tipotributarioTemp);
							if(jComboBoxtipo_tributarioFK_IdTipoTributarioSri.getItemCount()>0) {
								jComboBoxtipo_tributarioFK_IdTipoTributarioSri.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTributarioForeignKeyDescripcion(Long idTipoTributarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTributario  tipotributarioTemp=null;

			for(TipoTributario tipotributarioAux:tipotributariosForeignKey) {
				if(tipotributarioAux.getId()!=null && tipotributarioAux.getId().equals(idTipoTributarioSeleccionado)) {
					tipotributarioTemp=tipotributarioAux;
					break;
				}
			}


			sDescripcion=TipoTributarioConstantesFunciones.getTipoTributarioDescripcion(tipotributarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTributarioForeignKeyGenerico(Long idTipoTributarioSeleccionado,JComboBox jComboBoxtipo_tributarioSriGenerico)throws Exception
	{
		try
		{
			TipoTributario  tipotributarioTemp=null;

			for(TipoTributario tipotributarioAux:tipotributariosForeignKey) {
				if(tipotributarioAux.getId()!=null && tipotributarioAux.getId().equals(idTipoTributarioSeleccionado)) {
					tipotributarioTemp=tipotributarioAux;
					break;
				}
			}

			if(tipotributarioTemp!=null) {
				jComboBoxtipo_tributarioSriGenerico.setSelectedItem(tipotributarioTemp);
			} else {
				if(jComboBoxtipo_tributarioSriGenerico!=null && jComboBoxtipo_tributarioSriGenerico.getItemCount()>0) {
					jComboBoxtipo_tributarioSriGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoIvaForeignKey(Long idTipoIvaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoIva  tipoivaTemp=null;

			for(TipoIva tipoivaAux:tipoivasForeignKey) {
				if(tipoivaAux.getId()!=null && tipoivaAux.getId().equals(idTipoIvaSeleccionado)) {
					tipoivaTemp=tipoivaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoivaTemp!=null) {

					if(this.sri!=null) {
						this.sri.setTipoIva(tipoivaTemp);
					}

					if(this.jInternalFrameDetalleFormSri!=null) {
						this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.setSelectedItem(tipoivaTemp);
					}
				} else {
					//jComboBoxid_tipo_ivaSri.setSelectedItem(tipoivaTemp);
					if(this.jInternalFrameDetalleFormSri!=null) {
						if(this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.getItemCount()>0) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoIva") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoivaTemp!=null && jComboBoxid_tipo_ivaFK_IdTipoIvaSri!=null) {
						jComboBoxid_tipo_ivaFK_IdTipoIvaSri.setSelectedItem(tipoivaTemp);
					} else {
						if(jComboBoxid_tipo_ivaFK_IdTipoIvaSri!=null) {
							//jComboBoxid_tipo_ivaFK_IdTipoIvaSri.setSelectedItem(tipoivaTemp);
							if(jComboBoxid_tipo_ivaFK_IdTipoIvaSri.getItemCount()>0) {
								jComboBoxid_tipo_ivaFK_IdTipoIvaSri.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoIvaForeignKeyDescripcion(Long idTipoIvaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoIva  tipoivaTemp=null;

			for(TipoIva tipoivaAux:tipoivasForeignKey) {
				if(tipoivaAux.getId()!=null && tipoivaAux.getId().equals(idTipoIvaSeleccionado)) {
					tipoivaTemp=tipoivaAux;
					break;
				}
			}


			sDescripcion=TipoIvaConstantesFunciones.getTipoIvaDescripcion(tipoivaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoIvaForeignKeyGenerico(Long idTipoIvaSeleccionado,JComboBox jComboBoxid_tipo_ivaSriGenerico)throws Exception
	{
		try
		{
			TipoIva  tipoivaTemp=null;

			for(TipoIva tipoivaAux:tipoivasForeignKey) {
				if(tipoivaAux.getId()!=null && tipoivaAux.getId().equals(idTipoIvaSeleccionado)) {
					tipoivaTemp=tipoivaAux;
					break;
				}
			}

			if(tipoivaTemp!=null) {
				jComboBoxid_tipo_ivaSriGenerico.setSelectedItem(tipoivaTemp);
			} else {
				if(jComboBoxid_tipo_ivaSriGenerico!=null && jComboBoxid_tipo_ivaSriGenerico.getItemCount()>0) {
					jComboBoxid_tipo_ivaSriGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRetencionIvaBienForeignKey(Long idTipoRetencionIvaBienSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivabienTemp=null;

			for(TipoRetencionIva tiporetencionivabienAux:tiporetencionivabiensForeignKey) {
				if(tiporetencionivabienAux.getId()!=null && tiporetencionivabienAux.getId().equals(idTipoRetencionIvaBienSeleccionado)) {
					tiporetencionivabienTemp=tiporetencionivabienAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporetencionivabienTemp!=null) {

					if(this.sri!=null) {
						this.sri.setTipoRetencionIvaBien(tiporetencionivabienTemp);
					}

					if(this.jInternalFrameDetalleFormSri!=null) {
						this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.setSelectedItem(tiporetencionivabienTemp);
					}
				} else {
					//jComboBoxid_tipo_retencion_iva_bienSri.setSelectedItem(tiporetencionivabienTemp);
					if(this.jInternalFrameDetalleFormSri!=null) {
						if(this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.getItemCount()>0) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencionIvaBien") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiporetencionivabienTemp!=null && jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri!=null) {
						jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.setSelectedItem(tiporetencionivabienTemp);
					} else {
						if(jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri!=null) {
							//jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.setSelectedItem(tiporetencionivabienTemp);
							if(jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.getItemCount()>0) {
								jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRetencionIvaBienForeignKeyDescripcion(Long idTipoRetencionIvaBienSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRetencionIva  tiporetencionivabienTemp=null;

			for(TipoRetencionIva tiporetencionivabienAux:tiporetencionivabiensForeignKey) {
				if(tiporetencionivabienAux.getId()!=null && tiporetencionivabienAux.getId().equals(idTipoRetencionIvaBienSeleccionado)) {
					tiporetencionivabienTemp=tiporetencionivabienAux;
					break;
				}
			}


			sDescripcion=TipoRetencionIvaConstantesFunciones.getTipoRetencionIvaDescripcion(tiporetencionivabienTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRetencionIvaBienForeignKeyGenerico(Long idTipoRetencionIvaBienSeleccionado,JComboBox jComboBoxid_tipo_retencion_iva_bienSriGenerico)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivabienTemp=null;

			for(TipoRetencionIva tiporetencionivabienAux:tiporetencionivabiensForeignKey) {
				if(tiporetencionivabienAux.getId()!=null && tiporetencionivabienAux.getId().equals(idTipoRetencionIvaBienSeleccionado)) {
					tiporetencionivabienTemp=tiporetencionivabienAux;
					break;
				}
			}

			if(tiporetencionivabienTemp!=null) {
				jComboBoxid_tipo_retencion_iva_bienSriGenerico.setSelectedItem(tiporetencionivabienTemp);
			} else {
				if(jComboBoxid_tipo_retencion_iva_bienSriGenerico!=null && jComboBoxid_tipo_retencion_iva_bienSriGenerico.getItemCount()>0) {
					jComboBoxid_tipo_retencion_iva_bienSriGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRetencionIvaServicioForeignKey(Long idTipoRetencionIvaServicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaservicioTemp=null;

			for(TipoRetencionIva tiporetencionivaservicioAux:tiporetencionivaserviciosForeignKey) {
				if(tiporetencionivaservicioAux.getId()!=null && tiporetencionivaservicioAux.getId().equals(idTipoRetencionIvaServicioSeleccionado)) {
					tiporetencionivaservicioTemp=tiporetencionivaservicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporetencionivaservicioTemp!=null) {

					if(this.sri!=null) {
						this.sri.setTipoRetencionIvaServicio(tiporetencionivaservicioTemp);
					}

					if(this.jInternalFrameDetalleFormSri!=null) {
						this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.setSelectedItem(tiporetencionivaservicioTemp);
					}
				} else {
					//jComboBoxid_tipo_retencion_iva_servicioSri.setSelectedItem(tiporetencionivaservicioTemp);
					if(this.jInternalFrameDetalleFormSri!=null) {
						if(this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.getItemCount()>0) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencionIvaServicio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiporetencionivaservicioTemp!=null && jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri!=null) {
						jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.setSelectedItem(tiporetencionivaservicioTemp);
					} else {
						if(jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri!=null) {
							//jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.setSelectedItem(tiporetencionivaservicioTemp);
							if(jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.getItemCount()>0) {
								jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRetencionIvaServicioForeignKeyDescripcion(Long idTipoRetencionIvaServicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRetencionIva  tiporetencionivaservicioTemp=null;

			for(TipoRetencionIva tiporetencionivaservicioAux:tiporetencionivaserviciosForeignKey) {
				if(tiporetencionivaservicioAux.getId()!=null && tiporetencionivaservicioAux.getId().equals(idTipoRetencionIvaServicioSeleccionado)) {
					tiporetencionivaservicioTemp=tiporetencionivaservicioAux;
					break;
				}
			}


			sDescripcion=TipoRetencionIvaConstantesFunciones.getTipoRetencionIvaDescripcion(tiporetencionivaservicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRetencionIvaServicioForeignKeyGenerico(Long idTipoRetencionIvaServicioSeleccionado,JComboBox jComboBoxid_tipo_retencion_iva_servicioSriGenerico)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaservicioTemp=null;

			for(TipoRetencionIva tiporetencionivaservicioAux:tiporetencionivaserviciosForeignKey) {
				if(tiporetencionivaservicioAux.getId()!=null && tiporetencionivaservicioAux.getId().equals(idTipoRetencionIvaServicioSeleccionado)) {
					tiporetencionivaservicioTemp=tiporetencionivaservicioAux;
					break;
				}
			}

			if(tiporetencionivaservicioTemp!=null) {
				jComboBoxid_tipo_retencion_iva_servicioSriGenerico.setSelectedItem(tiporetencionivaservicioTemp);
			} else {
				if(jComboBoxid_tipo_retencion_iva_servicioSriGenerico!=null && jComboBoxid_tipo_retencion_iva_servicioSriGenerico.getItemCount()>0) {
					jComboBoxid_tipo_retencion_iva_servicioSriGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoMovimientoForeignKey(Long idTipoMovimientoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipomovimientoTemp!=null) {

					if(this.sri!=null) {
						this.sri.setTipoMovimiento(tipomovimientoTemp);
					}

					if(this.jInternalFrameDetalleFormSri!=null) {
						this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.setSelectedItem(tipomovimientoTemp);
					}
				} else {
					//jComboBoxid_tipo_movimientoSri.setSelectedItem(tipomovimientoTemp);
					if(this.jInternalFrameDetalleFormSri!=null) {
						if(this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.getItemCount()>0) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimiento") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipomovimientoTemp!=null && jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri!=null) {
						jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.setSelectedItem(tipomovimientoTemp);
					} else {
						if(jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri!=null) {
							//jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.setSelectedItem(tipomovimientoTemp);
							if(jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.getItemCount()>0) {
								jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoMovimientoForeignKeyDescripcion(Long idTipoMovimientoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}


			sDescripcion=TipoMovimientoConstantesFunciones.getTipoMovimientoDescripcion(tipomovimientoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoMovimientoForeignKeyGenerico(Long idTipoMovimientoSeleccionado,JComboBox jComboBoxid_tipo_movimientoSriGenerico)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}

			if(tipomovimientoTemp!=null) {
				jComboBoxid_tipo_movimientoSriGenerico.setSelectedItem(tipomovimientoTemp);
			} else {
				if(jComboBoxid_tipo_movimientoSriGenerico!=null && jComboBoxid_tipo_movimientoSriGenerico.getItemCount()>0) {
					jComboBoxid_tipo_movimientoSriGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(Sri sri,JComboBox jComboBoxid_asiento_contableSriGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contableSriGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contableSriGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null && asientocontableAux.getId()!=null) {
				sri.setid_asiento_contable(asientocontableAux.getId());
				sri.setasientocontable_descripcion(SriConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				sri.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionContaForeignKey(Sri sri,JComboBox jComboBoxid_transaccion_contaSriGenerico)throws Exception
	{
		try
		{
			TransaccionConta  transaccioncontaAux=new TransaccionConta();

			if(jComboBoxid_transaccion_contaSriGenerico==null) {
				transaccioncontaAux=(TransaccionConta)this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.getSelectedItem();
			} else {
				transaccioncontaAux=(TransaccionConta)jComboBoxid_transaccion_contaSriGenerico.getSelectedItem();
			}

			if(transaccioncontaAux!=null && transaccioncontaAux.getId()!=null) {
				sri.setid_transaccion_conta(transaccioncontaAux.getId());
				sri.settransaccionconta_descripcion(SriConstantesFunciones.getTransaccionContaDescripcion(transaccioncontaAux));
				sri.setTransaccionConta(transaccioncontaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(Sri sri,JComboBox jComboBoxid_clienteSriGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteSriGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteSriGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				sri.setid_cliente(clienteAux.getId());
				sri.setcliente_descripcion(SriConstantesFunciones.getClienteDescripcion(clienteAux));
				sri.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoComprobanteForeignKey(Sri sri,JComboBox jComboBoxtipo_comprobanteSriGenerico)throws Exception
	{
		try
		{
			TipoComprobante  tipocomprobanteAux=new TipoComprobante();

			if(jComboBoxtipo_comprobanteSriGenerico==null) {
				tipocomprobanteAux=(TipoComprobante)this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.getSelectedItem();
			} else {
				tipocomprobanteAux=(TipoComprobante)jComboBoxtipo_comprobanteSriGenerico.getSelectedItem();
			}

			if(tipocomprobanteAux!=null && tipocomprobanteAux.getId()!=null) {
				sri.settipo_comprobante(tipocomprobanteAux.getId());
				sri.settipocomprobante_descripcion(SriConstantesFunciones.getTipoComprobanteDescripcion(tipocomprobanteAux));
				sri.setTipoComprobante(tipocomprobanteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTributarioForeignKey(Sri sri,JComboBox jComboBoxtipo_tributarioSriGenerico)throws Exception
	{
		try
		{
			TipoTributario  tipotributarioAux=new TipoTributario();

			if(jComboBoxtipo_tributarioSriGenerico==null) {
				tipotributarioAux=(TipoTributario)this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.getSelectedItem();
			} else {
				tipotributarioAux=(TipoTributario)jComboBoxtipo_tributarioSriGenerico.getSelectedItem();
			}

			if(tipotributarioAux!=null && tipotributarioAux.getId()!=null) {
				sri.settipo_tributario(tipotributarioAux.getId());
				sri.settipotributario_descripcion(SriConstantesFunciones.getTipoTributarioDescripcion(tipotributarioAux));
				sri.setTipoTributario(tipotributarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoIvaForeignKey(Sri sri,JComboBox jComboBoxid_tipo_ivaSriGenerico)throws Exception
	{
		try
		{
			TipoIva  tipoivaAux=new TipoIva();

			if(jComboBoxid_tipo_ivaSriGenerico==null) {
				tipoivaAux=(TipoIva)this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.getSelectedItem();
			} else {
				tipoivaAux=(TipoIva)jComboBoxid_tipo_ivaSriGenerico.getSelectedItem();
			}

			if(tipoivaAux!=null && tipoivaAux.getId()!=null) {
				sri.setid_tipo_iva(tipoivaAux.getId());
				sri.settipoiva_descripcion(SriConstantesFunciones.getTipoIvaDescripcion(tipoivaAux));
				sri.setTipoIva(tipoivaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRetencionIvaBienForeignKey(Sri sri,JComboBox jComboBoxid_tipo_retencion_iva_bienSriGenerico)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaAux=new TipoRetencionIva();

			if(jComboBoxid_tipo_retencion_iva_bienSriGenerico==null) {
				tiporetencionivaAux=(TipoRetencionIva)this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.getSelectedItem();
			} else {
				tiporetencionivaAux=(TipoRetencionIva)jComboBoxid_tipo_retencion_iva_bienSriGenerico.getSelectedItem();
			}

			if(tiporetencionivaAux!=null && tiporetencionivaAux.getId()!=null) {
				sri.setid_tipo_retencion_iva_bien(tiporetencionivaAux.getId());
				sri.settiporetencionivabien_descripcion(SriConstantesFunciones.getTipoRetencionIvaBienDescripcion(tiporetencionivaAux));
				sri.setTipoRetencionIvaBien(tiporetencionivaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRetencionIvaServicioForeignKey(Sri sri,JComboBox jComboBoxid_tipo_retencion_iva_servicioSriGenerico)throws Exception
	{
		try
		{
			TipoRetencionIva  tiporetencionivaAux=new TipoRetencionIva();

			if(jComboBoxid_tipo_retencion_iva_servicioSriGenerico==null) {
				tiporetencionivaAux=(TipoRetencionIva)this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.getSelectedItem();
			} else {
				tiporetencionivaAux=(TipoRetencionIva)jComboBoxid_tipo_retencion_iva_servicioSriGenerico.getSelectedItem();
			}

			if(tiporetencionivaAux!=null && tiporetencionivaAux.getId()!=null) {
				sri.setid_tipo_retencion_iva_servicio(tiporetencionivaAux.getId());
				sri.settiporetencionivaservicio_descripcion(SriConstantesFunciones.getTipoRetencionIvaServicioDescripcion(tiporetencionivaAux));
				sri.setTipoRetencionIvaServicio(tiporetencionivaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoMovimientoForeignKey(Sri sri,JComboBox jComboBoxid_tipo_movimientoSriGenerico)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoAux=new TipoMovimiento();

			if(jComboBoxid_tipo_movimientoSriGenerico==null) {
				tipomovimientoAux=(TipoMovimiento)this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.getSelectedItem();
			} else {
				tipomovimientoAux=(TipoMovimiento)jComboBoxid_tipo_movimientoSriGenerico.getSelectedItem();
			}

			if(tipomovimientoAux!=null && tipomovimientoAux.getId()!=null) {
				sri.setid_tipo_movimiento(tipomovimientoAux.getId());
				sri.settipomovimiento_descripcion(SriConstantesFunciones.getTipoMovimientoDescripcion(tipomovimientoAux));
				sri.setTipoMovimiento(tipomovimientoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) { 
							this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSri!=null) { 
					}

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableSri.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContableSri.addItem(asientocontable);
							}
						}

						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionContasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccionConta=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) { 
							this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.removeAllItems();

							for(TransaccionConta transaccionconta:this.transaccioncontasForeignKey) {
								this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.addItem(transaccionconta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSri!=null) { 
					}

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionConta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.removeAllItems();

							for(TransaccionConta transaccionconta:this.transaccioncontasForeignKey) {
								this.jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.addItem(transaccionconta);
							}
						}

						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) { 
							this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSri!=null) { 
					}

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteSri.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteSri.addItem(cliente);
							}
						}

						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoComprobantesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoComprobante=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) { 
							this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.removeAllItems();

							for(TipoComprobante tipocomprobante:this.tipocomprobantesForeignKey) {
								this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.addItem(tipocomprobante);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSri!=null) { 
					}

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoComprobante") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.removeAllItems();

							for(TipoComprobante tipocomprobante:this.tipocomprobantesForeignKey) {
								this.jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.addItem(tipocomprobante);
							}
						}

						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTributariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTributario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) { 
							this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.removeAllItems();

							for(TipoTributario tipotributario:this.tipotributariosForeignKey) {
								this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.addItem(tipotributario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSri!=null) { 
					}

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTributario") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxtipo_tributarioFK_IdTipoTributarioSri.removeAllItems();

							for(TipoTributario tipotributario:this.tipotributariosForeignKey) {
								this.jComboBoxtipo_tributarioFK_IdTipoTributarioSri.addItem(tipotributario);
							}
						}

						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoIvasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoIva=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) { 
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.removeAllItems();

							for(TipoIva tipoiva:this.tipoivasForeignKey) {
								this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.addItem(tipoiva);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSri!=null) { 
					}

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoIva") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_ivaFK_IdTipoIvaSri.removeAllItems();

							for(TipoIva tipoiva:this.tipoivasForeignKey) {
								this.jComboBoxid_tipo_ivaFK_IdTipoIvaSri.addItem(tipoiva);
							}
						}

						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRetencionIvaBiensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRetencionIva=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) { 
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.removeAllItems();

							for(TipoRetencionIva tiporetencionivabien:this.tiporetencionivabiensForeignKey) {
								this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.addItem(tiporetencionivabien);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSri!=null) { 
					}

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencionIvaBien") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.removeAllItems();

							for(TipoRetencionIva tiporetencionivabien:this.tiporetencionivabiensForeignKey) {
								this.jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.addItem(tiporetencionivabien);
							}
						}

						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRetencionIvaServiciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRetencionIva=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) { 
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.removeAllItems();

							for(TipoRetencionIva tiporetencionivaservicio:this.tiporetencionivaserviciosForeignKey) {
								this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.addItem(tiporetencionivaservicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSri!=null) { 
					}

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencionIvaServicio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.removeAllItems();

							for(TipoRetencionIva tiporetencionivaservicio:this.tiporetencionivaserviciosForeignKey) {
								this.jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.addItem(tiporetencionivaservicio);
							}
						}

						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoMovimientosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoMovimiento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) { 
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.removeAllItems();

							for(TipoMovimiento tipomovimiento:this.tipomovimientosForeignKey) {
								this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.addItem(tipomovimiento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSri!=null) { 
					}

					if(!SriJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimiento") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.removeAllItems();

							for(TipoMovimiento tipomovimiento:this.tipomovimientosForeignKey) {
								this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.addItem(tipomovimiento);
							}
						}

						if(!SriJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableSri.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableSri.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionContaForeignKey(TransaccionConta transaccionconta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.setSelectedItem(transaccionconta);
						}
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.setSelectedItem(transaccionconta);
						} else {
							this.jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteSri.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteSri.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoComprobanteForeignKey(TipoComprobante tipocomprobante,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.setSelectedItem(tipocomprobante);
						}
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.setSelectedItem(tipocomprobante);
						} else {
							this.jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTributarioForeignKey(TipoTributario tipotributario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.setSelectedItem(tipotributario);
						}
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxtipo_tributarioFK_IdTipoTributarioSri.setSelectedItem(tipotributario);
						} else {
							this.jComboBoxtipo_tributarioFK_IdTipoTributarioSri.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoIvaForeignKey(TipoIva tipoiva,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.setSelectedItem(tipoiva);
						}
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_ivaFK_IdTipoIvaSri.setSelectedItem(tipoiva);
						} else {
							this.jComboBoxid_tipo_ivaFK_IdTipoIvaSri.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRetencionIvaBienForeignKey(TipoRetencionIva tiporetencionivabien,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.setSelectedItem(tiporetencionivabien);
						}
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.setSelectedItem(tiporetencionivabien);
						} else {
							this.jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRetencionIvaServicioForeignKey(TipoRetencionIva tiporetencionivaservicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.setSelectedItem(tiporetencionivaservicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.setSelectedItem(tiporetencionivaservicio);
						} else {
							this.jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoMovimientoForeignKey(TipoMovimiento tipomovimiento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.setSelectedItem(tipomovimiento);
						}
					} else {
						if(this.jInternalFrameDetalleFormSri!=null) {
							this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.setSelectedItem(tipomovimiento);
						} else {
							this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesSri() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			SriConstantesFunciones.refrescarForeignKeysDescripcionesSri(this.sriLogic.getSris());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			SriConstantesFunciones.refrescarForeignKeysDescripcionesSri(this.sris);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(AsientoContable.class));
		classes.add(new Classe(TransaccionConta.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(TipoComprobante.class));
		classes.add(new Classe(TipoTributario.class));
		classes.add(new Classe(TipoIva.class));
		classes.add(new Classe(TipoRetencionIva.class));
		classes.add(new Classe(TipoMovimiento.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//sriLogic.setSris(this.sris);
			sriLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public SriParameterReturnGeneral getSriParameterGeneral() {
		return this.sriParameterGeneral;
	}
	
	public void setSriParameterGeneral(SriParameterReturnGeneral sriParameterGeneral) {
		this.sriParameterGeneral = sriParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoSri() {
		return isPermisoTodoSri;
	}

	public void setIsPermisoTodoSri(Boolean isPermisoTodoSri) {
		this.isPermisoTodoSri = isPermisoTodoSri;
	}

	public Boolean getIsPermisoNuevoSri() {
		return isPermisoNuevoSri;
	}

	public void setIsPermisoNuevoSri(Boolean isPermisoNuevoSri) {
		this.isPermisoNuevoSri = isPermisoNuevoSri;
	}

	public Boolean getIsPermisoActualizarSri() {
		return isPermisoActualizarSri;
	}

	public void setIsPermisoActualizarSri(Boolean isPermisoActualizarSri) {
		this.isPermisoActualizarSri = isPermisoActualizarSri;
	}

	public Boolean getIsPermisoEliminarSri() {
		return isPermisoEliminarSri;
	}

	public void setIsPermisoEliminarSri(Boolean isPermisoEliminarSri) {
		this.isPermisoEliminarSri = isPermisoEliminarSri;
	}

	public Boolean getIsPermisoGuardarCambiosSri() {
		return isPermisoGuardarCambiosSri;
	}

	public void setIsPermisoGuardarCambiosSri(Boolean isPermisoGuardarCambiosSri) {
		this.isPermisoGuardarCambiosSri = isPermisoGuardarCambiosSri;
	}
	
	public Boolean getIsPermisoConsultaSri() {
		return isPermisoConsultaSri;
	}

	public void setIsPermisoConsultaSri(Boolean isPermisoConsultaSri) {
		this.isPermisoConsultaSri = isPermisoConsultaSri;
	}

	public Boolean getIsPermisoBusquedaSri() {
		return isPermisoBusquedaSri;
	}

	public void setIsPermisoBusquedaSri(Boolean isPermisoBusquedaSri) {
		this.isPermisoBusquedaSri = isPermisoBusquedaSri;
	}

	public Boolean getIsPermisoReporteSri() {
		return isPermisoReporteSri;
	}

	public void setIsPermisoReporteSri(Boolean isPermisoReporteSri) {
		this.isPermisoReporteSri = isPermisoReporteSri;
	}
	
	public Boolean getIsPermisoPaginacionMedioSri() {
		return isPermisoPaginacionMedioSri;
	}

	public void setIsPermisoPaginacionMedioSri(Boolean isPermisoPaginacionMedioSri) {
		this.isPermisoPaginacionMedioSri = isPermisoPaginacionMedioSri;
	}
	
	public Boolean getIsPermisoPaginacionTodoSri() {
		return isPermisoPaginacionTodoSri;
	}

	public void setIsPermisoPaginacionTodoSri(Boolean isPermisoPaginacionTodoSri) {
		this.isPermisoPaginacionTodoSri = isPermisoPaginacionTodoSri;
	}
	
	public Boolean getIsPermisoPaginacionAltoSri() {
		return isPermisoPaginacionAltoSri;
	}

	public void setIsPermisoPaginacionAltoSri(Boolean isPermisoPaginacionAltoSri) {
		this.isPermisoPaginacionAltoSri = isPermisoPaginacionAltoSri;
	}
	
	public Boolean getIsPermisoCopiarSri() {
		return isPermisoCopiarSri;
	}

	public void setIsPermisoCopiarSri(Boolean isPermisoCopiarSri) {
		this.isPermisoCopiarSri = isPermisoCopiarSri;
	}
	
	public Boolean getIsPermisoVerFormSri() {
		return isPermisoVerFormSri;
	}

	public void setIsPermisoVerFormSri(Boolean isPermisoVerFormSri) {
		this.isPermisoVerFormSri = isPermisoVerFormSri;
	}
	
	public Boolean getIsPermisoDuplicarSri() {
		return isPermisoDuplicarSri;
	}

	public void setIsPermisoDuplicarSri(Boolean isPermisoDuplicarSri) {
		this.isPermisoDuplicarSri = isPermisoDuplicarSri;
	}
	
	public Boolean getIsPermisoOrdenSri() {
		return isPermisoOrdenSri;
	}

	public void setIsPermisoOrdenSri(Boolean isPermisoOrdenSri) {
		this.isPermisoOrdenSri = isPermisoOrdenSri;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoSri() {
		return isVisibilidadCeldaNuevoSri;
	}

	public void setIsVisibilidadCeldaNuevoSri(Boolean isVisibilidadCeldaNuevoSri) {
		this.isVisibilidadCeldaNuevoSri = isVisibilidadCeldaNuevoSri;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarSri() {
		return isVisibilidadCeldaDuplicarSri;
	}

	public void setIsVisibilidadCeldaDuplicarSri(Boolean isVisibilidadCeldaDuplicarSri) {
		this.isVisibilidadCeldaDuplicarSri = isVisibilidadCeldaDuplicarSri;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarSri() {
		return isVisibilidadCeldaCopiarSri;
	}

	public void setIsVisibilidadCeldaCopiarSri(Boolean isVisibilidadCeldaCopiarSri) {
		this.isVisibilidadCeldaCopiarSri = isVisibilidadCeldaCopiarSri;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormSri() {
		return isVisibilidadCeldaVerFormSri;
	}

	public void setIsVisibilidadCeldaVerFormSri(Boolean isVisibilidadCeldaVerFormSri) {
		this.isVisibilidadCeldaVerFormSri = isVisibilidadCeldaVerFormSri;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenSri() {
		return isVisibilidadCeldaOrdenSri;
	}

	public void setIsVisibilidadCeldaOrdenSri(Boolean isVisibilidadCeldaOrdenSri) {
		this.isVisibilidadCeldaOrdenSri = isVisibilidadCeldaOrdenSri;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesSri() {
		return isVisibilidadCeldaNuevoRelacionesSri;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesSri(Boolean isVisibilidadCeldaNuevoRelacionesSri) {
		this.isVisibilidadCeldaNuevoRelacionesSri = isVisibilidadCeldaNuevoRelacionesSri;
	}
	
	public Boolean getIsVisibilidadCeldaModificarSri() {
		return isVisibilidadCeldaModificarSri;
	}

	public void setIsVisibilidadCeldaModificarSri(Boolean isVisibilidadCeldaModificarSri) {
		this.isVisibilidadCeldaModificarSri = isVisibilidadCeldaModificarSri;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarSri() {
		return isVisibilidadCeldaActualizarSri;
	}

	public void setIsVisibilidadCeldaActualizarSri(Boolean isVisibilidadCeldaActualizarSri) {
		this.isVisibilidadCeldaActualizarSri = isVisibilidadCeldaActualizarSri;
	}

	public Boolean getIsVisibilidadCeldaEliminarSri() {
		return isVisibilidadCeldaEliminarSri;
	}

	public void setIsVisibilidadCeldaEliminarSri(Boolean isVisibilidadCeldaEliminarSri) {
		this.isVisibilidadCeldaEliminarSri = isVisibilidadCeldaEliminarSri;
	}

	public Boolean getIsVisibilidadCeldaCancelarSri() {
		return isVisibilidadCeldaCancelarSri;
	}

	public void setIsVisibilidadCeldaCancelarSri(Boolean isVisibilidadCeldaCancelarSri) {
		this.isVisibilidadCeldaCancelarSri = isVisibilidadCeldaCancelarSri;
	}

	public Boolean getIsVisibilidadCeldaGuardarSri() {
		return isVisibilidadCeldaGuardarSri;
	}

	public void setIsVisibilidadCeldaGuardarSri(Boolean isVisibilidadCeldaGuardarSri) {
		this.isVisibilidadCeldaGuardarSri = isVisibilidadCeldaGuardarSri;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosSri() {
		return isVisibilidadCeldaGuardarCambiosSri;
	}

	public void setIsVisibilidadCeldaGuardarCambiosSri(Boolean isVisibilidadCeldaGuardarCambiosSri) {
		this.isVisibilidadCeldaGuardarCambiosSri = isVisibilidadCeldaGuardarCambiosSri;
	}
		
	public SriSessionBean getsriSessionBean() {
		return this.sriSessionBean;
	}
	
	public void setsriSessionBean(SriSessionBean sriSessionBean) {
		this.sriSessionBean=sriSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdTipoComprobante() {
		return this.isVisibilidadFK_IdTipoComprobante;
	}

	public void setisVisibilidadFK_IdTipoComprobante(Boolean isVisibilidadFK_IdTipoComprobante) {
		this.isVisibilidadFK_IdTipoComprobante=isVisibilidadFK_IdTipoComprobante;
	}

	public Boolean getisVisibilidadFK_IdTipoIva() {
		return this.isVisibilidadFK_IdTipoIva;
	}

	public void setisVisibilidadFK_IdTipoIva(Boolean isVisibilidadFK_IdTipoIva) {
		this.isVisibilidadFK_IdTipoIva=isVisibilidadFK_IdTipoIva;
	}

	public Boolean getisVisibilidadFK_IdTipoMovimiento() {
		return this.isVisibilidadFK_IdTipoMovimiento;
	}

	public void setisVisibilidadFK_IdTipoMovimiento(Boolean isVisibilidadFK_IdTipoMovimiento) {
		this.isVisibilidadFK_IdTipoMovimiento=isVisibilidadFK_IdTipoMovimiento;
	}

	public Boolean getisVisibilidadFK_IdTipoRetencionIvaBien() {
		return this.isVisibilidadFK_IdTipoRetencionIvaBien;
	}

	public void setisVisibilidadFK_IdTipoRetencionIvaBien(Boolean isVisibilidadFK_IdTipoRetencionIvaBien) {
		this.isVisibilidadFK_IdTipoRetencionIvaBien=isVisibilidadFK_IdTipoRetencionIvaBien;
	}

	public Boolean getisVisibilidadFK_IdTipoRetencionIvaServicio() {
		return this.isVisibilidadFK_IdTipoRetencionIvaServicio;
	}

	public void setisVisibilidadFK_IdTipoRetencionIvaServicio(Boolean isVisibilidadFK_IdTipoRetencionIvaServicio) {
		this.isVisibilidadFK_IdTipoRetencionIvaServicio=isVisibilidadFK_IdTipoRetencionIvaServicio;
	}

	public Boolean getisVisibilidadFK_IdTipoTributario() {
		return this.isVisibilidadFK_IdTipoTributario;
	}

	public void setisVisibilidadFK_IdTipoTributario(Boolean isVisibilidadFK_IdTipoTributario) {
		this.isVisibilidadFK_IdTipoTributario=isVisibilidadFK_IdTipoTributario;
	}

	public Boolean getisVisibilidadFK_IdTransaccionConta() {
		return this.isVisibilidadFK_IdTransaccionConta;
	}

	public void setisVisibilidadFK_IdTransaccionConta(Boolean isVisibilidadFK_IdTransaccionConta) {
		this.isVisibilidadFK_IdTransaccionConta=isVisibilidadFK_IdTransaccionConta;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysSri(Sri sri)throws Exception {
		try {
			
				this.setActualParaGuardarAsientoContableForeignKey(sri,null);
				this.setActualParaGuardarTransaccionContaForeignKey(sri,null);
				this.setActualParaGuardarClienteForeignKey(sri,null);
				this.setActualParaGuardarTipoComprobanteForeignKey(sri,null);
				this.setActualParaGuardarTipoTributarioForeignKey(sri,null);
				this.setActualParaGuardarTipoIvaForeignKey(sri,null);
				this.setActualParaGuardarTipoRetencionIvaBienForeignKey(sri,null);
				this.setActualParaGuardarTipoRetencionIvaServicioForeignKey(sri,null);
				this.setActualParaGuardarTipoMovimientoForeignKey(sri,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		/*
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		*/
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			/*
			//this.cargarLicenciaCliente(this.datosCliente);
			*/
	}
	
	public void bugActualizarReferenciaActual(Sri sri,Sri sriAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalSri(sri);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		sriAux.setId(sri.getId());
		sriAux.setVersionRow(sri.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessSri();
		
			int intSelectedRow = this.jTableDatosSri.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(SriJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualSri(this.sri,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = sriValidator.getInvalidValues(this.sri);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			sriLogic.setDatosCliente(datosCliente);
			sriLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				sriAux=new  Sri();
				
				sriAux.setIsNew(true);
				sriAux.setIsChanged(true);
				
				sriAux.setSriOriginal(this.sri);
				
				sriAux.setId(this.sri.getId());	
				sriAux.setVersionRow(this.sri.getVersionRow());	
				sriAux.setid_asiento_contable(this.sri.getid_asiento_contable());	
				sriAux.setid_transaccion_conta(this.sri.getid_transaccion_conta());	
				sriAux.setruc(this.sri.getruc());	
				sriAux.setid_cliente(this.sri.getid_cliente());	
				sriAux.setrazon_social(this.sri.getrazon_social());	
				sriAux.settipo_comprobante(this.sri.gettipo_comprobante());	
				sriAux.setes_rise(this.sri.getes_rise());	
				sriAux.setnumero_serie(this.sri.getnumero_serie());	
				sriAux.setnumero_autorizacion(this.sri.getnumero_autorizacion());	
				sriAux.setnumero_secuencial(this.sri.getnumero_secuencial());	
				sriAux.setfecha_emision(this.sri.getfecha_emision());	
				sriAux.setfecha_registro_contable(this.sri.getfecha_registro_contable());	
				sriAux.setfecha_caducidad(this.sri.getfecha_caducidad());	
				sriAux.settipo_tributario(this.sri.gettipo_tributario());	
				sriAux.setbienes_tar12(this.sri.getbienes_tar12());	
				sriAux.setbienes_tar0(this.sri.getbienes_tar0());	
				sriAux.setid_tipo_iva(this.sri.getid_tipo_iva());	
				sriAux.setservicios_tar12(this.sri.getservicios_tar12());	
				sriAux.setservicios_tar0(this.sri.getservicios_tar0());	
				sriAux.setmonto_iva(this.sri.getmonto_iva());	
				sriAux.setbase_impo_tar12(this.sri.getbase_impo_tar12());	
				sriAux.setbase_impo_tar0(this.sri.getbase_impo_tar0());	
				sriAux.setmonto_ice(this.sri.getmonto_ice());	
				sriAux.setmonto_iva_bien(this.sri.getmonto_iva_bien());	
				sriAux.setmonto_iva_servicio(this.sri.getmonto_iva_servicio());	
				sriAux.setid_tipo_retencion_iva_bien(this.sri.getid_tipo_retencion_iva_bien());	
				sriAux.setid_tipo_retencion_iva_servicio(this.sri.getid_tipo_retencion_iva_servicio());	
				sriAux.setretencion_iva_bien(this.sri.getretencion_iva_bien());	
				sriAux.setretencion_iva_servicio(this.sri.getretencion_iva_servicio());	
				sriAux.setcon_devolucion(this.sri.getcon_devolucion());	
				sriAux.setid_tipo_movimiento(this.sri.getid_tipo_movimiento());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.sriSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.sriSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(sriAux,sriLogic.getSris());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(sriAux,sris);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.sriSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.sriSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.saveSris();//WithConnection
						//sriLogic.getSetVersionRowSris();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.sri,sriAux);
					
					this.refrescarForeignKeysDescripcionesSri();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.sriSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.sriSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								sriLogic.saveSriRelaciones(sriAux);//WithConnection
								//sriLogic.getSetVersionRowSris();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.sri,sriAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.sriSessionBean.getEstaModoGuardarRelaciones() 
									|| this.sriSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(sriAux,sriLogic.getSris());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(sriAux,sris);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.sri,sriAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				sriAux=new  Sri();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.sriSessionBean.getEsGuardarRelacionado() 
					|| (this.sriSessionBean.getEsGuardarRelacionado() && this.sri.getId()>=0)) {
						
					sriAux.setIsNew(false);
				}
				
				sriAux.setIsDeleted(false);
			
				sriAux.setId(this.sri.getId());	
				sriAux.setVersionRow(this.sri.getVersionRow());	
				sriAux.setid_asiento_contable(this.sri.getid_asiento_contable());	
				sriAux.setid_transaccion_conta(this.sri.getid_transaccion_conta());	
				sriAux.setruc(this.sri.getruc());	
				sriAux.setid_cliente(this.sri.getid_cliente());	
				sriAux.setrazon_social(this.sri.getrazon_social());	
				sriAux.settipo_comprobante(this.sri.gettipo_comprobante());	
				sriAux.setes_rise(this.sri.getes_rise());	
				sriAux.setnumero_serie(this.sri.getnumero_serie());	
				sriAux.setnumero_autorizacion(this.sri.getnumero_autorizacion());	
				sriAux.setnumero_secuencial(this.sri.getnumero_secuencial());	
				sriAux.setfecha_emision(this.sri.getfecha_emision());	
				sriAux.setfecha_registro_contable(this.sri.getfecha_registro_contable());	
				sriAux.setfecha_caducidad(this.sri.getfecha_caducidad());	
				sriAux.settipo_tributario(this.sri.gettipo_tributario());	
				sriAux.setbienes_tar12(this.sri.getbienes_tar12());	
				sriAux.setbienes_tar0(this.sri.getbienes_tar0());	
				sriAux.setid_tipo_iva(this.sri.getid_tipo_iva());	
				sriAux.setservicios_tar12(this.sri.getservicios_tar12());	
				sriAux.setservicios_tar0(this.sri.getservicios_tar0());	
				sriAux.setmonto_iva(this.sri.getmonto_iva());	
				sriAux.setbase_impo_tar12(this.sri.getbase_impo_tar12());	
				sriAux.setbase_impo_tar0(this.sri.getbase_impo_tar0());	
				sriAux.setmonto_ice(this.sri.getmonto_ice());	
				sriAux.setmonto_iva_bien(this.sri.getmonto_iva_bien());	
				sriAux.setmonto_iva_servicio(this.sri.getmonto_iva_servicio());	
				sriAux.setid_tipo_retencion_iva_bien(this.sri.getid_tipo_retencion_iva_bien());	
				sriAux.setid_tipo_retencion_iva_servicio(this.sri.getid_tipo_retencion_iva_servicio());	
				sriAux.setretencion_iva_bien(this.sri.getretencion_iva_bien());	
				sriAux.setretencion_iva_servicio(this.sri.getretencion_iva_servicio());	
				sriAux.setcon_devolucion(this.sri.getcon_devolucion());	
				sriAux.setid_tipo_movimiento(this.sri.getid_tipo_movimiento());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(sriAux,sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(sriAux,sris);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.sriSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.sriSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.saveSris();//WithConnection
						//sriLogic.getSetVersionRowSris();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.sri,sriAux);
					
					this.refrescarForeignKeysDescripcionesSri();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.sriSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.sriSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								sriLogic.saveSriRelaciones(sriAux);//WithConnection
								//sriLogic.getSetVersionRowSris();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.sri,sriAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.sriSessionBean.getEstaModoGuardarRelaciones() 
									|| this.sriSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(sriAux,sriLogic.getSris());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(sriAux,sris);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.sri,sriAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				sriAux=new  Sri();
				
				sriAux.setIsNew(false);
				sriAux.setIsChanged(false);
				
				sriAux.setIsDeleted(true);
				
				sriAux.setId(this.sri.getId());	
				sriAux.setVersionRow(this.sri.getVersionRow());	
				sriAux.setid_asiento_contable(this.sri.getid_asiento_contable());	
				sriAux.setid_transaccion_conta(this.sri.getid_transaccion_conta());	
				sriAux.setruc(this.sri.getruc());	
				sriAux.setid_cliente(this.sri.getid_cliente());	
				sriAux.setrazon_social(this.sri.getrazon_social());	
				sriAux.settipo_comprobante(this.sri.gettipo_comprobante());	
				sriAux.setes_rise(this.sri.getes_rise());	
				sriAux.setnumero_serie(this.sri.getnumero_serie());	
				sriAux.setnumero_autorizacion(this.sri.getnumero_autorizacion());	
				sriAux.setnumero_secuencial(this.sri.getnumero_secuencial());	
				sriAux.setfecha_emision(this.sri.getfecha_emision());	
				sriAux.setfecha_registro_contable(this.sri.getfecha_registro_contable());	
				sriAux.setfecha_caducidad(this.sri.getfecha_caducidad());	
				sriAux.settipo_tributario(this.sri.gettipo_tributario());	
				sriAux.setbienes_tar12(this.sri.getbienes_tar12());	
				sriAux.setbienes_tar0(this.sri.getbienes_tar0());	
				sriAux.setid_tipo_iva(this.sri.getid_tipo_iva());	
				sriAux.setservicios_tar12(this.sri.getservicios_tar12());	
				sriAux.setservicios_tar0(this.sri.getservicios_tar0());	
				sriAux.setmonto_iva(this.sri.getmonto_iva());	
				sriAux.setbase_impo_tar12(this.sri.getbase_impo_tar12());	
				sriAux.setbase_impo_tar0(this.sri.getbase_impo_tar0());	
				sriAux.setmonto_ice(this.sri.getmonto_ice());	
				sriAux.setmonto_iva_bien(this.sri.getmonto_iva_bien());	
				sriAux.setmonto_iva_servicio(this.sri.getmonto_iva_servicio());	
				sriAux.setid_tipo_retencion_iva_bien(this.sri.getid_tipo_retencion_iva_bien());	
				sriAux.setid_tipo_retencion_iva_servicio(this.sri.getid_tipo_retencion_iva_servicio());	
				sriAux.setretencion_iva_bien(this.sri.getretencion_iva_bien());	
				sriAux.setretencion_iva_servicio(this.sri.getretencion_iva_servicio());	
				sriAux.setcon_devolucion(this.sri.getcon_devolucion());	
				sriAux.setid_tipo_movimiento(this.sri.getid_tipo_movimiento());	
				
				if(this.sriSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.sriAux.getId()>=0) {	
						this.srisEliminados.add(sriAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(sriAux,sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(sriAux,sris);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.sriSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.sriSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.saveSris();//WithConnection
						//sriLogic.getSetVersionRowSris();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.sriSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.sriSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								sriLogic.saveSriRelaciones(sriAux);//WithConnection
								//sriLogic.getSetVersionRowSris();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.sriSessionBean.getEstaModoGuardarRelaciones() 
								|| this.sriSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(sriAux,sriLogic.getSris());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(sriAux,sris);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getSris().addAll(this.srisEliminados);
					
					sriLogic.saveSris();//WithConnection
					//sriLogic.getSetVersionRowSris();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesSri();
				
				this.srisEliminados= new ArrayList<Sri>();		
			}
			
			if(this.sriSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.sriSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Sri GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.sri=sriAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessSri();
      	}
		
	}	
	
	public void actualizarRelaciones(Sri sriLocal) throws Exception {
		
		if(this.sriSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(Sri sriLocal) throws Exception {	
		if(this.sriSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				sriLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionContaDetalleFormJInternalFrame.class)) {
				TransaccionContaBeanSwingJInternalFrame transaccioncontaBeanSwingJInternalFrameLocal=(TransaccionContaBeanSwingJInternalFrame) ((TransaccionContaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncontaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccionConta(transaccioncontaBeanSwingJInternalFrameLocal.gettransaccionconta(),true);
				transaccioncontaBeanSwingJInternalFrameLocal.actualizarLista(transaccioncontaBeanSwingJInternalFrameLocal.transaccionconta,this.transaccioncontasForeignKey);

				transaccioncontaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncontaBeanSwingJInternalFrameLocal.transaccionconta);

				sriLocal.setTransaccionConta(transaccioncontaBeanSwingJInternalFrameLocal.transaccionconta);

				this.addItemDefectoCombosForeignKeyTransaccionConta();
				this.cargarCombosFrameTransaccionContasForeignKey("Formulario");
				this.setActualTransaccionContaForeignKey(transaccioncontaBeanSwingJInternalFrameLocal.transaccionconta.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				sriLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoComprobanteDetalleFormJInternalFrame.class)) {
				TipoComprobanteBeanSwingJInternalFrame tipocomprobanteBeanSwingJInternalFrameLocal=(TipoComprobanteBeanSwingJInternalFrame) ((TipoComprobanteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocomprobanteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoComprobante(tipocomprobanteBeanSwingJInternalFrameLocal.gettipocomprobante(),true);
				tipocomprobanteBeanSwingJInternalFrameLocal.actualizarLista(tipocomprobanteBeanSwingJInternalFrameLocal.tipocomprobante,this.tipocomprobantesForeignKey);

				tipocomprobanteBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocomprobanteBeanSwingJInternalFrameLocal.tipocomprobante);

				sriLocal.setTipoComprobante(tipocomprobanteBeanSwingJInternalFrameLocal.tipocomprobante);

				this.addItemDefectoCombosForeignKeyTipoComprobante();
				this.cargarCombosFrameTipoComprobantesForeignKey("Formulario");
				this.setActualTipoComprobanteForeignKey(tipocomprobanteBeanSwingJInternalFrameLocal.tipocomprobante.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTributarioDetalleFormJInternalFrame.class)) {
				TipoTributarioBeanSwingJInternalFrame tipotributarioBeanSwingJInternalFrameLocal=(TipoTributarioBeanSwingJInternalFrame) ((TipoTributarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotributarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTributario(tipotributarioBeanSwingJInternalFrameLocal.gettipotributario(),true);
				tipotributarioBeanSwingJInternalFrameLocal.actualizarLista(tipotributarioBeanSwingJInternalFrameLocal.tipotributario,this.tipotributariosForeignKey);

				tipotributarioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotributarioBeanSwingJInternalFrameLocal.tipotributario);

				sriLocal.setTipoTributario(tipotributarioBeanSwingJInternalFrameLocal.tipotributario);

				this.addItemDefectoCombosForeignKeyTipoTributario();
				this.cargarCombosFrameTipoTributariosForeignKey("Formulario");
				this.setActualTipoTributarioForeignKey(tipotributarioBeanSwingJInternalFrameLocal.tipotributario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoIvaDetalleFormJInternalFrame.class)) {
				TipoIvaBeanSwingJInternalFrame tipoivaBeanSwingJInternalFrameLocal=(TipoIvaBeanSwingJInternalFrame) ((TipoIvaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoivaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoIva(tipoivaBeanSwingJInternalFrameLocal.gettipoiva(),true);
				tipoivaBeanSwingJInternalFrameLocal.actualizarLista(tipoivaBeanSwingJInternalFrameLocal.tipoiva,this.tipoivasForeignKey);

				tipoivaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoivaBeanSwingJInternalFrameLocal.tipoiva);

				sriLocal.setTipoIva(tipoivaBeanSwingJInternalFrameLocal.tipoiva);

				this.addItemDefectoCombosForeignKeyTipoIva();
				this.cargarCombosFrameTipoIvasForeignKey("Formulario");
				this.setActualTipoIvaForeignKey(tipoivaBeanSwingJInternalFrameLocal.tipoiva.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRetencionIvaDetalleFormJInternalFrame.class)) {
				TipoRetencionIvaBeanSwingJInternalFrame tiporetencionivabienBeanSwingJInternalFrameLocal=(TipoRetencionIvaBeanSwingJInternalFrame) ((TipoRetencionIvaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporetencionivabienBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRetencionIva(tiporetencionivabienBeanSwingJInternalFrameLocal.gettiporetencioniva(),true);
				tiporetencionivabienBeanSwingJInternalFrameLocal.actualizarLista(tiporetencionivabienBeanSwingJInternalFrameLocal.tiporetencioniva,this.tiporetencionivabiensForeignKey);

				tiporetencionivabienBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporetencionivabienBeanSwingJInternalFrameLocal.tiporetencioniva);

				sriLocal.setTipoRetencionIvaBien(tiporetencionivabienBeanSwingJInternalFrameLocal.tiporetencioniva);

				this.addItemDefectoCombosForeignKeyTipoRetencionIvaBien();
				this.cargarCombosFrameTipoRetencionIvaBiensForeignKey("Formulario");
				this.setActualTipoRetencionIvaBienForeignKey(tiporetencionivabienBeanSwingJInternalFrameLocal.tiporetencioniva.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRetencionIvaDetalleFormJInternalFrame.class)) {
				TipoRetencionIvaBeanSwingJInternalFrame tiporetencionivaservicioBeanSwingJInternalFrameLocal=(TipoRetencionIvaBeanSwingJInternalFrame) ((TipoRetencionIvaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporetencionivaservicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRetencionIva(tiporetencionivaservicioBeanSwingJInternalFrameLocal.gettiporetencioniva(),true);
				tiporetencionivaservicioBeanSwingJInternalFrameLocal.actualizarLista(tiporetencionivaservicioBeanSwingJInternalFrameLocal.tiporetencioniva,this.tiporetencionivaserviciosForeignKey);

				tiporetencionivaservicioBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporetencionivaservicioBeanSwingJInternalFrameLocal.tiporetencioniva);

				sriLocal.setTipoRetencionIvaServicio(tiporetencionivaservicioBeanSwingJInternalFrameLocal.tiporetencioniva);

				this.addItemDefectoCombosForeignKeyTipoRetencionIvaServicio();
				this.cargarCombosFrameTipoRetencionIvaServiciosForeignKey("Formulario");
				this.setActualTipoRetencionIvaServicioForeignKey(tiporetencionivaservicioBeanSwingJInternalFrameLocal.tiporetencioniva.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoMovimientoDetalleFormJInternalFrame.class)) {
				TipoMovimientoBeanSwingJInternalFrame tipomovimientoBeanSwingJInternalFrameLocal=(TipoMovimientoBeanSwingJInternalFrame) ((TipoMovimientoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipomovimientoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoMovimiento(tipomovimientoBeanSwingJInternalFrameLocal.gettipomovimiento(),true);
				tipomovimientoBeanSwingJInternalFrameLocal.actualizarLista(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento,this.tipomovimientosForeignKey);

				tipomovimientoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento);

				sriLocal.setTipoMovimiento(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento);

				this.addItemDefectoCombosForeignKeyTipoMovimiento();
				this.cargarCombosFrameTipoMovimientosForeignKey("Formulario");
				this.setActualTipoMovimientoForeignKey(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarSriActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosSri.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = sriValidator.getInvalidValues(this.sri);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(Sri sri,List<Sri> sris) throws Exception {
		try	{		
			SriConstantesFunciones.actualizarLista(sri,sris,this.sriSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(Sri sri,List<Sri> sris) throws Exception {
		try	{			
			SriConstantesFunciones.actualizarSelectedLista(sri,sris);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<Sri> srisLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				srisLocal=this.sriLogic.getSris();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				srisLocal=this.sris;
			}
			//ARCHITECTURE
		
			for(Sri sriLocal:srisLocal) {
				if(this.permiteMantenimiento(sriLocal) && sriLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+SriConstantesFunciones.getSriLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelid_asiento_contableSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.IDTRANSACCIONCONTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelid_transaccion_contaSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelrucSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelid_clienteSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.RAZONSOCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelrazon_socialSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.IDTIPOCOMPROBANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabeltipo_comprobanteSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.ESRISE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabeles_riseSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.NUMEROSERIE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelnumero_serieSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.NUMEROAUTORIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelnumero_autorizacionSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.NUMEROSECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelnumero_secuencialSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelfecha_emisionSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.FECHAREGISTROCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelfecha_registro_contableSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.FECHACADUCIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelfecha_caducidadSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.IDTIPOTRIBUTARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabeltipo_tributarioSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.BIENESTAR12)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelbienes_tar12Sri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.BIENESTAR0)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelbienes_tar0Sri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.IDTIPOIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelid_tipo_ivaSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.SERVICIOSTAR12)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelservicios_tar12Sri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.SERVICIOSTAR0)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelservicios_tar0Sri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.MONTOIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelmonto_ivaSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.BASEIMPOTAR12)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelbase_impo_tar12Sri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.BASEIMPOTAR0)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelbase_impo_tar0Sri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.MONTOICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelmonto_iceSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.MONTOIVABIEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelmonto_iva_bienSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.MONTOIVASERVICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelmonto_iva_servicioSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.IDTIPORETENCIONIVABIEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelid_tipo_retencion_iva_bienSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.IDTIPORETENCIONIVASERVICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelid_tipo_retencion_iva_servicioSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.RETENCIONIVABIEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelretencion_iva_bienSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.RETENCIONIVASERVICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelretencion_iva_servicioSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.CONDEVOLUCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelcon_devolucionSri,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SriConstantesFunciones.IDTIPOMOVIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelid_tipo_movimientoSri,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormSri!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelid_asiento_contableSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelid_transaccion_contaSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelrucSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelid_clienteSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelrazon_socialSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabeltipo_comprobanteSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabeles_riseSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelnumero_serieSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelnumero_autorizacionSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelnumero_secuencialSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelfecha_emisionSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelfecha_registro_contableSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelfecha_caducidadSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabeltipo_tributarioSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelbienes_tar12Sri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelbienes_tar0Sri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelid_tipo_ivaSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelservicios_tar12Sri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelservicios_tar0Sri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelmonto_ivaSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelbase_impo_tar12Sri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelbase_impo_tar0Sri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelmonto_iceSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelmonto_iva_bienSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelmonto_iva_servicioSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelid_tipo_retencion_iva_bienSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelid_tipo_retencion_iva_servicioSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelretencion_iva_bienSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelretencion_iva_servicioSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelcon_devolucionSri,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSri.jLabelid_tipo_movimientoSri,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoSri--;	
		
		
		this.sriAux=new Sri();
		
		this.sriAux.setId(this.iIdNuevoSri);
		this.sriAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.sriLogic.getSris().add(this.sriAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.sris.add(this.sriAux);
		}
		//ARCHITECTURE
		
		this.sri=this.sriAux;
		
		if(SriJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioSri(this.sri);
			this.setVariablesObjetoActualToFormularioForeignKeySri(this.sri);
		}
				
		//this.setDefaultControlesSri();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeySri();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeySri();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeySri();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualSri(this.sriBean,this.sri,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(SriConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.sriSessionBean.getConGuardarRelaciones()) {
			classes=SriConstantesFunciones.getClassesRelationshipsOfSri(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.sriReturnGeneral=sriLogic.procesarEventosSrisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.sriLogic.getSris(),this.sri,this.sriParameterGeneral,this.isEsNuevoSri,classes);//this.sriLogic.getSri()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanSri(this.sriReturnGeneral,this.sriBean,false);
		
		if(this.sriReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeySri(this.sriReturnGeneral.getSri());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioSri(this.sriReturnGeneral.getSri());
		}
		
		if(this.sriReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioSri(this.sriReturnGeneral.getSri(),classes);//this.sriBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualSri(this.sri,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeySri();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeySri();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			SriBeanSwingJInternalFrameAdditional.RecargarFormSri(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingSri(false);
						
			if(sriSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(SriJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualSri();
			}
			
			this.actualizarVisualTableDatosSri();
			
			this.jTableDatosSri.setRowSelectionInterval(this.getIndiceNuevoSri(), this.getIndiceNuevoSri());
			
			this.seleccionarFilaTablaSriActual();
						
			this.actualizarEstadoCeldasBotonesSri("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesSri(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormSri.jTextFieldrucSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarrucSri);
		this.jInternalFrameDetalleFormSri.jTextArearazon_socialSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarrazon_socialSri);
		this.jInternalFrameDetalleFormSri.jCheckBoxes_riseSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activares_riseSri);
		this.jInternalFrameDetalleFormSri.jTextFieldnumero_serieSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarnumero_serieSri);
		this.jInternalFrameDetalleFormSri.jTextFieldnumero_autorizacionSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarnumero_autorizacionSri);
		this.jInternalFrameDetalleFormSri.jTextFieldnumero_secuencialSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarnumero_secuencialSri);
		this.jInternalFrameDetalleFormSri.jDateChooserfecha_emisionSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarfecha_emisionSri);
		this.jInternalFrameDetalleFormSri.jDateChooserfecha_registro_contableSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarfecha_registro_contableSri);
		this.jInternalFrameDetalleFormSri.jDateChooserfecha_caducidadSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarfecha_caducidadSri);
		this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar12Sri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarbienes_tar12Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar0Sri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarbienes_tar0Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar12Sri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarservicios_tar12Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar0Sri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarservicios_tar0Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldmonto_ivaSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarmonto_ivaSri);
		this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar12Sri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarbase_impo_tar12Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar0Sri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarbase_impo_tar0Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldmonto_iceSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarmonto_iceSri);
		this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_bienSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarmonto_iva_bienSri);
		this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_servicioSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarmonto_iva_servicioSri);
		this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_bienSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarretencion_iva_bienSri);
		this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_servicioSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarretencion_iva_servicioSri);
		this.jInternalFrameDetalleFormSri.jCheckBoxcon_devolucionSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarcon_devolucionSri);	
		
		this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarid_asiento_contableSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarid_transaccion_contaSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarid_clienteSri);
		this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activartipo_comprobanteSri);
		this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activartipo_tributarioSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarid_tipo_ivaSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarid_tipo_retencion_iva_bienSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarid_tipo_retencion_iva_servicioSri);//
		this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.setEnabled(isHabilitar && this.sriConstantesFunciones.activarid_tipo_movimientoSri);
	};
	
	public void setDefaultControlesSri() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoSri(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.sriSessionBean.setConGuardarRelaciones(true);			
			this.sriSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormSri.jTabbedPaneRelacionesSri.setVisible(true);
			
					
		} else {
			//this.sriSessionBean.setConGuardarRelaciones(false);			
			this.sriSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormSri.jTabbedPaneRelacionesSri.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoSri() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Sri sriAux:this.sriLogic.getSris()) {
				if(sriAux.getId().equals(this.iIdNuevoSri)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Sri sriAux:this.sris) {
				if(sriAux.getId().equals(this.iIdNuevoSri)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualSri(Sri sri,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Sri sriAux:this.sriLogic.getSris()) {
				if(sriAux.getId().equals(sri.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Sri sriAux:this.sris) {
				if(sriAux.getId().equals(sri.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalSri(Sri sriOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Sri sriAux:this.sriLogic.getSris()) {
				if(sriAux.getSriOriginal().getId().equals(sriOriginal.getId())) {
					existe=true;
					sriOriginal.setId(sriAux.getId());
					sriOriginal.setVersionRow(sriAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Sri sriAux:this.sris) {
				if(sriAux.getSriOriginal().getId().equals(sriOriginal.getId())) {
					existe=true;
					sriOriginal.setId(sriAux.getId());
					sriOriginal.setVersionRow(sriAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosSri(Boolean esParaCancelar) throws Exception {
		srisAux=new ArrayList<Sri>();
		sriAux=new Sri();
		
		if(!this.sriSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Sri sriAux:this.sriLogic.getSris()) {
					if(sriAux.getId()<0) {
						srisAux.add(sriAux);
					}		
				}
				this.iIdNuevoSri=0L;
				this.sriLogic.getSris().removeAll(srisAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Sri sriAux:this.sris) {
					if(sriAux.getId()<0) {
						srisAux.add(sriAux);
					}		
				}
				this.iIdNuevoSri=0L;
				this.sris.removeAll(srisAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoSri 
					&& this.sriLogic.getSris().size()>0
					) {
					sriAux=this.sriLogic.getSris().get(this.sriLogic.getSris().size() - 1);
				
					if(sriAux.getId()<0) {
						this.sriLogic.getSris().remove(sriAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoSri && this.sris.size()>0) {
					sriAux=this.sris.get(this.sris.size() - 1);
				
					if(sriAux.getId()<0) {
						this.sris.remove(sriAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoSri(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(sri.getId()<0) {
				this.sriLogic.getSris().remove(this.sri);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(sri.getId()<0) {
				this.sris.remove(this.sri);
			}
		}			
	}
	
	public void setEstadosInicialesSri(List<Sri> srisAux) throws Exception {
		SriConstantesFunciones.setEstadosInicialesSri(srisAux);
	}
	
	public void setEstadosInicialesSri(Sri sriAux) throws Exception {
		SriConstantesFunciones.setEstadosInicialesSri(sriAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarSriActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesSri("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarSriActual()) {
				if(!this.isEsNuevoSri) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesSri("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoSri=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarSriActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Sri ?", "MANTENIMIENTO DE Sri", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesSri("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(Sri sri) throws Exception {
		SriConstantesFunciones.seleccionarAsignar(this.sri,sri);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarSri=this.isPermisoActualizarOriginalSri;
			
			
			this.seleccionarAsignar(sri);
			
			

			idAsientoContableActual=sri.getid_asiento_contable();
			this.seleccionarAsientoContableActual();

			idClienteActual=sri.getid_cliente();
			this.seleccionarClienteActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			SriConstantesFunciones.quitarEspaciosSri(this.sri,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesSri("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.sriSessionBean.setsFuncionBusquedaRapida(this.sriSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoSri) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosSri(esParaCancelar);				
				this.cancelarNuevoSri(esParaCancelar);								
			}
			
			this.sri=new Sri();
			
			this.inicializarSri();
			
			this.actualizarEstadoCeldasBotonesSri("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarSri() throws Exception {
		try {
			SriConstantesFunciones.inicializarSri(this.sri);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.sriLogic.getSris().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteSris(String sAccionBusqueda,List<Sri> srisParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="Sri"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="SriMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("SriMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="Sri"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Sris");		
		parameters.put("busquedapor", SriConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceSri=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			SriConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			SriConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceSri=new JRBeanArrayDataSource(SriJInternalFrame.TraerSriBeans(srisParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceSri);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+SriConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+SriConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(SriBean.TraerSriBeans(srisParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteSris(sAccionBusqueda,sTipoArchivoReporte,srisParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalSris(sAccionBusqueda,sTipoArchivoReporte,srisParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					/*
					this.jButtonGenerarExcelReporteDinamicoSriActionPerformed(null);
					//this.generarExcelReporteSris(sAccionBusqueda,sTipoArchivoReporte,srisParaReportes);
					*/
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalSris(sAccionBusqueda,sTipoArchivoReporte,srisParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesSris(sAccionBusqueda,sTipoArchivoReporte,srisParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesSris(sAccionBusqueda,sTipoArchivoReporte,srisParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteSris(String sAccionBusqueda,String sTipoArchivoReporte,List<Sri> srisParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"sri";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Sris");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderSri("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(Sri sri : srisParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			SriConstantesFunciones.generarExcelReporteDataSri("NORMAL",row,workbook,sri,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.sriSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderSri(String sTipo,Row row,Workbook workbook) {
		
		SriConstantesFunciones.generarExcelReporteHeaderSri(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalSris(String sAccionBusqueda,String sTipoArchivoReporte,List<Sri> srisParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"sri_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Sris");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(Sri sri : srisParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(SriConstantesFunciones.getSriDescripcion(sri));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getasientocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.gettransaccionconta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_RAZONSOCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_RAZONSOCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getrazon_social());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.gettipocomprobante_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_ESRISE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_ESRISE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(sri.getes_rise()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_NUMEROSERIE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_NUMEROSERIE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getnumero_serie());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_NUMEROAUTORIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_NUMEROAUTORIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getnumero_autorizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_NUMEROSECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_NUMEROSECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getnumero_secuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getfecha_registro_contable());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_FECHACADUCIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_FECHACADUCIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getfecha_caducidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.gettipotributario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_BIENESTAR12))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_BIENESTAR12);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getbienes_tar12());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_BIENESTAR0))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_BIENESTAR0);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getbienes_tar0());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_IDTIPOIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.gettipoiva_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_SERVICIOSTAR12))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_SERVICIOSTAR12);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getservicios_tar12());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_SERVICIOSTAR0))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_SERVICIOSTAR0);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getservicios_tar0());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_MONTOIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_MONTOIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getmonto_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_BASEIMPOTAR12))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_BASEIMPOTAR12);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getbase_impo_tar12());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_BASEIMPOTAR0))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_BASEIMPOTAR0);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getbase_impo_tar0());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_MONTOICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_MONTOICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getmonto_ice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_MONTOIVABIEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_MONTOIVABIEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getmonto_iva_bien());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_MONTOIVASERVICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_MONTOIVASERVICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getmonto_iva_servicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.gettiporetencionivabien_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.gettiporetencionivaservicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_RETENCIONIVABIEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_RETENCIONIVABIEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getretencion_iva_bien());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.getretencion_iva_servicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_CONDEVOLUCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_CONDEVOLUCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(sri.getcon_devolucion()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(sri.gettipomovimiento_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.sriSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesSris(String sAccionBusqueda,String sTipoArchivoReporte,List<Sri> srisParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<Sri> srisRespaldo=null;
		
		classes=SriConstantesFunciones.getClassesRelationshipsOfSri(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.sriLogic.setDatosCliente(this.datosCliente);
		this.sriLogic.setDatosDeep(this.datosDeep);
		this.sriLogic.setIsConDeep(true);
		
		srisRespaldo=this.sriLogic.getSris();
		
		this.sriLogic.setSris(srisParaReportes);	
		this.sriLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		srisParaReportes=this.sriLogic.getSris();
		this.sriLogic.setSris(srisRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"sri_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Sris");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderSri("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(Sri sri : srisParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderSri("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			SriConstantesFunciones.generarExcelReporteDataSri("NORMAL",row,workbook,sri,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(SriConstantesFunciones.getSriDescripcion(sri));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.sriSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		/*
		for(int index:this.jInternalFrameReporteDinamicoSri.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSri.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		*/
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		/*
		for(int index:this.jInternalFrameReporteDinamicoSri.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSri.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		*/
		
		return existe;
	}
	
	public void startProcessSri() throws Exception {		
		this.startProcessSri(true);
	}
	
	public void startProcessSri(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasSri ,this.jPanelParametrosReportesSri, this.jScrollPanelDatosSri,this.jPanelPaginacionSri, this.jScrollPanelDatosEdicionSri, this.jPanelAccionesSri,this.jPanelAccionesFormularioSri,this.jmenuBarSri,this.jmenuBarDetalleSri,this.jTtoolBarSri,this.jTtoolBarDetalleSri);		
		
		final JTabbedPane jTabbedPaneBusquedasSri=new JTabbedPane();
		
		final JPanel jPanelParametrosReportesSri=this.jPanelParametrosReportesSri;
		//final JScrollPane jScrollPanelDatosSri=this.jScrollPanelDatosSri;
		final JTable jTableDatosSri=this.jTableDatosSri;		
		final JPanel jPanelPaginacionSri=this.jPanelPaginacionSri;
		//final JScrollPane jScrollPanelDatosEdicionSri=this.jScrollPanelDatosEdicionSri;
		final JPanel jPanelAccionesSri=this.jPanelAccionesSri;
		
		JPanel jPanelCamposAuxiliarSri=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarSri=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormSri!=null) {
			jPanelCamposAuxiliarSri=this.jInternalFrameDetalleFormSri.jPanelCamposSri;
			jPanelAccionesFormularioAuxiliarSri=this.jInternalFrameDetalleFormSri.jPanelAccionesFormularioSri;
		}
		
		final JPanel jPanelCamposSri=jPanelCamposAuxiliarSri;
		final JPanel jPanelAccionesFormularioSri=jPanelAccionesFormularioAuxiliarSri;
		
		
		final JMenuBar jmenuBarSri=new JMenuBar();
		final JMenuBar jmenuBarDetalleSri=new JMenuBar();
		final JToolBar jTtoolBarSri=new JToolBar();
		final JToolBar jTtoolBarDetalleSri=new JToolBar();		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasSri;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesSri;
			processRunnable.jTableDatos=jTableDatosSri;
			processRunnable.jPanelCampos=jPanelCamposSri;
			processRunnable.jPanelPaginacion=jPanelPaginacionSri;
			processRunnable.jPanelAcciones=jPanelAccionesSri;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioSri;
			
			
			processRunnable.jmenuBar=jmenuBarSri;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleSri;
			processRunnable.jTtoolBar=jTtoolBarSri;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleSri;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasSri ,jPanelParametrosReportesSri,jTableDatosSri, /*jScrollPanelDatosSri,*/jPanelCamposSri,jPanelPaginacionSri, /*jScrollPanelDatosEdicionSri,*/ jPanelAccionesSri,jPanelAccionesFormularioSri,jmenuBarSri,jmenuBarDetalleSri,jTtoolBarSri,jTtoolBarDetalleSri);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasSri ,jPanelParametrosReportesSri, jScrollPanelDatosSri,jPanelPaginacionSri, jScrollPanelDatosEdicionSri, jPanelAccionesSri,jPanelAccionesFormularioSri,jmenuBarSri,jmenuBarDetalleSri,jTtoolBarSri,jTtoolBarDetalleSri);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessSri() {// throws Exception 
		this.finishProcessSri(true);
	}
	
	public void finishProcessSri(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasSri ,this.jPanelParametrosReportesSri, this.jScrollPanelDatosSri,this.jPanelPaginacionSri, this.jScrollPanelDatosEdicionSri, this.jPanelAccionesSri,this.jPanelAccionesFormularioSri,this.jmenuBarSri,this.jmenuBarDetalleSri,this.jTtoolBarSri,this.jTtoolBarDetalleSri);		
		
		final JTabbedPane jTabbedPaneBusquedasSri=new JTabbedPane();
		
		final JPanel jPanelParametrosReportesSri=this.jPanelParametrosReportesSri;
		//final JScrollPane jScrollPanelDatosSri=this.jScrollPanelDatosSri;
		final JTable jTableDatosSri=this.jTableDatosSri;		
		final JPanel jPanelPaginacionSri=this.jPanelPaginacionSri;
		//final JScrollPane jScrollPanelDatosEdicionSri=this.jScrollPanelDatosEdicionSri;
		final JPanel jPanelAccionesSri=this.jPanelAccionesSri;
		
		JPanel jPanelCamposAuxiliarSri=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarSri=new JPanel();
		
		if(this.jInternalFrameDetalleFormSri!=null) {
			jPanelCamposAuxiliarSri=this.jInternalFrameDetalleFormSri.jPanelCamposSri;
			jPanelAccionesFormularioAuxiliarSri=this.jInternalFrameDetalleFormSri.jPanelAccionesFormularioSri;
		}
		
		final JPanel jPanelCamposSri=jPanelCamposAuxiliarSri;
		final JPanel jPanelAccionesFormularioSri=jPanelAccionesFormularioAuxiliarSri;
		
		
		final JMenuBar jmenuBarSri=new JMenuBar();
		final JMenuBar jmenuBarDetalleSri=new JMenuBar();
		final JToolBar jTtoolBarSri=new JToolBar();
		final JToolBar jTtoolBarDetalleSri=new JToolBar();		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasSri;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesSri;
			processRunnable.jTableDatos=jTableDatosSri;
			processRunnable.jPanelCampos=jPanelCamposSri;
			processRunnable.jPanelPaginacion=jPanelPaginacionSri;
			processRunnable.jPanelAcciones=jPanelAccionesSri;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioSri;
			
			
			processRunnable.jmenuBar=jmenuBarSri;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleSri;
			processRunnable.jTtoolBar=jTtoolBarSri;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleSri;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasSri ,jPanelParametrosReportesSri, jTableDatosSri,/*jScrollPanelDatosSri,*/jPanelCamposSri,jPanelPaginacionSri, /*jScrollPanelDatosEdicionSri,*/ jPanelAccionesSri,jPanelAccionesFormularioSri,jmenuBarSri,jmenuBarDetalleSri,jTtoolBarSri,jTtoolBarDetalleSri));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesSri(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarSri(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuSri(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarSri(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarSri,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleSri,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuSri(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarSri,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleSri,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.sriConstantesFunciones.getsFinalQuerySri();
		String  finalQueryPaginacionTodos=this.sriConstantesFunciones.getsFinalQuerySri();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=SriConstantesFunciones.getArrayColumnasGlobalesNoSri(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=SriConstantesFunciones.getArrayColumnasGlobalesSri(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,SriConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		/*
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		*/
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.srisEliminados= new ArrayList<Sri>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessSri();
		
				///*SriSessionBean*/this.sriSessionBean=new SriSessionBean();
			
			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=SriConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=SriConstantesFunciones.getClassesForeignKeysOfSri(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/sri."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			srisAux= new ArrayList<Sri>();
			
				
			sriLogic.setDatosCliente(this.datosCliente);
			sriLogic.setDatosDeep(this.datosDeep);
			sriLogic.setIsConDeep(true);
			
			
			sriLogic.getSriDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					sriLogic.getTodosSris(finalQueryGlobal,pagination);
					
					//sriLogic.getTodosSrisWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(sriLogic.getSris()==null|| sriLogic.getSris().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							srisAux= new ArrayList<Sri>();
							srisAux.addAll(sriLogic.getSris());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux= new ArrayList<Sri>();
							srisAux.addAll(sris);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							sriLogic.getTodosSris(finalQueryGlobal+"",this.pagination);												
							
							//sriLogic.getTodosSrisWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteSris("Todos",sriLogic.getSris() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							sriLogic.setSris(new ArrayList<Sri>());					
							sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idSri=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idSri=this.idActual;
				
				} else if(this.idSriActual!=null && this.idSriActual!=0L) {
					idSri=idSriActual;
				}
				
					
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndicePorId(idSri);
				
				this.sris=new ArrayList<Sri>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					sriLogic.getEntity(idSri);
					
					//sriLogic.getEntityWithConnection(idSri);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					sriLogic.setSris(new ArrayList<Sri>());
					sriLogic.getSris().add(sriLogic.getSri());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sris=new ArrayList<Sri>();
					this.sris.add(sri);
				}
				
				if(sriLogic.getSri()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					sriLogic.getSrisFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=sriLogic.getSris()==null||sriLogic.getSris().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=sris==null|| sris.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srisAux=new ArrayList<Sri>();
						srisAux.addAll(sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux=new ArrayList<Sri>();
							srisAux.addAll(sris);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							sriLogic.getSrisFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSris("FK_IdAsientoContable",sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSris("FK_IdAsientoContable",sris);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.setSris(new ArrayList<Sri>());
						sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					sriLogic.getSrisFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=sriLogic.getSris()==null||sriLogic.getSris().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=sris==null|| sris.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srisAux=new ArrayList<Sri>();
						srisAux.addAll(sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux=new ArrayList<Sri>();
							srisAux.addAll(sris);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							sriLogic.getSrisFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSris("FK_IdCliente",sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSris("FK_IdCliente",sris);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.setSris(new ArrayList<Sri>());
						sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoComprobante")) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(tipo_comprobanteFK_IdTipoComprobante);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					sriLogic.getSrisFK_IdTipoComprobante(finalQueryGlobal,pagination,tipo_comprobanteFK_IdTipoComprobante);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(tipo_comprobanteFK_IdTipoComprobante);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(tipo_comprobanteFK_IdTipoComprobante);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=sriLogic.getSris()==null||sriLogic.getSris().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=sris==null|| sris.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srisAux=new ArrayList<Sri>();
						srisAux.addAll(sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux=new ArrayList<Sri>();
							srisAux.addAll(sris);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							sriLogic.getSrisFK_IdTipoComprobante(finalQueryGlobal,pagination,tipo_comprobanteFK_IdTipoComprobante);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(tipo_comprobanteFK_IdTipoComprobante);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoComprobante(tipo_comprobanteFK_IdTipoComprobante);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSris("FK_IdTipoComprobante",sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSris("FK_IdTipoComprobante",sris);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.setSris(new ArrayList<Sri>());
						sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoIva")) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					sriLogic.getSrisFK_IdTipoIva(finalQueryGlobal,pagination,id_tipo_ivaFK_IdTipoIva);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=sriLogic.getSris()==null||sriLogic.getSris().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=sris==null|| sris.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srisAux=new ArrayList<Sri>();
						srisAux.addAll(sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux=new ArrayList<Sri>();
							srisAux.addAll(sris);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							sriLogic.getSrisFK_IdTipoIva(finalQueryGlobal,pagination,id_tipo_ivaFK_IdTipoIva);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoIva(id_tipo_ivaFK_IdTipoIva);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSris("FK_IdTipoIva",sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSris("FK_IdTipoIva",sris);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.setSris(new ArrayList<Sri>());
						sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoMovimiento")) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					sriLogic.getSrisFK_IdTipoMovimiento(finalQueryGlobal,pagination,id_tipo_movimientoFK_IdTipoMovimiento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=sriLogic.getSris()==null||sriLogic.getSris().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=sris==null|| sris.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srisAux=new ArrayList<Sri>();
						srisAux.addAll(sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux=new ArrayList<Sri>();
							srisAux.addAll(sris);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							sriLogic.getSrisFK_IdTipoMovimiento(finalQueryGlobal,pagination,id_tipo_movimientoFK_IdTipoMovimiento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSris("FK_IdTipoMovimiento",sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSris("FK_IdTipoMovimiento",sris);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.setSris(new ArrayList<Sri>());
						sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoRetencionIvaBien")) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaBien(id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					sriLogic.getSrisFK_IdTipoRetencionIvaBien(finalQueryGlobal,pagination,id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaBien(id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaBien(id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=sriLogic.getSris()==null||sriLogic.getSris().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=sris==null|| sris.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srisAux=new ArrayList<Sri>();
						srisAux.addAll(sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux=new ArrayList<Sri>();
							srisAux.addAll(sris);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							sriLogic.getSrisFK_IdTipoRetencionIvaBien(finalQueryGlobal,pagination,id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaBien(id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaBien(id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSris("FK_IdTipoRetencionIvaBien",sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSris("FK_IdTipoRetencionIvaBien",sris);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.setSris(new ArrayList<Sri>());
						sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoRetencionIvaServicio")) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaServicio(id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					sriLogic.getSrisFK_IdTipoRetencionIvaServicio(finalQueryGlobal,pagination,id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaServicio(id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaServicio(id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=sriLogic.getSris()==null||sriLogic.getSris().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=sris==null|| sris.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srisAux=new ArrayList<Sri>();
						srisAux.addAll(sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux=new ArrayList<Sri>();
							srisAux.addAll(sris);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							sriLogic.getSrisFK_IdTipoRetencionIvaServicio(finalQueryGlobal,pagination,id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaServicio(id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoRetencionIvaServicio(id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSris("FK_IdTipoRetencionIvaServicio",sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSris("FK_IdTipoRetencionIvaServicio",sris);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.setSris(new ArrayList<Sri>());
						sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTributario")) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(tipo_tributarioFK_IdTipoTributario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					sriLogic.getSrisFK_IdTipoTributario(finalQueryGlobal,pagination,tipo_tributarioFK_IdTipoTributario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(tipo_tributarioFK_IdTipoTributario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(tipo_tributarioFK_IdTipoTributario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=sriLogic.getSris()==null||sriLogic.getSris().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=sris==null|| sris.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srisAux=new ArrayList<Sri>();
						srisAux.addAll(sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux=new ArrayList<Sri>();
							srisAux.addAll(sris);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							sriLogic.getSrisFK_IdTipoTributario(finalQueryGlobal,pagination,tipo_tributarioFK_IdTipoTributario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(tipo_tributarioFK_IdTipoTributario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTipoTributario(tipo_tributarioFK_IdTipoTributario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSris("FK_IdTipoTributario",sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSris("FK_IdTipoTributario",sris);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.setSris(new ArrayList<Sri>());
						sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionConta")) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					sriLogic.getSrisFK_IdTransaccionConta(finalQueryGlobal,pagination,id_transaccion_contaFK_IdTransaccionConta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=sriLogic.getSris()==null||sriLogic.getSris().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=sris==null|| sris.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						srisAux=new ArrayList<Sri>();
						srisAux.addAll(sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							srisAux=new ArrayList<Sri>();
							srisAux.addAll(sris);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							sriLogic.getSrisFK_IdTransaccionConta(finalQueryGlobal,pagination,id_transaccion_contaFK_IdTransaccionConta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SriConstantesFunciones.getDetalleIndiceFK_IdTransaccionConta(id_transaccion_contaFK_IdTransaccionConta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSris("FK_IdTransaccionConta",sriLogic.getSris());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSris("FK_IdTransaccionConta",sris);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						sriLogic.setSris(new ArrayList<Sri>());
						sriLogic.getSris().addAll(srisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sris=new ArrayList<Sri>();
							sris.addAll(srisAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesSri();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessSri();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=sriLogic.getSris().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=sris.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=sriLogic.getSris().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=sris.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(Sri sri) {
		Boolean permite=true;
		
		if(this.sri.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	/*
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=SriConstantesFunciones.getOrderByListaSri();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=SriConstantesFunciones.getOrderByListaSri();
		}		
	}
	*/
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Sri sri:sriLogic.getSris()) {
				if(sri.getsType().equals(Constantes2.S_TOTALES)) {
					sriTotales=sri;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Sri sri:this.sris) {
				if(sri.getsType().equals(Constantes2.S_TOTALES)) {
					sriTotales=sri;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.sriAux=new Sri();
			this.sriAux.setsType(Constantes2.S_TOTALES);
			this.sriAux.setIsNew(false);
			this.sriAux.setIsChanged(false);
			this.sriAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				SriConstantesFunciones.TotalizarValoresFilaSri(this.sriLogic.getSris(),this.sriAux);
				
				this.sriLogic.getSris().add(this.sriAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				SriConstantesFunciones.TotalizarValoresFilaSri(this.sris,this.sriAux);
				
				this.sris.add(this.sriAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		sriTotales=new Sri();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.sriLogic.getSris().remove(sriTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.sris.remove(sriTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		sriTotales=new Sri();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Sri sri:sriLogic.getSris()) {
				if(sri.getsType().equals(Constantes2.S_TOTALES)) {
					sriTotales=sri;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				SriConstantesFunciones.TotalizarValoresFilaSri(this.sriLogic.getSris(),sriTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Sri sri:this.sris) {
				if(sri.getsType().equals(Constantes2.S_TOTALES)) {
					sriTotales=sri;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				SriConstantesFunciones.TotalizarValoresFilaSri(this.sris,sriTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosSri() {
		this.isPermisoTodoSri=false;
		this.isPermisoNuevoSri=false;
		this.isPermisoActualizarSri=false;
		this.isPermisoActualizarOriginalSri=false;
		this.isPermisoEliminarSri=false;
		this.isPermisoGuardarCambiosSri=false;
		this.isPermisoConsultaSri=false;
		this.isPermisoBusquedaSri=false;
		this.isPermisoReporteSri=false;		
		this.isPermisoOrdenSri=false;		
		this.isPermisoPaginacionMedioSri=false;		
		this.isPermisoPaginacionAltoSri=false;
		this.isPermisoPaginacionTodoSri=false;
		this.isPermisoCopiarSri=false;		
		this.isPermisoVerFormSri=false;		
		this.isPermisoDuplicarSri=false;		
		this.isPermisoOrdenSri=false;		
	}
	
	public void setPermisosUsuarioSri(Boolean isPermiso) {
		this.isPermisoTodoSri=isPermiso;
		this.isPermisoNuevoSri=isPermiso;
		this.isPermisoActualizarSri=isPermiso;
		this.isPermisoActualizarOriginalSri=isPermiso;
		this.isPermisoEliminarSri=isPermiso;
		this.isPermisoGuardarCambiosSri=isPermiso;
		this.isPermisoConsultaSri=isPermiso;
		this.isPermisoBusquedaSri=isPermiso;
		this.isPermisoReporteSri=isPermiso;
		this.isPermisoOrdenSri=isPermiso;		
		this.isPermisoPaginacionMedioSri=isPermiso;		
		this.isPermisoPaginacionAltoSri=isPermiso;		
		this.isPermisoPaginacionTodoSri=isPermiso;		
		this.isPermisoCopiarSri=isPermiso;		
		this.isPermisoVerFormSri=isPermiso;		
		this.isPermisoDuplicarSri=isPermiso;
		this.isPermisoOrdenSri=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioSri(Boolean isPermiso) {
		//this.isPermisoTodoSri=isPermiso;
		this.isPermisoNuevoSri=isPermiso;
		this.isPermisoActualizarSri=isPermiso;
		this.isPermisoActualizarOriginalSri=isPermiso;
		this.isPermisoEliminarSri=isPermiso;
		this.isPermisoGuardarCambiosSri=isPermiso;
		//this.isPermisoConsultaSri=isPermiso;
		//this.isPermisoBusquedaSri=isPermiso;
		//this.isPermisoReporteSri=isPermiso;
		//this.isPermisoOrdenSri=isPermiso;		
		//this.isPermisoPaginacionMedioSri=isPermiso;		
		//this.isPermisoPaginacionAltoSri=isPermiso;		
		//this.isPermisoPaginacionTodoSri=isPermiso;		
		//this.isPermisoCopiarSri=isPermiso;		
		//this.isPermisoDuplicarSri=isPermiso;
		//this.isPermisoOrdenSri=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioSriClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(SriJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebSri(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioSriClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioSriClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionSriClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioSriClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioSri() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(SriJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.sriSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, SriConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoSri=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarSri=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalSri=this.isPermisoActualizarSri;
			this.isPermisoEliminarSri=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosSri=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaSri=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaSri=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoSri=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteSri=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenSri=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioSri=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoSri=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoSri=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarSri=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormSri=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarSri=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenSri=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.sriSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosSri.setToolTipText(this.jTableDatosSri.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioSri(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioSri(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(SriJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(SriJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioSri() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeySriListas()throws Exception {
		try	{						
			
				this.asientocontablesForeignKey=new ArrayList();
				this.transaccioncontasForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.tipocomprobantesForeignKey=new ArrayList();
				this.tipotributariosForeignKey=new ArrayList();
				this.tipoivasForeignKey=new ArrayList();
				this.tiporetencionivabiensForeignKey=new ArrayList();
				this.tiporetencionivaserviciosForeignKey=new ArrayList();
				this.tipomovimientosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeySriListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(SriJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeySriListas(false);
			} else {
			
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionContaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoComprobanteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTributarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRetencionIvaBienListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRetencionIvaServicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionContaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncontasForeignKey==null||this.transaccioncontasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionContaConstantesFunciones.getArrayColumnasGlobalesTransaccionConta(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionContaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionContaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionContasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoComprobanteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocomprobantesForeignKey==null||this.tipocomprobantesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoComprobanteConstantesFunciones.getArrayColumnasGlobalesTipoComprobante(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoComprobanteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoComprobanteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoComprobantesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTributarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotributariosForeignKey==null||this.tipotributariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTributarioConstantesFunciones.getArrayColumnasGlobalesTipoTributario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTributarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTributarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTributariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIvaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoivasForeignKey==null||this.tipoivasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoIvaConstantesFunciones.getArrayColumnasGlobalesTipoIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIvaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoIvaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoIvasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaBienListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporetencionivabiensForeignKey==null||this.tiporetencionivabiensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRetencionIvaConstantesFunciones.getArrayColumnasGlobalesTipoRetencionIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionIvaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRetencionIvaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRetencionIvaBiensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaServicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporetencionivaserviciosForeignKey==null||this.tiporetencionivaserviciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRetencionIvaConstantesFunciones.getArrayColumnasGlobalesTipoRetencionIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionIvaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRetencionIvaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRetencionIvaServiciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimientoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipomovimientosForeignKey==null||this.tipomovimientosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoMovimientoConstantesFunciones.getArrayColumnasGlobalesTipoMovimiento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoMovimientoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoMovimientosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeySriListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			SriParameterReturnGeneral sriReturnGeneral=new SriParameterReturnGeneral();
						
			


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.sriConstantesFunciones.cargarid_asiento_contableSri)
					 || (this.esRecargarFks && this.sriConstantesFunciones.cargarid_asiento_contableSri)) {

					if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+sriSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}


				String finalQueryGlobalTransaccionConta="";

				if(((this.transaccioncontasForeignKey==null||this.transaccioncontasForeignKey.size()<=0) && this.sriConstantesFunciones.cargarid_transaccion_contaSri)
					 || (this.esRecargarFks && this.sriConstantesFunciones.cargarid_transaccion_contaSri)) {

					if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionConta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionContaConstantesFunciones.getArrayColumnasGlobalesTransaccionConta(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionConta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionContaConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionConta=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionConta, "");
						finalQueryGlobalTransaccionConta+=TransaccionContaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionContasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionConta=" WHERE " + ConstantesSql.ID + "="+sriSessionBean.getlidTransaccionContaActual();
					}
				} else {
					finalQueryGlobalTransaccionConta="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.sriConstantesFunciones.cargarid_clienteSri)
					 || (this.esRecargarFks && this.sriConstantesFunciones.cargarid_clienteSri)) {

					if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+sriSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalTipoComprobante="";

				if(((this.tipocomprobantesForeignKey==null||this.tipocomprobantesForeignKey.size()<=0) && this.sriConstantesFunciones.cargartipo_comprobanteSri)
					 || (this.esRecargarFks && this.sriConstantesFunciones.cargartipo_comprobanteSri)) {

					if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoComprobante()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoComprobanteConstantesFunciones.getArrayColumnasGlobalesTipoComprobante(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoComprobante=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoComprobanteConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoComprobante=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoComprobante, "");
						finalQueryGlobalTipoComprobante+=TipoComprobanteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoComprobantesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoComprobante=" WHERE " + ConstantesSql.ID + "="+sriSessionBean.getlidTipoComprobanteActual();
					}
				} else {
					finalQueryGlobalTipoComprobante="NONE";
				}


				String finalQueryGlobalTipoTributario="";

				if(((this.tipotributariosForeignKey==null||this.tipotributariosForeignKey.size()<=0) && this.sriConstantesFunciones.cargartipo_tributarioSri)
					 || (this.esRecargarFks && this.sriConstantesFunciones.cargartipo_tributarioSri)) {

					if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoTributario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTributarioConstantesFunciones.getArrayColumnasGlobalesTipoTributario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoTributario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTributarioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTributario=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTributario, "");
						finalQueryGlobalTipoTributario+=TipoTributarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTributariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTributario=" WHERE " + ConstantesSql.ID + "="+sriSessionBean.getlidTipoTributarioActual();
					}
				} else {
					finalQueryGlobalTipoTributario="NONE";
				}


				String finalQueryGlobalTipoIva="";

				if(((this.tipoivasForeignKey==null||this.tipoivasForeignKey.size()<=0) && this.sriConstantesFunciones.cargarid_tipo_ivaSri)
					 || (this.esRecargarFks && this.sriConstantesFunciones.cargarid_tipo_ivaSri)) {

					if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoIva()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoIvaConstantesFunciones.getArrayColumnasGlobalesTipoIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoIva=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIvaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoIva=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoIva, "");
						finalQueryGlobalTipoIva+=TipoIvaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoIvasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoIva=" WHERE " + ConstantesSql.ID + "="+sriSessionBean.getlidTipoIvaActual();
					}
				} else {
					finalQueryGlobalTipoIva="NONE";
				}


				String finalQueryGlobalTipoRetencionIvaBien="";

				if(((this.tiporetencionivabiensForeignKey==null||this.tiporetencionivabiensForeignKey.size()<=0) && this.sriConstantesFunciones.cargarid_tipo_retencion_iva_bienSri)
					 || (this.esRecargarFks && this.sriConstantesFunciones.cargarid_tipo_retencion_iva_bienSri)) {

					if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaBien()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoRetencionIvaConstantesFunciones.getArrayColumnasGlobalesTipoRetencionIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoRetencionIvaBien=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionIvaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoRetencionIvaBien=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoRetencionIvaBien, "");
						finalQueryGlobalTipoRetencionIvaBien+=TipoRetencionIvaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoRetencionIvaBiensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoRetencionIvaBien=" WHERE " + ConstantesSql.ID + "="+sriSessionBean.getlidTipoRetencionIvaBienActual();
					}
				} else {
					finalQueryGlobalTipoRetencionIvaBien="NONE";
				}


				String finalQueryGlobalTipoRetencionIvaServicio="";

				if(((this.tiporetencionivaserviciosForeignKey==null||this.tiporetencionivaserviciosForeignKey.size()<=0) && this.sriConstantesFunciones.cargarid_tipo_retencion_iva_servicioSri)
					 || (this.esRecargarFks && this.sriConstantesFunciones.cargarid_tipo_retencion_iva_servicioSri)) {

					if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaServicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoRetencionIvaConstantesFunciones.getArrayColumnasGlobalesTipoRetencionIva(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoRetencionIvaServicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionIvaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoRetencionIvaServicio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoRetencionIvaServicio, "");
						finalQueryGlobalTipoRetencionIvaServicio+=TipoRetencionIvaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoRetencionIvaServiciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoRetencionIvaServicio=" WHERE " + ConstantesSql.ID + "="+sriSessionBean.getlidTipoRetencionIvaServicioActual();
					}
				} else {
					finalQueryGlobalTipoRetencionIvaServicio="NONE";
				}


				String finalQueryGlobalTipoMovimiento="";

				if(((this.tipomovimientosForeignKey==null||this.tipomovimientosForeignKey.size()<=0) && this.sriConstantesFunciones.cargarid_tipo_movimientoSri)
					 || (this.esRecargarFks && this.sriConstantesFunciones.cargarid_tipo_movimientoSri)) {

					if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoMovimientoConstantesFunciones.getArrayColumnasGlobalesTipoMovimiento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoMovimiento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoMovimiento=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoMovimiento, "");
						finalQueryGlobalTipoMovimiento+=TipoMovimientoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoMovimientosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoMovimiento=" WHERE " + ConstantesSql.ID + "="+sriSessionBean.getlidTipoMovimientoActual();
					}
				} else {
					finalQueryGlobalTipoMovimiento="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				sriReturnGeneral=sriLogic.cargarCombosLoteForeignKeySri(finalQueryGlobalAsientoContable,finalQueryGlobalTransaccionConta,finalQueryGlobalCliente,finalQueryGlobalTipoComprobante,finalQueryGlobalTipoTributario,finalQueryGlobalTipoIva,finalQueryGlobalTipoRetencionIvaBien,finalQueryGlobalTipoRetencionIvaServicio,finalQueryGlobalTipoMovimiento);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=sriReturnGeneral.getasientocontablesForeignKey();
			}

			if(!finalQueryGlobalTransaccionConta.equals("NONE")) {
				this.transaccioncontasForeignKey=sriReturnGeneral.gettransaccioncontasForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=sriReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalTipoComprobante.equals("NONE")) {
				this.tipocomprobantesForeignKey=sriReturnGeneral.gettipocomprobantesForeignKey();
			}

			if(!finalQueryGlobalTipoTributario.equals("NONE")) {
				this.tipotributariosForeignKey=sriReturnGeneral.gettipotributariosForeignKey();
			}

			if(!finalQueryGlobalTipoIva.equals("NONE")) {
				this.tipoivasForeignKey=sriReturnGeneral.gettipoivasForeignKey();
			}

			if(!finalQueryGlobalTipoRetencionIvaBien.equals("NONE")) {
				this.tiporetencionivabiensForeignKey=sriReturnGeneral.gettiporetencionivabiensForeignKey();
			}

			if(!finalQueryGlobalTipoRetencionIvaServicio.equals("NONE")) {
				this.tiporetencionivaserviciosForeignKey=sriReturnGeneral.gettiporetencionivaserviciosForeignKey();
			}

			if(!finalQueryGlobalTipoMovimiento.equals("NONE")) {
				this.tipomovimientosForeignKey=sriReturnGeneral.gettipomovimientosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeySri()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyAsientoContable();
			this.addItemDefectoCombosForeignKeyTransaccionConta();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyTipoComprobante();
			this.addItemDefectoCombosForeignKeyTipoTributario();
			this.addItemDefectoCombosForeignKeyTipoIva();
			this.addItemDefectoCombosForeignKeyTipoRetencionIvaBien();
			this.addItemDefectoCombosForeignKeyTipoRetencionIvaServicio();
			this.addItemDefectoCombosForeignKeyTipoMovimiento();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {
			if(this.sriSessionBean==null) {
				this.sriSessionBean=new SriSessionBean();
			}

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionConta()throws Exception {
		try {

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionConta()) {
				TransaccionConta transaccionconta=new TransaccionConta();
				TransaccionContaConstantesFunciones.setTransaccionContaDescripcion(transaccionconta,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccionconta.setId(null);

				if(!TransaccionContaConstantesFunciones.ExisteEnLista(this.transaccioncontasForeignKey,transaccionconta,true)) {

					this.transaccioncontasForeignKey.add(0,transaccionconta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoComprobante()throws Exception {
		try {

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoComprobante()) {
				TipoComprobante tipocomprobante=new TipoComprobante();
				TipoComprobanteConstantesFunciones.setTipoComprobanteDescripcion(tipocomprobante,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocomprobante.setId(null);

				if(!TipoComprobanteConstantesFunciones.ExisteEnLista(this.tipocomprobantesForeignKey,tipocomprobante,true)) {

					this.tipocomprobantesForeignKey.add(0,tipocomprobante);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTributario()throws Exception {
		try {

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoTributario()) {
				TipoTributario tipotributario=new TipoTributario();
				TipoTributarioConstantesFunciones.setTipoTributarioDescripcion(tipotributario,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotributario.setId(null);

				if(!TipoTributarioConstantesFunciones.ExisteEnLista(this.tipotributariosForeignKey,tipotributario,true)) {

					this.tipotributariosForeignKey.add(0,tipotributario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoIva()throws Exception {
		try {

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoIva()) {
				TipoIva tipoiva=new TipoIva();
				TipoIvaConstantesFunciones.setTipoIvaDescripcion(tipoiva,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoiva.setId(null);

				if(!TipoIvaConstantesFunciones.ExisteEnLista(this.tipoivasForeignKey,tipoiva,true)) {

					this.tipoivasForeignKey.add(0,tipoiva);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRetencionIvaBien()throws Exception {
		try {

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaBien()) {
				TipoRetencionIva tiporetencionivabien=new TipoRetencionIva();
				TipoRetencionIvaConstantesFunciones.setTipoRetencionIvaDescripcion(tiporetencionivabien,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporetencionivabien.setId(null);

				if(!TipoRetencionIvaConstantesFunciones.ExisteEnLista(this.tiporetencionivabiensForeignKey,tiporetencionivabien,true)) {

					this.tiporetencionivabiensForeignKey.add(0,tiporetencionivabien);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRetencionIvaServicio()throws Exception {
		try {

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencionIvaServicio()) {
				TipoRetencionIva tiporetencionivaservicio=new TipoRetencionIva();
				TipoRetencionIvaConstantesFunciones.setTipoRetencionIvaDescripcion(tiporetencionivaservicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporetencionivaservicio.setId(null);

				if(!TipoRetencionIvaConstantesFunciones.ExisteEnLista(this.tiporetencionivaserviciosForeignKey,tiporetencionivaservicio,true)) {

					this.tiporetencionivaserviciosForeignKey.add(0,tiporetencionivaservicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoMovimiento()throws Exception {
		try {

			if(!this.sriSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {
				TipoMovimiento tipomovimiento=new TipoMovimiento();
				TipoMovimientoConstantesFunciones.setTipoMovimientoDescripcion(tipomovimiento,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipomovimiento.setId(null);

				if(!TipoMovimientoConstantesFunciones.ExisteEnLista(this.tipomovimientosForeignKey,tipomovimiento,true)) {

					this.tipomovimientosForeignKey.add(0,tipomovimiento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeySri()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeySri(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeySri()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
			
			
				this.sri.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.sri.setfecha_registro_contable(this.parametroGeneralUsuario.getfecha_sistema());
				this.sri.setfecha_caducidad(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeySri();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeySri(Sri sri)throws Exception {	
		try {
			
			this.setActualAsientoContableForeignKey(sri.getid_asiento_contable(),false,"Formulario");
			this.setActualTransaccionContaForeignKey(sri.getid_transaccion_conta(),false,"Formulario");
			this.setActualClienteForeignKey(sri.getid_cliente(),false,"Formulario");
			this.setActualTipoComprobanteForeignKey(sri.gettipo_comprobante(),false,"Formulario");
			this.setActualTipoTributarioForeignKey(sri.gettipo_tributario(),false,"Formulario");
			this.setActualTipoIvaForeignKey(sri.getid_tipo_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaBienForeignKey(sri.getid_tipo_retencion_iva_bien(),false,"Formulario");
			this.setActualTipoRetencionIvaServicioForeignKey(sri.getid_tipo_retencion_iva_servicio(),false,"Formulario");
			this.setActualTipoMovimientoForeignKey(sri.getid_tipo_movimiento(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeySri(Sri sri,String sTipoEvento)throws Exception {	
		try {
			
			

				if(sri.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contableSri")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(sri.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				if(sri.getCliente()!=null && !sTipoEvento.equals("id_clienteSri")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(sri.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeySri()throws Exception {	
		try {
			
			this.setActualAsientoContableForeignKey(this.sriConstantesFunciones.getid_asiento_contable(),false,"Formulario");
			this.setActualTransaccionContaForeignKey(this.sriConstantesFunciones.getid_transaccion_conta(),false,"Formulario");
			this.setActualClienteForeignKey(this.sriConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualTipoComprobanteForeignKey(this.sriConstantesFunciones.gettipo_comprobante(),false,"Formulario");
			this.setActualTipoTributarioForeignKey(this.sriConstantesFunciones.gettipo_tributario(),false,"Formulario");
			this.setActualTipoIvaForeignKey(this.sriConstantesFunciones.getid_tipo_iva(),false,"Formulario");
			this.setActualTipoRetencionIvaBienForeignKey(this.sriConstantesFunciones.getid_tipo_retencion_iva_bien(),false,"Formulario");
			this.setActualTipoRetencionIvaServicioForeignKey(this.sriConstantesFunciones.getid_tipo_retencion_iva_servicio(),false,"Formulario");
			this.setActualTipoMovimientoForeignKey(this.sriConstantesFunciones.getid_tipo_movimiento(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeySri()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeySri()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeySri()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroSri()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeySri()throws Exception {
		try {
			

			this.cargarCombosFrameAsientoContablesForeignKey("Todos");
			this.cargarCombosFrameTransaccionContasForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameTipoComprobantesForeignKey("Todos");
			this.cargarCombosFrameTipoTributariosForeignKey("Todos");
			this.cargarCombosFrameTipoIvasForeignKey("Todos");
			this.cargarCombosFrameTipoRetencionIvaBiensForeignKey("Todos");
			this.cargarCombosFrameTipoRetencionIvaServiciosForeignKey("Todos");
			this.cargarCombosFrameTipoMovimientosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeySri(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionContasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoComprobantesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTributariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoIvasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRetencionIvaBiensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRetencionIvaServiciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoMovimientosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeySri()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri!=null && this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.getItemCount()>0) {
				this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri!=null && this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.getItemCount()>0) {
				this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri!=null && this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.getItemCount()>0) {
				this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri!=null && this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.getItemCount()>0) {
				this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri!=null && this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.getItemCount()>0) {
				this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri!=null && this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.getItemCount()>0) {
				this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri!=null && this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.getItemCount()>0) {
				this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri!=null && this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.getItemCount()>0) {
				this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri!=null && this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.getItemCount()>0) {
				this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	


















	
	

	public SriBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public SriBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public SriBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.sriSessionBean=new SriSessionBean(); 
		this.sriConstantesFunciones=new SriConstantesFunciones(); 
		this.sriBean=new Sri();//(this.sriConstantesFunciones); 		
		this.sriReturnGeneral=new SriParameterReturnGeneral(); 
		
		this.sriSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.sriSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public SriBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public SriBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public SriBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessSri(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.sriConstantesFunciones=new SriConstantesFunciones(); 
			this.sriBean=new Sri();//this.sriConstantesFunciones); 			
			this.sriReturnGeneral=new SriParameterReturnGeneral(); 
		
			SriBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Sri Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.sri=new Sri();
			this.sris = new ArrayList<Sri>();
			this.srisAux = new ArrayList<Sri>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic=new SriLogic();
				this.sriLogic.getNewConnexionToDeep("");
			}
			
			//this.sriSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.sriSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormSri);
				
				if(!this.conCargarMinimo) {
					/*
					if(this.jInternalFrameReporteDinamicoSri!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoSri);	
					}
					
					if(this.jInternalFrameImportacionSri!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionSri);							
					}
					*/
				}
				
				
				if(!this.conCargarMinimo) {
					/*
					if(this.jInternalFrameOrderBySri!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderBySri);					
					}
					*/
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormSri!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormSri);
				this.jInternalFrameDetalleFormSri.setVisible(false);
				this.jInternalFrameDetalleFormSri.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				/*
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoSri!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoSri);
					this.jInternalFrameReporteDinamicoSri.setVisible(false);
					this.jInternalFrameReporteDinamicoSri.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionSri!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionSri);
					this.jInternalFrameImportacionSri.setVisible(false);
					this.jInternalFrameImportacionSri.setSelected(false);
				}
				
				*/
			}
			
			
			if(!this.conCargarMinimo) {
				/*
				if(this.jInternalFrameOrderBySri!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderBySri);
					this.jInternalFrameOrderBySri.setVisible(false);
					this.jInternalFrameOrderBySri.setSelected(false);				
				}
				*/
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idSriActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=SriConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.sriReturnGeneral=new SriParameterReturnGeneral();
			
			this.sriParameterGeneral=new SriParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.sriLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			/*
			if(!this.sriSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			*/
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(SriJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.sriSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,SriConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.sriSessionBean.getEsGuardarRelacionado(),this.sriSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,SriConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.sriSessionBean.getEsGuardarRelacionado(),this.sriSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoSri=false;
			this.isVisibilidadCeldaDuplicarSri=true;
			this.isVisibilidadCeldaCopiarSri=true;
			this.isVisibilidadCeldaVerFormSri=true;
			this.isVisibilidadCeldaOrdenSri=true;
			this.isVisibilidadCeldaNuevoRelacionesSri=false;
			this.isVisibilidadCeldaModificarSri=false;
			this.isVisibilidadCeldaActualizarSri=false;
			this.isVisibilidadCeldaEliminarSri=false;
			this.isVisibilidadCeldaCancelarSri=false;
			this.isVisibilidadCeldaGuardarSri=false;
			this.isVisibilidadCeldaGuardarCambiosSri=false;
			
			
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdTipoComprobante=true;
			this.isVisibilidadFK_IdTipoIva=true;
			this.isVisibilidadFK_IdTipoMovimiento=true;
			this.isVisibilidadFK_IdTipoRetencionIvaBien=true;
			this.isVisibilidadFK_IdTipoRetencionIvaServicio=true;
			this.isVisibilidadFK_IdTipoTributario=true;
			this.isVisibilidadFK_IdTransaccionConta=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesSri("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosSri();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioSri(false);
			
			this.setPermisosUsuarioSri();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.sriSessionBean.getEsGuardarRelacionado() 
				|| (this.sriSessionBean.getEsGuardarRelacionado() && this.sriSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioSriClasesRelacionadas();
			}
			
			if(this.sriSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioSriClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!SriJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosSri();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualSri();
			}
			
			if(!this.isPermisoBusquedaSri) {
				//BYDAN_BUSQUEDAS
				/*
				this.jTabbedPaneBusquedasSri.setVisible(false);				
				*/
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.sriSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioSri,this.isPermisoPaginacionMedioSri,this.isPermisoPaginacionTodoSri);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(SriConstantesFunciones.getTiposSeleccionarSri());
				
				this.tiposColumnasSelect=SriConstantesFunciones.getTiposSeleccionarSri(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.sriSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioSri();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioSri(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioSri(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesSri() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			/*
			this.arrOrderBy= new  ArrayList<OrderBy>();
			*/
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			/*
			this.traerValoresTablaOrderBy();			
			*/
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.asientocontableLogic=new AsientoContableLogic();
			this.transaccioncontaLogic=new TransaccionContaLogic();
			this.clienteLogic=new ClienteLogic();
			this.tipocomprobanteLogic=new TipoComprobanteLogic();
			this.tipotributarioLogic=new TipoTributarioLogic();
			this.tipoivaLogic=new TipoIvaLogic();
			this.tiporetencionivabienLogic=new TipoRetencionIvaLogic();
			this.tiporetencionivaservicioLogic=new TipoRetencionIvaLogic();
			this.tipomovimientoLogic=new TipoMovimientoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				sriImplementable= (SriImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SriConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				sriImplementableHome= (SriImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SriConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.sris= new ArrayList<Sri>();
			this.srisEliminados= new ArrayList<Sri>();
						
			this.isEsNuevoSri=false;
			this.esParaAccionDesdeFormularioSri=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idAsientoContableActual=0L;
			this.idClienteActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			this.transaccioncontasForeignKey=new ArrayList<TransaccionConta>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.tipocomprobantesForeignKey=new ArrayList<TipoComprobante>() ;
			this.tipotributariosForeignKey=new ArrayList<TipoTributario>() ;
			this.tipoivasForeignKey=new ArrayList<TipoIva>() ;
			this.tiporetencionivabiensForeignKey=new ArrayList<TipoRetencionIva>() ;
			this.tiporetencionivaserviciosForeignKey=new ArrayList<TipoRetencionIva>() ;
			this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeySri(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroSri();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.sriSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			SriBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=SriConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesSri("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingSri(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormSri!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioSri();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioSri();
			}
			
			SriBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				/*
				
				for(int i=0; i<this.jTabbedPaneBusquedasSri.getTabCount(); i++) {
					this.jTabbedPaneBusquedasSri.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasSri.setSelectedIndex(0);
				}	
				
				*/
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessSri(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga Sri: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectSri() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesSri")) {
				iIndex=this.jInternalFrameDetalleFormSri.jTabbedPaneRelacionesSri.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormSri.jTabbedPaneRelacionesSri.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosSri.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessSri();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeySri(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeySri(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeySri(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeySriListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeySri();
		
		this.cargarCombosFrameForeignKeySri();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeySri();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeySri();
		}
	}
	
	

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionConta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionContaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionConta();
				this.cargarCombosFrameTransaccionContasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionConta(this.transaccioncontasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoComprobante(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoComprobanteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoComprobante();
				this.cargarCombosFrameTipoComprobantesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoComprobante(this.tipocomprobantesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTributario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTributarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTributario();
				this.cargarCombosFrameTipoTributariosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoTributario(this.tipotributariosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIva(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoIvaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoIva();
				this.cargarCombosFrameTipoIvasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoIva(this.tipoivasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaBien(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRetencionIvaBienListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRetencionIvaBien();
				this.cargarCombosFrameTipoRetencionIvaBiensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoRetencionIvaBien(this.tiporetencionivabiensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionIvaServicio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRetencionIvaServicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRetencionIvaServicio();
				this.cargarCombosFrameTipoRetencionIvaServiciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoRetencionIvaServicio(this.tiporetencionivaserviciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimiento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoMovimiento();
				this.cargarCombosFrameTipoMovimientosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoMovimiento(this.tipomovimientosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoSriActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.sriSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
			
			if(jTableDatosSri.getRowCount()>=1) {
				jTableDatosSri.removeRowSelectionInterval(0, jTableDatosSri.getRowCount()-1);						
			}
			
			this.isEsNuevoSri=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoSri(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesSri(true);			
			//this.sri=new Sri();
			//this.sri.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesSri(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSri() ;
			
			if(SriJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleSri(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.sri);	
			this.actualizarInformacion("INFO_PADRE",false,this.sri);				
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
			if(this.sriSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar Sri: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarSriActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosSri.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosSri.getSelectedRows().length;			
			}
			
			srisSeleccionados=this.getSrisSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoSri--;			
				//Sri sriAux= new Sri();			
				//sriAux.setId(this.iIdNuevoSri);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//Sri sriOrigen=new Sri();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(Sri sriOrigen : srisSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosSri.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							sriOrigen =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							sriOrigen =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaSri();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.sri.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosSri(sriOrigen,this.sri,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.sriLogic.getSris().add(this.sriAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.sris.add(this.sriAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaSri(false);
				
				this.jTableDatosSri.setRowSelectionInterval(this.getIndiceNuevoSri(), this.getIndiceNuevoSri());
				
				int iLastRow =  this.jTableDatosSri.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosSri.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosSri.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaSri(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarSriActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();									
		
			Sri sriOrigen=new Sri();
			Sri sriDestino=new Sri();
				
			srisSeleccionados=this.getSrisSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosSri.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || srisSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosSri.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						sriOrigen =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						sriOrigen =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						sriDestino =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						sriDestino =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				sriOrigen =srisSeleccionados.get(0);
				sriDestino =srisSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosSri(sriOrigen,sriDestino,true,false);
				
				sriDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(sriDestino,sriLogic.getSris());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(sriDestino,sris);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaSri(false);
				
				//this.jTableDatosSri.setRowSelectionInterval(this.getIndiceNuevoSri(), this.getIndiceNuevoSri());
				
				int iLastRow =  this.jTableDatosSri.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosSri.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosSri.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaSri(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormSriActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormSri.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarSriActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesSri.isVisible();
			
			//BYDAN_BUSQUEDAS
			/*
			this.jTabbedPaneBusquedasSri.setVisible(!isVisible);			
			*/
			
			this.jPanelParametrosReportesSri.setVisible(!isVisible);
			this.jPanelPaginacionSri.setVisible(!isVisible);
			this.jPanelAccionesSri.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarSriActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameSri();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoSriActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameReporteDinamicoSri();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionSriActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameImportacionSri();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderBySriActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			
			this.abrirInicializarFrameOrderBySri();
			
			this.abrirFrameOrderBySri();
			*/
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderBySriActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameOrderBySri();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleSri(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormSri);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormSri.isMaximum()) {
					this.jInternalFrameDetalleFormSri.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormSri.setSize(this.jInternalFrameDetalleFormSri.iWidthFormulario,this.jInternalFrameDetalleFormSri.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormSri.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormSri.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormSri.isMaximum()) {
						this.jInternalFrameDetalleFormSri.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormSri.jContentPaneDetalleSri.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormSri.jTabbedPaneRelacionesSri.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormSri.jContentPaneDetalleSri.getWidth(),SriConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormSri.jTabbedPaneRelacionesSri.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormSri.jContentPaneDetalleSri.getWidth(),SriConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormSri.jTabbedPaneRelacionesSri.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormSri.jContentPaneDetalleSri.getWidth(),SriConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormSri.setVisible(true);
	        this.jInternalFrameDetalleFormSri.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
	    }
	}
	
	/*
	public void abrirInicializarFrameOrderBySri() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderBySri==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderBySri=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderBySri,false,this);
				} else {
					this.jInternalFrameOrderBySri=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderBySri,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderBySri);
				this.jInternalFrameOrderBySri.setVisible(false);
				this.jInternalFrameOrderBySri.setSelected(false);
				
				this.jInternalFrameOrderBySri.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderBySri"));
				
				this.inicializarActualizarBindingTablaOrderBySri();
			}
		} catch (final Exception e) {
			
		}
	}
	*/
	
	/*
	public void abrirInicializarFrameImportacionSri() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionSri==null) {
				
				this.jInternalFrameImportacionSri=new ImportacionJInternalFrame(SriConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionSri);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionSri);
				this.jInternalFrameImportacionSri.setVisible(false);
				this.jInternalFrameImportacionSri.setSelected(false);


				this.jInternalFrameImportacionSri.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionSri"));
				this.jInternalFrameImportacionSri.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionSri"));
				this.jInternalFrameImportacionSri.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionSri"));


			}
		} catch (final Exception e) {
			
		}
	}		
	*/
	
	/*
	public void abrirInicializarFrameReporteDinamicoSri() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoSri==null) {
				this.jInternalFrameReporteDinamicoSri=new ReporteDinamicoJInternalFrame(SriConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoSri);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoSri);
				this.jInternalFrameReporteDinamicoSri.setVisible(false);
				this.jInternalFrameReporteDinamicoSri.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoSri.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoSri"));
				this.jInternalFrameReporteDinamicoSri.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoSri"));
				this.jInternalFrameReporteDinamicoSri.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoSri"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualSri();
			}

		} catch (final Exception e) {
			
		}
	}	
	*/
	
	
		
					
	public void cerrarFrameDetalleSri() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormSri);
			
	       	this.jInternalFrameDetalleFormSri.setVisible(false);
	        this.jInternalFrameDetalleFormSri.setSelected(false);
			
			//this.jInternalFrameDetalleFormSri.dispose();
			//this.jInternalFrameDetalleFormSri=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
	    }
	}
	
	/*
	public void abrirFrameReporteDinamicoSri() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoSri.setVisible(true);
	        this.jInternalFrameReporteDinamicoSri.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void abrirFrameImportacionSri() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionSri.setVisible(true);
	        this.jInternalFrameImportacionSri.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
	    }		
	}	
	*/
	
	
	
	/*
	public void abrirFrameOrderBySri() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderBySri.setVisible(true);
	        this.jInternalFrameOrderBySri.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameOrderBySri() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderBySri.setVisible(false);
	        this.jInternalFrameOrderBySri.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameReporteDinamicoSri() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoSri.setVisible(false);
	        this.jInternalFrameReporteDinamicoSri.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameImportacionSri() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionSri.setVisible(false);
	        this.jInternalFrameImportacionSri.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	
	
	public void jButtonModificarSriActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarSri(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarSri(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosSri.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesSri(true);
			//this.isEsNuevoSri=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesSri("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesSri(false) ;
			
			if(sriSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(SriJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleSri(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSri(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaSriActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosSri.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarSri(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosSri.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesSri(true);
			//this.isEsNuevoSri=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.sri.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesSri("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesSri(false) ;
			
			if(SriJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleSri(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSri(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("AsientoContable")) {
				if(!this.sriConstantesFunciones.cargarid_asiento_contableSri) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingSri(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.sriConstantesFunciones.cargarid_clienteSri) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingSri(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSri.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionConta(List<TransaccionConta> transaccioncontasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionConta=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA));
		TableCellEditor tableCellEditorTransaccionConta =tableColumnTransaccionConta.getCellEditor();

		TransaccionContaTableCell transaccioncontaTableCellFk=(TransaccionContaTableCell)tableCellEditorTransaccionConta;

		if(transaccioncontaTableCellFk!=null) {
			transaccioncontaTableCellFk.settransaccioncontasForeignKey(transaccioncontasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSri.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccioncontaTableCellFk.setRowActual(intSelectedRow);
			//transaccioncontaTableCellFk.settransaccioncontasForeignKeyActual(transaccioncontasForeignKey);
		//}


		if(transaccioncontaTableCellFk!=null) {
			transaccioncontaTableCellFk.RecargarTransaccionContasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSri.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoComprobante(List<TipoComprobante> tipocomprobantesForeignKey)throws Exception{
		TableColumn tableColumnTipoComprobante=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE));
		TableCellEditor tableCellEditorTipoComprobante =tableColumnTipoComprobante.getCellEditor();

		TipoComprobanteTableCell tipocomprobanteTableCellFk=(TipoComprobanteTableCell)tableCellEditorTipoComprobante;

		if(tipocomprobanteTableCellFk!=null) {
			tipocomprobanteTableCellFk.settipocomprobantesForeignKey(tipocomprobantesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSri.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocomprobanteTableCellFk.setRowActual(intSelectedRow);
			//tipocomprobanteTableCellFk.settipocomprobantesForeignKeyActual(tipocomprobantesForeignKey);
		//}


		if(tipocomprobanteTableCellFk!=null) {
			tipocomprobanteTableCellFk.RecargarTipoComprobantesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTributario(List<TipoTributario> tipotributariosForeignKey)throws Exception{
		TableColumn tableColumnTipoTributario=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO));
		TableCellEditor tableCellEditorTipoTributario =tableColumnTipoTributario.getCellEditor();

		TipoTributarioTableCell tipotributarioTableCellFk=(TipoTributarioTableCell)tableCellEditorTipoTributario;

		if(tipotributarioTableCellFk!=null) {
			tipotributarioTableCellFk.settipotributariosForeignKey(tipotributariosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSri.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotributarioTableCellFk.setRowActual(intSelectedRow);
			//tipotributarioTableCellFk.settipotributariosForeignKeyActual(tipotributariosForeignKey);
		//}


		if(tipotributarioTableCellFk!=null) {
			tipotributarioTableCellFk.RecargarTipoTributariosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoIva(List<TipoIva> tipoivasForeignKey)throws Exception{
		TableColumn tableColumnTipoIva=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPOIVA));
		TableCellEditor tableCellEditorTipoIva =tableColumnTipoIva.getCellEditor();

		TipoIvaTableCell tipoivaTableCellFk=(TipoIvaTableCell)tableCellEditorTipoIva;

		if(tipoivaTableCellFk!=null) {
			tipoivaTableCellFk.settipoivasForeignKey(tipoivasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSri.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoivaTableCellFk.setRowActual(intSelectedRow);
			//tipoivaTableCellFk.settipoivasForeignKeyActual(tipoivasForeignKey);
		//}


		if(tipoivaTableCellFk!=null) {
			tipoivaTableCellFk.RecargarTipoIvasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRetencionIvaBien(List<TipoRetencionIva> tiporetencionivabiensForeignKey)throws Exception{
		TableColumn tableColumnTipoRetencionIvaBien=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN));
		TableCellEditor tableCellEditorTipoRetencionIvaBien =tableColumnTipoRetencionIvaBien.getCellEditor();

		TipoRetencionIvaTableCell tiporetencionivaTableCellFk=(TipoRetencionIvaTableCell)tableCellEditorTipoRetencionIvaBien;

		if(tiporetencionivaTableCellFk!=null) {
			tiporetencionivaTableCellFk.settiporetencionivasForeignKey(tiporetencionivabiensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSri.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporetencionivaTableCellFk.setRowActual(intSelectedRow);
			//tiporetencionivaTableCellFk.settiporetencionivasForeignKeyActual(tiporetencionivabiensForeignKey);
		//}


		if(tiporetencionivaTableCellFk!=null) {
			tiporetencionivaTableCellFk.RecargarTipoRetencionIvasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRetencionIvaServicio(List<TipoRetencionIva> tiporetencionivaserviciosForeignKey)throws Exception{
		TableColumn tableColumnTipoRetencionIvaServicio=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO));
		TableCellEditor tableCellEditorTipoRetencionIvaServicio =tableColumnTipoRetencionIvaServicio.getCellEditor();

		TipoRetencionIvaTableCell tiporetencionivaTableCellFk=(TipoRetencionIvaTableCell)tableCellEditorTipoRetencionIvaServicio;

		if(tiporetencionivaTableCellFk!=null) {
			tiporetencionivaTableCellFk.settiporetencionivasForeignKey(tiporetencionivaserviciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSri.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporetencionivaTableCellFk.setRowActual(intSelectedRow);
			//tiporetencionivaTableCellFk.settiporetencionivasForeignKeyActual(tiporetencionivaserviciosForeignKey);
		//}


		if(tiporetencionivaTableCellFk!=null) {
			tiporetencionivaTableCellFk.RecargarTipoRetencionIvasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoMovimiento(List<TipoMovimiento> tipomovimientosForeignKey)throws Exception{
		TableColumn tableColumnTipoMovimiento=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO));
		TableCellEditor tableCellEditorTipoMovimiento =tableColumnTipoMovimiento.getCellEditor();

		TipoMovimientoTableCell tipomovimientoTableCellFk=(TipoMovimientoTableCell)tableCellEditorTipoMovimiento;

		if(tipomovimientoTableCellFk!=null) {
			tipomovimientoTableCellFk.settipomovimientosForeignKey(tipomovimientosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSri.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipomovimientoTableCellFk.setRowActual(intSelectedRow);
			//tipomovimientoTableCellFk.settipomovimientosForeignKeyActual(tipomovimientosForeignKey);
		//}


		if(tipomovimientoTableCellFk!=null) {
			tipomovimientoTableCellFk.RecargarTipoMovimientosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarSriActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesSri(false);
			
			//if(!this.isEsNuevoSri) {								
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(SriJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualSri(this.sri,true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				
			}
			
			if(this.permiteMantenimiento(this.sri)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.sriSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoSri=true;
					this.inicializarActualizarBindingTablaSri(false);
					this.isEsNuevoSri=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoSri=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoSri=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesSri(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualSri(false);
				
				this.habilitarDeshabilitarControlesSri(false);
			
												
				
				if(SriJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleSri();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoSriActionPerformed(evt,sriSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualSri(this.sri,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosSri.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,sriSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.sri.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarSriActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosSri.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				this.sri.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				this.sri.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.sri)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.sriSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((SriModel) this.jTableDatosSri.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoSri=true;
				this.inicializarActualizarBindingTablaSri(false);
				this.isEsNuevoSri=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesSri(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualSri(false);
				
				this.habilitarDeshabilitarControlesSri(false);
				
				
				
				if(SriJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleSri();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarSriActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosSri.getRowCount()>=1) {
				jTableDatosSri.removeRowSelectionInterval(0, jTableDatosSri.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesSri(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaSri(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesSri(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSri(false) ;
			
			this.isEsNuevoSri=false;
			
			if(SriJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleSri();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosSriActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingSri(false);
				
				//SI ES MANUAL
				if(SriJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualSri();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosSriActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoSri--;			
			//Sri sriAux= new Sri();			
			//sriAux.setId(this.iIdNuevoSri);
			
			if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaSri();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
			
			this.sri.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.sriLogic.getSris().add(this.sriAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.sris.add(this.sriAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaSri(false);
			
			this.jTableDatosSri.setRowSelectionInterval(this.getIndiceNuevoSri(), this.getIndiceNuevoSri());
			
			int iLastRow =  this.jTableDatosSri.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosSri.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosSri.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaSri(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionSriActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingSri(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSri(false);
			
			//SI ES MANUAL
			if(SriJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualSri();
			}
			
			//this.abrirFrameTreeSri();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	/*
	public void jButtonGenerarImportacionSriActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE SriS ?", "MANTENIMIENTO DE Sri", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionSri.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralSri();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.sriReturnGeneral=sriLogic.procesarImportacionSrisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.sriParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarSriReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	*/
	
	/*
	public void jButtonAbrirImportacionSriActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionSri.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionSri.setFileImportacion(this.jInternalFrameImportacionSri.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionSri.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionSri.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionSri.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionSri.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	*/
	
	public void jButtonGenerarReporteDinamicoSriActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();		

		srisSeleccionados=this.getSrisSeleccionados(true);
		
		/*
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		*/
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("SriBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"SriBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			/*
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			*/
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteSris("Todos",srisSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.sriSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	/*
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoSri.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSri.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case SriConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionConta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionConta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionConta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionConta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_RAZONSOCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_zonSocial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_zonSocial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_zonSocial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_zonSocial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoComprobante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoComprobante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoComprobante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoComprobante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_ESRISE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Rise_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Rise_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Rise_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Rise_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_NUMEROSERIE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroSerie_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroSerie_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroSerie_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroSerie_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroAutorizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroAutorizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroAutorizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroAutorizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroSecuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroSecuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroSecuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroSecuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaRegistroContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaRegistroContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaRegistroContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaRegistroContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_FECHACADUCIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaCaducidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaCaducidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaCaducidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaCaducidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTributario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTributario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTributario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTributario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_BIENESTAR12:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_enesTar12_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_enesTar12_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_enesTar12_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_enesTar12_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_BIENESTAR0:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_enesTar0_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_enesTar0_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_enesTar0_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_enesTar0_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_IDTIPOIVA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR12:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rviciosTar12_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rviciosTar12_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rviciosTar12_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rviciosTar12_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR0:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rviciosTar0_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rviciosTar0_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rviciosTar0_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rviciosTar0_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_MONTOIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR12:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_seImpoTar12_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_seImpoTar12_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_seImpoTar12_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_seImpoTar12_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR0:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_seImpoTar0_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_seImpoTar0_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_seImpoTar0_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_seImpoTar0_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_MONTOICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoIce_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoIce_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoIce_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoIce_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_MONTOIVABIEN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoIvaBien_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoIvaBien_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoIvaBien_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoIvaBien_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_MONTOIVASERVICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoIvaServicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoIvaServicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoIvaServicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoIvaServicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRetencionIvaBien_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRetencionIvaBien_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRetencionIvaBien_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRetencionIvaBien_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRetencionIvaServicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRetencionIvaServicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRetencionIvaServicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRetencionIvaServicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVABIEN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tencionIvaBien_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tencionIvaBien_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tencionIvaBien_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tencionIvaBien_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tencionIvaServicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tencionIvaServicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tencionIvaServicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tencionIvaServicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_CONDEVOLUCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nDevolucion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nDevolucion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nDevolucion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nDevolucion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoMovimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoMovimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoMovimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoMovimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoSri.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	*/
	
	/*
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoSri.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case SriConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;

				case SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					sNombreCampoCategoria="id_transaccion_conta";
					break;

				case SriConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case SriConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case SriConstantesFunciones.LABEL_RAZONSOCIAL:
					sNombreCampoCategoria="razon_social";
					break;

				case SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					sNombreCampoCategoria="tipo_comprobante";
					break;

				case SriConstantesFunciones.LABEL_ESRISE:
					sNombreCampoCategoria="es_rise";
					break;

				case SriConstantesFunciones.LABEL_NUMEROSERIE:
					sNombreCampoCategoria="numero_serie";
					break;

				case SriConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					sNombreCampoCategoria="numero_autorizacion";
					break;

				case SriConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoria="numero_secuencial";
					break;

				case SriConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					sNombreCampoCategoria="fecha_registro_contable";
					break;

				case SriConstantesFunciones.LABEL_FECHACADUCIDAD:
					sNombreCampoCategoria="fecha_caducidad";
					break;

				case SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					sNombreCampoCategoria="tipo_tributario";
					break;

				case SriConstantesFunciones.LABEL_BIENESTAR12:
					sNombreCampoCategoria="bienes_tar12";
					break;

				case SriConstantesFunciones.LABEL_BIENESTAR0:
					sNombreCampoCategoria="bienes_tar0";
					break;

				case SriConstantesFunciones.LABEL_IDTIPOIVA:
					sNombreCampoCategoria="id_tipo_iva";
					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR12:
					sNombreCampoCategoria="servicios_tar12";
					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR0:
					sNombreCampoCategoria="servicios_tar0";
					break;

				case SriConstantesFunciones.LABEL_MONTOIVA:
					sNombreCampoCategoria="monto_iva";
					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR12:
					sNombreCampoCategoria="base_impo_tar12";
					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR0:
					sNombreCampoCategoria="base_impo_tar0";
					break;

				case SriConstantesFunciones.LABEL_MONTOICE:
					sNombreCampoCategoria="monto_ice";
					break;

				case SriConstantesFunciones.LABEL_MONTOIVABIEN:
					sNombreCampoCategoria="monto_iva_bien";
					break;

				case SriConstantesFunciones.LABEL_MONTOIVASERVICIO:
					sNombreCampoCategoria="monto_iva_servicio";
					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN:
					sNombreCampoCategoria="id_tipo_retencion_iva_bien";
					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO:
					sNombreCampoCategoria="id_tipo_retencion_iva_servicio";
					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVABIEN:
					sNombreCampoCategoria="retencion_iva_bien";
					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO:
					sNombreCampoCategoria="retencion_iva_servicio";
					break;

				case SriConstantesFunciones.LABEL_CONDEVOLUCION:
					sNombreCampoCategoria="con_devolucion";
					break;

				case SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					sNombreCampoCategoria="id_tipo_movimiento";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoSri.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case SriConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;

				case SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					sNombreCampoCategoriaValor="id_transaccion_conta";
					break;

				case SriConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case SriConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case SriConstantesFunciones.LABEL_RAZONSOCIAL:
					sNombreCampoCategoriaValor="razon_social";
					break;

				case SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					sNombreCampoCategoriaValor="tipo_comprobante";
					break;

				case SriConstantesFunciones.LABEL_ESRISE:
					sNombreCampoCategoriaValor="es_rise";
					break;

				case SriConstantesFunciones.LABEL_NUMEROSERIE:
					sNombreCampoCategoriaValor="numero_serie";
					break;

				case SriConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					sNombreCampoCategoriaValor="numero_autorizacion";
					break;

				case SriConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoriaValor="numero_secuencial";
					break;

				case SriConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					sNombreCampoCategoriaValor="fecha_registro_contable";
					break;

				case SriConstantesFunciones.LABEL_FECHACADUCIDAD:
					sNombreCampoCategoriaValor="fecha_caducidad";
					break;

				case SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					sNombreCampoCategoriaValor="tipo_tributario";
					break;

				case SriConstantesFunciones.LABEL_BIENESTAR12:
					sNombreCampoCategoriaValor="bienes_tar12";
					break;

				case SriConstantesFunciones.LABEL_BIENESTAR0:
					sNombreCampoCategoriaValor="bienes_tar0";
					break;

				case SriConstantesFunciones.LABEL_IDTIPOIVA:
					sNombreCampoCategoriaValor="id_tipo_iva";
					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR12:
					sNombreCampoCategoriaValor="servicios_tar12";
					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR0:
					sNombreCampoCategoriaValor="servicios_tar0";
					break;

				case SriConstantesFunciones.LABEL_MONTOIVA:
					sNombreCampoCategoriaValor="monto_iva";
					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR12:
					sNombreCampoCategoriaValor="base_impo_tar12";
					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR0:
					sNombreCampoCategoriaValor="base_impo_tar0";
					break;

				case SriConstantesFunciones.LABEL_MONTOICE:
					sNombreCampoCategoriaValor="monto_ice";
					break;

				case SriConstantesFunciones.LABEL_MONTOIVABIEN:
					sNombreCampoCategoriaValor="monto_iva_bien";
					break;

				case SriConstantesFunciones.LABEL_MONTOIVASERVICIO:
					sNombreCampoCategoriaValor="monto_iva_servicio";
					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN:
					sNombreCampoCategoriaValor="id_tipo_retencion_iva_bien";
					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO:
					sNombreCampoCategoriaValor="id_tipo_retencion_iva_servicio";
					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVABIEN:
					sNombreCampoCategoriaValor="retencion_iva_bien";
					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO:
					sNombreCampoCategoriaValor="retencion_iva_servicio";
					break;

				case SriConstantesFunciones.LABEL_CONDEVOLUCION:
					sNombreCampoCategoriaValor="con_devolucion";
					break;

				case SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					sNombreCampoCategoriaValor="id_tipo_movimiento";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoSri.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSri.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case SriConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento C.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;

				case SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_conta");
					break;

				case SriConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case SriConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case SriConstantesFunciones.LABEL_RAZONSOCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Razon Social",sNombreCampoCategoria,sNombreCampoCategoriaValor,"razon_social");
					break;

				case SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Comp.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"tipo_comprobante");
					break;

				case SriConstantesFunciones.LABEL_ESRISE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Rise",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_rise");
					break;

				case SriConstantesFunciones.LABEL_NUMEROSERIE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Serie",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_serie");
					break;

				case SriConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Autorizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_autorizacion");
					break;

				case SriConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Secuencial C",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_secuencial");
					break;

				case SriConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F. Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F. Reg. Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_registro_contable");
					break;

				case SriConstantesFunciones.LABEL_FECHACADUCIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F. Caducidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_caducidad");
					break;

				case SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo Tribut",sNombreCampoCategoria,sNombreCampoCategoriaValor,"tipo_tributario");
					break;

				case SriConstantesFunciones.LABEL_BIENESTAR12:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bienes Tar.12",sNombreCampoCategoria,sNombreCampoCategoriaValor,"bienes_tar12");
					break;

				case SriConstantesFunciones.LABEL_BIENESTAR0:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bienes Tar.0",sNombreCampoCategoria,sNombreCampoCategoriaValor,"bienes_tar0");
					break;

				case SriConstantesFunciones.LABEL_IDTIPOIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"P Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_iva");
					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR12:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Servicios Tar.12",sNombreCampoCategoria,sNombreCampoCategoriaValor,"servicios_tar12");
					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR0:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Servicios Tar.0",sNombreCampoCategoria,sNombreCampoCategoriaValor,"servicios_tar0");
					break;

				case SriConstantesFunciones.LABEL_MONTOIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_iva");
					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR12:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"B. Imp. Tar.12",sNombreCampoCategoria,sNombreCampoCategoriaValor,"base_impo_tar12");
					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR0:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"B. Imp. Tar 0",sNombreCampoCategoria,sNombreCampoCategoriaValor,"base_impo_tar0");
					break;

				case SriConstantesFunciones.LABEL_MONTOICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_ice");
					break;

				case SriConstantesFunciones.LABEL_MONTOIVABIEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Iva Bien",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_iva_bien");
					break;

				case SriConstantesFunciones.LABEL_MONTOIVASERVICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Iva Serv",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_iva_servicio");
					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"P Ret. Iva Bien",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_retencion_iva_bien");
					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"P. Ret. Iva Serv",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_retencion_iva_servicio");
					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVABIEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"M.Ret Iva Bien",sNombreCampoCategoria,sNombreCampoCategoriaValor,"retencion_iva_bien");
					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"M.Ret Iva Serv",sNombreCampoCategoria,sNombreCampoCategoriaValor,"retencion_iva_servicio");
					break;

				case SriConstantesFunciones.LABEL_CONDEVOLUCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Devolucion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_devolucion");
					break;

				case SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Movimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_movimiento");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	*/
	
	//@SuppressWarnings("deprecation")
	/*
	public void jButtonGenerarExcelReporteDinamicoSriActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();		
		
		srisSeleccionados=this.getSrisSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"sri";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("Sris");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoSri.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoSri.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case SriConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.gettransaccionconta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_RUC);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_RAZONSOCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_RAZONSOCIAL);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getrazon_social());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.gettipocomprobante_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_ESRISE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_ESRISE);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getes_rise());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_NUMEROSERIE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_NUMEROSERIE);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getnumero_serie());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_NUMEROAUTORIZACION);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getnumero_autorizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_NUMEROSECUENCIAL);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getnumero_secuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getfecha_registro_contable());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_FECHACADUCIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_FECHACADUCIDAD);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getfecha_caducidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.gettipotributario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_BIENESTAR12:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_BIENESTAR12);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getbienes_tar12());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_BIENESTAR0:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_BIENESTAR0);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getbienes_tar0());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_IDTIPOIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOIVA);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.gettipoiva_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR12:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_SERVICIOSTAR12);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getservicios_tar12());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_SERVICIOSTAR0:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_SERVICIOSTAR0);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getservicios_tar0());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_MONTOIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_MONTOIVA);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getmonto_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR12:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_BASEIMPOTAR12);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getbase_impo_tar12());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_BASEIMPOTAR0:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_BASEIMPOTAR0);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getbase_impo_tar0());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_MONTOICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_MONTOICE);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getmonto_ice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_MONTOIVABIEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_MONTOIVABIEN);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getmonto_iva_bien());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_MONTOIVASERVICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_MONTOIVASERVICIO);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getmonto_iva_servicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.gettiporetencionivabien_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.gettiporetencionivaservicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVABIEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_RETENCIONIVABIEN);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getretencion_iva_bien());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getretencion_iva_servicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_CONDEVOLUCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_CONDEVOLUCION);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.getcon_devolucion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
					iRow++;

					for(Sri sri:srisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(sri.gettipomovimiento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelSri(row);				
			//	iRow++;
			//}				
			
			//for(Sri sriAux:srisSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelSri(sriAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.sriSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	*/
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSri(false);
			
			//SI ES MANUAL
			if(SriJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualSri();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresSriActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSri(false);
			
			//SI ES MANUAL
			if(SriJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualSri();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesSriActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSri(false);
			
			//SI ES MANUAL
			if(SriJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualSri();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaSri() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosSri.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosSri.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosSri.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosSri.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosSri.setMinimumSize(dimensionMinimum);
		this.jTableDatosSri.setMaximumSize(dimensionMaximum);
		this.jTableDatosSri.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingSri(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingSri(esInicializar,true);
	}
	
	public void inicializarActualizarBindingSri(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaSri(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesSri(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.sriSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasSri(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesSri(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesSri(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !SriJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!SriJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualSri() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaSri();
		
		this.inicializarActualizarBindingBotonesManualSri(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.sriSessionBean.getEsGuardarRelacionado()) {
			/*
			this.inicializarActualizarBindingBusquedasManualSri();			
			*/
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesSri() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualSri(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualSri(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosSri.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosSri.isSelected();
				
				/*
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteSri.isSelected();															
				*/
				
				if(this.jInternalFrameDetalleFormSri!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormSri.jCheckBoxPostAccionNuevoSri.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormSri.jCheckBoxPostAccionSinCerrarSri.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormSri.jCheckBoxPostAccionSinMensajeSri.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosSri.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosSri.setSelected(this.isSeleccionados);
				
				/*
				this.jCheckBoxConGraficoReporteSri.setSelected(this.conGraficoReporte);				
				*/
				
				if(this.jInternalFrameDetalleFormSri!=null) {
				this.jInternalFrameDetalleFormSri.jCheckBoxPostAccionNuevoSri.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormSri.jCheckBoxPostAccionSinCerrarSri.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormSri.jCheckBoxPostAccionSinMensajeSri.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			/*
			if(this.jComboBoxTiposPaginacionSri.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionSri.getSelectedItem()).getsCodigo();			
			}
			*/
			
			
			if(this.jInternalFrameDetalleFormSri!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.getSelectedItem()).getsCodigo();
			}
			
			
			/*
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesSri.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoSri!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesSri.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesSri.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarSri.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesSri.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoSri!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesSri.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralSri.getText();						
			
			*/
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesSri(Boolean esInicializar) throws Exception {
		try	{	
			if(SriJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualSri(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesSri() throws Exception {
		try	{
			if(SriJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualSri();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleSri() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualSri() throws Exception {
		try	{
			/*
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesSri.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesSri.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesSri.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesSri.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesSri.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesSri.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionSri.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionSri.addItem(reporte);
			}
			
			
			if(!this.sriSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionSri.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionSri.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesSri.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesSri.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesSri.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesSri.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			*/
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			/*
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarSri.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarSri.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarSri.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualSri();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			*/
		} catch(Exception e) {
			throw e;
		}
	}		
	
	/*
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualSri() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoSri!=null) {
				this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoSri!=null) {
				this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoSri!=null) {
				
				if(this.jInternalFrameReporteDinamicoSri.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoSri.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoSri.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoSri.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoSri.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoSri.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoSri.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoSri.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=SriConstantesFunciones.getTiposSeleccionarSri(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoSri.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoSri.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoSri.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=SriConstantesFunciones.getTiposSeleccionarSri(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoSri.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoSri.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoSri.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=SriConstantesFunciones.getTiposSeleccionarSri(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoSri.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoSri.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	*/
	
	/*
	public void inicializarActualizarBindingBusquedasManualSri()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContableSri.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContableSri.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteSri.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteSri.getSelectedItem()).getId();}
		if(this.jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.getSelectedItem()!=null){this.tipo_comprobanteFK_IdTipoComprobante=((TipoComprobante)this.jComboBoxtipo_comprobanteFK_IdTipoComprobanteSri.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_ivaFK_IdTipoIvaSri.getSelectedItem()!=null){this.id_tipo_ivaFK_IdTipoIva=((TipoIva)this.jComboBoxid_tipo_ivaFK_IdTipoIvaSri.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.getSelectedItem()!=null){this.id_tipo_movimientoFK_IdTipoMovimiento=((TipoMovimiento)this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoSri.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.getSelectedItem()!=null){this.id_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien=((TipoRetencionIva)this.jComboBoxid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBienSri.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.getSelectedItem()!=null){this.id_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio=((TipoRetencionIva)this.jComboBoxid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicioSri.getSelectedItem()).getId();}
		if(this.jComboBoxtipo_tributarioFK_IdTipoTributarioSri.getSelectedItem()!=null){this.tipo_tributarioFK_IdTipoTributario=((TipoTributario)this.jComboBoxtipo_tributarioFK_IdTipoTributarioSri.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.getSelectedItem()!=null){this.id_transaccion_contaFK_IdTransaccionConta=((TransaccionConta)this.jComboBoxid_transaccion_contaFK_IdTransaccionContaSri.getSelectedItem()).getId();}
		
	}
	*/
	
	
	
	public void inicializarActualizarBindingBusquedasSri(Boolean esInicializar) throws Exception {				
		if(SriJInternalFrame.ISBINDING_MANUAL) {
			/*
			this.inicializarActualizarBindingBusquedasManualSri();			
			*/
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaSri() throws Exception {
		this.inicializarActualizarBindingTablaSri(false);
	}
	
	/*
	public void inicializarActualizarBindingTablaOrderBySri() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderBySri.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderBySri.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderBySri.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderBySri.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderBySri.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosSriOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSriOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderBySri.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderBySri.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderBySri.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	*/
	
	
	public void inicializarActualizarBindingTablaSri(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=sriLogic.getSris().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=sris.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(SriJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosSri.setModel(new SriModel(this.sriLogic.getSris(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosSri.setModel(new SriModel(this.sris,this));
			}
			//ARCHITECTURE
			
							
			/*
			
			if(this.jInternalFrameOrderBySri!=null && this.jInternalFrameOrderBySri.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderBySri();
			}
			*/
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+SriConstantesFunciones.SCLASSWEBTITULO,sriConstantesFunciones.resaltarSeleccionarSri,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+SriConstantesFunciones.SCLASSWEBTITULO,sriConstantesFunciones.resaltarSeleccionarSri,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_ID));

		if(this.sriConstantesFunciones.mostraridSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltaridSri,this.sriConstantesFunciones.activaridSri,iSizeTabla,this,true,"idSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltaridSri,this.sriConstantesFunciones.activaridSri,this,true,"idSri","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDASIENTOCONTABLE));

		if(this.sriConstantesFunciones.mostrarid_asiento_contableSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_IDASIENTOCONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AsientoContableTableCell(this.asientocontablesForeignKey,this.sriConstantesFunciones.resaltarid_asiento_contableSri,this,this.sriConstantesFunciones.activarid_asiento_contableSri,iSizeTabla));
			tableColumn.setCellEditor(new AsientoContableTableCell(this.asientocontablesForeignKey,this.sriConstantesFunciones.resaltarid_asiento_contableSri,this,this.sriConstantesFunciones.activarid_asiento_contableSri,true,"id_asiento_contableSri","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA));

		if(this.sriConstantesFunciones.mostrarid_transaccion_contaSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionContaTableCell(this.transaccioncontasForeignKey,this.sriConstantesFunciones.resaltarid_transaccion_contaSri,this,this.sriConstantesFunciones.activarid_transaccion_contaSri,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionContaTableCell(this.transaccioncontasForeignKey,this.sriConstantesFunciones.resaltarid_transaccion_contaSri,this,this.sriConstantesFunciones.activarid_transaccion_contaSri,true,"id_transaccion_contaSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_RUC));

		if(this.sriConstantesFunciones.mostrarrucSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.sriConstantesFunciones.resaltarrucSri,this.sriConstantesFunciones.activarrucSri,iSizeTabla,this,true,"rucSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarrucSri,this.sriConstantesFunciones.activarrucSri,this,true,"rucSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDCLIENTE));

		if(this.sriConstantesFunciones.mostrarid_clienteSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.sriConstantesFunciones.resaltarid_clienteSri,this,this.sriConstantesFunciones.activarid_clienteSri,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.sriConstantesFunciones.resaltarid_clienteSri,this,this.sriConstantesFunciones.activarid_clienteSri,true,"id_clienteSri","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_RAZONSOCIAL));

		if(this.sriConstantesFunciones.mostrarrazon_socialSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_RAZONSOCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.sriConstantesFunciones.resaltarrazon_socialSri,this.sriConstantesFunciones.activarrazon_socialSri,iSizeTabla,this,true,"razon_socialSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarrazon_socialSri,this.sriConstantesFunciones.activarrazon_socialSri,this,true,"razon_socialSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE));

		if(this.sriConstantesFunciones.mostrartipo_comprobanteSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoComprobanteTableCell(this.tipocomprobantesForeignKey,this.sriConstantesFunciones.resaltartipo_comprobanteSri,this,this.sriConstantesFunciones.activartipo_comprobanteSri,iSizeTabla));
			tableColumn.setCellEditor(new TipoComprobanteTableCell(this.tipocomprobantesForeignKey,this.sriConstantesFunciones.resaltartipo_comprobanteSri,this,this.sriConstantesFunciones.activartipo_comprobanteSri,true,"tipo_comprobanteSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_ESRISE));

		if(this.sriConstantesFunciones.mostrares_riseSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_ESRISE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.sriConstantesFunciones.resaltares_riseSri,this.sriConstantesFunciones.activares_riseSri,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.sriConstantesFunciones.resaltares_riseSri,this.sriConstantesFunciones.activares_riseSri,this,true,"es_riseSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_NUMEROSERIE));

		if(this.sriConstantesFunciones.mostrarnumero_serieSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_NUMEROSERIE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.sriConstantesFunciones.resaltarnumero_serieSri,this.sriConstantesFunciones.activarnumero_serieSri,iSizeTabla,this,true,"numero_serieSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarnumero_serieSri,this.sriConstantesFunciones.activarnumero_serieSri,this,true,"numero_serieSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_NUMEROAUTORIZACION));

		if(this.sriConstantesFunciones.mostrarnumero_autorizacionSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_NUMEROAUTORIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.sriConstantesFunciones.resaltarnumero_autorizacionSri,this.sriConstantesFunciones.activarnumero_autorizacionSri,iSizeTabla,this,true,"numero_autorizacionSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarnumero_autorizacionSri,this.sriConstantesFunciones.activarnumero_autorizacionSri,this,true,"numero_autorizacionSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_NUMEROSECUENCIAL));

		if(this.sriConstantesFunciones.mostrarnumero_secuencialSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_NUMEROSECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.sriConstantesFunciones.resaltarnumero_secuencialSri,this.sriConstantesFunciones.activarnumero_secuencialSri,iSizeTabla,this,true,"numero_secuencialSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarnumero_secuencialSri,this.sriConstantesFunciones.activarnumero_secuencialSri,this,true,"numero_secuencialSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_FECHAEMISION));

		if(this.sriConstantesFunciones.mostrarfecha_emisionSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.sriConstantesFunciones.resaltarfecha_emisionSri,this.sriConstantesFunciones.activarfecha_emisionSri,iSizeTabla,this,true,"fecha_emisionSri","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.sriConstantesFunciones.resaltarfecha_emisionSri,this.sriConstantesFunciones.activarfecha_emisionSri,this,true,"fecha_emisionSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE));

		if(this.sriConstantesFunciones.mostrarfecha_registro_contableSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.sriConstantesFunciones.resaltarfecha_registro_contableSri,this.sriConstantesFunciones.activarfecha_registro_contableSri,iSizeTabla,this,true,"fecha_registro_contableSri","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.sriConstantesFunciones.resaltarfecha_registro_contableSri,this.sriConstantesFunciones.activarfecha_registro_contableSri,this,true,"fecha_registro_contableSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_FECHACADUCIDAD));

		if(this.sriConstantesFunciones.mostrarfecha_caducidadSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_FECHACADUCIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.sriConstantesFunciones.resaltarfecha_caducidadSri,this.sriConstantesFunciones.activarfecha_caducidadSri,iSizeTabla,this,true,"fecha_caducidadSri","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.sriConstantesFunciones.resaltarfecha_caducidadSri,this.sriConstantesFunciones.activarfecha_caducidadSri,this,true,"fecha_caducidadSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO));

		if(this.sriConstantesFunciones.mostrartipo_tributarioSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoTributarioTableCell(this.tipotributariosForeignKey,this.sriConstantesFunciones.resaltartipo_tributarioSri,this,this.sriConstantesFunciones.activartipo_tributarioSri,iSizeTabla));
			tableColumn.setCellEditor(new TipoTributarioTableCell(this.tipotributariosForeignKey,this.sriConstantesFunciones.resaltartipo_tributarioSri,this,this.sriConstantesFunciones.activartipo_tributarioSri,true,"tipo_tributarioSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_BIENESTAR12));

		if(this.sriConstantesFunciones.mostrarbienes_tar12Sri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_BIENESTAR12,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarbienes_tar12Sri,this.sriConstantesFunciones.activarbienes_tar12Sri,iSizeTabla,this,true,"bienes_tar12Sri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarbienes_tar12Sri,this.sriConstantesFunciones.activarbienes_tar12Sri,this,true,"bienes_tar12Sri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_BIENESTAR0));

		if(this.sriConstantesFunciones.mostrarbienes_tar0Sri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_BIENESTAR0,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarbienes_tar0Sri,this.sriConstantesFunciones.activarbienes_tar0Sri,iSizeTabla,this,true,"bienes_tar0Sri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarbienes_tar0Sri,this.sriConstantesFunciones.activarbienes_tar0Sri,this,true,"bienes_tar0Sri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPOIVA));

		if(this.sriConstantesFunciones.mostrarid_tipo_ivaSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_IDTIPOIVA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoIvaTableCell(this.tipoivasForeignKey,this.sriConstantesFunciones.resaltarid_tipo_ivaSri,this,this.sriConstantesFunciones.activarid_tipo_ivaSri,iSizeTabla));
			tableColumn.setCellEditor(new TipoIvaTableCell(this.tipoivasForeignKey,this.sriConstantesFunciones.resaltarid_tipo_ivaSri,this,this.sriConstantesFunciones.activarid_tipo_ivaSri,true,"id_tipo_ivaSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_SERVICIOSTAR12));

		if(this.sriConstantesFunciones.mostrarservicios_tar12Sri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_SERVICIOSTAR12,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarservicios_tar12Sri,this.sriConstantesFunciones.activarservicios_tar12Sri,iSizeTabla,this,true,"servicios_tar12Sri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarservicios_tar12Sri,this.sriConstantesFunciones.activarservicios_tar12Sri,this,true,"servicios_tar12Sri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_SERVICIOSTAR0));

		if(this.sriConstantesFunciones.mostrarservicios_tar0Sri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_SERVICIOSTAR0,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarservicios_tar0Sri,this.sriConstantesFunciones.activarservicios_tar0Sri,iSizeTabla,this,true,"servicios_tar0Sri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarservicios_tar0Sri,this.sriConstantesFunciones.activarservicios_tar0Sri,this,true,"servicios_tar0Sri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_MONTOIVA));

		if(this.sriConstantesFunciones.mostrarmonto_ivaSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_MONTOIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarmonto_ivaSri,this.sriConstantesFunciones.activarmonto_ivaSri,iSizeTabla,this,true,"monto_ivaSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarmonto_ivaSri,this.sriConstantesFunciones.activarmonto_ivaSri,this,true,"monto_ivaSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_BASEIMPOTAR12));

		if(this.sriConstantesFunciones.mostrarbase_impo_tar12Sri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_BASEIMPOTAR12,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarbase_impo_tar12Sri,this.sriConstantesFunciones.activarbase_impo_tar12Sri,iSizeTabla,this,true,"base_impo_tar12Sri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarbase_impo_tar12Sri,this.sriConstantesFunciones.activarbase_impo_tar12Sri,this,true,"base_impo_tar12Sri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_BASEIMPOTAR0));

		if(this.sriConstantesFunciones.mostrarbase_impo_tar0Sri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_BASEIMPOTAR0,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarbase_impo_tar0Sri,this.sriConstantesFunciones.activarbase_impo_tar0Sri,iSizeTabla,this,true,"base_impo_tar0Sri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarbase_impo_tar0Sri,this.sriConstantesFunciones.activarbase_impo_tar0Sri,this,true,"base_impo_tar0Sri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_MONTOICE));

		if(this.sriConstantesFunciones.mostrarmonto_iceSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_MONTOICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarmonto_iceSri,this.sriConstantesFunciones.activarmonto_iceSri,iSizeTabla,this,true,"monto_iceSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarmonto_iceSri,this.sriConstantesFunciones.activarmonto_iceSri,this,true,"monto_iceSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_MONTOIVABIEN));

		if(this.sriConstantesFunciones.mostrarmonto_iva_bienSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_MONTOIVABIEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarmonto_iva_bienSri,this.sriConstantesFunciones.activarmonto_iva_bienSri,iSizeTabla,this,true,"monto_iva_bienSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarmonto_iva_bienSri,this.sriConstantesFunciones.activarmonto_iva_bienSri,this,true,"monto_iva_bienSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_MONTOIVASERVICIO));

		if(this.sriConstantesFunciones.mostrarmonto_iva_servicioSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_MONTOIVASERVICIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarmonto_iva_servicioSri,this.sriConstantesFunciones.activarmonto_iva_servicioSri,iSizeTabla,this,true,"monto_iva_servicioSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarmonto_iva_servicioSri,this.sriConstantesFunciones.activarmonto_iva_servicioSri,this,true,"monto_iva_servicioSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN));

		if(this.sriConstantesFunciones.mostrarid_tipo_retencion_iva_bienSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRetencionIvaTableCell(this.tiporetencionivabiensForeignKey,this.sriConstantesFunciones.resaltarid_tipo_retencion_iva_bienSri,this,this.sriConstantesFunciones.activarid_tipo_retencion_iva_bienSri,iSizeTabla));
			tableColumn.setCellEditor(new TipoRetencionIvaTableCell(this.tiporetencionivabiensForeignKey,this.sriConstantesFunciones.resaltarid_tipo_retencion_iva_bienSri,this,this.sriConstantesFunciones.activarid_tipo_retencion_iva_bienSri,true,"id_tipo_retencion_iva_bienSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO));

		if(this.sriConstantesFunciones.mostrarid_tipo_retencion_iva_servicioSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRetencionIvaTableCell(this.tiporetencionivaserviciosForeignKey,this.sriConstantesFunciones.resaltarid_tipo_retencion_iva_servicioSri,this,this.sriConstantesFunciones.activarid_tipo_retencion_iva_servicioSri,iSizeTabla));
			tableColumn.setCellEditor(new TipoRetencionIvaTableCell(this.tiporetencionivaserviciosForeignKey,this.sriConstantesFunciones.resaltarid_tipo_retencion_iva_servicioSri,this,this.sriConstantesFunciones.activarid_tipo_retencion_iva_servicioSri,true,"id_tipo_retencion_iva_servicioSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_RETENCIONIVABIEN));

		if(this.sriConstantesFunciones.mostrarretencion_iva_bienSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_RETENCIONIVABIEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarretencion_iva_bienSri,this.sriConstantesFunciones.activarretencion_iva_bienSri,iSizeTabla,this,true,"retencion_iva_bienSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarretencion_iva_bienSri,this.sriConstantesFunciones.activarretencion_iva_bienSri,this,true,"retencion_iva_bienSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO));

		if(this.sriConstantesFunciones.mostrarretencion_iva_servicioSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.sriConstantesFunciones.resaltarretencion_iva_servicioSri,this.sriConstantesFunciones.activarretencion_iva_servicioSri,iSizeTabla,this,true,"retencion_iva_servicioSri","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.sriConstantesFunciones.resaltarretencion_iva_servicioSri,this.sriConstantesFunciones.activarretencion_iva_servicioSri,this,true,"retencion_iva_servicioSri","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSri,SriConstantesFunciones.LABEL_CONDEVOLUCION));

		if(this.sriConstantesFunciones.mostrarcon_devolucionSri && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SriConstantesFunciones.LABEL_CONDEVOLUCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.sriConstantesFunciones.resaltarcon_devolucionSri,this.sriConstantesFunciones.activarcon_devolucionSri,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.sriConstantesFunciones.resaltarcon_devolucionSri,this.sriConstantesFunciones.activarcon_devolucionSri,this,true,"con_devolucionSri","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SriPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.sriSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.sriSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.sriSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosSri.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.sriSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.sriSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosSri.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarSri && this.isPermisoGuardarCambiosSri) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.sriSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.sriSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosSri.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosSri.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarSri && this.isPermisoGuardarCambiosSri) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarSri && this.isPermisoGuardarCambiosSri) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosSri.moveColumn(this.jTableDatosSri.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosSri.moveColumn(this.jTableDatosSri.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosSri.moveColumn(this.jTableDatosSri.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosSri.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosSri.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosSri,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!SriJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosSri.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosSri.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!SriJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!SriJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosSri.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosSri.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosSri.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=sriLogic.getSris().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=sris.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosSri.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosSri.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosSri();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoSri=false;
					
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
				if(this.sriSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormSri==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosSri.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosSri.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.sri.getsType().equals("DUPLICADO")
				   || this.sri.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoSri=true;
				
				} else {
					this.isEsNuevoSri=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.sriSessionBean.getEsGuardarRelacionado()) {
					if(this.sri.getId()>=0 && !this.sri.getIsNew()) {						
						this.isEsNuevoSri=false;
						
					} else {
						this.isEsNuevoSri=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoSri(esRelaciones);						
				
				this.seleccionarSri(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.sri.getId()<0) {
					this.isEsNuevoSri=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarSri(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarSri(evt,rowIndex);
				}	
				
				if(this.sriSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion Sri: " + this.dDif); 
					}
				}								
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarSri(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.sri)) {
					if(this.sri.getId()>0) {
						this.sri.setIsDeleted(true);
						
						this.srisEliminados.add(this.sri);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.sriLogic.getSris().remove(this.sri);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.sris.remove(this.sri);				
					}
					
					
					((SriModel) this.jTableDatosSri.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaSri(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarSri(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoSri) {
			
			if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosSri.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosSri.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(SriJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioSri(this.sri);
				}
				
				//ARCHITECTURE
				try {
					

					//AsientoContable
					if(!this.sriConstantesFunciones.cargarid_asiento_contableSri || this.sriConstantesFunciones.event_dependid_asiento_contableSri) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.sri.getid_asiento_contable());
									//this.inicializarActualizarBindingSri(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(sri.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(sri.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.sri.getid_asiento_contable(),false,"Formulario");

					//TransaccionConta
					if(!this.sriConstantesFunciones.cargarid_transaccion_contaSri || this.sriConstantesFunciones.event_dependid_transaccion_contaSri) {
						//this.cargarCombosTransaccionContasForeignKeyLista(" where id="+this.sri.getid_transaccion_conta());
									//this.inicializarActualizarBindingSri(false,false);
						this.transaccioncontasForeignKey=new ArrayList<TransaccionConta>();

						if(sri.getTransaccionConta()!=null) {
							this.transaccioncontasForeignKey.add(sri.getTransaccionConta());
						}

						this.addItemDefectoCombosForeignKeyTransaccionConta();
						this.cargarCombosFrameTransaccionContasForeignKey("Todos");
					}
					this.setActualTransaccionContaForeignKey(this.sri.getid_transaccion_conta(),false,"Formulario");

					//Cliente
					if(!this.sriConstantesFunciones.cargarid_clienteSri || this.sriConstantesFunciones.event_dependid_clienteSri) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.sri.getid_cliente());
									//this.inicializarActualizarBindingSri(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(sri.getCliente()!=null) {
							this.clientesForeignKey.add(sri.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.sri.getid_cliente(),false,"Formulario");

					//TipoComprobante
					if(!this.sriConstantesFunciones.cargartipo_comprobanteSri || this.sriConstantesFunciones.event_dependtipo_comprobanteSri) {
						//this.cargarCombosTipoComprobantesForeignKeyLista(" where id="+this.sri.gettipo_comprobante());
									//this.inicializarActualizarBindingSri(false,false);
						this.tipocomprobantesForeignKey=new ArrayList<TipoComprobante>();

						if(sri.getTipoComprobante()!=null) {
							this.tipocomprobantesForeignKey.add(sri.getTipoComprobante());
						}

						this.addItemDefectoCombosForeignKeyTipoComprobante();
						this.cargarCombosFrameTipoComprobantesForeignKey("Todos");
					}
					this.setActualTipoComprobanteForeignKey(this.sri.gettipo_comprobante(),false,"Formulario");

					//TipoTributario
					if(!this.sriConstantesFunciones.cargartipo_tributarioSri || this.sriConstantesFunciones.event_dependtipo_tributarioSri) {
						//this.cargarCombosTipoTributariosForeignKeyLista(" where id="+this.sri.gettipo_tributario());
									//this.inicializarActualizarBindingSri(false,false);
						this.tipotributariosForeignKey=new ArrayList<TipoTributario>();

						if(sri.getTipoTributario()!=null) {
							this.tipotributariosForeignKey.add(sri.getTipoTributario());
						}

						this.addItemDefectoCombosForeignKeyTipoTributario();
						this.cargarCombosFrameTipoTributariosForeignKey("Todos");
					}
					this.setActualTipoTributarioForeignKey(this.sri.gettipo_tributario(),false,"Formulario");

					//TipoIva
					if(!this.sriConstantesFunciones.cargarid_tipo_ivaSri || this.sriConstantesFunciones.event_dependid_tipo_ivaSri) {
						//this.cargarCombosTipoIvasForeignKeyLista(" where id="+this.sri.getid_tipo_iva());
									//this.inicializarActualizarBindingSri(false,false);
						this.tipoivasForeignKey=new ArrayList<TipoIva>();

						if(sri.getTipoIva()!=null) {
							this.tipoivasForeignKey.add(sri.getTipoIva());
						}

						this.addItemDefectoCombosForeignKeyTipoIva();
						this.cargarCombosFrameTipoIvasForeignKey("Todos");
					}
					this.setActualTipoIvaForeignKey(this.sri.getid_tipo_iva(),false,"Formulario");

					//TipoRetencionIvaBien
					if(!this.sriConstantesFunciones.cargarid_tipo_retencion_iva_bienSri || this.sriConstantesFunciones.event_dependid_tipo_retencion_iva_bienSri) {
						//this.cargarCombosTipoRetencionIvaBiensForeignKeyLista(" where id="+this.sri.getid_tipo_retencion_iva_bien());
									//this.inicializarActualizarBindingSri(false,false);
						this.tiporetencionivabiensForeignKey=new ArrayList<TipoRetencionIva>();

						if(sri.getTipoRetencionIvaBien()!=null) {
							this.tiporetencionivabiensForeignKey.add(sri.getTipoRetencionIvaBien());
						}

						this.addItemDefectoCombosForeignKeyTipoRetencionIvaBien();
						this.cargarCombosFrameTipoRetencionIvaBiensForeignKey("Todos");
					}
					this.setActualTipoRetencionIvaBienForeignKey(this.sri.getid_tipo_retencion_iva_bien(),false,"Formulario");

					//TipoRetencionIvaServicio
					if(!this.sriConstantesFunciones.cargarid_tipo_retencion_iva_servicioSri || this.sriConstantesFunciones.event_dependid_tipo_retencion_iva_servicioSri) {
						//this.cargarCombosTipoRetencionIvaServiciosForeignKeyLista(" where id="+this.sri.getid_tipo_retencion_iva_servicio());
									//this.inicializarActualizarBindingSri(false,false);
						this.tiporetencionivaserviciosForeignKey=new ArrayList<TipoRetencionIva>();

						if(sri.getTipoRetencionIvaServicio()!=null) {
							this.tiporetencionivaserviciosForeignKey.add(sri.getTipoRetencionIvaServicio());
						}

						this.addItemDefectoCombosForeignKeyTipoRetencionIvaServicio();
						this.cargarCombosFrameTipoRetencionIvaServiciosForeignKey("Todos");
					}
					this.setActualTipoRetencionIvaServicioForeignKey(this.sri.getid_tipo_retencion_iva_servicio(),false,"Formulario");

					//TipoMovimiento
					if(!this.sriConstantesFunciones.cargarid_tipo_movimientoSri || this.sriConstantesFunciones.event_dependid_tipo_movimientoSri) {
						//this.cargarCombosTipoMovimientosForeignKeyLista(" where id="+this.sri.getid_tipo_movimiento());
									//this.inicializarActualizarBindingSri(false,false);
						this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>();

						if(sri.getTipoMovimiento()!=null) {
							this.tipomovimientosForeignKey.add(sri.getTipoMovimiento());
						}

						this.addItemDefectoCombosForeignKeyTipoMovimiento();
						this.cargarCombosFrameTipoMovimientosForeignKey("Todos");
					}
					this.setActualTipoMovimientoForeignKey(this.sri.getid_tipo_movimiento(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesSri("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesSri(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualSri() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoSri(Sri sri) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoSri(sri,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoSri(Sri sri,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioSri(sri);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeySri(sri,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeySri(sri);
	}
	
	public void setVariablesObjetoActualToFormularioSri(Sri sri) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormSri.jLabelidSri.setText(sri.getId().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldrucSri.setText(sri.getruc());
			this.jInternalFrameDetalleFormSri.jTextArearazon_socialSri.setText(sri.getrazon_social());
			this.jInternalFrameDetalleFormSri.jCheckBoxes_riseSri.setSelected(sri.getes_rise());
			this.jInternalFrameDetalleFormSri.jTextFieldnumero_serieSri.setText(sri.getnumero_serie());
			this.jInternalFrameDetalleFormSri.jTextFieldnumero_autorizacionSri.setText(sri.getnumero_autorizacion());
			this.jInternalFrameDetalleFormSri.jTextFieldnumero_secuencialSri.setText(sri.getnumero_secuencial());
			this.jInternalFrameDetalleFormSri.jDateChooserfecha_emisionSri.setDate(sri.getfecha_emision());
			this.jInternalFrameDetalleFormSri.jDateChooserfecha_registro_contableSri.setDate(sri.getfecha_registro_contable());
			this.jInternalFrameDetalleFormSri.jDateChooserfecha_caducidadSri.setDate(sri.getfecha_caducidad());
			this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar12Sri.setText(sri.getbienes_tar12().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar0Sri.setText(sri.getbienes_tar0().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar12Sri.setText(sri.getservicios_tar12().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar0Sri.setText(sri.getservicios_tar0().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_ivaSri.setText(sri.getmonto_iva().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar12Sri.setText(sri.getbase_impo_tar12().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar0Sri.setText(sri.getbase_impo_tar0().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_iceSri.setText(sri.getmonto_ice().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_bienSri.setText(sri.getmonto_iva_bien().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_servicioSri.setText(sri.getmonto_iva_servicio().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_bienSri.setText(sri.getretencion_iva_bien().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_servicioSri.setText(sri.getretencion_iva_servicio().toString());
			this.jInternalFrameDetalleFormSri.jCheckBoxcon_devolucionSri.setSelected(sri.getcon_devolucion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,Sri sriLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,sriLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,Sri sriLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				sriLocal=this.sri;
			} else {
				sriLocal=this.sriAnterior;
			}
		}
		
		if(this.permiteMantenimiento(sriLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoSri(sriLocal,true);
					
					if(sriSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(sriLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.sriSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(sriLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoSri(Sri sri,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualSri(sri,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysSri(sri);
	}
	
	public void setVariablesFormularioToObjetoActualSri(Sri sri,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualSri(sri,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualSri(Sri sri,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormSri.jLabelidSri.getText()==null || this.jInternalFrameDetalleFormSri.jLabelidSri.getText()=="" || this.jInternalFrameDetalleFormSri.jLabelidSri.getText()=="Id") {
				this.jInternalFrameDetalleFormSri.jLabelidSri.setText("0");
			}

			if(conColumnasBase) {sri.setId(Long.parseLong(this.jInternalFrameDetalleFormSri.jLabelidSri.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelIdSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setruc(this.jInternalFrameDetalleFormSri.jTextFieldrucSri.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelrucSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setrazon_social(this.jInternalFrameDetalleFormSri.jTextArearazon_socialSri.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_RAZONSOCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelrazon_socialSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setes_rise(this.jInternalFrameDetalleFormSri.jCheckBoxes_riseSri.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_ESRISE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabeles_riseSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setnumero_serie(this.jInternalFrameDetalleFormSri.jTextFieldnumero_serieSri.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_NUMEROSERIE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelnumero_serieSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setnumero_autorizacion(this.jInternalFrameDetalleFormSri.jTextFieldnumero_autorizacionSri.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_NUMEROAUTORIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelnumero_autorizacionSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setnumero_secuencial(this.jInternalFrameDetalleFormSri.jTextFieldnumero_secuencialSri.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_NUMEROSECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelnumero_secuencialSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setfecha_emision(this.jInternalFrameDetalleFormSri.jDateChooserfecha_emisionSri.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelfecha_emisionSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setfecha_registro_contable(this.jInternalFrameDetalleFormSri.jDateChooserfecha_registro_contableSri.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelfecha_registro_contableSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setfecha_caducidad(this.jInternalFrameDetalleFormSri.jDateChooserfecha_caducidadSri.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_FECHACADUCIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelfecha_caducidadSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setbienes_tar12(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar12Sri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_BIENESTAR12+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelbienes_tar12Sri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setbienes_tar0(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar0Sri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_BIENESTAR0+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelbienes_tar0Sri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setservicios_tar12(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar12Sri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_SERVICIOSTAR12+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelservicios_tar12Sri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setservicios_tar0(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar0Sri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_SERVICIOSTAR0+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelservicios_tar0Sri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setmonto_iva(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldmonto_ivaSri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_MONTOIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelmonto_ivaSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setbase_impo_tar12(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar12Sri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_BASEIMPOTAR12+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelbase_impo_tar12Sri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setbase_impo_tar0(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar0Sri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_BASEIMPOTAR0+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelbase_impo_tar0Sri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setmonto_ice(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldmonto_iceSri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_MONTOICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelmonto_iceSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setmonto_iva_bien(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_bienSri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_MONTOIVABIEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelmonto_iva_bienSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setmonto_iva_servicio(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_servicioSri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_MONTOIVASERVICIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelmonto_iva_servicioSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setretencion_iva_bien(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_bienSri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_RETENCIONIVABIEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelretencion_iva_bienSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setretencion_iva_servicio(Double.parseDouble(this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_servicioSri.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelretencion_iva_servicioSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			sri.setcon_devolucion(this.jInternalFrameDetalleFormSri.jCheckBoxcon_devolucionSri.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SriConstantesFunciones.LABEL_CONDEVOLUCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSri.jLabelcon_devolucionSri,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualSri(Sri sriBean,Sri sri,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && sriBean.getid_asiento_contable()!=null && !sriBean.getid_asiento_contable().equals(-1L))) {sri.setid_asiento_contable(sriBean.getid_asiento_contable());}
			if(conDefault || (!conDefault && sriBean.getid_transaccion_conta()!=null && !sriBean.getid_transaccion_conta().equals(-1L))) {sri.setid_transaccion_conta(sriBean.getid_transaccion_conta());}
			if(conDefault || (!conDefault && sriBean.getid_cliente()!=null && !sriBean.getid_cliente().equals(-1L))) {sri.setid_cliente(sriBean.getid_cliente());}
			if(conDefault || (!conDefault && sriBean.gettipo_comprobante()!=null && !sriBean.gettipo_comprobante().equals(-1L))) {sri.settipo_comprobante(sriBean.gettipo_comprobante());}
			if(conDefault || (!conDefault && sriBean.gettipo_tributario()!=null && !sriBean.gettipo_tributario().equals(-1L))) {sri.settipo_tributario(sriBean.gettipo_tributario());}
			if(conDefault || (!conDefault && sriBean.getid_tipo_iva()!=null && !sriBean.getid_tipo_iva().equals(-1L))) {sri.setid_tipo_iva(sriBean.getid_tipo_iva());}
			if(conDefault || (!conDefault && sriBean.getid_tipo_retencion_iva_bien()!=null && !sriBean.getid_tipo_retencion_iva_bien().equals(-1L))) {sri.setid_tipo_retencion_iva_bien(sriBean.getid_tipo_retencion_iva_bien());}
			if(conDefault || (!conDefault && sriBean.getid_tipo_retencion_iva_servicio()!=null && !sriBean.getid_tipo_retencion_iva_servicio().equals(-1L))) {sri.setid_tipo_retencion_iva_servicio(sriBean.getid_tipo_retencion_iva_servicio());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosSri(Sri sriOrigen,Sri sri,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && sriOrigen.getId()!=null && !sriOrigen.getId().equals(0L))) {sri.setId(sriOrigen.getId());}}
			if(conDefault || (!conDefault && sriOrigen.getid_asiento_contable()!=null && !sriOrigen.getid_asiento_contable().equals(-1L))) {sri.setid_asiento_contable(sriOrigen.getid_asiento_contable());}
			if(conDefault || (!conDefault && sriOrigen.getid_transaccion_conta()!=null && !sriOrigen.getid_transaccion_conta().equals(-1L))) {sri.setid_transaccion_conta(sriOrigen.getid_transaccion_conta());}
			if(conDefault || (!conDefault && sriOrigen.getruc()!=null && !sriOrigen.getruc().equals(""))) {sri.setruc(sriOrigen.getruc());}
			if(conDefault || (!conDefault && sriOrigen.getid_cliente()!=null && !sriOrigen.getid_cliente().equals(-1L))) {sri.setid_cliente(sriOrigen.getid_cliente());}
			if(conDefault || (!conDefault && sriOrigen.getrazon_social()!=null && !sriOrigen.getrazon_social().equals(""))) {sri.setrazon_social(sriOrigen.getrazon_social());}
			if(conDefault || (!conDefault && sriOrigen.gettipo_comprobante()!=null && !sriOrigen.gettipo_comprobante().equals(-1L))) {sri.settipo_comprobante(sriOrigen.gettipo_comprobante());}
			if(conDefault || (!conDefault && sriOrigen.getes_rise()!=null && !sriOrigen.getes_rise().equals(false))) {sri.setes_rise(sriOrigen.getes_rise());}
			if(conDefault || (!conDefault && sriOrigen.getnumero_serie()!=null && !sriOrigen.getnumero_serie().equals(""))) {sri.setnumero_serie(sriOrigen.getnumero_serie());}
			if(conDefault || (!conDefault && sriOrigen.getnumero_autorizacion()!=null && !sriOrigen.getnumero_autorizacion().equals(""))) {sri.setnumero_autorizacion(sriOrigen.getnumero_autorizacion());}
			if(conDefault || (!conDefault && sriOrigen.getnumero_secuencial()!=null && !sriOrigen.getnumero_secuencial().equals(""))) {sri.setnumero_secuencial(sriOrigen.getnumero_secuencial());}
			if(conDefault || (!conDefault && sriOrigen.getfecha_emision()!=null && !sriOrigen.getfecha_emision().equals(new Date()))) {sri.setfecha_emision(sriOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && sriOrigen.getfecha_registro_contable()!=null && !sriOrigen.getfecha_registro_contable().equals(new Date()))) {sri.setfecha_registro_contable(sriOrigen.getfecha_registro_contable());}
			if(conDefault || (!conDefault && sriOrigen.getfecha_caducidad()!=null && !sriOrigen.getfecha_caducidad().equals(new Date()))) {sri.setfecha_caducidad(sriOrigen.getfecha_caducidad());}
			if(conDefault || (!conDefault && sriOrigen.gettipo_tributario()!=null && !sriOrigen.gettipo_tributario().equals(-1L))) {sri.settipo_tributario(sriOrigen.gettipo_tributario());}
			if(conDefault || (!conDefault && sriOrigen.getbienes_tar12()!=null && !sriOrigen.getbienes_tar12().equals(0.0))) {sri.setbienes_tar12(sriOrigen.getbienes_tar12());}
			if(conDefault || (!conDefault && sriOrigen.getbienes_tar0()!=null && !sriOrigen.getbienes_tar0().equals(0.0))) {sri.setbienes_tar0(sriOrigen.getbienes_tar0());}
			if(conDefault || (!conDefault && sriOrigen.getid_tipo_iva()!=null && !sriOrigen.getid_tipo_iva().equals(-1L))) {sri.setid_tipo_iva(sriOrigen.getid_tipo_iva());}
			if(conDefault || (!conDefault && sriOrigen.getservicios_tar12()!=null && !sriOrigen.getservicios_tar12().equals(0.0))) {sri.setservicios_tar12(sriOrigen.getservicios_tar12());}
			if(conDefault || (!conDefault && sriOrigen.getservicios_tar0()!=null && !sriOrigen.getservicios_tar0().equals(0.0))) {sri.setservicios_tar0(sriOrigen.getservicios_tar0());}
			if(conDefault || (!conDefault && sriOrigen.getmonto_iva()!=null && !sriOrigen.getmonto_iva().equals(0.0))) {sri.setmonto_iva(sriOrigen.getmonto_iva());}
			if(conDefault || (!conDefault && sriOrigen.getbase_impo_tar12()!=null && !sriOrigen.getbase_impo_tar12().equals(0.0))) {sri.setbase_impo_tar12(sriOrigen.getbase_impo_tar12());}
			if(conDefault || (!conDefault && sriOrigen.getbase_impo_tar0()!=null && !sriOrigen.getbase_impo_tar0().equals(0.0))) {sri.setbase_impo_tar0(sriOrigen.getbase_impo_tar0());}
			if(conDefault || (!conDefault && sriOrigen.getmonto_ice()!=null && !sriOrigen.getmonto_ice().equals(0.0))) {sri.setmonto_ice(sriOrigen.getmonto_ice());}
			if(conDefault || (!conDefault && sriOrigen.getmonto_iva_bien()!=null && !sriOrigen.getmonto_iva_bien().equals(0.0))) {sri.setmonto_iva_bien(sriOrigen.getmonto_iva_bien());}
			if(conDefault || (!conDefault && sriOrigen.getmonto_iva_servicio()!=null && !sriOrigen.getmonto_iva_servicio().equals(0.0))) {sri.setmonto_iva_servicio(sriOrigen.getmonto_iva_servicio());}
			if(conDefault || (!conDefault && sriOrigen.getid_tipo_retencion_iva_bien()!=null && !sriOrigen.getid_tipo_retencion_iva_bien().equals(-1L))) {sri.setid_tipo_retencion_iva_bien(sriOrigen.getid_tipo_retencion_iva_bien());}
			if(conDefault || (!conDefault && sriOrigen.getid_tipo_retencion_iva_servicio()!=null && !sriOrigen.getid_tipo_retencion_iva_servicio().equals(-1L))) {sri.setid_tipo_retencion_iva_servicio(sriOrigen.getid_tipo_retencion_iva_servicio());}
			if(conDefault || (!conDefault && sriOrigen.getretencion_iva_bien()!=null && !sriOrigen.getretencion_iva_bien().equals(0.0))) {sri.setretencion_iva_bien(sriOrigen.getretencion_iva_bien());}
			if(conDefault || (!conDefault && sriOrigen.getretencion_iva_servicio()!=null && !sriOrigen.getretencion_iva_servicio().equals(0.0))) {sri.setretencion_iva_servicio(sriOrigen.getretencion_iva_servicio());}
			if(conDefault || (!conDefault && sriOrigen.getcon_devolucion()!=null && !sriOrigen.getcon_devolucion().equals(false))) {sri.setcon_devolucion(sriOrigen.getcon_devolucion());}
			if(conDefault || (!conDefault && sriOrigen.getid_tipo_movimiento()!=null && !sriOrigen.getid_tipo_movimiento().equals(-1L))) {sri.setid_tipo_movimiento(sriOrigen.getid_tipo_movimiento());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioSri(Sri sri) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormSri.jLabelidSri.setText(sri.getId().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldrucSri.setText(sri.getruc());
			this.jInternalFrameDetalleFormSri.jTextArearazon_socialSri.setText(sri.getrazon_social());
			this.jInternalFrameDetalleFormSri.jCheckBoxes_riseSri.setSelected(sri.getes_rise());
			this.jInternalFrameDetalleFormSri.jTextFieldnumero_serieSri.setText(sri.getnumero_serie());
			this.jInternalFrameDetalleFormSri.jTextFieldnumero_autorizacionSri.setText(sri.getnumero_autorizacion());
			this.jInternalFrameDetalleFormSri.jTextFieldnumero_secuencialSri.setText(sri.getnumero_secuencial());
			this.jInternalFrameDetalleFormSri.jDateChooserfecha_emisionSri.setDate(sri.getfecha_emision());
			this.jInternalFrameDetalleFormSri.jDateChooserfecha_registro_contableSri.setDate(sri.getfecha_registro_contable());
			this.jInternalFrameDetalleFormSri.jDateChooserfecha_caducidadSri.setDate(sri.getfecha_caducidad());
			this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar12Sri.setText(sri.getbienes_tar12().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar0Sri.setText(sri.getbienes_tar0().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar12Sri.setText(sri.getservicios_tar12().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar0Sri.setText(sri.getservicios_tar0().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_ivaSri.setText(sri.getmonto_iva().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar12Sri.setText(sri.getbase_impo_tar12().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar0Sri.setText(sri.getbase_impo_tar0().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_iceSri.setText(sri.getmonto_ice().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_bienSri.setText(sri.getmonto_iva_bien().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_servicioSri.setText(sri.getmonto_iva_servicio().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_bienSri.setText(sri.getretencion_iva_bien().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_servicioSri.setText(sri.getretencion_iva_servicio().toString());
			this.jInternalFrameDetalleFormSri.jCheckBoxcon_devolucionSri.setSelected(sri.getcon_devolucion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioSri(SriBean sriBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormSri.jLabelidSri.setText(sriBean.getId().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldrucSri.setText(sriBean.getruc());
			this.jInternalFrameDetalleFormSri.jTextArearazon_socialSri.setText(sriBean.getrazon_social());
			this.jInternalFrameDetalleFormSri.jCheckBoxes_riseSri.setSelected(sriBean.getes_rise());
			this.jInternalFrameDetalleFormSri.jTextFieldnumero_serieSri.setText(sriBean.getnumero_serie());
			this.jInternalFrameDetalleFormSri.jTextFieldnumero_autorizacionSri.setText(sriBean.getnumero_autorizacion());
			this.jInternalFrameDetalleFormSri.jTextFieldnumero_secuencialSri.setText(sriBean.getnumero_secuencial());
			this.jInternalFrameDetalleFormSri.jDateChooserfecha_emisionSri.setDate(sriBean.getfecha_emision());
			this.jInternalFrameDetalleFormSri.jDateChooserfecha_registro_contableSri.setDate(sriBean.getfecha_registro_contable());
			this.jInternalFrameDetalleFormSri.jDateChooserfecha_caducidadSri.setDate(sriBean.getfecha_caducidad());
			this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar12Sri.setText(sriBean.getbienes_tar12().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar0Sri.setText(sriBean.getbienes_tar0().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar12Sri.setText(sriBean.getservicios_tar12().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar0Sri.setText(sriBean.getservicios_tar0().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_ivaSri.setText(sriBean.getmonto_iva().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar12Sri.setText(sriBean.getbase_impo_tar12().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar0Sri.setText(sriBean.getbase_impo_tar0().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_iceSri.setText(sriBean.getmonto_ice().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_bienSri.setText(sriBean.getmonto_iva_bien().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_servicioSri.setText(sriBean.getmonto_iva_servicio().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_bienSri.setText(sriBean.getretencion_iva_bien().toString());
			this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_servicioSri.setText(sriBean.getretencion_iva_servicio().toString());
			this.jInternalFrameDetalleFormSri.jCheckBoxcon_devolucionSri.setSelected(sriBean.getcon_devolucion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanSri(SriParameterReturnGeneral sriReturnGeneral,SriBean sriBean,Boolean conDefault) throws Exception { 
		try {
			Sri sriLocal=new Sri();
			
			sriLocal=sriReturnGeneral.getSri();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && sriLocal.getId()!=null && !sriLocal.getId().equals(0L))) {sriBean.setId(sriLocal.getId());}}
			if(conDefault || (!conDefault && sriLocal.getid_asiento_contable()!=null && !sriLocal.getid_asiento_contable().equals(-1L))) {sriBean.setid_asiento_contable(sriLocal.getid_asiento_contable());}
			if(conDefault || (!conDefault && sriLocal.getid_transaccion_conta()!=null && !sriLocal.getid_transaccion_conta().equals(-1L))) {sriBean.setid_transaccion_conta(sriLocal.getid_transaccion_conta());}
			if(conDefault || (!conDefault && sriLocal.getruc()!=null && !sriLocal.getruc().equals(""))) {sriBean.setruc(sriLocal.getruc());}
			if(conDefault || (!conDefault && sriLocal.getid_cliente()!=null && !sriLocal.getid_cliente().equals(-1L))) {sriBean.setid_cliente(sriLocal.getid_cliente());}
			if(conDefault || (!conDefault && sriLocal.getrazon_social()!=null && !sriLocal.getrazon_social().equals(""))) {sriBean.setrazon_social(sriLocal.getrazon_social());}
			if(conDefault || (!conDefault && sriLocal.gettipo_comprobante()!=null && !sriLocal.gettipo_comprobante().equals(-1L))) {sriBean.settipo_comprobante(sriLocal.gettipo_comprobante());}
			if(conDefault || (!conDefault && sriLocal.getes_rise()!=null && !sriLocal.getes_rise().equals(false))) {sriBean.setes_rise(sriLocal.getes_rise());}
			if(conDefault || (!conDefault && sriLocal.getnumero_serie()!=null && !sriLocal.getnumero_serie().equals(""))) {sriBean.setnumero_serie(sriLocal.getnumero_serie());}
			if(conDefault || (!conDefault && sriLocal.getnumero_autorizacion()!=null && !sriLocal.getnumero_autorizacion().equals(""))) {sriBean.setnumero_autorizacion(sriLocal.getnumero_autorizacion());}
			if(conDefault || (!conDefault && sriLocal.getnumero_secuencial()!=null && !sriLocal.getnumero_secuencial().equals(""))) {sriBean.setnumero_secuencial(sriLocal.getnumero_secuencial());}
			if(conDefault || (!conDefault && sriLocal.getfecha_emision()!=null && !sriLocal.getfecha_emision().equals(new Date()))) {sriBean.setfecha_emision(sriLocal.getfecha_emision());}
			if(conDefault || (!conDefault && sriLocal.getfecha_registro_contable()!=null && !sriLocal.getfecha_registro_contable().equals(new Date()))) {sriBean.setfecha_registro_contable(sriLocal.getfecha_registro_contable());}
			if(conDefault || (!conDefault && sriLocal.getfecha_caducidad()!=null && !sriLocal.getfecha_caducidad().equals(new Date()))) {sriBean.setfecha_caducidad(sriLocal.getfecha_caducidad());}
			if(conDefault || (!conDefault && sriLocal.gettipo_tributario()!=null && !sriLocal.gettipo_tributario().equals(-1L))) {sriBean.settipo_tributario(sriLocal.gettipo_tributario());}
			if(conDefault || (!conDefault && sriLocal.getbienes_tar12()!=null && !sriLocal.getbienes_tar12().equals(0.0))) {sriBean.setbienes_tar12(sriLocal.getbienes_tar12());}
			if(conDefault || (!conDefault && sriLocal.getbienes_tar0()!=null && !sriLocal.getbienes_tar0().equals(0.0))) {sriBean.setbienes_tar0(sriLocal.getbienes_tar0());}
			if(conDefault || (!conDefault && sriLocal.getid_tipo_iva()!=null && !sriLocal.getid_tipo_iva().equals(-1L))) {sriBean.setid_tipo_iva(sriLocal.getid_tipo_iva());}
			if(conDefault || (!conDefault && sriLocal.getservicios_tar12()!=null && !sriLocal.getservicios_tar12().equals(0.0))) {sriBean.setservicios_tar12(sriLocal.getservicios_tar12());}
			if(conDefault || (!conDefault && sriLocal.getservicios_tar0()!=null && !sriLocal.getservicios_tar0().equals(0.0))) {sriBean.setservicios_tar0(sriLocal.getservicios_tar0());}
			if(conDefault || (!conDefault && sriLocal.getmonto_iva()!=null && !sriLocal.getmonto_iva().equals(0.0))) {sriBean.setmonto_iva(sriLocal.getmonto_iva());}
			if(conDefault || (!conDefault && sriLocal.getbase_impo_tar12()!=null && !sriLocal.getbase_impo_tar12().equals(0.0))) {sriBean.setbase_impo_tar12(sriLocal.getbase_impo_tar12());}
			if(conDefault || (!conDefault && sriLocal.getbase_impo_tar0()!=null && !sriLocal.getbase_impo_tar0().equals(0.0))) {sriBean.setbase_impo_tar0(sriLocal.getbase_impo_tar0());}
			if(conDefault || (!conDefault && sriLocal.getmonto_ice()!=null && !sriLocal.getmonto_ice().equals(0.0))) {sriBean.setmonto_ice(sriLocal.getmonto_ice());}
			if(conDefault || (!conDefault && sriLocal.getmonto_iva_bien()!=null && !sriLocal.getmonto_iva_bien().equals(0.0))) {sriBean.setmonto_iva_bien(sriLocal.getmonto_iva_bien());}
			if(conDefault || (!conDefault && sriLocal.getmonto_iva_servicio()!=null && !sriLocal.getmonto_iva_servicio().equals(0.0))) {sriBean.setmonto_iva_servicio(sriLocal.getmonto_iva_servicio());}
			if(conDefault || (!conDefault && sriLocal.getid_tipo_retencion_iva_bien()!=null && !sriLocal.getid_tipo_retencion_iva_bien().equals(-1L))) {sriBean.setid_tipo_retencion_iva_bien(sriLocal.getid_tipo_retencion_iva_bien());}
			if(conDefault || (!conDefault && sriLocal.getid_tipo_retencion_iva_servicio()!=null && !sriLocal.getid_tipo_retencion_iva_servicio().equals(-1L))) {sriBean.setid_tipo_retencion_iva_servicio(sriLocal.getid_tipo_retencion_iva_servicio());}
			if(conDefault || (!conDefault && sriLocal.getretencion_iva_bien()!=null && !sriLocal.getretencion_iva_bien().equals(0.0))) {sriBean.setretencion_iva_bien(sriLocal.getretencion_iva_bien());}
			if(conDefault || (!conDefault && sriLocal.getretencion_iva_servicio()!=null && !sriLocal.getretencion_iva_servicio().equals(0.0))) {sriBean.setretencion_iva_servicio(sriLocal.getretencion_iva_servicio());}
			if(conDefault || (!conDefault && sriLocal.getcon_devolucion()!=null && !sriLocal.getcon_devolucion().equals(false))) {sriBean.setcon_devolucion(sriLocal.getcon_devolucion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxSriGenerico(Long idSriSeleccionado,JComboBox jComboBoxSri,List<Sri> srisLocal)throws Exception {
		try {
			Sri  sriTemp=null;

			for(Sri sriAux:srisLocal) {
				if(sriAux.getId()!=null && sriAux.getId().equals(idSriSeleccionado)) {
					sriTemp=sriAux;
					break;
				}
			}

			jComboBoxSri.setSelectedItem(sriTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxSriGenerico(JComboBox jComboBoxSri,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxSri.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxSri.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxSri.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxSri.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxSri.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxSri.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxSri.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxSri.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxSri.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxSri.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			sri=(Sri) sriLogic.getSris().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			sri =(Sri) sris.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!sri.getIsNew() && !sri.getIsChanged() && !sri.getIsDeleted()) {
				sDescripcion=sri.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=sri.getasientocontable_descripcion();
			}
		}

		if(sTipo.equals("TransaccionConta")) {
			//sDescripcion=this.getActualTransaccionContaForeignKeyDescripcion((Long)value);
			if(!sri.getIsNew() && !sri.getIsChanged() && !sri.getIsDeleted()) {
				sDescripcion=sri.gettransaccionconta_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionContaForeignKeyDescripcion((Long)value);
				sDescripcion=sri.gettransaccionconta_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!sri.getIsNew() && !sri.getIsChanged() && !sri.getIsDeleted()) {
				sDescripcion=sri.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=sri.getcliente_descripcion();
			}
		}

		if(sTipo.equals("TipoComprobante")) {
			//sDescripcion=this.getActualTipoComprobanteForeignKeyDescripcion((Long)value);
			if(!sri.getIsNew() && !sri.getIsChanged() && !sri.getIsDeleted()) {
				sDescripcion=sri.gettipocomprobante_descripcion();
			} else {
				//sDescripcion=this.getActualTipoComprobanteForeignKeyDescripcion((Long)value);
				sDescripcion=sri.gettipocomprobante_descripcion();
			}
		}

		if(sTipo.equals("TipoTributario")) {
			//sDescripcion=this.getActualTipoTributarioForeignKeyDescripcion((Long)value);
			if(!sri.getIsNew() && !sri.getIsChanged() && !sri.getIsDeleted()) {
				sDescripcion=sri.gettipotributario_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTributarioForeignKeyDescripcion((Long)value);
				sDescripcion=sri.gettipotributario_descripcion();
			}
		}

		if(sTipo.equals("TipoIva")) {
			//sDescripcion=this.getActualTipoIvaForeignKeyDescripcion((Long)value);
			if(!sri.getIsNew() && !sri.getIsChanged() && !sri.getIsDeleted()) {
				sDescripcion=sri.gettipoiva_descripcion();
			} else {
				//sDescripcion=this.getActualTipoIvaForeignKeyDescripcion((Long)value);
				sDescripcion=sri.gettipoiva_descripcion();
			}
		}

		if(sTipo.equals("TipoRetencionIvaBien")) {
			//sDescripcion=this.getActualTipoRetencionIvaBienForeignKeyDescripcion((Long)value);
			if(!sri.getIsNew() && !sri.getIsChanged() && !sri.getIsDeleted()) {
				sDescripcion=sri.gettiporetencionivabien_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRetencionIvaBienForeignKeyDescripcion((Long)value);
				sDescripcion=sri.gettiporetencionivabien_descripcion();
			}
		}

		if(sTipo.equals("TipoRetencionIvaServicio")) {
			//sDescripcion=this.getActualTipoRetencionIvaServicioForeignKeyDescripcion((Long)value);
			if(!sri.getIsNew() && !sri.getIsChanged() && !sri.getIsDeleted()) {
				sDescripcion=sri.gettiporetencionivaservicio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRetencionIvaServicioForeignKeyDescripcion((Long)value);
				sDescripcion=sri.gettiporetencionivaservicio_descripcion();
			}
		}

		if(sTipo.equals("TipoMovimiento")) {
			//sDescripcion=this.getActualTipoMovimientoForeignKeyDescripcion((Long)value);
			if(!sri.getIsNew() && !sri.getIsChanged() && !sri.getIsDeleted()) {
				sDescripcion=sri.gettipomovimiento_descripcion();
			} else {
				//sDescripcion=this.getActualTipoMovimientoForeignKeyDescripcion((Long)value);
				sDescripcion=sri.gettipomovimiento_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		Sri sriRow=new Sri();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			sriRow=(Sri) sriLogic.getSris().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			sriRow=(Sri) sris.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualSri(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoSri.setVisible((this.isVisibilidadCeldaNuevoSri && this.isPermisoNuevoSri));			
			this.jButtonDuplicarSri.setVisible((this.isVisibilidadCeldaDuplicarSri && this.isPermisoDuplicarSri));			
			this.jButtonCopiarSri.setVisible((this.isVisibilidadCeldaCopiarSri && this.isPermisoCopiarSri));
			this.jButtonVerFormSri.setVisible((this.isVisibilidadCeldaVerFormSri && this.isPermisoVerFormSri));
			/*
			this.jButtonAbrirOrderBySri.setVisible((this.isVisibilidadCeldaOrdenSri && this.isPermisoOrdenSri));			
			*/
			this.jButtonNuevoRelacionesSri.setVisible((this.isVisibilidadCeldaNuevoRelacionesSri && this.isPermisoNuevoSri));			
			this.jButtonNuevoGuardarCambiosSri.setVisible((this.isVisibilidadCeldaNuevoSri && this.isPermisoNuevoSri && this.isPermisoGuardarCambiosSri));
			
			if(this.jInternalFrameDetalleFormSri!=null) {
			this.jInternalFrameDetalleFormSri.jButtonModificarSri.setVisible((this.isVisibilidadCeldaModificarSri && this.isPermisoActualizarSri));	
			this.jInternalFrameDetalleFormSri.jButtonActualizarSri.setVisible((this.isVisibilidadCeldaActualizarSri && this.isPermisoActualizarSri));	
			this.jInternalFrameDetalleFormSri.jButtonEliminarSri.setVisible((this.isVisibilidadCeldaEliminarSri && this.isPermisoEliminarSri));
			this.jInternalFrameDetalleFormSri.jButtonCancelarSri.setVisible(this.isVisibilidadCeldaCancelarSri);							
			this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosSri.setVisible((this.isVisibilidadCeldaGuardarSri && this.isPermisoGuardarCambiosSri));			
			
			}
						
			this.jButtonGuardarCambiosTablaSri.setVisible((this.isVisibilidadCeldaGuardarCambiosSri && this.isPermisoGuardarCambiosSri));							
			
			//TOOLBAR
			/*
			this.jButtonNuevoToolBarSri.setVisible((this.isVisibilidadCeldaNuevoSri && this.isPermisoNuevoSri));						
			this.jButtonDuplicarToolBarSri.setVisible((this.isVisibilidadCeldaDuplicarSri && this.isPermisoDuplicarSri));						
			this.jButtonCopiarToolBarSri.setVisible((this.isVisibilidadCeldaCopiarSri && this.isPermisoCopiarSri));			
			this.jButtonVerFormToolBarSri.setVisible((this.isVisibilidadCeldaVerFormSri && this.isPermisoVerFormSri));			
			this.jButtonAbrirOrderByToolBarSri.setVisible((this.isVisibilidadCeldaOrdenSri && this.isPermisoOrdenSri));
			this.jButtonNuevoRelacionesToolBarSri.setVisible((this.isVisibilidadCeldaNuevoRelacionesSri && this.isPermisoNuevoSri));			
			this.jButtonNuevoGuardarCambiosToolBarSri.setVisible((this.isVisibilidadCeldaNuevoSri && this.isPermisoNuevoSri && this.isPermisoGuardarCambiosSri));			
			
			if(this.jInternalFrameDetalleFormSri!=null) {
			this.jInternalFrameDetalleFormSri.jButtonModificarToolBarSri.setVisible((this.isVisibilidadCeldaModificarSri && this.isPermisoActualizarSri));	
			this.jInternalFrameDetalleFormSri.jButtonActualizarToolBarSri.setVisible((this.isVisibilidadCeldaActualizarSri  && this.isPermisoActualizarSri));	
			this.jInternalFrameDetalleFormSri.jButtonEliminarToolBarSri.setVisible((this.isVisibilidadCeldaEliminarSri && this.isPermisoEliminarSri));
			this.jInternalFrameDetalleFormSri.jButtonCancelarToolBarSri.setVisible(this.isVisibilidadCeldaCancelarSri);				
			this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosToolBarSri.setVisible((this.isVisibilidadCeldaGuardarSri && this.isPermisoGuardarCambiosSri));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarSri.setVisible((this.isVisibilidadCeldaGuardarCambiosSri && this.isPermisoGuardarCambiosSri));									
			*/
			//TOOLBAR
			
			//MENUS
			/*
			this.jMenuItemNuevoSri.setVisible((this.isVisibilidadCeldaNuevoSri && this.isPermisoNuevoSri));			
			this.jMenuItemDuplicarSri.setVisible((this.isVisibilidadCeldaDuplicarSri && this.isPermisoDuplicarSri));			
			this.jMenuItemCopiarSri.setVisible((this.isVisibilidadCeldaCopiarSri && this.isPermisoCopiarSri));			
			this.jMenuItemVerFormSri.setVisible((this.isVisibilidadCeldaVerFormSri && this.isPermisoVerFormSri));			
			this.jMenuItemAbrirOrderBySri.setVisible((this.isVisibilidadCeldaOrdenSri && this.isPermisoOrdenSri));			
			//this.jMenuItemMostrarOcultarSri.setVisible((this.isVisibilidadCeldaOrdenSri && this.isPermisoOrdenSri));
			this.jMenuItemDetalleAbrirOrderBySri.setVisible((this.isVisibilidadCeldaOrdenSri && this.isPermisoOrdenSri));			
			//this.jMenuItemDetalleMostrarOcultarSri.setVisible((this.isVisibilidadCeldaOrdenSri && this.isPermisoOrdenSri));			
			this.jMenuItemNuevoRelacionesSri.setVisible((this.isVisibilidadCeldaNuevoRelacionesSri && this.isPermisoNuevoSri));			
			this.jMenuItemNuevoGuardarCambiosSri.setVisible((this.isVisibilidadCeldaNuevoSri && this.isPermisoNuevoSri && this.isPermisoGuardarCambiosSri));									
			
			if(this.jInternalFrameDetalleFormSri!=null) {
			this.jInternalFrameDetalleFormSri.jMenuItemModificarSri.setVisible((this.isVisibilidadCeldaModificarSri && this.isPermisoActualizarSri));	
			this.jInternalFrameDetalleFormSri.jMenuItemActualizarSri.setVisible((this.isVisibilidadCeldaActualizarSri && this.isPermisoActualizarSri));	
			this.jInternalFrameDetalleFormSri.jMenuItemEliminarSri.setVisible((this.isVisibilidadCeldaEliminarSri && this.isPermisoEliminarSri));
			this.jInternalFrameDetalleFormSri.jMenuItemCancelarSri.setVisible(this.isVisibilidadCeldaCancelarSri);				
			}
			
			this.jMenuItemGuardarCambiosSri.setVisible((this.isVisibilidadCeldaGuardarSri && this.isPermisoGuardarCambiosSri));						
			this.jMenuItemGuardarCambiosTablaSri.setVisible((this.isVisibilidadCeldaGuardarCambiosSri && this.isPermisoGuardarCambiosSri));						
			*/
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoSri=this.jButtonNuevoSri.isVisible();
			this.isVisibilidadCeldaDuplicarSri=this.jButtonDuplicarSri.isVisible();
			this.isVisibilidadCeldaCopiarSri=this.jButtonCopiarSri.isVisible();
			this.isVisibilidadCeldaVerFormSri=this.jButtonVerFormSri.isVisible();
			/*
			this.isVisibilidadCeldaOrdenSri=this.jButtonAbrirOrderBySri.isVisible();			
			*/
			this.isVisibilidadCeldaNuevoRelacionesSri=this.jButtonNuevoRelacionesSri.isVisible();
			this.isVisibilidadCeldaModificarSri=this.jButtonModificarSri.isVisible();
			
			if(this.jInternalFrameDetalleFormSri!=null) {
			this.isVisibilidadCeldaActualizarSri=this.jInternalFrameDetalleFormSri.jButtonActualizarSri.isVisible();
			this.isVisibilidadCeldaEliminarSri=this.jInternalFrameDetalleFormSri.jButtonEliminarSri.isVisible();
			this.isVisibilidadCeldaCancelarSri=this.jInternalFrameDetalleFormSri.jButtonCancelarSri.isVisible();
			this.isVisibilidadCeldaGuardarSri=this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosSri.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosSri=this.jButtonGuardarCambiosTablaSri.isVisible();
			
			//TOOLBAR
			/*
			this.isVisibilidadCeldaNuevoSri=this.jButtonNuevoToolBarSri.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesSri=this.jButtonNuevoRelacionesToolBarSri.isVisible();
			
			if(this.jInternalFrameDetalleFormSri!=null) {
			this.isVisibilidadCeldaModificarSri=this.jInternalFrameDetalleFormSri.jButtonModificarToolBarSri.isVisible();
			this.isVisibilidadCeldaActualizarSri=this.jInternalFrameDetalleFormSri.jButtonActualizarToolBarSri.isVisible();
			this.isVisibilidadCeldaEliminarSri=this.jInternalFrameDetalleFormSri.jButtonEliminarToolBarSri.isVisible();
			this.isVisibilidadCeldaCancelarSri=this.jInternalFrameDetalleFormSri.jButtonCancelarToolBarSri.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarSri=this.jButtonGuardarCambiosToolBarSri.isVisible();
			this.isVisibilidadCeldaGuardarCambiosSri=this.jButtonGuardarCambiosTablaToolBarSri.isVisible();						
			*/
			//TOOLBAR
			
			//MENUS
			/*
			this.isVisibilidadCeldaNuevoSri=this.jMenuItemNuevoSri.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesSri=this.jMenuItemNuevoRelacionesSri.isVisible();
			
			if(this.jInternalFrameDetalleFormSri!=null) {
			this.isVisibilidadCeldaModificarSri=this.jInternalFrameDetalleFormSri.jMenuItemModificarSri.isVisible();
			this.isVisibilidadCeldaActualizarSri=this.jInternalFrameDetalleFormSri.jMenuItemActualizarSri.isVisible();
			this.isVisibilidadCeldaEliminarSri=this.jInternalFrameDetalleFormSri.jMenuItemEliminarSri.isVisible();
			this.isVisibilidadCeldaCancelarSri=this.jInternalFrameDetalleFormSri.jMenuItemCancelarSri.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarSri=this.jMenuItemGuardarCambiosSri.isVisible();
			this.isVisibilidadCeldaGuardarCambiosSri=this.jMenuItemGuardarCambiosTablaSri.isVisible();						
			*/
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesSri(Boolean esInicializar) {
		if(SriJInternalFrame.ISBINDING_MANUAL) {			
			if(this.sriSessionBean.getConGuardarRelaciones()) {
				//if(this.sriSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesSri();
			}
			
			this.inicializarActualizarBindingBotonesManualSri(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualSri() {
		this.jButtonNuevoSri.setVisible(this.isPermisoNuevoSri);			
		this.jButtonDuplicarSri.setVisible(this.isPermisoDuplicarSri);			
		this.jButtonCopiarSri.setVisible(this.isPermisoCopiarSri);			
		this.jButtonVerFormSri.setVisible(this.isPermisoVerFormSri);			
		/*
		this.jButtonAbrirOrderBySri.setVisible(this.isPermisoOrdenSri);					
		*/
		this.jButtonNuevoRelacionesSri.setVisible(this.isPermisoNuevoSri);			
		
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonModificarSri.setVisible(this.isPermisoActualizarSri);	
			this.jInternalFrameDetalleFormSri.jButtonActualizarSri.setVisible(this.isPermisoActualizarSri);	
			this.jInternalFrameDetalleFormSri.jButtonEliminarSri.setVisible(this.isPermisoEliminarSri);
			this.jInternalFrameDetalleFormSri.jButtonCancelarSri.setVisible(this.isVisibilidadCeldaCancelarSri);						
			this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosSri.setVisible(this.isPermisoGuardarCambiosSri);							
		}
		
		this.jButtonGuardarCambiosTablaSri.setVisible(this.isPermisoActualizarSri);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleSri() {
		this.jInternalFrameDetalleFormSri.jButtonModificarSri.setVisible(this.isPermisoActualizarSri);	
		this.jInternalFrameDetalleFormSri.jButtonActualizarSri.setVisible(this.isPermisoActualizarSri);	
		this.jInternalFrameDetalleFormSri.jButtonEliminarSri.setVisible(this.isPermisoEliminarSri);
		this.jInternalFrameDetalleFormSri.jButtonCancelarSri.setVisible(this.isVisibilidadCeldaCancelarSri);							
		this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosSri.setVisible((this.isVisibilidadCeldaGuardarSri && this.isPermisoGuardarCambiosSri));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosSri() {
		if(SriJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualSri();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesSri() {
	}
	
	public void jTableDatosSriListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarSri(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.sri.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contableSriActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderSri=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosSri.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderSri.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contableSriUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebSri(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSri.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSri.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.sriLogic.getConnexion());

				if(this.sri.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.sri.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderSri.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contableSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.sri.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_contaSriUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccionconta=true;

			idTienePermisotransaccionconta=this.tienePermisosUsuarioEnPaginaWebSri(TransaccionContaConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccionconta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSri.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSri.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);

				this.transaccioncontaBeanSwingJInternalFrame=new TransaccionContaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncontaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncontaBeanSwingJInternalFrame.getTransaccionContaLogic().setConnexion(this.sriLogic.getConnexion());

				if(this.sri.getid_transaccion_conta()!=null) {
					this.transaccioncontaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncontaBeanSwingJInternalFrame.setIdActual(this.sri.getid_transaccion_conta());
					this.transaccioncontaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncontaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncontaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccionConta();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncontaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				TitledBorder titledBordertransaccionconta=(TitledBorder)this.transaccioncontaBeanSwingJInternalFrame.jScrollPanelDatosTransaccionConta.getBorder();

				titledBordertransaccionconta.setTitle(titledBorderSri.getTitle() + " -> Transaccion Contablilidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_contaSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getid_transaccion_conta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_conta = "+this.sri.getid_transaccion_conta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.sri.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteSriActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderSri=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosSri.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderSri.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteSriUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebSri(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSri.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSri.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.sriLogic.getConnexion());

				if(this.sri.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.sri.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderSri.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.sri.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrazon_socialSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getrazon_social()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where razon_social like '%"+this.sri.getrazon_social()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontipo_comprobanteSriUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocomprobante=true;

			idTienePermisotipocomprobante=this.tienePermisosUsuarioEnPaginaWebSri(TipoComprobanteConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocomprobante) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSri.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSri.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);

				this.tipocomprobanteBeanSwingJInternalFrame=new TipoComprobanteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocomprobanteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocomprobanteBeanSwingJInternalFrame.getTipoComprobanteLogic().setConnexion(this.sriLogic.getConnexion());

				if(this.sri.gettipo_comprobante()!=null) {
					this.tipocomprobanteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocomprobanteBeanSwingJInternalFrame.setIdActual(this.sri.gettipo_comprobante());
					this.tipocomprobanteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocomprobanteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocomprobanteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoComprobante();
				}

				JInternalFrameBase jinternalFrame =this.tipocomprobanteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				TitledBorder titledBordertipocomprobante=(TitledBorder)this.tipocomprobanteBeanSwingJInternalFrame.jScrollPanelDatosTipoComprobante.getBorder();

				titledBordertipocomprobante.setTitle(titledBorderSri.getTitle() + " -> Tipo Comprobante");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtontipo_comprobanteSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.gettipo_comprobante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where tipo_comprobante = "+this.sri.gettipo_comprobante().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_riseSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getes_rise()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_rise = "+this.sri.getes_rise().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_serieSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getnumero_serie()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_serie like '%"+this.sri.getnumero_serie()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_autorizacionSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getnumero_autorizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_autorizacion like '%"+this.sri.getnumero_autorizacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_secuencialSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getnumero_secuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_secuencial like '%"+this.sri.getnumero_secuencial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.sri.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_registro_contableSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getfecha_registro_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_registro_contable = '"+Funciones2.getStringPostgresDate(this.sri.getfecha_registro_contable())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_caducidadSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getfecha_caducidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_caducidad = '"+Funciones2.getStringPostgresDate(this.sri.getfecha_caducidad())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontipo_tributarioSriUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotributario=true;

			idTienePermisotipotributario=this.tienePermisosUsuarioEnPaginaWebSri(TipoTributarioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotributario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSri.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSri.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);

				this.tipotributarioBeanSwingJInternalFrame=new TipoTributarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotributarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotributarioBeanSwingJInternalFrame.getTipoTributarioLogic().setConnexion(this.sriLogic.getConnexion());

				if(this.sri.gettipo_tributario()!=null) {
					this.tipotributarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotributarioBeanSwingJInternalFrame.setIdActual(this.sri.gettipo_tributario());
					this.tipotributarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotributarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotributarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTributario();
				}

				JInternalFrameBase jinternalFrame =this.tipotributarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				TitledBorder titledBordertipotributario=(TitledBorder)this.tipotributarioBeanSwingJInternalFrame.jScrollPanelDatosTipoTributario.getBorder();

				titledBordertipotributario.setTitle(titledBorderSri.getTitle() + " -> Tipo Tributario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtontipo_tributarioSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.gettipo_tributario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where tipo_tributario = "+this.sri.gettipo_tributario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbienes_tar12SriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getbienes_tar12()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where bienes_tar12 = "+this.sri.getbienes_tar12().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbienes_tar0SriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getbienes_tar0()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where bienes_tar0 = "+this.sri.getbienes_tar0().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_ivaSriUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoiva=true;

			idTienePermisotipoiva=this.tienePermisosUsuarioEnPaginaWebSri(TipoIvaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoiva) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSri.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSri.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);

				this.tipoivaBeanSwingJInternalFrame=new TipoIvaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoivaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoivaBeanSwingJInternalFrame.getTipoIvaLogic().setConnexion(this.sriLogic.getConnexion());

				if(this.sri.getid_tipo_iva()!=null) {
					this.tipoivaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoivaBeanSwingJInternalFrame.setIdActual(this.sri.getid_tipo_iva());
					this.tipoivaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoivaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoivaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoIva();
				}

				JInternalFrameBase jinternalFrame =this.tipoivaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				TitledBorder titledBordertipoiva=(TitledBorder)this.tipoivaBeanSwingJInternalFrame.jScrollPanelDatosTipoIva.getBorder();

				titledBordertipoiva.setTitle(titledBorderSri.getTitle() + " -> Tipo Iva");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_ivaSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getid_tipo_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_iva = "+this.sri.getid_tipo_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonservicios_tar12SriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getservicios_tar12()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where servicios_tar12 = "+this.sri.getservicios_tar12().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonservicios_tar0SriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getservicios_tar0()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where servicios_tar0 = "+this.sri.getservicios_tar0().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_ivaSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getmonto_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_iva = "+this.sri.getmonto_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbase_impo_tar12SriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getbase_impo_tar12()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where base_impo_tar12 = "+this.sri.getbase_impo_tar12().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbase_impo_tar0SriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getbase_impo_tar0()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where base_impo_tar0 = "+this.sri.getbase_impo_tar0().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_iceSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getmonto_ice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_ice = "+this.sri.getmonto_ice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_iva_bienSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getmonto_iva_bien()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_iva_bien = "+this.sri.getmonto_iva_bien().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_iva_servicioSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getmonto_iva_servicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_iva_servicio = "+this.sri.getmonto_iva_servicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_retencion_iva_bienSriUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporetencionivabien=true;

			idTienePermisotiporetencionivabien=this.tienePermisosUsuarioEnPaginaWebSri(TipoRetencionIvaConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporetencionivabien) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSri.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSri.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);

				this.tiporetencionivabienBeanSwingJInternalFrame=new TipoRetencionIvaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporetencionivabienBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporetencionivabienBeanSwingJInternalFrame.getTipoRetencionIvaLogic().setConnexion(this.sriLogic.getConnexion());

				if(this.sri.getid_tipo_retencion_iva_bien()!=null) {
					this.tiporetencionivabienBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporetencionivabienBeanSwingJInternalFrame.setIdActual(this.sri.getid_tipo_retencion_iva_bien());
					this.tiporetencionivabienBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporetencionivabienBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporetencionivabienBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRetencionIva();
				}

				JInternalFrameBase jinternalFrame =this.tiporetencionivabienBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				TitledBorder titledBordertiporetencionivabien=(TitledBorder)this.tiporetencionivabienBeanSwingJInternalFrame.jScrollPanelDatosTipoRetencionIva.getBorder();

				titledBordertiporetencionivabien.setTitle(titledBorderSri.getTitle() + " -> Tipo Retencion Iva");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_retencion_iva_bienSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getid_tipo_retencion_iva_bien()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_retencion_iva_bien = "+this.sri.getid_tipo_retencion_iva_bien().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_retencion_iva_servicioSriUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporetencionivaservicio=true;

			idTienePermisotiporetencionivaservicio=this.tienePermisosUsuarioEnPaginaWebSri(TipoRetencionIvaConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporetencionivaservicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSri.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSri.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);

				this.tiporetencionivaservicioBeanSwingJInternalFrame=new TipoRetencionIvaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporetencionivaservicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporetencionivaservicioBeanSwingJInternalFrame.getTipoRetencionIvaLogic().setConnexion(this.sriLogic.getConnexion());

				if(this.sri.getid_tipo_retencion_iva_servicio()!=null) {
					this.tiporetencionivaservicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporetencionivaservicioBeanSwingJInternalFrame.setIdActual(this.sri.getid_tipo_retencion_iva_servicio());
					this.tiporetencionivaservicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporetencionivaservicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporetencionivaservicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRetencionIva();
				}

				JInternalFrameBase jinternalFrame =this.tiporetencionivaservicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				TitledBorder titledBordertiporetencionivaservicio=(TitledBorder)this.tiporetencionivaservicioBeanSwingJInternalFrame.jScrollPanelDatosTipoRetencionIva.getBorder();

				titledBordertiporetencionivaservicio.setTitle(titledBorderSri.getTitle() + " -> Tipo Retencion Iva");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_retencion_iva_servicioSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getid_tipo_retencion_iva_servicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_retencion_iva_servicio = "+this.sri.getid_tipo_retencion_iva_servicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonretencion_iva_bienSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getretencion_iva_bien()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where retencion_iva_bien = "+this.sri.getretencion_iva_bien().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonretencion_iva_servicioSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getretencion_iva_servicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where retencion_iva_servicio = "+this.sri.getretencion_iva_servicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_devolucionSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getcon_devolucion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_devolucion = "+this.sri.getcon_devolucion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_movimientoSriUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipomovimiento=true;

			idTienePermisotipomovimiento=this.tienePermisosUsuarioEnPaginaWebSri(TipoMovimientoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipomovimiento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSri.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSri.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);

				this.tipomovimientoBeanSwingJInternalFrame=new TipoMovimientoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipomovimientoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipomovimientoBeanSwingJInternalFrame.getTipoMovimientoLogic().setConnexion(this.sriLogic.getConnexion());

				if(this.sri.getid_tipo_movimiento()!=null) {
					this.tipomovimientoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipomovimientoBeanSwingJInternalFrame.setIdActual(this.sri.getid_tipo_movimiento());
					this.tipomovimientoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipomovimientoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipomovimientoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoMovimiento();
				}

				JInternalFrameBase jinternalFrame =this.tipomovimientoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSri=(TitledBorder)this.jScrollPanelDatosSri.getBorder();
				TitledBorder titledBordertipomovimiento=(TitledBorder)this.tipomovimientoBeanSwingJInternalFrame.jScrollPanelDatosTipoMovimiento.getBorder();

				titledBordertipomovimiento.setTitle(titledBorderSri.getTitle() + " -> Tipo Movimiento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.sriLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_movimientoSriBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSri.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSri(this.getsri(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.sri==null) {
						this.sri = new Sri();
					}

					this.setVariablesFormularioToObjetoActualSri(this.sri,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);
				}

				if(this.sri.getid_tipo_movimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_movimiento = "+this.sri.getid_tipo_movimiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSri(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void closingInternalFrameSri() {
		if(this.jInternalFrameDetalleFormSri!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormSri!=null) {
			this.jInternalFrameDetalleFormSri.setVisible(false);	    			
			this.jInternalFrameDetalleFormSri.dispose();
			this.jInternalFrameDetalleFormSri=null;
		}
		
		/*
		if(this.jInternalFrameReporteDinamicoSri!=null) {
			this.jInternalFrameReporteDinamicoSri.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoSri.dispose();
			this.jInternalFrameReporteDinamicoSri=null;
		}
		
		if(this.jInternalFrameImportacionSri!=null) {
			this.jInternalFrameImportacionSri.setVisible(false);	    			
			this.jInternalFrameImportacionSri.dispose();
			this.jInternalFrameImportacionSri=null;
		}		
		*/
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessSri();
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
			
			if(sTipo.equals("NuevoSri")) {
				jButtonNuevoSriActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarSri")) {
				jButtonDuplicarSriActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarSri")) {
				jButtonCopiarSriActionPerformed(evt);
			} else if(sTipo.equals("VerFormSri")) {
				jButtonVerFormSriActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarSri")) {
				jButtonNuevoSriActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarSri")) {
				jButtonDuplicarSriActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoSri")) {
				jButtonNuevoSriActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarSri")) {
				jButtonDuplicarSriActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesSri")) {
				jButtonNuevoSriActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarSri")) {
				jButtonNuevoSriActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesSri")) {
				jButtonNuevoSriActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarSri")) {
				jButtonModificarSriActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarSri")) {
				jButtonModificarSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarSri")) {
				jButtonModificarSriActionPerformed(evt);
			} else if(sTipo.equals("ActualizarSri")) {
				jButtonActualizarSriActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarSri")) {
				jButtonActualizarSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarSri")) {
				jButtonActualizarSriActionPerformed(evt);
			} else if(sTipo.equals("EliminarSri")) {
				jButtonEliminarSriActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarSri")) {
				jButtonEliminarSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarSri")) {
				jButtonEliminarSriActionPerformed(evt);
			} else if(sTipo.equals("CancelarSri")) {
				jButtonCancelarSriActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarSri")) {
				jButtonCancelarSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarSri")) {
				jButtonCancelarSriActionPerformed(evt);
			} else if(sTipo.equals("CerrarSri")) {
				jButtonCerrarSriActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarSri")) {
				jButtonCerrarSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarSri")) {
				jButtonCerrarSriActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarSri")) {
				jButtonMostrarOcultarSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarSri")) {
				jButtonCancelarSriActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosSri")) {
				jButtonGuardarCambiosSriActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarSri")) {
				jButtonGuardarCambiosSriActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarSri")) {
				jButtonCopiarSriActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarSri")) {
				jButtonVerFormSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosSri")) {
				jButtonGuardarCambiosSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarSri")) {
				jButtonCopiarSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormSri")) {
				jButtonVerFormSriActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaSri")) {
				jButtonGuardarCambiosSriActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarSri")) {
				jButtonGuardarCambiosSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaSri")) {
				jButtonGuardarCambiosSriActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionSri")) {
				jButtonRecargarInformacionSriActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarSri")) {
				jButtonRecargarInformacionSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionSri")) {
				jButtonRecargarInformacionSriActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresSri")) {
				jButtonAnterioresSriActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarSri")) {
				jButtonAnterioresSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreSri")) {
				jButtonAnterioresSriActionPerformed(evt);
			} else if(sTipo.equals("SiguientesSri")) {
				jButtonSiguientesSriActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarSri")) {
				jButtonSiguientesSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesSri")) {
				jButtonSiguientesSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderBySri") || sTipo.equals("MenuItemDetalleAbrirOrderBySri")) {
				jButtonAbrirOrderBySriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarSri") || sTipo.equals("MenuItemDetalleMostrarOcultarSri")) {
				jButtonMostrarOcultarSriActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosSri")) {
				jButtonNuevoGuardarCambiosSriActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarSri")) {
				jButtonNuevoGuardarCambiosSriActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosSri")) {
				jButtonNuevoGuardarCambiosSriActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoSri")) {
				jButtonCerrarReporteDinamicoSriActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoSri")) {
				jButtonGenerarReporteDinamicoSriActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoSri")) {
				/*
				jButtonGenerarExcelReporteDinamicoSriActionPerformed(evt);
				*/
			} else if(sTipo.equals("CerrarImportacionSri")) {
				jButtonCerrarImportacionSriActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionSri")) {
				/*
				jButtonGenerarImportacionSriActionPerformed(evt);
				*/
			} else if(sTipo.equals("AbrirImportacionSri")) {
				/*
				jButtonAbrirImportacionSriActionPerformed(evt);
				*/
			} else if(sTipo.equals("TiposAccionesSri")) {
				jComboBoxTiposAccionesSriActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesSri")) {
				jComboBoxTiposRelacionesSriActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioSri")) {
				jComboBoxTiposAccionesSriActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarSri")) {
				/*
				jComboBoxTiposSeleccionarSriActionListener(evt);
				*/
			} else if(sTipo.equals("ValorCampoGeneralSri")) {
				jTextFieldValorCampoGeneralSriActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderBySri")) {
				jButtonAbrirOrderBySriActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarSri")) {
				jButtonAbrirOrderBySriActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderBySri")) {
				jButtonCerrarOrderBySriActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idSriBusqueda")) {
				this.jButtonidSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableSri")) {
				this.jButtonid_asiento_contableSriActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableSriUpdate")) {
				this.jButtonid_asiento_contableSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableSriBusqueda")) {
				this.jButtonid_asiento_contableSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_contaSriUpdate")) {
				this.jButtonid_transaccion_contaSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_contaSriBusqueda")) {
				this.jButtonid_transaccion_contaSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucSriBusqueda")) {
				this.jButtonrucSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteSri")) {
				this.jButtonid_clienteSriActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteSriUpdate")) {
				this.jButtonid_clienteSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteSriBusqueda")) {
				this.jButtonid_clienteSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("razon_socialSriBusqueda")) {
				this.jButtonrazon_socialSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("tipo_comprobanteSriUpdate")) {
				this.jButtontipo_comprobanteSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tipo_comprobanteSriBusqueda")) {
				this.jButtontipo_comprobanteSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_riseSriBusqueda")) {
				this.jButtones_riseSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_serieSriBusqueda")) {
				this.jButtonnumero_serieSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_autorizacionSriBusqueda")) {
				this.jButtonnumero_autorizacionSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialSriBusqueda")) {
				this.jButtonnumero_secuencialSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionSriBusqueda")) {
				this.jButtonfecha_emisionSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_registro_contableSriBusqueda")) {
				this.jButtonfecha_registro_contableSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_caducidadSriBusqueda")) {
				this.jButtonfecha_caducidadSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("tipo_tributarioSriUpdate")) {
				this.jButtontipo_tributarioSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tipo_tributarioSriBusqueda")) {
				this.jButtontipo_tributarioSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("bienes_tar12SriBusqueda")) {
				this.jButtonbienes_tar12SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("bienes_tar0SriBusqueda")) {
				this.jButtonbienes_tar0SriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ivaSriUpdate")) {
				this.jButtonid_tipo_ivaSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ivaSriBusqueda")) {
				this.jButtonid_tipo_ivaSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicios_tar12SriBusqueda")) {
				this.jButtonservicios_tar12SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicios_tar0SriBusqueda")) {
				this.jButtonservicios_tar0SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_ivaSriBusqueda")) {
				this.jButtonmonto_ivaSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_impo_tar12SriBusqueda")) {
				this.jButtonbase_impo_tar12SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_impo_tar0SriBusqueda")) {
				this.jButtonbase_impo_tar0SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_iceSriBusqueda")) {
				this.jButtonmonto_iceSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_iva_bienSriBusqueda")) {
				this.jButtonmonto_iva_bienSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_iva_servicioSriBusqueda")) {
				this.jButtonmonto_iva_servicioSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_bienSriUpdate")) {
				this.jButtonid_tipo_retencion_iva_bienSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_bienSriBusqueda")) {
				this.jButtonid_tipo_retencion_iva_bienSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_servicioSriUpdate")) {
				this.jButtonid_tipo_retencion_iva_servicioSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_servicioSriBusqueda")) {
				this.jButtonid_tipo_retencion_iva_servicioSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencion_iva_bienSriBusqueda")) {
				this.jButtonretencion_iva_bienSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencion_iva_servicioSriBusqueda")) {
				this.jButtonretencion_iva_servicioSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_devolucionSriBusqueda")) {
				this.jButtoncon_devolucionSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimientoSriUpdate")) {
				this.jButtonid_tipo_movimientoSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimientoSriBusqueda")) {
				this.jButtonid_tipo_movimientoSriBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contableSri")) {
				this.jButtonid_asiento_contableSriActionPerformed(evt);
			}
			else if(sTipo.equals("id_clienteSri")) {
				this.jButtonid_clienteSriActionPerformed(evt);
			}
			
			
			;
			
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessSri();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				


				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			Sri sriLocal=null;
			
			if(!this.getEsControlTabla()) {
				sriLocal=this.sri;
			} else {
				sriLocal=this.sriAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
							
				
				


				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSri.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriAnterior =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.sriAnterior =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
								
						
				


				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
								
				
				


				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSri.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriAnterior =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.sriAnterior =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSri.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriAnterior =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.sriAnterior =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
			
			this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
							
				
				


				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosSri.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sriAnterior =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.sriAnterior =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
			
			this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
								
				
				


				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSri.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriAnterior =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.sriAnterior =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
			
			this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosSri")) {
					jCheckBoxSeleccionarTodosSriItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosSri")) {
					jCheckBoxSeleccionadosSriItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarSri")) {
					
				}
				
				


				
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
												
				
				


				
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosSri.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.sriAnterior =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.sriAnterior =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSriActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.sri);
				
				this.actualizarInformacion("INFO_PADRE",false,this.sri);
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Sri.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Sri.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSriActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSri.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.sriAnterior =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.sriAnterior =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarSri")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosSriListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosSri.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.sri =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.sri =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.sri);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarSri")) {
				
				}
				
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarSri")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosSri.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarSri")) {
			
			}
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessSri();
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
			if(sTipo.equals("NuevoSri")) {
				jButtonNuevoSriActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarSri")) {
				jButtonDuplicarSriActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarSri")) {
				jButtonCopiarSriActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormSri")) {
				jButtonVerFormSriActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesSri")) {
				jButtonNuevoSriActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarSri")) {
				jButtonModificarSriActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarSri")) {
				jButtonActualizarSriActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarSri")) {
				jButtonEliminarSriActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaSri")) {
				jButtonGuardarCambiosSriActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarSri")) {
				jButtonCancelarSriActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarSri")) {
				jButtonCerrarSriActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosSri")) {
				jButtonGuardarCambiosSriActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosSri")) {
				jButtonNuevoGuardarCambiosSriActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderBySri")) {
				jButtonAbrirOrderBySriActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionSri")) {
				jButtonRecargarInformacionSriActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresSri")) {
				jButtonAnterioresSriActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesSri")) {
				jButtonSiguientesSriActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idSriBusqueda")) {
				this.jButtonidSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableSri")) {
				this.jButtonid_asiento_contableSriActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableSriUpdate")) {
				this.jButtonid_asiento_contableSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableSriBusqueda")) {
				this.jButtonid_asiento_contableSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_contaSriUpdate")) {
				this.jButtonid_transaccion_contaSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_contaSriBusqueda")) {
				this.jButtonid_transaccion_contaSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucSriBusqueda")) {
				this.jButtonrucSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteSri")) {
				this.jButtonid_clienteSriActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteSriUpdate")) {
				this.jButtonid_clienteSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteSriBusqueda")) {
				this.jButtonid_clienteSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("razon_socialSriBusqueda")) {
				this.jButtonrazon_socialSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("tipo_comprobanteSriUpdate")) {
				this.jButtontipo_comprobanteSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tipo_comprobanteSriBusqueda")) {
				this.jButtontipo_comprobanteSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_riseSriBusqueda")) {
				this.jButtones_riseSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_serieSriBusqueda")) {
				this.jButtonnumero_serieSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_autorizacionSriBusqueda")) {
				this.jButtonnumero_autorizacionSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialSriBusqueda")) {
				this.jButtonnumero_secuencialSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionSriBusqueda")) {
				this.jButtonfecha_emisionSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_registro_contableSriBusqueda")) {
				this.jButtonfecha_registro_contableSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_caducidadSriBusqueda")) {
				this.jButtonfecha_caducidadSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("tipo_tributarioSriUpdate")) {
				this.jButtontipo_tributarioSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tipo_tributarioSriBusqueda")) {
				this.jButtontipo_tributarioSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("bienes_tar12SriBusqueda")) {
				this.jButtonbienes_tar12SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("bienes_tar0SriBusqueda")) {
				this.jButtonbienes_tar0SriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ivaSriUpdate")) {
				this.jButtonid_tipo_ivaSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ivaSriBusqueda")) {
				this.jButtonid_tipo_ivaSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicios_tar12SriBusqueda")) {
				this.jButtonservicios_tar12SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("servicios_tar0SriBusqueda")) {
				this.jButtonservicios_tar0SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_ivaSriBusqueda")) {
				this.jButtonmonto_ivaSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_impo_tar12SriBusqueda")) {
				this.jButtonbase_impo_tar12SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_impo_tar0SriBusqueda")) {
				this.jButtonbase_impo_tar0SriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_iceSriBusqueda")) {
				this.jButtonmonto_iceSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_iva_bienSriBusqueda")) {
				this.jButtonmonto_iva_bienSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_iva_servicioSriBusqueda")) {
				this.jButtonmonto_iva_servicioSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_bienSriUpdate")) {
				this.jButtonid_tipo_retencion_iva_bienSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_bienSriBusqueda")) {
				this.jButtonid_tipo_retencion_iva_bienSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_servicioSriUpdate")) {
				this.jButtonid_tipo_retencion_iva_servicioSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencion_iva_servicioSriBusqueda")) {
				this.jButtonid_tipo_retencion_iva_servicioSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencion_iva_bienSriBusqueda")) {
				this.jButtonretencion_iva_bienSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencion_iva_servicioSriBusqueda")) {
				this.jButtonretencion_iva_servicioSriBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_devolucionSriBusqueda")) {
				this.jButtoncon_devolucionSriBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimientoSriUpdate")) {
				this.jButtonid_tipo_movimientoSriUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimientoSriBusqueda")) {
				this.jButtonid_tipo_movimientoSriBusquedaActionPerformed(evt);
			}
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessSri();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameSri")) {
				closingInternalFrameSri();
				
			} else if(sTipo.equals("jButtonCancelarSri")) {
				JInternalFrameBase jInternalFrameDetalleFormSri = (JInternalFrameBase)evt.getSource();
	            	
	            SriBeanSwingJInternalFrame jInternalFrameParent=(SriBeanSwingJInternalFrame)jInternalFrameDetalleFormSri.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarSriActionPerformed(null);
			}
			
			SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.sri,new Object(),this.sriParameterGeneral,this.sriReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormSri(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormSri(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormSri(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.sri)) {
			if(!esControlTabla) {
				if(SriJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualSri(this.sri,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);			
				}
				
				if(this.sriSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualSri(this.sri,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.sriReturnGeneral=sriLogic.procesarEventosSrisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.sriLogic.getSris(),this.sri,this.sriParameterGeneral,this.isEsNuevoSri,classes);//this.sriLogic.getSri()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanSri(this.sriReturnGeneral,this.sriBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.sriSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanSri(classes,this.sriReturnGeneral,this.sriBean,false);
					}
						
					if(this.sriReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeySri(this.sriReturnGeneral.getSri());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioSri(this.sriReturnGeneral.getSri());	
					}
						
					if(this.sriReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioSri(this.sriReturnGeneral.getSri(),classes);//this.sriBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioSri(this.sri,classes);//this.sriBean);									
				}
			
				if(SriJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualSri(this.sri,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysSri(this.sri);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.sriAnterior!=null) {
						this.sri=this.sriAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.sriReturnGeneral=sriLogic.procesarEventosSrisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.sriLogic.getSris(),this.sri,this.sriParameterGeneral,this.isEsNuevoSri,classes);//this.sriLogic.getSri()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.sriSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.sriSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.sriReturnGeneral.getSri(),sriLogic.getSris());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.sriReturnGeneral.getSri(),this.sris);
				}
				//ARCHITECTURE
				
				//this.jTableDatosSri.repaint();
				
				//((AbstractTableModel) this.jTableDatosSri.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosSri();
			}
		}
	}
	
	public void actualizarVisualTableDatosSri() throws Exception {
		
		SriModel sriModel=(SriModel)this.jTableDatosSri.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			sriModel.sris=this.sriLogic.getSris();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			sriModel.sris=this.sris;
		}
		
		
		((SriModel) this.jTableDatosSri.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaSri() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getsriAnterior(),this.sriLogic.getSris());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getsriAnterior(),this.sris);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosSri();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioSri(Sri sri,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.sri,new Object(),generalEntityParameterGeneral,this.sriReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.sriSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=SriConstantesFunciones.getClassesRelationshipsOfSri(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=SriConstantesFunciones.getClassesRelationshipsFromStringsOfSri(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormSri(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				SriBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.sri,new Object(),generalEntityParameterGeneral,this.sriReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SriConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioSri(SriBean sriBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanSri(ArrayList<Classe> classes,SriReturnGeneral sriReturnGeneral,SriBean sriBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualSri(Sri sri,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.sri)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormSri = new SriDetalleFormJInternalFrame(jDesktopPane,this.sriSessionBean.getConGuardarRelaciones(),this.sriSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormSri);
		this.jInternalFrameDetalleFormSri.setVisible(false);
		this.jInternalFrameDetalleFormSri.setSelected(false);						
		
		this.jInternalFrameDetalleFormSri.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormSri.sriLogic=this.sriLogic;
		
		this.cargarCombosFrameForeignKeySri("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleSri();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleSri();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeySri("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeySri();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormSri.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarSri"));
		
		this.jInternalFrameDetalleFormSri.jButtonModificarSri.addActionListener(new ButtonActionListener(this,"ModificarSri"));

		/*
		this.jInternalFrameDetalleFormSri.jButtonModificarToolBarSri.addActionListener(new ButtonActionListener(this,"ModificarToolBarSri"));
					
		this.jInternalFrameDetalleFormSri.jMenuItemModificarSri.addActionListener(new ButtonActionListener(this,"MenuItemModificarSri"));		
		
		*/
		
		this.jInternalFrameDetalleFormSri.jButtonActualizarSri.addActionListener (new ButtonActionListener(this,"ActualizarSri"));
		
		/*
		this.jInternalFrameDetalleFormSri.jButtonActualizarToolBarSri.addActionListener(new ButtonActionListener(this,"ActualizarToolBarSri"));
						
		this.jInternalFrameDetalleFormSri.jMenuItemActualizarSri.addActionListener (new ButtonActionListener(this,"MenuItemActualizarSri"));		
		
		*/
		
		this.jInternalFrameDetalleFormSri.jButtonEliminarSri.addActionListener (new ButtonActionListener(this,"EliminarSri"));
		
		/*
		this.jInternalFrameDetalleFormSri.jButtonEliminarToolBarSri.addActionListener (new ButtonActionListener(this,"EliminarToolBarSri"));
								
		this.jInternalFrameDetalleFormSri.jMenuItemEliminarSri.addActionListener (new ButtonActionListener(this,"MenuItemEliminarSri"));		
		
		*/
		
		this.jInternalFrameDetalleFormSri.jButtonCancelarSri.addActionListener (new ButtonActionListener(this,"CancelarSri"));
		
		/*
		this.jInternalFrameDetalleFormSri.jButtonCancelarToolBarSri.addActionListener (new ButtonActionListener(this,"CancelarToolBarSri"));
					
		this.jInternalFrameDetalleFormSri.jMenuItemCancelarSri.addActionListener (new ButtonActionListener(this,"MenuItemCancelarSri"));		
		
		*/
		
		
		/*
		this.jInternalFrameDetalleFormSri.jMenuItemDetalleCerrarSri.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarSri"));		
		*/
		
		/*
		this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosToolBarSri.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarSri"));
		*/
		
		/*
		this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosToolBarSri.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarSri"));
		*/
		
		
		this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioSri"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonidSriBusqueda.addActionListener(new ButtonActionListener(this,"idSriBusqueda"));
		//jButtonid_asiento_contableSri.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableSriActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSri.addActionListener(new ButtonActionListener(this,"id_asiento_contableSri"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSriUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSriBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_transaccion_contaSriUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_contaSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_transaccion_contaSriBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_contaSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonrucSriBusqueda.addActionListener(new ButtonActionListener(this,"rucSriBusqueda"));
		//jButtonid_clienteSri.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteSriActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSri.jButtonid_clienteSri.addActionListener(new ButtonActionListener(this,"id_clienteSri"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_clienteSriUpdate.addActionListener(new ButtonActionListener(this,"id_clienteSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_clienteSriBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonrazon_socialSriBusqueda.addActionListener(new ButtonActionListener(this,"razon_socialSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtontipo_comprobanteSriUpdate.addActionListener(new ButtonActionListener(this,"tipo_comprobanteSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtontipo_comprobanteSriBusqueda.addActionListener(new ButtonActionListener(this,"tipo_comprobanteSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtones_riseSriBusqueda.addActionListener(new ButtonActionListener(this,"es_riseSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonnumero_serieSriBusqueda.addActionListener(new ButtonActionListener(this,"numero_serieSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonnumero_autorizacionSriBusqueda.addActionListener(new ButtonActionListener(this,"numero_autorizacionSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonnumero_secuencialSriBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonfecha_emisionSriBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonfecha_registro_contableSriBusqueda.addActionListener(new ButtonActionListener(this,"fecha_registro_contableSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonfecha_caducidadSriBusqueda.addActionListener(new ButtonActionListener(this,"fecha_caducidadSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtontipo_tributarioSriUpdate.addActionListener(new ButtonActionListener(this,"tipo_tributarioSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtontipo_tributarioSriBusqueda.addActionListener(new ButtonActionListener(this,"tipo_tributarioSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbienes_tar12SriBusqueda.addActionListener(new ButtonActionListener(this,"bienes_tar12SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbienes_tar0SriBusqueda.addActionListener(new ButtonActionListener(this,"bienes_tar0SriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_ivaSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_ivaSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonservicios_tar12SriBusqueda.addActionListener(new ButtonActionListener(this,"servicios_tar12SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonservicios_tar0SriBusqueda.addActionListener(new ButtonActionListener(this,"servicios_tar0SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_ivaSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_ivaSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbase_impo_tar12SriBusqueda.addActionListener(new ButtonActionListener(this,"base_impo_tar12SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbase_impo_tar0SriBusqueda.addActionListener(new ButtonActionListener(this,"base_impo_tar0SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_iceSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_iceSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_iva_bienSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_iva_bienSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_iva_servicioSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_iva_servicioSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_bienSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_bienSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_bienSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_bienSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_servicioSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_servicioSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_servicioSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_servicioSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonretencion_iva_bienSriBusqueda.addActionListener(new ButtonActionListener(this,"retencion_iva_bienSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonretencion_iva_servicioSriBusqueda.addActionListener(new ButtonActionListener(this,"retencion_iva_servicioSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtoncon_devolucionSriBusqueda.addActionListener(new ButtonActionListener(this,"con_devolucionSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_movimientoSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_movimientoSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoSriBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormSri.jTabbedPaneRelacionesSri.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesSri"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameSri"));
		
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarSri"));
		}
		
		this.jTableDatosSri.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarSri"));
		
		this.jTableDatosSri.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarSri"));
		
		this.jButtonNuevoSri.addActionListener(new ButtonActionListener(this,"NuevoSri"));
		
		this.jButtonDuplicarSri.addActionListener(new ButtonActionListener(this,"DuplicarSri"));
		
		this.jButtonCopiarSri.addActionListener(new ButtonActionListener(this,"CopiarSri"));
		
		this.jButtonVerFormSri.addActionListener(new ButtonActionListener(this,"VerFormSri"));
		
		/*
		this.jButtonNuevoToolBarSri.addActionListener(new ButtonActionListener(this,"NuevoToolBarSri"));
			
		this.jButtonDuplicarToolBarSri.addActionListener(new ButtonActionListener(this,"DuplicarToolBarSri"));
			
		this.jMenuItemNuevoSri.addActionListener (new ButtonActionListener(this,"MenuItemNuevoSri"));
			
		this.jMenuItemDuplicarSri.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarSri"));		
		*/
		
		this.jButtonNuevoRelacionesSri.addActionListener (new ButtonActionListener(this,"NuevoRelacionesSri"));
		
		/*
		this.jButtonNuevoRelacionesToolBarSri.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarSri"));
			
		this.jMenuItemNuevoRelacionesSri.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesSri"));		
		*/
		
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonModificarSri.addActionListener(new ButtonActionListener(this,"ModificarSri"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonModificarToolBarSri.addActionListener(new ButtonActionListener(this,"ModificarToolBarSri"));
			
			this.jInternalFrameDetalleFormSri.jMenuItemModificarSri.addActionListener(new ButtonActionListener(this,"MenuItemModificarSri"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormSri.jButtonActualizarSri.addActionListener (new ButtonActionListener(this,"ActualizarSri"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonActualizarToolBarSri.addActionListener(new ButtonActionListener(this,"ActualizarToolBarSri"));
				
			this.jInternalFrameDetalleFormSri.jMenuItemActualizarSri.addActionListener (new ButtonActionListener(this,"MenuItemActualizarSri"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonEliminarSri.addActionListener (new ButtonActionListener(this,"EliminarSri"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonEliminarToolBarSri.addActionListener (new ButtonActionListener(this,"EliminarToolBarSri"));
						
			this.jInternalFrameDetalleFormSri.jMenuItemEliminarSri.addActionListener (new ButtonActionListener(this,"MenuItemEliminarSri"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonCancelarSri.addActionListener (new ButtonActionListener(this,"CancelarSri"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonCancelarToolBarSri.addActionListener (new ButtonActionListener(this,"CancelarToolBarSri"));
			
			this.jInternalFrameDetalleFormSri.jMenuItemCancelarSri.addActionListener (new ButtonActionListener(this,"MenuItemCancelarSri"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarSri.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarSri"));		
		*/
		
		this.jButtonCerrarSri.addActionListener (new ButtonActionListener(this,"CerrarSri"));
		
		/*
		this.jButtonCerrarToolBarSri.addActionListener (new ButtonActionListener(this,"CerrarToolBarSri"));
			
		this.jMenuItemCerrarSri.addActionListener (new ButtonActionListener(this,"MenuItemCerrarSri"));
			
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jMenuItemDetalleCerrarSri.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarSri"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosSri.addActionListener (new ButtonActionListener(this,"GuardarCambiosSri"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosToolBarSri.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarSri"));
		}
		
		this.jButtonCopiarToolBarSri.addActionListener (new ButtonActionListener(this,"CopiarToolBarSri"));
			
		this.jButtonVerFormToolBarSri.addActionListener (new ButtonActionListener(this,"VerFormToolBarSri"));
		
		this.jMenuItemGuardarCambiosSri.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosSri"));
			
		this.jMenuItemCopiarSri.addActionListener (new ButtonActionListener(this,"MenuItemCopiarSri"));		
		
		this.jMenuItemVerFormSri.addActionListener (new ButtonActionListener(this,"MenuItemVerFormSri"));		
		*/
		
		this.jButtonGuardarCambiosTablaSri.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaSri"));
		
		/*
		this.jButtonGuardarCambiosTablaToolBarSri.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarSri"));
			
		this.jMenuItemGuardarCambiosTablaSri.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaSri"));		
		*/
		
		/*
		this.jButtonRecargarInformacionSri.addActionListener (new ButtonActionListener(this,"RecargarInformacionSri"));
					
		this.jButtonRecargarInformacionToolBarSri.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarSri"));
		
		this.jMenuItemRecargarInformacionSri.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionSri"));		
		*/
		
		
		this.jButtonAnterioresSri.addActionListener (new ButtonActionListener(this,"AnterioresSri"));
		
		/*
		this.jButtonAnterioresToolBarSri.addActionListener (new ButtonActionListener(this,"AnterioresToolBarSri"));
		
		this.jMenuItemAnterioresSri.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresSri"));		
		*/
		
		this.jButtonSiguientesSri.addActionListener (new ButtonActionListener(this,"SiguientesSri"));
		
		/*
		this.jButtonSiguientesToolBarSri.addActionListener (new ButtonActionListener(this,"SiguientesToolBarSri"));
			
		this.jMenuItemSiguientesSri.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesSri"));
			
		this.jMenuItemAbrirOrderBySri.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderBySri"));
			
		this.jMenuItemMostrarOcultarSri.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarSri"));
			
		this.jMenuItemDetalleAbrirOrderBySri.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderBySri"));
			
		this.jMenuItemDetalleMostarOcultarSri.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarSri"));		
		*/
		
		this.jButtonNuevoGuardarCambiosSri.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosSri"));
		
		/*
		this.jButtonNuevoGuardarCambiosToolBarSri.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarSri"));
			
		this.jMenuItemNuevoGuardarCambiosSri.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosSri"));		
		*/
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosSri.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosSri"));

		this.jCheckBoxSeleccionadosSri.addItemListener(new CheckBoxItemListener(this,"SeleccionadosSri"));
		
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioSri"));
		}
		
		/*
		this.jComboBoxTiposRelacionesSri.addActionListener (new ButtonActionListener(this,"TiposRelacionesSri"));
			
		this.jComboBoxTiposAccionesSri.addActionListener (new ButtonActionListener(this,"TiposAccionesSri"));
					
		this.jComboBoxTiposSeleccionarSri.addActionListener (new ButtonActionListener(this,"TiposSeleccionarSri"));
			
		this.jTextFieldValorCampoGeneralSri.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralSri"));		
		*/
		
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonidSriBusqueda.addActionListener(new ButtonActionListener(this,"idSriBusqueda"));
		//jButtonid_asiento_contableSri.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableSriActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSri.addActionListener(new ButtonActionListener(this,"id_asiento_contableSri"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSriUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSriBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_transaccion_contaSriUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_contaSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_transaccion_contaSriBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_contaSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonrucSriBusqueda.addActionListener(new ButtonActionListener(this,"rucSriBusqueda"));
		//jButtonid_clienteSri.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteSriActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSri.jButtonid_clienteSri.addActionListener(new ButtonActionListener(this,"id_clienteSri"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_clienteSriUpdate.addActionListener(new ButtonActionListener(this,"id_clienteSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_clienteSriBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonrazon_socialSriBusqueda.addActionListener(new ButtonActionListener(this,"razon_socialSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtontipo_comprobanteSriUpdate.addActionListener(new ButtonActionListener(this,"tipo_comprobanteSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtontipo_comprobanteSriBusqueda.addActionListener(new ButtonActionListener(this,"tipo_comprobanteSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtones_riseSriBusqueda.addActionListener(new ButtonActionListener(this,"es_riseSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonnumero_serieSriBusqueda.addActionListener(new ButtonActionListener(this,"numero_serieSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonnumero_autorizacionSriBusqueda.addActionListener(new ButtonActionListener(this,"numero_autorizacionSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonnumero_secuencialSriBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonfecha_emisionSriBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonfecha_registro_contableSriBusqueda.addActionListener(new ButtonActionListener(this,"fecha_registro_contableSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonfecha_caducidadSriBusqueda.addActionListener(new ButtonActionListener(this,"fecha_caducidadSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtontipo_tributarioSriUpdate.addActionListener(new ButtonActionListener(this,"tipo_tributarioSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtontipo_tributarioSriBusqueda.addActionListener(new ButtonActionListener(this,"tipo_tributarioSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbienes_tar12SriBusqueda.addActionListener(new ButtonActionListener(this,"bienes_tar12SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbienes_tar0SriBusqueda.addActionListener(new ButtonActionListener(this,"bienes_tar0SriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_ivaSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_ivaSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonservicios_tar12SriBusqueda.addActionListener(new ButtonActionListener(this,"servicios_tar12SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonservicios_tar0SriBusqueda.addActionListener(new ButtonActionListener(this,"servicios_tar0SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_ivaSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_ivaSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbase_impo_tar12SriBusqueda.addActionListener(new ButtonActionListener(this,"base_impo_tar12SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbase_impo_tar0SriBusqueda.addActionListener(new ButtonActionListener(this,"base_impo_tar0SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_iceSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_iceSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_iva_bienSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_iva_bienSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_iva_servicioSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_iva_servicioSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_bienSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_bienSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_bienSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_bienSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_servicioSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_servicioSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_servicioSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_servicioSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonretencion_iva_bienSriBusqueda.addActionListener(new ButtonActionListener(this,"retencion_iva_bienSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonretencion_iva_servicioSriBusqueda.addActionListener(new ButtonActionListener(this,"retencion_iva_servicioSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtoncon_devolucionSriBusqueda.addActionListener(new ButtonActionListener(this,"con_devolucionSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_movimientoSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_movimientoSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoSriBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		/*
		
			this.jButtonFK_IdAsientoContableSri.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableSri"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contableSri.addActionListener(new ButtonActionListener(this,"id_asiento_contableSri"));

			this.jButtonFK_IdClienteSri.addActionListener(new ButtonActionListener(this,"FK_IdClienteSri"));

			this.jButtonBuscarFK_IdClienteid_clienteSri.addActionListener(new ButtonActionListener(this,"id_clienteSri"));

			this.jButtonFK_IdTipoComprobanteSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoComprobanteSri"));

			this.jButtonFK_IdTipoIvaSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoIvaSri"));

			this.jButtonFK_IdTipoMovimientoSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoSri"));

			this.jButtonFK_IdTipoRetencionIvaBienSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionIvaBienSri"));

			this.jButtonFK_IdTipoRetencionIvaServicioSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionIvaServicioSri"));

			this.jButtonFK_IdTipoTributarioSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoTributarioSri"));

			this.jButtonFK_IdTransaccionContaSri.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionContaSri"));
		
		*/
		
			//REPORTE DINAMICO
			/*
			if(this.jInternalFrameReporteDinamicoSri!=null) {
				this.jInternalFrameReporteDinamicoSri.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoSri"));
				this.jInternalFrameReporteDinamicoSri.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoSri"));
				this.jInternalFrameReporteDinamicoSri.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoSri"));
			}
			
			//this.jButtonCerrarReporteDinamicoSri.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoSri"));				
			//this.jButtonGenerarReporteDinamicoSri.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoSri"));
			//this.jButtonGenerarExcelReporteDinamicoSri.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoSri"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionSri!=null) {
				this.jInternalFrameImportacionSri.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionSri"));
				this.jInternalFrameImportacionSri.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionSri"));
				this.jInternalFrameImportacionSri.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionSri"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderBySri.addActionListener (new ButtonActionListener(this,"AbrirOrderBySri"));
			
			this.jButtonAbrirOrderByToolBarSri.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarSri"));			
			
			if(this.jInternalFrameOrderBySri!=null) {
				this.jInternalFrameOrderBySri.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderBySri"));				
			}
			*/
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormSri!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSri.jTabbedPaneRelacionesSri.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesSri"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameSri();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormSri.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormSri = (JInternalFrameBase)event.getSource();
	            	
	            SriBeanSwingJInternalFrame jInternalFrameParent=(SriBeanSwingJInternalFrame)jInternalFrameDetalleFormSri.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarSriActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosSri.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosSriListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosSri.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosSri.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoSri";
		inputMap = this.jButtonNuevoSri.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoSri.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoSriActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSriActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesSri";
		inputMap = this.jButtonNuevoRelacionesSri.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesSri.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoSriActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarSri";
		inputMap = this.jButtonModificarSri.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarSri.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarSriActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarSri";
		inputMap = this.jButtonActualizarSri.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarSri.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarSriActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarSri";
		inputMap = this.jButtonEliminarSri.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarSri.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarSriActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarSri";
		inputMap = this.jButtonCancelarSri.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarSri.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarSriActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarSri";
		inputMap = this.jButtonCerrarSri.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarSri.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarSriActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosSri";
		inputMap = this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosSri.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormSri.jButtonGuardarCambiosSri.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosSriActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosSri.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosSriItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesSri.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesSriActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarSri.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarSriActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralSri.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralSriActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonidSriBusqueda.addActionListener(new ButtonActionListener(this,"idSriBusqueda"));
		//jButtonid_asiento_contableSri.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableSriActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSri.addActionListener(new ButtonActionListener(this,"id_asiento_contableSri"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSriUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSriBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_transaccion_contaSriUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_contaSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_transaccion_contaSriBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_contaSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonrucSriBusqueda.addActionListener(new ButtonActionListener(this,"rucSriBusqueda"));
		//jButtonid_clienteSri.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteSriActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSri.jButtonid_clienteSri.addActionListener(new ButtonActionListener(this,"id_clienteSri"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_clienteSriUpdate.addActionListener(new ButtonActionListener(this,"id_clienteSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_clienteSriBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonrazon_socialSriBusqueda.addActionListener(new ButtonActionListener(this,"razon_socialSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtontipo_comprobanteSriUpdate.addActionListener(new ButtonActionListener(this,"tipo_comprobanteSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtontipo_comprobanteSriBusqueda.addActionListener(new ButtonActionListener(this,"tipo_comprobanteSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtones_riseSriBusqueda.addActionListener(new ButtonActionListener(this,"es_riseSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonnumero_serieSriBusqueda.addActionListener(new ButtonActionListener(this,"numero_serieSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonnumero_autorizacionSriBusqueda.addActionListener(new ButtonActionListener(this,"numero_autorizacionSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonnumero_secuencialSriBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonfecha_emisionSriBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonfecha_registro_contableSriBusqueda.addActionListener(new ButtonActionListener(this,"fecha_registro_contableSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonfecha_caducidadSriBusqueda.addActionListener(new ButtonActionListener(this,"fecha_caducidadSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtontipo_tributarioSriUpdate.addActionListener(new ButtonActionListener(this,"tipo_tributarioSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtontipo_tributarioSriBusqueda.addActionListener(new ButtonActionListener(this,"tipo_tributarioSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbienes_tar12SriBusqueda.addActionListener(new ButtonActionListener(this,"bienes_tar12SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbienes_tar0SriBusqueda.addActionListener(new ButtonActionListener(this,"bienes_tar0SriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_ivaSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_ivaSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ivaSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonservicios_tar12SriBusqueda.addActionListener(new ButtonActionListener(this,"servicios_tar12SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonservicios_tar0SriBusqueda.addActionListener(new ButtonActionListener(this,"servicios_tar0SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_ivaSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_ivaSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbase_impo_tar12SriBusqueda.addActionListener(new ButtonActionListener(this,"base_impo_tar12SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonbase_impo_tar0SriBusqueda.addActionListener(new ButtonActionListener(this,"base_impo_tar0SriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_iceSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_iceSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_iva_bienSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_iva_bienSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonmonto_iva_servicioSriBusqueda.addActionListener(new ButtonActionListener(this,"monto_iva_servicioSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_bienSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_bienSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_bienSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_bienSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_servicioSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_servicioSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_retencion_iva_servicioSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencion_iva_servicioSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonretencion_iva_bienSriBusqueda.addActionListener(new ButtonActionListener(this,"retencion_iva_bienSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonretencion_iva_servicioSriBusqueda.addActionListener(new ButtonActionListener(this,"retencion_iva_servicioSriBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtoncon_devolucionSriBusqueda.addActionListener(new ButtonActionListener(this,"con_devolucionSriBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_movimientoSriUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoSriUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSri.jButtonid_tipo_movimientoSriBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoSriBusqueda"));
		
		
		this.jButtonFK_IdAsientoContableSri.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableSri"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contableSri.addActionListener(new ButtonActionListener(this,"id_asiento_contableSri"));

		this.jButtonFK_IdClienteSri.addActionListener(new ButtonActionListener(this,"FK_IdClienteSri"));

		this.jButtonBuscarFK_IdClienteid_clienteSri.addActionListener(new ButtonActionListener(this,"id_clienteSri"));

		this.jButtonFK_IdTipoComprobanteSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoComprobanteSri"));

		this.jButtonFK_IdTipoIvaSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoIvaSri"));

		this.jButtonFK_IdTipoMovimientoSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoSri"));

		this.jButtonFK_IdTipoRetencionIvaBienSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionIvaBienSri"));

		this.jButtonFK_IdTipoRetencionIvaServicioSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionIvaServicioSri"));

		this.jButtonFK_IdTipoTributarioSri.addActionListener(new ButtonActionListener(this,"FK_IdTipoTributarioSri"));

		this.jButtonFK_IdTransaccionContaSri.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionContaSri"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionSri.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionSriActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	/*
	public void jComboBoxTiposSeleccionarSriActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarSri.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}	
	*/
	
	
	public void seleccionarTodosSri(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(Sri sriAux:this.sriLogic.getSris()) {
					sriAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Sri sriAux:sris) {
					sriAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosSriItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingSri(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Sri sriAux:this.sriLogic.getSris()) {
						sriAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Sri sriAux:sris) {
						sriAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(Sri sriAux:this.sriLogic.getSris()) {
					
						if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_ESRISE)) {
							existe=true;
							sriAux.setes_rise(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_CONDEVOLUCION)) {
							existe=true;
							sriAux.setcon_devolucion(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Sri sriAux:sris) {
						
						if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_ESRISE)) {
							existe=true;
							sriAux.setes_rise(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_CONDEVOLUCION)) {
							existe=true;
							sriAux.setcon_devolucion(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaSri(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosSri.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosSri.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosSri,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosSriItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingSri(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosSri.getSelectedRows();
			
			Sri sriLocal=new Sri();
			
			//this.seleccionarTodosSri(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					sriLocal =(Sri) this.sriLogic.getSris().toArray()[this.jTableDatosSri.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					sriLocal =(Sri) this.sris.toArray()[this.jTableDatosSri.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				sriLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Sri sriAux:this.sriLogic.getSris()) {
						sriAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Sri sriAux:sris) {
						sriAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaSri(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosSri.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosSri.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosSri,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualSriItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarSriParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralSriActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingSri(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralSri.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Sri sriAux:this.sriLogic.getSris()) {
				
						if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RUC)) {
							existe=true;
							sriAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RAZONSOCIAL)) {
							existe=true;
							sriAux.setrazon_social(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_NUMEROSERIE)) {
							existe=true;
							sriAux.setnumero_serie(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
							existe=true;
							sriAux.setnumero_autorizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							sriAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							sriAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE)) {
							existe=true;
							sriAux.setfecha_registro_contable(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_FECHACADUCIDAD)) {
							existe=true;
							sriAux.setfecha_caducidad(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_BIENESTAR12)) {
							existe=true;
							sriAux.setbienes_tar12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_BIENESTAR0)) {
							existe=true;
							sriAux.setbienes_tar0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_SERVICIOSTAR12)) {
							existe=true;
							sriAux.setservicios_tar12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_SERVICIOSTAR0)) {
							existe=true;
							sriAux.setservicios_tar0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_MONTOIVA)) {
							existe=true;
							sriAux.setmonto_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_BASEIMPOTAR12)) {
							existe=true;
							sriAux.setbase_impo_tar12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_BASEIMPOTAR0)) {
							existe=true;
							sriAux.setbase_impo_tar0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_MONTOICE)) {
							existe=true;
							sriAux.setmonto_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_MONTOIVABIEN)) {
							existe=true;
							sriAux.setmonto_iva_bien(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_MONTOIVASERVICIO)) {
							existe=true;
							sriAux.setmonto_iva_servicio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RETENCIONIVABIEN)) {
							existe=true;
							sriAux.setretencion_iva_bien(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO)) {
							existe=true;
							sriAux.setretencion_iva_servicio(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Sri sriAux:sris) {
					
						if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RUC)) {
							existe=true;
							sriAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RAZONSOCIAL)) {
							existe=true;
							sriAux.setrazon_social(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_NUMEROSERIE)) {
							existe=true;
							sriAux.setnumero_serie(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
							existe=true;
							sriAux.setnumero_autorizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							sriAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							sriAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE)) {
							existe=true;
							sriAux.setfecha_registro_contable(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_FECHACADUCIDAD)) {
							existe=true;
							sriAux.setfecha_caducidad(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_BIENESTAR12)) {
							existe=true;
							sriAux.setbienes_tar12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_BIENESTAR0)) {
							existe=true;
							sriAux.setbienes_tar0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_SERVICIOSTAR12)) {
							existe=true;
							sriAux.setservicios_tar12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_SERVICIOSTAR0)) {
							existe=true;
							sriAux.setservicios_tar0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_MONTOIVA)) {
							existe=true;
							sriAux.setmonto_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_BASEIMPOTAR12)) {
							existe=true;
							sriAux.setbase_impo_tar12(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_BASEIMPOTAR0)) {
							existe=true;
							sriAux.setbase_impo_tar0(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_MONTOICE)) {
							existe=true;
							sriAux.setmonto_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_MONTOIVABIEN)) {
							existe=true;
							sriAux.setmonto_iva_bien(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_MONTOIVASERVICIO)) {
							existe=true;
							sriAux.setmonto_iva_servicio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RETENCIONIVABIEN)) {
							existe=true;
							sriAux.setretencion_iva_bien(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO)) {
							existe=true;
							sriAux.setretencion_iva_servicio(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaSri(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesSriActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingSri(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioSri=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				/*
				reporte=(Reporte)this.jComboBoxTiposAccionesSri.getSelectedItem();
				*/
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteSri) {				
					conSplash=true;//false;										
					
					//this.startProcessSri(conSplash);
				
					this.generarReporteSrisSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoSrisSeleccionados();
				//this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoSrisSeleccionados(false);
				//this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoSrisSeleccionados(true);
				//this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessSri();
				
				this.exportarSrisSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionSris();
				//this.importarSris();
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessSri();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelSrisSeleccionados();
				//this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Sri", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessSri();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoSri)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeySri(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.setSelectedIndex(0);					
				}	
			} 			
			else if(SriBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteSri) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessSri(conSplash);
					
						//this.actualizarParametrosGeneralSri();
						
						this.generarReporteProcesoAccionSrisSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							/*
							this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
							*/
						} else {
							this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(SriBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO SriS SELECCIONADOS?", "MANTENIMIENTO DE Sri", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessSri();
				
						this.actualizarParametrosGeneralSri();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.sriReturnGeneral=sriLogic.procesarAccionSrisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.sriLogic.getSris(),this.sriParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarSriReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						/*
						this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
						*/
					} else {
						this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralSri();
					
					SriBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarSriReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						/*
						this.jComboBoxTiposAccionesSri.setSelectedIndex(0);					
						*/
					} else {
						this.jInternalFrameDetalleFormSri.jComboBoxTiposAccionesFormularioSri.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessSri(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesSriActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessSri();
			
			if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();		
			Sri sri=new Sri();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingSri(false,false);
			
			Reporte reporte=new Reporte();
			
			/*
			reporte=(Reporte)this.jComboBoxTiposRelacionesSri.getSelectedItem();
			*/
			
			
			
			srisSeleccionados=this.getSrisSeleccionados(true);
			//this.sTipoAccion;
			
			if(srisSeleccionados.size()==1) {
				for(Sri sriAux:srisSeleccionados) {
					sri=sriAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessSri();
			
      		//this.finishProcessSri(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarSriReturnGeneral() throws Exception {
		if(this.sriReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.sriReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.sriReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.sriReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.sriReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.sriReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingSri(false);
		}
		
		if(this.sriReturnGeneral.getConRetornoLista() || this.sriReturnGeneral.getConRetornoObjeto()) {
			if(this.sriReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.sriLogic.setSris(this.sriReturnGeneral.getSris());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.sriReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.sriLogic.setSri(this.sriReturnGeneral.getSri());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingSri(false);
		}
	}
	
	public void actualizarParametrosGeneralSri() throws Exception {
		
		
	}
	
	public ArrayList<Sri> getSrisSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioSri) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(Sri sriAux:sriLogic.getSris()) {
					if(sriAux.getIsSelected()) {
						srisSeleccionados.add(sriAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Sri sriAux:this.sris) {
					if(sriAux.getIsSelected()) {
						srisSeleccionados.add(sriAux);				
					}
				}
			}
			
			if(srisSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						srisSeleccionados.addAll(this.sriLogic.getSris());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						srisSeleccionados.addAll(this.sris);				
					}
				}
			}
		} else {
			srisSeleccionados.add(this.sri);
		}
		
		return srisSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteSrisSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalSrisSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoSrisSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoSrisSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoSrisSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Sri",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesSrisSeleccionados() throws Exception {
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();		
		
		srisSeleccionados=this.getSrisSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteSris("Todos",srisSeleccionados);
		
	}	
	
	public void generarReporteNormalSrisSeleccionados() throws Exception {
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();		
		
		srisSeleccionados=this.getSrisSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteSris("Todos",srisSeleccionados);
	}		
	
	public void generarReporteProcesoAccionSrisSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();
		
		srisSeleccionados=this.getSrisSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteSris("Todos",srisSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoSrisSeleccionados() throws Exception {
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();		
		
		/*
		this.abrirInicializarFrameReporteDinamicoSri();
		*/
		
		srisSeleccionados=this.getSrisSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.abrirFrameReporteDinamicoSri();
		*/
		
		//this.generarReporteSris("Todos",srisSeleccionados ,sriImplementable,sriImplementableHome);
	}
	
	public void mostrarImportacionSris() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.abrirInicializarFrameImportacionSri();
		
		this.abrirFrameImportacionSri();		
		*/
			
		//this.generarReporteSris("Todos",srisSeleccionados ,sriImplementable,sriImplementableHome);
	}
	
	public void importarSris() throws Exception {		
	
	}
	
	public void exportarSrisSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelSrisSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoSrisSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlSrisSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Sri",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoSrisSeleccionados() throws Exception {
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();		
		
		srisSeleccionados=this.getSrisSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"sri."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarSri(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(Sri sriAux:srisSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarSri(sriAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//sriAux.setsDetalleGeneralEntityReporte(sriAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.sriSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarSri(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=SriConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_RAZONSOCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_ESRISE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_NUMEROSERIE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_NUMEROAUTORIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_NUMEROSECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_FECHACADUCIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_BIENESTAR12;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_BIENESTAR0;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_IDTIPOIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_SERVICIOSTAR12;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_SERVICIOSTAR0;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_MONTOIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_BASEIMPOTAR12;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_BASEIMPOTAR0;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_MONTOICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_MONTOIVABIEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_MONTOIVASERVICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_RETENCIONIVABIEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_CONDEVOLUCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarSri(Sri sri,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=sri.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getasientocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.gettransaccionconta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getrazon_social();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.gettipocomprobante_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getes_rise().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getnumero_serie();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getnumero_autorizacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getnumero_secuencial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getfecha_registro_contable().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getfecha_caducidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.gettipotributario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getbienes_tar12().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getbienes_tar0().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.gettipoiva_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getservicios_tar12().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getservicios_tar0().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getmonto_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getbase_impo_tar12().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getbase_impo_tar0().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getmonto_ice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getmonto_iva_bien().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getmonto_iva_servicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.gettiporetencionivabien_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.gettiporetencionivaservicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getretencion_iva_bien().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getretencion_iva_servicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.getcon_devolucion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=sri.gettipomovimiento_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelSrisSeleccionados() throws Exception {
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();		
		
		srisSeleccionados=this.getSrisSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"sri.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("Sris");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelSri(row);				
				iRow++;
			}				
			
			for(Sri sriAux:srisSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelSri(sriAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.sriSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlSrisSeleccionados() throws Exception {
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();		
		
		srisSeleccionados=this.getSrisSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"sri.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("sris");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("sri");
			//elementRoot.appendChild(element);
		
			for(Sri sriAux:srisSeleccionados) {
				element = document.createElement("sri");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlSri(sriAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.sriSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sri",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelSri(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_IDASIENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_RAZONSOCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_ESRISE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_NUMEROSERIE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_NUMEROAUTORIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_NUMEROSECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_FECHACADUCIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_BIENESTAR12);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_BIENESTAR0);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_SERVICIOSTAR12);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_SERVICIOSTAR0);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_MONTOIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_BASEIMPOTAR12);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_BASEIMPOTAR0);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_MONTOICE);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_MONTOIVABIEN);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_MONTOIVASERVICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_RETENCIONIVABIEN);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_RETENCIONIVASERVICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_CONDEVOLUCION);
		cell = row.createCell(iColumn++);cell.setCellValue(SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelSri(Sri sri,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getasientocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.gettransaccionconta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getrazon_social());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.gettipocomprobante_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getes_rise());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getnumero_serie());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getnumero_autorizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getnumero_secuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getfecha_registro_contable());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getfecha_caducidad());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.gettipotributario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getbienes_tar12());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getbienes_tar0());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.gettipoiva_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getservicios_tar12());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getservicios_tar0());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getmonto_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getbase_impo_tar12());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getbase_impo_tar0());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getmonto_ice());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getmonto_iva_bien());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getmonto_iva_servicio());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.gettiporetencionivabien_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.gettiporetencionivaservicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getretencion_iva_bien());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getretencion_iva_servicio());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.getcon_devolucion());
		cell = row.createCell(iColumn++);cell.setCellValue(sri.gettipomovimiento_descripcion());				
	}
	
	public void setFilaDatosExportarXmlSri(Sri sri,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(SriConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(sri.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(SriConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(sri.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementasientocontable_descripcion = document.createElement(SriConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(sri.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);

		Element elementtransaccionconta_descripcion = document.createElement(SriConstantesFunciones.IDTRANSACCIONCONTA);
		elementtransaccionconta_descripcion.appendChild(document.createTextNode(sri.gettransaccionconta_descripcion()));
		element.appendChild(elementtransaccionconta_descripcion);

		Element elementruc = document.createElement(SriConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(sri.getruc().trim()));
		element.appendChild(elementruc);

		Element elementcliente_descripcion = document.createElement(SriConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(sri.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementrazon_social = document.createElement(SriConstantesFunciones.RAZONSOCIAL);
		elementrazon_social.appendChild(document.createTextNode(sri.getrazon_social().trim()));
		element.appendChild(elementrazon_social);

		Element elementtipocomprobante_descripcion = document.createElement(SriConstantesFunciones.IDTIPOCOMPROBANTE);
		elementtipocomprobante_descripcion.appendChild(document.createTextNode(sri.gettipocomprobante_descripcion()));
		element.appendChild(elementtipocomprobante_descripcion);

		Element elementes_rise = document.createElement(SriConstantesFunciones.ESRISE);
		elementes_rise.appendChild(document.createTextNode(sri.getes_rise().toString().trim()));
		element.appendChild(elementes_rise);

		Element elementnumero_serie = document.createElement(SriConstantesFunciones.NUMEROSERIE);
		elementnumero_serie.appendChild(document.createTextNode(sri.getnumero_serie().trim()));
		element.appendChild(elementnumero_serie);

		Element elementnumero_autorizacion = document.createElement(SriConstantesFunciones.NUMEROAUTORIZACION);
		elementnumero_autorizacion.appendChild(document.createTextNode(sri.getnumero_autorizacion().trim()));
		element.appendChild(elementnumero_autorizacion);

		Element elementnumero_secuencial = document.createElement(SriConstantesFunciones.NUMEROSECUENCIAL);
		elementnumero_secuencial.appendChild(document.createTextNode(sri.getnumero_secuencial().trim()));
		element.appendChild(elementnumero_secuencial);

		Element elementfecha_emision = document.createElement(SriConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(sri.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_registro_contable = document.createElement(SriConstantesFunciones.FECHAREGISTROCONTABLE);
		elementfecha_registro_contable.appendChild(document.createTextNode(sri.getfecha_registro_contable().toString().trim()));
		element.appendChild(elementfecha_registro_contable);

		Element elementfecha_caducidad = document.createElement(SriConstantesFunciones.FECHACADUCIDAD);
		elementfecha_caducidad.appendChild(document.createTextNode(sri.getfecha_caducidad().toString().trim()));
		element.appendChild(elementfecha_caducidad);

		Element elementtipotributario_descripcion = document.createElement(SriConstantesFunciones.IDTIPOTRIBUTARIO);
		elementtipotributario_descripcion.appendChild(document.createTextNode(sri.gettipotributario_descripcion()));
		element.appendChild(elementtipotributario_descripcion);

		Element elementbienes_tar12 = document.createElement(SriConstantesFunciones.BIENESTAR12);
		elementbienes_tar12.appendChild(document.createTextNode(sri.getbienes_tar12().toString().trim()));
		element.appendChild(elementbienes_tar12);

		Element elementbienes_tar0 = document.createElement(SriConstantesFunciones.BIENESTAR0);
		elementbienes_tar0.appendChild(document.createTextNode(sri.getbienes_tar0().toString().trim()));
		element.appendChild(elementbienes_tar0);

		Element elementtipoiva_descripcion = document.createElement(SriConstantesFunciones.IDTIPOIVA);
		elementtipoiva_descripcion.appendChild(document.createTextNode(sri.gettipoiva_descripcion()));
		element.appendChild(elementtipoiva_descripcion);

		Element elementservicios_tar12 = document.createElement(SriConstantesFunciones.SERVICIOSTAR12);
		elementservicios_tar12.appendChild(document.createTextNode(sri.getservicios_tar12().toString().trim()));
		element.appendChild(elementservicios_tar12);

		Element elementservicios_tar0 = document.createElement(SriConstantesFunciones.SERVICIOSTAR0);
		elementservicios_tar0.appendChild(document.createTextNode(sri.getservicios_tar0().toString().trim()));
		element.appendChild(elementservicios_tar0);

		Element elementmonto_iva = document.createElement(SriConstantesFunciones.MONTOIVA);
		elementmonto_iva.appendChild(document.createTextNode(sri.getmonto_iva().toString().trim()));
		element.appendChild(elementmonto_iva);

		Element elementbase_impo_tar12 = document.createElement(SriConstantesFunciones.BASEIMPOTAR12);
		elementbase_impo_tar12.appendChild(document.createTextNode(sri.getbase_impo_tar12().toString().trim()));
		element.appendChild(elementbase_impo_tar12);

		Element elementbase_impo_tar0 = document.createElement(SriConstantesFunciones.BASEIMPOTAR0);
		elementbase_impo_tar0.appendChild(document.createTextNode(sri.getbase_impo_tar0().toString().trim()));
		element.appendChild(elementbase_impo_tar0);

		Element elementmonto_ice = document.createElement(SriConstantesFunciones.MONTOICE);
		elementmonto_ice.appendChild(document.createTextNode(sri.getmonto_ice().toString().trim()));
		element.appendChild(elementmonto_ice);

		Element elementmonto_iva_bien = document.createElement(SriConstantesFunciones.MONTOIVABIEN);
		elementmonto_iva_bien.appendChild(document.createTextNode(sri.getmonto_iva_bien().toString().trim()));
		element.appendChild(elementmonto_iva_bien);

		Element elementmonto_iva_servicio = document.createElement(SriConstantesFunciones.MONTOIVASERVICIO);
		elementmonto_iva_servicio.appendChild(document.createTextNode(sri.getmonto_iva_servicio().toString().trim()));
		element.appendChild(elementmonto_iva_servicio);

		Element elementtiporetencionivabien_descripcion = document.createElement(SriConstantesFunciones.IDTIPORETENCIONIVABIEN);
		elementtiporetencionivabien_descripcion.appendChild(document.createTextNode(sri.gettiporetencionivabien_descripcion()));
		element.appendChild(elementtiporetencionivabien_descripcion);

		Element elementtiporetencionivaservicio_descripcion = document.createElement(SriConstantesFunciones.IDTIPORETENCIONIVASERVICIO);
		elementtiporetencionivaservicio_descripcion.appendChild(document.createTextNode(sri.gettiporetencionivaservicio_descripcion()));
		element.appendChild(elementtiporetencionivaservicio_descripcion);

		Element elementretencion_iva_bien = document.createElement(SriConstantesFunciones.RETENCIONIVABIEN);
		elementretencion_iva_bien.appendChild(document.createTextNode(sri.getretencion_iva_bien().toString().trim()));
		element.appendChild(elementretencion_iva_bien);

		Element elementretencion_iva_servicio = document.createElement(SriConstantesFunciones.RETENCIONIVASERVICIO);
		elementretencion_iva_servicio.appendChild(document.createTextNode(sri.getretencion_iva_servicio().toString().trim()));
		element.appendChild(elementretencion_iva_servicio);

		Element elementcon_devolucion = document.createElement(SriConstantesFunciones.CONDEVOLUCION);
		elementcon_devolucion.appendChild(document.createTextNode(sri.getcon_devolucion().toString().trim()));
		element.appendChild(elementcon_devolucion);

		Element elementtipomovimiento_descripcion = document.createElement(SriConstantesFunciones.IDTIPOMOVIMIENTO);
		elementtipomovimiento_descripcion.appendChild(document.createTextNode(sri.gettipomovimiento_descripcion()));
		element.appendChild(elementtipomovimiento_descripcion);
	}
	
	public void generarReporteGroupGenericoSrisSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<Sri> srisSeleccionados=new ArrayList<Sri>();
		
		srisSeleccionados=this.getSrisSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoSri(srisSeleccionados);
		
		this.generarReporteSris("Todos",srisSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoSri(ArrayList<Sri> srisSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(Sri sriAux:srisSeleccionados) {
				sriAux.setsDetalleGeneralEntityReporte(sriAux.toString());
			
				if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.getasientocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_IDTRANSACCIONCONTA)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.gettransaccionconta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RUC)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_RAZONSOCIAL)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.getrazon_social());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_IDTIPOCOMPROBANTE)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.gettipocomprobante_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_ESRISE)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(sriAux.getes_rise()));
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_NUMEROSERIE)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.getnumero_serie());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.getnumero_autorizacion());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.getnumero_secuencial());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(sriAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_FECHAREGISTROCONTABLE)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(sriAux.getfecha_registro_contable()));
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_FECHACADUCIDAD)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(sriAux.getfecha_caducidad()));
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_IDTIPOTRIBUTARIO)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.gettipotributario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_IDTIPOIVA)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.gettipoiva_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVABIEN)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.gettiporetencionivabien_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_IDTIPORETENCIONIVASERVICIO)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.gettiporetencionivaservicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_CONDEVOLUCION)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(sriAux.getcon_devolucion()));
				}
				 else if(sTipoSeleccionar.equals(SriConstantesFunciones.LABEL_IDTIPOMOVIMIENTO)) {
					existe=true;
					sriAux.setsDescripcionGeneralEntityReporte1(sriAux.gettipomovimiento_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SriConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesSri(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoSri=true;
				this.isVisibilidadCeldaNuevoRelacionesSri=true;
				this.isVisibilidadCeldaGuardarCambiosSri=true;
			}
			
			this.isVisibilidadCeldaModificarSri=false;
			this.isVisibilidadCeldaActualizarSri=false;
			this.isVisibilidadCeldaEliminarSri=false;
			this.isVisibilidadCeldaCancelarSri=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSri=true;
				} else {
					this.isVisibilidadCeldaGuardarSri=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoSri=false;
			this.isVisibilidadCeldaNuevoRelacionesSri=false;
			this.isVisibilidadCeldaGuardarCambiosSri=false;
			this.isVisibilidadCeldaModificarSri=false;
			this.isVisibilidadCeldaActualizarSri=true;
			this.isVisibilidadCeldaEliminarSri=false;
			this.isVisibilidadCeldaCancelarSri=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSri=true;
				} else {
					this.isVisibilidadCeldaGuardarSri=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoSri=false;
			this.isVisibilidadCeldaNuevoRelacionesSri=false;
			this.isVisibilidadCeldaGuardarCambiosSri=false;
			this.isVisibilidadCeldaModificarSri=false;
			this.isVisibilidadCeldaActualizarSri=true;
			this.isVisibilidadCeldaEliminarSri=true;
			this.isVisibilidadCeldaCancelarSri=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSri=true;
				} else {
					this.isVisibilidadCeldaGuardarSri=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoSri=false;
			this.isVisibilidadCeldaNuevoRelacionesSri=false;
			this.isVisibilidadCeldaGuardarCambiosSri=false;
			this.isVisibilidadCeldaModificarSri=false;
			this.isVisibilidadCeldaActualizarSri=true;
			this.isVisibilidadCeldaEliminarSri=false;
			this.isVisibilidadCeldaCancelarSri=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSri=false;
				} else {
					this.isVisibilidadCeldaGuardarSri=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoSri=true;
			this.isVisibilidadCeldaNuevoRelacionesSri=true;
			this.isVisibilidadCeldaGuardarCambiosSri=true;
			this.isVisibilidadCeldaModificarSri=false;
			this.isVisibilidadCeldaActualizarSri=false;
			this.isVisibilidadCeldaEliminarSri=false;
			this.isVisibilidadCeldaCancelarSri=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSri=true;
				} else {
					this.isVisibilidadCeldaGuardarSri=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoSri=false;
			this.isVisibilidadCeldaNuevoRelacionesSri=false;
			this.isVisibilidadCeldaGuardarCambiosSri=false;
			this.isVisibilidadCeldaActualizarSri=false;
			this.isVisibilidadCeldaEliminarSri=false;
			this.isVisibilidadCeldaCancelarSri=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSri=false;
				} else {
					this.isVisibilidadCeldaGuardarSri=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoSri=false;
			this.isVisibilidadCeldaNuevoRelacionesSri=false;
			this.isVisibilidadCeldaGuardarCambiosSri=false;
			this.isVisibilidadCeldaModificarSri=true;
			this.isVisibilidadCeldaActualizarSri=false;
			this.isVisibilidadCeldaEliminarSri=false;
			this.isVisibilidadCeldaCancelarSri=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSri=false;
				} else {
					this.isVisibilidadCeldaGuardarSri=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(SriJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoSri=true;
			this.isVisibilidadCeldaNuevoRelacionesSri=true;
			this.isVisibilidadCeldaGuardarCambiosSri=true;
		} else {
			this.actualizarEstadoPanelsSri(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarSri=false;
			//this.isVisibilidadCeldaVerFormSri=false;
			this.isVisibilidadCeldaDuplicarSri=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!sriSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesSri=false;
		} else {
			this.isVisibilidadCeldaNuevoSri=false;
			this.isVisibilidadCeldaGuardarCambiosSri=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(sriSessionBean.getEsGuardarRelacionado()) {
			if(!sriSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesSri=false;												
			}
			
			this.jButtonCerrarSri.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesSri=false;
		}
		
		if(!this.permiteMantenimiento(this.sri)) {
			this.isVisibilidadCeldaActualizarSri=false;
			this.isVisibilidadCeldaEliminarSri=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesSri() {
	}
	
	public void actualizarEstadoPanelsSri(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionSri!=null) {
				this.jScrollPanelDatosEdicionSri.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasSri!=null) {
				this.jTabbedPaneBusquedasSri.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosSri!=null) {
				this.jScrollPanelDatosSri.setVisible(true);
			}
			
			if(this.jPanelPaginacionSri!=null) {
				this.jPanelPaginacionSri.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSri!=null) {
				this.jPanelParametrosReportesSri.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionSri!=null) {
				this.jScrollPanelDatosEdicionSri.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasSri!=null) {
				this.jTabbedPaneBusquedasSri.setVisible(false);			
			}
			*/
			
			
			if(this.jScrollPanelDatosSri!=null) {
				this.jScrollPanelDatosSri.setVisible(false);
			}
			
			if(this.jPanelPaginacionSri!=null) {
				this.jPanelPaginacionSri.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesSri!=null) {
				this.jPanelParametrosReportesSri.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionSri!=null) {
				this.jScrollPanelDatosEdicionSri.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasSri!=null) {
				this.jTabbedPaneBusquedasSri.setVisible(false);			
			}
			*/
			
			if(this.jScrollPanelDatosSri!=null) {
				this.jScrollPanelDatosSri.setVisible(false);
			}
			
			if(this.jPanelPaginacionSri!=null) {
				this.jPanelPaginacionSri.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesSri!=null) {
				this.jPanelParametrosReportesSri.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionSri!=null) {
				this.jScrollPanelDatosEdicionSri.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasSri!=null) {
				this.jTabbedPaneBusquedasSri.setVisible(false);			
			}
			*/
			
			if(this.jScrollPanelDatosSri!=null) {
				this.jScrollPanelDatosSri.setVisible(false);
			}
			
			if(this.jPanelPaginacionSri!=null) {
				this.jPanelPaginacionSri.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesSri!=null) {
				this.jPanelParametrosReportesSri.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionSri!=null) {
				this.jScrollPanelDatosEdicionSri.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasSri!=null) {
				this.jTabbedPaneBusquedasSri.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosSri!=null) {
				this.jScrollPanelDatosSri.setVisible(true);
			}
			
			if(this.jPanelPaginacionSri!=null) {
				this.jPanelPaginacionSri.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSri!=null) {
				this.jPanelParametrosReportesSri.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionSri!=null) {
				this.jScrollPanelDatosEdicionSri.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasSri!=null) {
				this.jTabbedPaneBusquedasSri.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosSri!=null) {
				this.jScrollPanelDatosSri.setVisible(true);
			}
			
			if(this.jPanelPaginacionSri!=null) {
				this.jPanelPaginacionSri.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSri!=null) {
				this.jPanelParametrosReportesSri.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionSri!=null) {
				this.jScrollPanelDatosEdicionSri.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasSri!=null) {
				this.jTabbedPaneBusquedasSri.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosSri!=null) {
				this.jScrollPanelDatosSri.setVisible(true);
			}
			
			if(this.jPanelPaginacionSri!=null) {
				this.jPanelPaginacionSri.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSri!=null) {
				this.jPanelParametrosReportesSri.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.sriSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				/*
				if(this.jTabbedPaneBusquedasSri!=null) {
					this.jTabbedPaneBusquedasSri.setVisible(false);				
				}
				*/
			}
			
			if(this.jPanelParametrosReportesSri!=null) {
				this.jPanelParametrosReportesSri.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.sriSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasSri!=null) {
				this.jTabbedPaneBusquedasSri.setVisible(true);			
			}
			*/
			if(this.jPanelParametrosReportesSri!=null) {
				this.jPanelParametrosReportesSri.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdAsientoContableSri);}

			this.isVisibilidadFK_IdCliente=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdClienteSri);}

			this.isVisibilidadFK_IdTipoComprobante=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoComprobanteSri);}

			this.isVisibilidadFK_IdTipoIva=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoIvaSri);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoMovimientoSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaBien=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaBien) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaBienSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaServicio=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaServicio) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaServicioSri);}

			this.isVisibilidadFK_IdTipoTributario=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoTributarioSri);}

			this.isVisibilidadFK_IdTransaccionConta=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTransaccionContaSri);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTransaccionConta(Boolean isParaTransaccionConta){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionContaNegation=!isParaTransaccionConta;

			this.isVisibilidadFK_IdAsientoContable=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdAsientoContableSri);}

			this.isVisibilidadFK_IdCliente=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdClienteSri);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoComprobanteSri);}

			this.isVisibilidadFK_IdTipoIva=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoIvaSri);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoMovimientoSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaBien=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaBien) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaBienSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaServicio=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaServicio) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaServicioSri);}

			this.isVisibilidadFK_IdTipoTributario=isParaTransaccionContaNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoTributarioSri);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTransaccionConta;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTransaccionContaSri);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdAsientoContable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdAsientoContableSri);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdClienteSri);}

			this.isVisibilidadFK_IdTipoComprobante=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoComprobanteSri);}

			this.isVisibilidadFK_IdTipoIva=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoIvaSri);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoMovimientoSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaBien=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaBien) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaBienSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaServicio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaServicio) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaServicioSri);}

			this.isVisibilidadFK_IdTipoTributario=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoTributarioSri);}

			this.isVisibilidadFK_IdTransaccionConta=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTransaccionContaSri);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoComprobante(Boolean isParaTipoComprobante){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoComprobanteNegation=!isParaTipoComprobante;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdAsientoContableSri);}

			this.isVisibilidadFK_IdCliente=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdClienteSri);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoComprobante;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoComprobanteSri);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoIvaSri);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoMovimientoSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaBien=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaBien) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaBienSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaServicio=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaServicio) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaServicioSri);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoTributarioSri);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoComprobanteNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTransaccionContaSri);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoTributario(Boolean isParaTipoTributario){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTributarioNegation=!isParaTipoTributario;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdAsientoContableSri);}

			this.isVisibilidadFK_IdCliente=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdClienteSri);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoComprobanteSri);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoIvaSri);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoMovimientoSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaBien=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaBien) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaBienSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaServicio=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaServicio) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaServicioSri);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoTributario;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoTributarioSri);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoTributarioNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTransaccionContaSri);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoIva(Boolean isParaTipoIva){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoIvaNegation=!isParaTipoIva;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdAsientoContableSri);}

			this.isVisibilidadFK_IdCliente=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdClienteSri);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoComprobanteSri);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoIva;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoIvaSri);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoMovimientoSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaBien=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaBien) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaBienSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaServicio=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaServicio) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaServicioSri);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoTributarioSri);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoIvaNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTransaccionContaSri);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoRetencionIvaBien(Boolean isParaTipoRetencionIvaBien){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRetencionIvaBienNegation=!isParaTipoRetencionIvaBien;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoRetencionIvaBienNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdAsientoContableSri);}

			this.isVisibilidadFK_IdCliente=isParaTipoRetencionIvaBienNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdClienteSri);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoRetencionIvaBienNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoComprobanteSri);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoRetencionIvaBienNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoIvaSri);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoRetencionIvaBienNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoMovimientoSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaBien=isParaTipoRetencionIvaBien;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaBien) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaBienSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaServicio=isParaTipoRetencionIvaBienNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaServicio) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaServicioSri);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoRetencionIvaBienNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoTributarioSri);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoRetencionIvaBienNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTransaccionContaSri);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoRetencionIvaServicio(Boolean isParaTipoRetencionIvaServicio){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRetencionIvaServicioNegation=!isParaTipoRetencionIvaServicio;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoRetencionIvaServicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdAsientoContableSri);}

			this.isVisibilidadFK_IdCliente=isParaTipoRetencionIvaServicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdClienteSri);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoRetencionIvaServicioNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoComprobanteSri);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoRetencionIvaServicioNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoIvaSri);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoRetencionIvaServicioNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoMovimientoSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaBien=isParaTipoRetencionIvaServicioNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaBien) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaBienSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaServicio=isParaTipoRetencionIvaServicio;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaServicio) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaServicioSri);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoRetencionIvaServicioNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoTributarioSri);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoRetencionIvaServicioNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTransaccionContaSri);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoMovimiento(Boolean isParaTipoMovimiento){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoMovimientoNegation=!isParaTipoMovimiento;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdAsientoContableSri);}

			this.isVisibilidadFK_IdCliente=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdClienteSri);}

			this.isVisibilidadFK_IdTipoComprobante=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoComprobante) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoComprobanteSri);}

			this.isVisibilidadFK_IdTipoIva=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoIva) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoIvaSri);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoMovimiento;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoMovimientoSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaBien=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaBien) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaBienSri);}

			this.isVisibilidadFK_IdTipoRetencionIvaServicio=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoRetencionIvaServicio) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoRetencionIvaServicioSri);}

			this.isVisibilidadFK_IdTipoTributario=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoTributario) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTipoTributarioSri);}

			this.isVisibilidadFK_IdTransaccionConta=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTransaccionConta) {this.jTabbedPaneBusquedasSri.remove(jPanelFK_IdTransaccionContaSri);}
		}
		*/
	}
	
	
	
	

	public String registrarSesionSriParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(sriSessionBean==null) {
				sriSessionBean=new SriSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(sriSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.sriFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(SriConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionSri(true);
			//asientocontableSessionBean.setlidSriActual(this.idSriActual);

			sriSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySri(true);
			sriSessionBean.setlIdSriActualForeignKey(this.idSriActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionSriParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(sriSessionBean==null) {
				sriSessionBean=new SriSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(sriSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.sriFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(SriConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionSri(true);
			//clienteSessionBean.setlidSriActual(this.idSriActual);

			sriSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySri(true);
			sriSessionBean.setlIdSriActualForeignKey(this.idSriActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//SriSessionBean sriSessionBean=new SriSessionBean();
		
		if(this.sriSessionBean==null) {
			this.sriSessionBean=new SriSessionBean();
		}
		
		this.sriSessionBean.setsUltimaBusquedaSri(this.getsAccionBusqueda());
		this.sriSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.sriSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			sriSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			sriSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoComprobante")) {
			sriSessionBean.settipo_comprobante(this.gettipo_comprobanteFK_IdTipoComprobante());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoIva")) {
			sriSessionBean.setid_tipo_iva(this.getid_tipo_ivaFK_IdTipoIva());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimiento")) {
			sriSessionBean.setid_tipo_movimiento(this.getid_tipo_movimientoFK_IdTipoMovimiento());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencionIvaBien")) {
			sriSessionBean.setid_tipo_retencion_iva_bien(this.getid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencionIvaServicio")) {
			sriSessionBean.setid_tipo_retencion_iva_servicio(this.getid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTributario")) {
			sriSessionBean.settipo_tributario(this.gettipo_tributarioFK_IdTipoTributario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionConta")) {
			sriSessionBean.setid_transaccion_conta(this.getid_transaccion_contaFK_IdTransaccionConta());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//SriSessionBean sriSessionBean=new SriSessionBean();
		
		if(this.sriSessionBean==null) {
			this.sriSessionBean=new SriSessionBean();
		}
		
		if(this.sriSessionBean.getsUltimaBusquedaSri()!=null&&!this.sriSessionBean.getsUltimaBusquedaSri().equals("")) {
			this.setsAccionBusqueda(sriSessionBean.getsUltimaBusquedaSri());
			this.setiNumeroPaginacion(sriSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(sriSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(sriSessionBean.getid_asiento_contable());
				sriSessionBean.setid_asiento_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(sriSessionBean.getid_cliente());
				sriSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoComprobante")) {
				this.settipo_comprobanteFK_IdTipoComprobante(sriSessionBean.gettipo_comprobante());
				sriSessionBean.settipo_comprobante(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoIva")) {
				this.setid_tipo_ivaFK_IdTipoIva(sriSessionBean.getid_tipo_iva());
				sriSessionBean.setid_tipo_iva(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimiento")) {
				this.setid_tipo_movimientoFK_IdTipoMovimiento(sriSessionBean.getid_tipo_movimiento());
				sriSessionBean.setid_tipo_movimiento(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencionIvaBien")) {
				this.setid_tipo_retencion_iva_bienFK_IdTipoRetencionIvaBien(sriSessionBean.getid_tipo_retencion_iva_bien());
				sriSessionBean.setid_tipo_retencion_iva_bien(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencionIvaServicio")) {
				this.setid_tipo_retencion_iva_servicioFK_IdTipoRetencionIvaServicio(sriSessionBean.getid_tipo_retencion_iva_servicio());
				sriSessionBean.setid_tipo_retencion_iva_servicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTributario")) {
				this.settipo_tributarioFK_IdTipoTributario(sriSessionBean.gettipo_tributario());
				sriSessionBean.settipo_tributario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionConta")) {
				this.setid_transaccion_contaFK_IdTransaccionConta(sriSessionBean.getid_transaccion_conta());
				sriSessionBean.setid_transaccion_conta(-1L);
			}
		}
		
		this.sriSessionBean.setsUltimaBusquedaSri("");
		this.sriSessionBean.setiNumeroPaginacion(SriConstantesFunciones.INUMEROPAGINACION);
		this.sriSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaSri(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioSri() {
		this.updateBorderResaltarBusquedasFormularioSri();
		this.updateVisibilidadBusquedasFormularioSri();
		this.updateHabilitarBusquedasFormularioSri();
	}
	
	public void updateBorderResaltarBusquedasFormularioSri() {					
	//BYDAN_BUSQUEDAS
	/*	
	int index=0;
		
	if(this.jTabbedPaneBusquedasSri.getComponents().length>0) {
	

		if(this.sriConstantesFunciones.resaltarFK_IdAsientoContableSri!=null) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdAsientoContableSri);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdAsientoContableSri);
			}
		}

		if(this.sriConstantesFunciones.resaltarFK_IdClienteSri!=null) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdClienteSri);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdClienteSri);
			}
		}

		if(this.sriConstantesFunciones.resaltarFK_IdTipoComprobanteSri!=null) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoComprobanteSri);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoComprobanteSri);
			}
		}

		if(this.sriConstantesFunciones.resaltarFK_IdTipoIvaSri!=null) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoIvaSri);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoIvaSri);
			}
		}

		if(this.sriConstantesFunciones.resaltarFK_IdTipoMovimientoSri!=null) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoMovimientoSri);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoMovimientoSri);
			}
		}

		if(this.sriConstantesFunciones.resaltarFK_IdTipoRetencionIvaBienSri!=null) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaBienSri);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoRetencionIvaBienSri);
			}
		}

		if(this.sriConstantesFunciones.resaltarFK_IdTipoRetencionIvaServicioSri!=null) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaServicioSri);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoRetencionIvaServicioSri);
			}
		}

		if(this.sriConstantesFunciones.resaltarFK_IdTipoTributarioSri!=null) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoTributarioSri);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoTributarioSri);
			}
		}

		if(this.sriConstantesFunciones.resaltarFK_IdTransaccionContaSri!=null) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTransaccionContaSri);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTransaccionContaSri);
			}
		}
	}	
	*/
	}
	
	public void updateVisibilidadBusquedasFormularioSri() {
	//BYDAN_BUSQUEDAS
	/*
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasSri.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdAsientoContableSri);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.sriConstantesFunciones.mostrarFK_IdAsientoContableSri);
			if(!this.sriConstantesFunciones.mostrarFK_IdAsientoContableSri && index>-1) {
				this.jTabbedPaneBusquedasSri.remove(index);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdClienteSri);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.sriConstantesFunciones.mostrarFK_IdClienteSri);
			if(!this.sriConstantesFunciones.mostrarFK_IdClienteSri && index>-1) {
				this.jTabbedPaneBusquedasSri.remove(index);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoComprobanteSri);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.sriConstantesFunciones.mostrarFK_IdTipoComprobanteSri);
			if(!this.sriConstantesFunciones.mostrarFK_IdTipoComprobanteSri && index>-1) {
				this.jTabbedPaneBusquedasSri.remove(index);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoIvaSri);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.sriConstantesFunciones.mostrarFK_IdTipoIvaSri);
			if(!this.sriConstantesFunciones.mostrarFK_IdTipoIvaSri && index>-1) {
				this.jTabbedPaneBusquedasSri.remove(index);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoMovimientoSri);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.sriConstantesFunciones.mostrarFK_IdTipoMovimientoSri);
			if(!this.sriConstantesFunciones.mostrarFK_IdTipoMovimientoSri && index>-1) {
				this.jTabbedPaneBusquedasSri.remove(index);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaBienSri);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.sriConstantesFunciones.mostrarFK_IdTipoRetencionIvaBienSri);
			if(!this.sriConstantesFunciones.mostrarFK_IdTipoRetencionIvaBienSri && index>-1) {
				this.jTabbedPaneBusquedasSri.remove(index);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaServicioSri);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.sriConstantesFunciones.mostrarFK_IdTipoRetencionIvaServicioSri);
			if(!this.sriConstantesFunciones.mostrarFK_IdTipoRetencionIvaServicioSri && index>-1) {
				this.jTabbedPaneBusquedasSri.remove(index);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoTributarioSri);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.sriConstantesFunciones.mostrarFK_IdTipoTributarioSri);
			if(!this.sriConstantesFunciones.mostrarFK_IdTipoTributarioSri && index>-1) {
				this.jTabbedPaneBusquedasSri.remove(index);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTransaccionContaSri);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.sriConstantesFunciones.mostrarFK_IdTransaccionContaSri);
			if(!this.sriConstantesFunciones.mostrarFK_IdTransaccionContaSri && index>-1) {
				this.jTabbedPaneBusquedasSri.remove(index);
			}
	}	
	*/
	}
	
	public void updateHabilitarBusquedasFormularioSri() {
	/*
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasSri.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdAsientoContableSri);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.sriConstantesFunciones.activarFK_IdAsientoContableSri);
				this.jTabbedPaneBusquedasSri.setEnabledAt(index,this.sriConstantesFunciones.activarFK_IdAsientoContableSri);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdClienteSri);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.sriConstantesFunciones.activarFK_IdClienteSri);
				this.jTabbedPaneBusquedasSri.setEnabledAt(index,this.sriConstantesFunciones.activarFK_IdClienteSri);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoComprobanteSri);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.sriConstantesFunciones.activarFK_IdTipoComprobanteSri);
				this.jTabbedPaneBusquedasSri.setEnabledAt(index,this.sriConstantesFunciones.activarFK_IdTipoComprobanteSri);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoIvaSri);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.sriConstantesFunciones.activarFK_IdTipoIvaSri);
				this.jTabbedPaneBusquedasSri.setEnabledAt(index,this.sriConstantesFunciones.activarFK_IdTipoIvaSri);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoMovimientoSri);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.sriConstantesFunciones.activarFK_IdTipoMovimientoSri);
				this.jTabbedPaneBusquedasSri.setEnabledAt(index,this.sriConstantesFunciones.activarFK_IdTipoMovimientoSri);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaBienSri);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.sriConstantesFunciones.activarFK_IdTipoRetencionIvaBienSri);
				this.jTabbedPaneBusquedasSri.setEnabledAt(index,this.sriConstantesFunciones.activarFK_IdTipoRetencionIvaBienSri);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaServicioSri);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.sriConstantesFunciones.activarFK_IdTipoRetencionIvaServicioSri);
				this.jTabbedPaneBusquedasSri.setEnabledAt(index,this.sriConstantesFunciones.activarFK_IdTipoRetencionIvaServicioSri);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoTributarioSri);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.sriConstantesFunciones.activarFK_IdTipoTributarioSri);
				this.jTabbedPaneBusquedasSri.setEnabledAt(index,this.sriConstantesFunciones.activarFK_IdTipoTributarioSri);
			}

			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTransaccionContaSri);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.sriConstantesFunciones.activarFK_IdTransaccionContaSri);
				this.jTabbedPaneBusquedasSri.setEnabledAt(index,this.sriConstantesFunciones.activarFK_IdTransaccionContaSri);
			}
		}	
	*/
	}
	
	
	public void resaltarPanelBusquedaSri(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		/*
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdAsientoContableSri);

			this.jTabbedPaneBusquedasSri.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);

			this.sriConstantesFunciones.setResaltarFK_IdAsientoContableSri(resaltar);

			jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdAsientoContableSri);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdClienteSri);

			this.jTabbedPaneBusquedasSri.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);

			this.sriConstantesFunciones.setResaltarFK_IdClienteSri(resaltar);

			jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdClienteSri);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoComprobante")) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoComprobanteSri);

			this.jTabbedPaneBusquedasSri.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);

			this.sriConstantesFunciones.setResaltarFK_IdTipoComprobanteSri(resaltar);

			jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoComprobanteSri);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoIva")) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoIvaSri);

			this.jTabbedPaneBusquedasSri.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);

			this.sriConstantesFunciones.setResaltarFK_IdTipoIvaSri(resaltar);

			jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoIvaSri);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoMovimiento")) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoMovimientoSri);

			this.jTabbedPaneBusquedasSri.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);

			this.sriConstantesFunciones.setResaltarFK_IdTipoMovimientoSri(resaltar);

			jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoMovimientoSri);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoRetencionIvaBien")) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaBienSri);

			this.jTabbedPaneBusquedasSri.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);

			this.sriConstantesFunciones.setResaltarFK_IdTipoRetencionIvaBienSri(resaltar);

			jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoRetencionIvaBienSri);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoRetencionIvaServicio")) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoRetencionIvaServicioSri);

			this.jTabbedPaneBusquedasSri.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);

			this.sriConstantesFunciones.setResaltarFK_IdTipoRetencionIvaServicioSri(resaltar);

			jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoRetencionIvaServicioSri);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTributario")) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTipoTributarioSri);

			this.jTabbedPaneBusquedasSri.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);

			this.sriConstantesFunciones.setResaltarFK_IdTipoTributarioSri(resaltar);

			jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTipoTributarioSri);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionConta")) {
			index= this.jTabbedPaneBusquedasSri.indexOfComponent(this.jPanelFK_IdTransaccionContaSri);

			this.jTabbedPaneBusquedasSri.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSri.getComponent(index);

			this.sriConstantesFunciones.setResaltarFK_IdTransaccionContaSri(resaltar);

			jPanel.setBorder(this.sriConstantesFunciones.resaltarFK_IdTransaccionContaSri);
			existe=true;
		}
		*/

		if(existe) {
			/*
			this.jTtoolBarSri.setBorder(resaltar);
			*/
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioSri() throws Exception {

		if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioSri();
		this.updateVisibilidadResaltarControlesFormularioSri();
		this.updateHabilitarResaltarControlesFormularioSri();
		
	}
	
	public void updateBorderResaltarControlesFormularioSri() throws Exception {
		if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.sriConstantesFunciones.resaltaridSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jLabelidSri.setBorder(this.sriConstantesFunciones.resaltaridSri);}
		if(this.sriConstantesFunciones.resaltarid_asiento_contableSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.setBorder(this.sriConstantesFunciones.resaltarid_asiento_contableSri);}
		if(this.sriConstantesFunciones.resaltarid_transaccion_contaSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.setBorder(this.sriConstantesFunciones.resaltarid_transaccion_contaSri);}
		if(this.sriConstantesFunciones.resaltarrucSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldrucSri.setBorder(this.sriConstantesFunciones.resaltarrucSri);}
		if(this.sriConstantesFunciones.resaltarid_clienteSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.setBorder(this.sriConstantesFunciones.resaltarid_clienteSri);}
		if(this.sriConstantesFunciones.resaltarrazon_socialSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextArearazon_socialSri.setBorder(this.sriConstantesFunciones.resaltarrazon_socialSri);}
		if(this.sriConstantesFunciones.resaltartipo_comprobanteSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.setBorder(this.sriConstantesFunciones.resaltartipo_comprobanteSri);}
		if(this.sriConstantesFunciones.resaltares_riseSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jCheckBoxes_riseSri.setBorderPainted(true);this.jInternalFrameDetalleFormSri.jCheckBoxes_riseSri.setBorder(this.sriConstantesFunciones.resaltares_riseSri);}
		if(this.sriConstantesFunciones.resaltarnumero_serieSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldnumero_serieSri.setBorder(this.sriConstantesFunciones.resaltarnumero_serieSri);}
		if(this.sriConstantesFunciones.resaltarnumero_autorizacionSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldnumero_autorizacionSri.setBorder(this.sriConstantesFunciones.resaltarnumero_autorizacionSri);}
		if(this.sriConstantesFunciones.resaltarnumero_secuencialSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldnumero_secuencialSri.setBorder(this.sriConstantesFunciones.resaltarnumero_secuencialSri);}
		if(this.sriConstantesFunciones.resaltarfecha_emisionSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jDateChooserfecha_emisionSri.setBorder(this.sriConstantesFunciones.resaltarfecha_emisionSri);}
		if(this.sriConstantesFunciones.resaltarfecha_registro_contableSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jDateChooserfecha_registro_contableSri.setBorder(this.sriConstantesFunciones.resaltarfecha_registro_contableSri);}
		if(this.sriConstantesFunciones.resaltarfecha_caducidadSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jDateChooserfecha_caducidadSri.setBorder(this.sriConstantesFunciones.resaltarfecha_caducidadSri);}
		if(this.sriConstantesFunciones.resaltartipo_tributarioSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.setBorder(this.sriConstantesFunciones.resaltartipo_tributarioSri);}
		if(this.sriConstantesFunciones.resaltarbienes_tar12Sri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar12Sri.setBorder(this.sriConstantesFunciones.resaltarbienes_tar12Sri);}
		if(this.sriConstantesFunciones.resaltarbienes_tar0Sri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar0Sri.setBorder(this.sriConstantesFunciones.resaltarbienes_tar0Sri);}
		if(this.sriConstantesFunciones.resaltarid_tipo_ivaSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.setBorder(this.sriConstantesFunciones.resaltarid_tipo_ivaSri);}
		if(this.sriConstantesFunciones.resaltarservicios_tar12Sri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar12Sri.setBorder(this.sriConstantesFunciones.resaltarservicios_tar12Sri);}
		if(this.sriConstantesFunciones.resaltarservicios_tar0Sri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar0Sri.setBorder(this.sriConstantesFunciones.resaltarservicios_tar0Sri);}
		if(this.sriConstantesFunciones.resaltarmonto_ivaSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldmonto_ivaSri.setBorder(this.sriConstantesFunciones.resaltarmonto_ivaSri);}
		if(this.sriConstantesFunciones.resaltarbase_impo_tar12Sri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar12Sri.setBorder(this.sriConstantesFunciones.resaltarbase_impo_tar12Sri);}
		if(this.sriConstantesFunciones.resaltarbase_impo_tar0Sri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar0Sri.setBorder(this.sriConstantesFunciones.resaltarbase_impo_tar0Sri);}
		if(this.sriConstantesFunciones.resaltarmonto_iceSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldmonto_iceSri.setBorder(this.sriConstantesFunciones.resaltarmonto_iceSri);}
		if(this.sriConstantesFunciones.resaltarmonto_iva_bienSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_bienSri.setBorder(this.sriConstantesFunciones.resaltarmonto_iva_bienSri);}
		if(this.sriConstantesFunciones.resaltarmonto_iva_servicioSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_servicioSri.setBorder(this.sriConstantesFunciones.resaltarmonto_iva_servicioSri);}
		if(this.sriConstantesFunciones.resaltarid_tipo_retencion_iva_bienSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.setBorder(this.sriConstantesFunciones.resaltarid_tipo_retencion_iva_bienSri);}
		if(this.sriConstantesFunciones.resaltarid_tipo_retencion_iva_servicioSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.setBorder(this.sriConstantesFunciones.resaltarid_tipo_retencion_iva_servicioSri);}
		if(this.sriConstantesFunciones.resaltarretencion_iva_bienSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_bienSri.setBorder(this.sriConstantesFunciones.resaltarretencion_iva_bienSri);}
		if(this.sriConstantesFunciones.resaltarretencion_iva_servicioSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_servicioSri.setBorder(this.sriConstantesFunciones.resaltarretencion_iva_servicioSri);}
		if(this.sriConstantesFunciones.resaltarcon_devolucionSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jCheckBoxcon_devolucionSri.setBorderPainted(true);this.jInternalFrameDetalleFormSri.jCheckBoxcon_devolucionSri.setBorder(this.sriConstantesFunciones.resaltarcon_devolucionSri);}
		if(this.sriConstantesFunciones.resaltarid_tipo_movimientoSri!=null && this.jInternalFrameDetalleFormSri!=null) {this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.setBorder(this.sriConstantesFunciones.resaltarid_tipo_movimientoSri);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioSri() throws Exception {		
		if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormSri!=null) {
	
		//this.jInternalFrameDetalleFormSri.jLabelidSri.setVisible(this.sriConstantesFunciones.mostraridSri);
		this.jInternalFrameDetalleFormSri.jPanelidSri.setVisible(this.sriConstantesFunciones.mostraridSri);
		//this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.setVisible(this.sriConstantesFunciones.mostrarid_asiento_contableSri);
		this.jInternalFrameDetalleFormSri.jPanelid_asiento_contableSri.setVisible(this.sriConstantesFunciones.mostrarid_asiento_contableSri);
			this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSri.setVisible(this.sriConstantesFunciones.mostrarid_asiento_contableSri);
		//this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.setVisible(this.sriConstantesFunciones.mostrarid_transaccion_contaSri);
		this.jInternalFrameDetalleFormSri.jPanelid_transaccion_contaSri.setVisible(this.sriConstantesFunciones.mostrarid_transaccion_contaSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldrucSri.setVisible(this.sriConstantesFunciones.mostrarrucSri);
		this.jInternalFrameDetalleFormSri.jPanelrucSri.setVisible(this.sriConstantesFunciones.mostrarrucSri);
		//this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.setVisible(this.sriConstantesFunciones.mostrarid_clienteSri);
		this.jInternalFrameDetalleFormSri.jPanelid_clienteSri.setVisible(this.sriConstantesFunciones.mostrarid_clienteSri);
			this.jInternalFrameDetalleFormSri.jButtonid_clienteSri.setVisible(this.sriConstantesFunciones.mostrarid_clienteSri);
		//this.jInternalFrameDetalleFormSri.jTextArearazon_socialSri.setVisible(this.sriConstantesFunciones.mostrarrazon_socialSri);
		this.jInternalFrameDetalleFormSri.jPanelrazon_socialSri.setVisible(this.sriConstantesFunciones.mostrarrazon_socialSri);
		//this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.setVisible(this.sriConstantesFunciones.mostrartipo_comprobanteSri);
		this.jInternalFrameDetalleFormSri.jPaneltipo_comprobanteSri.setVisible(this.sriConstantesFunciones.mostrartipo_comprobanteSri);
		//this.jInternalFrameDetalleFormSri.jCheckBoxes_riseSri.setVisible(this.sriConstantesFunciones.mostrares_riseSri);
		this.jInternalFrameDetalleFormSri.jPaneles_riseSri.setVisible(this.sriConstantesFunciones.mostrares_riseSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldnumero_serieSri.setVisible(this.sriConstantesFunciones.mostrarnumero_serieSri);
		this.jInternalFrameDetalleFormSri.jPanelnumero_serieSri.setVisible(this.sriConstantesFunciones.mostrarnumero_serieSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldnumero_autorizacionSri.setVisible(this.sriConstantesFunciones.mostrarnumero_autorizacionSri);
		this.jInternalFrameDetalleFormSri.jPanelnumero_autorizacionSri.setVisible(this.sriConstantesFunciones.mostrarnumero_autorizacionSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldnumero_secuencialSri.setVisible(this.sriConstantesFunciones.mostrarnumero_secuencialSri);
		this.jInternalFrameDetalleFormSri.jPanelnumero_secuencialSri.setVisible(this.sriConstantesFunciones.mostrarnumero_secuencialSri);
		//this.jInternalFrameDetalleFormSri.jDateChooserfecha_emisionSri.setVisible(this.sriConstantesFunciones.mostrarfecha_emisionSri);
		this.jInternalFrameDetalleFormSri.jPanelfecha_emisionSri.setVisible(this.sriConstantesFunciones.mostrarfecha_emisionSri);
		//this.jInternalFrameDetalleFormSri.jDateChooserfecha_registro_contableSri.setVisible(this.sriConstantesFunciones.mostrarfecha_registro_contableSri);
		this.jInternalFrameDetalleFormSri.jPanelfecha_registro_contableSri.setVisible(this.sriConstantesFunciones.mostrarfecha_registro_contableSri);
		//this.jInternalFrameDetalleFormSri.jDateChooserfecha_caducidadSri.setVisible(this.sriConstantesFunciones.mostrarfecha_caducidadSri);
		this.jInternalFrameDetalleFormSri.jPanelfecha_caducidadSri.setVisible(this.sriConstantesFunciones.mostrarfecha_caducidadSri);
		//this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.setVisible(this.sriConstantesFunciones.mostrartipo_tributarioSri);
		this.jInternalFrameDetalleFormSri.jPaneltipo_tributarioSri.setVisible(this.sriConstantesFunciones.mostrartipo_tributarioSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar12Sri.setVisible(this.sriConstantesFunciones.mostrarbienes_tar12Sri);
		this.jInternalFrameDetalleFormSri.jPanelbienes_tar12Sri.setVisible(this.sriConstantesFunciones.mostrarbienes_tar12Sri);
		//this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar0Sri.setVisible(this.sriConstantesFunciones.mostrarbienes_tar0Sri);
		this.jInternalFrameDetalleFormSri.jPanelbienes_tar0Sri.setVisible(this.sriConstantesFunciones.mostrarbienes_tar0Sri);
		//this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.setVisible(this.sriConstantesFunciones.mostrarid_tipo_ivaSri);
		this.jInternalFrameDetalleFormSri.jPanelid_tipo_ivaSri.setVisible(this.sriConstantesFunciones.mostrarid_tipo_ivaSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar12Sri.setVisible(this.sriConstantesFunciones.mostrarservicios_tar12Sri);
		this.jInternalFrameDetalleFormSri.jPanelservicios_tar12Sri.setVisible(this.sriConstantesFunciones.mostrarservicios_tar12Sri);
		//this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar0Sri.setVisible(this.sriConstantesFunciones.mostrarservicios_tar0Sri);
		this.jInternalFrameDetalleFormSri.jPanelservicios_tar0Sri.setVisible(this.sriConstantesFunciones.mostrarservicios_tar0Sri);
		//this.jInternalFrameDetalleFormSri.jTextFieldmonto_ivaSri.setVisible(this.sriConstantesFunciones.mostrarmonto_ivaSri);
		this.jInternalFrameDetalleFormSri.jPanelmonto_ivaSri.setVisible(this.sriConstantesFunciones.mostrarmonto_ivaSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar12Sri.setVisible(this.sriConstantesFunciones.mostrarbase_impo_tar12Sri);
		this.jInternalFrameDetalleFormSri.jPanelbase_impo_tar12Sri.setVisible(this.sriConstantesFunciones.mostrarbase_impo_tar12Sri);
		//this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar0Sri.setVisible(this.sriConstantesFunciones.mostrarbase_impo_tar0Sri);
		this.jInternalFrameDetalleFormSri.jPanelbase_impo_tar0Sri.setVisible(this.sriConstantesFunciones.mostrarbase_impo_tar0Sri);
		//this.jInternalFrameDetalleFormSri.jTextFieldmonto_iceSri.setVisible(this.sriConstantesFunciones.mostrarmonto_iceSri);
		this.jInternalFrameDetalleFormSri.jPanelmonto_iceSri.setVisible(this.sriConstantesFunciones.mostrarmonto_iceSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_bienSri.setVisible(this.sriConstantesFunciones.mostrarmonto_iva_bienSri);
		this.jInternalFrameDetalleFormSri.jPanelmonto_iva_bienSri.setVisible(this.sriConstantesFunciones.mostrarmonto_iva_bienSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_servicioSri.setVisible(this.sriConstantesFunciones.mostrarmonto_iva_servicioSri);
		this.jInternalFrameDetalleFormSri.jPanelmonto_iva_servicioSri.setVisible(this.sriConstantesFunciones.mostrarmonto_iva_servicioSri);
		//this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.setVisible(this.sriConstantesFunciones.mostrarid_tipo_retencion_iva_bienSri);
		this.jInternalFrameDetalleFormSri.jPanelid_tipo_retencion_iva_bienSri.setVisible(this.sriConstantesFunciones.mostrarid_tipo_retencion_iva_bienSri);
		//this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.setVisible(this.sriConstantesFunciones.mostrarid_tipo_retencion_iva_servicioSri);
		this.jInternalFrameDetalleFormSri.jPanelid_tipo_retencion_iva_servicioSri.setVisible(this.sriConstantesFunciones.mostrarid_tipo_retencion_iva_servicioSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_bienSri.setVisible(this.sriConstantesFunciones.mostrarretencion_iva_bienSri);
		this.jInternalFrameDetalleFormSri.jPanelretencion_iva_bienSri.setVisible(this.sriConstantesFunciones.mostrarretencion_iva_bienSri);
		//this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_servicioSri.setVisible(this.sriConstantesFunciones.mostrarretencion_iva_servicioSri);
		this.jInternalFrameDetalleFormSri.jPanelretencion_iva_servicioSri.setVisible(this.sriConstantesFunciones.mostrarretencion_iva_servicioSri);
		//this.jInternalFrameDetalleFormSri.jCheckBoxcon_devolucionSri.setVisible(this.sriConstantesFunciones.mostrarcon_devolucionSri);
		this.jInternalFrameDetalleFormSri.jPanelcon_devolucionSri.setVisible(this.sriConstantesFunciones.mostrarcon_devolucionSri);
		//this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.setVisible(this.sriConstantesFunciones.mostrarid_tipo_movimientoSri);
		this.jInternalFrameDetalleFormSri.jPanelid_tipo_movimientoSri.setVisible(this.sriConstantesFunciones.mostrarid_tipo_movimientoSri);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioSri() throws Exception {
		if(this.jInternalFrameDetalleFormSri==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormSri!=null) {
	
		this.jInternalFrameDetalleFormSri.jLabelidSri.setEnabled(this.sriConstantesFunciones.activaridSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_asiento_contableSri.setEnabled(this.sriConstantesFunciones.activarid_asiento_contableSri);
			this.jInternalFrameDetalleFormSri.jButtonid_asiento_contableSri.setEnabled(this.sriConstantesFunciones.activarid_asiento_contableSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_transaccion_contaSri.setEnabled(this.sriConstantesFunciones.activarid_transaccion_contaSri);
		this.jInternalFrameDetalleFormSri.jTextFieldrucSri.setEnabled(this.sriConstantesFunciones.activarrucSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_clienteSri.setEnabled(this.sriConstantesFunciones.activarid_clienteSri);
			this.jInternalFrameDetalleFormSri.jButtonid_clienteSri.setEnabled(this.sriConstantesFunciones.activarid_clienteSri);
		this.jInternalFrameDetalleFormSri.jTextArearazon_socialSri.setEnabled(this.sriConstantesFunciones.activarrazon_socialSri);
		this.jInternalFrameDetalleFormSri.jComboBoxtipo_comprobanteSri.setEnabled(this.sriConstantesFunciones.activartipo_comprobanteSri);
		this.jInternalFrameDetalleFormSri.jCheckBoxes_riseSri.setEnabled(this.sriConstantesFunciones.activares_riseSri);
		this.jInternalFrameDetalleFormSri.jTextFieldnumero_serieSri.setEnabled(this.sriConstantesFunciones.activarnumero_serieSri);
		this.jInternalFrameDetalleFormSri.jTextFieldnumero_autorizacionSri.setEnabled(this.sriConstantesFunciones.activarnumero_autorizacionSri);
		this.jInternalFrameDetalleFormSri.jTextFieldnumero_secuencialSri.setEnabled(this.sriConstantesFunciones.activarnumero_secuencialSri);
		this.jInternalFrameDetalleFormSri.jDateChooserfecha_emisionSri.setEnabled(this.sriConstantesFunciones.activarfecha_emisionSri);
		this.jInternalFrameDetalleFormSri.jDateChooserfecha_registro_contableSri.setEnabled(this.sriConstantesFunciones.activarfecha_registro_contableSri);
		this.jInternalFrameDetalleFormSri.jDateChooserfecha_caducidadSri.setEnabled(this.sriConstantesFunciones.activarfecha_caducidadSri);
		this.jInternalFrameDetalleFormSri.jComboBoxtipo_tributarioSri.setEnabled(this.sriConstantesFunciones.activartipo_tributarioSri);
		this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar12Sri.setEnabled(this.sriConstantesFunciones.activarbienes_tar12Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldbienes_tar0Sri.setEnabled(this.sriConstantesFunciones.activarbienes_tar0Sri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_ivaSri.setEnabled(this.sriConstantesFunciones.activarid_tipo_ivaSri);
		this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar12Sri.setEnabled(this.sriConstantesFunciones.activarservicios_tar12Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldservicios_tar0Sri.setEnabled(this.sriConstantesFunciones.activarservicios_tar0Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldmonto_ivaSri.setEnabled(this.sriConstantesFunciones.activarmonto_ivaSri);
		this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar12Sri.setEnabled(this.sriConstantesFunciones.activarbase_impo_tar12Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldbase_impo_tar0Sri.setEnabled(this.sriConstantesFunciones.activarbase_impo_tar0Sri);
		this.jInternalFrameDetalleFormSri.jTextFieldmonto_iceSri.setEnabled(this.sriConstantesFunciones.activarmonto_iceSri);
		this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_bienSri.setEnabled(this.sriConstantesFunciones.activarmonto_iva_bienSri);
		this.jInternalFrameDetalleFormSri.jTextFieldmonto_iva_servicioSri.setEnabled(this.sriConstantesFunciones.activarmonto_iva_servicioSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_bienSri.setEnabled(this.sriConstantesFunciones.activarid_tipo_retencion_iva_bienSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_retencion_iva_servicioSri.setEnabled(this.sriConstantesFunciones.activarid_tipo_retencion_iva_servicioSri);
		this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_bienSri.setEnabled(this.sriConstantesFunciones.activarretencion_iva_bienSri);
		this.jInternalFrameDetalleFormSri.jTextFieldretencion_iva_servicioSri.setEnabled(this.sriConstantesFunciones.activarretencion_iva_servicioSri);
		this.jInternalFrameDetalleFormSri.jCheckBoxcon_devolucionSri.setEnabled(this.sriConstantesFunciones.activarcon_devolucionSri);
		this.jInternalFrameDetalleFormSri.jComboBoxid_tipo_movimientoSri.setEnabled(this.sriConstantesFunciones.activarid_tipo_movimientoSri);
		}
	}
	
		
}