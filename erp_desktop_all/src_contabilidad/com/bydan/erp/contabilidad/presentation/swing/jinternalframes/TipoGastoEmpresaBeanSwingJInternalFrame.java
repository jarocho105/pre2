/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.contabilidad.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.contabilidad.util.TipoGastoEmpresaConstantesFunciones;
import com.bydan.erp.contabilidad.util.TipoGastoEmpresaParameterReturnGeneral;
//import com.bydan.erp.contabilidad.util.TipoGastoEmpresaParameterGeneral;
//import com.bydan.erp.contabilidad.presentation.report.source.TipoGastoEmpresaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.contabilidad.resources.reportes.AuxiliarReportes;


import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.contabilidad.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.contabilidad.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class TipoGastoEmpresaBeanSwingJInternalFrame extends TipoGastoEmpresaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(TipoGastoEmpresaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<TipoGastoEmpresa> tipogastoempresaValidator = new ClassValidator<TipoGastoEmpresa>(TipoGastoEmpresa.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public TipoGastoEmpresa tipogastoempresa;	
	public TipoGastoEmpresa tipogastoempresaAux;
	public TipoGastoEmpresa tipogastoempresaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public TipoGastoEmpresa tipogastoempresaTotales;
	public Long idTipoGastoEmpresaActual;
	public Long iIdNuevoTipoGastoEmpresa=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboCuentaContableGasto="";

	public List<CuentaContable> cuentacontablegastosForeignKey;

	public List<CuentaContable> getcuentacontablegastosForeignKey() {
		return cuentacontablegastosForeignKey;
	}

	public void setcuentacontablegastosForeignKey(List<CuentaContable> cuentacontablegastosForeignKey) {
		this.cuentacontablegastosForeignKey = cuentacontablegastosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablegastoForeignKey;

	public CuentaContable getcuentacontablegastoForeignKey() {
		return cuentacontablegastoForeignKey;
	}

	public void setcuentacontablegastoForeignKey(CuentaContable cuentacontablegastoForeignKey) {
		this.cuentacontablegastoForeignKey = cuentacontablegastoForeignKey;
	}

	public String sFinalQueryComboCuentaContableFiscalBien="";

	public List<CuentaContable> cuentacontablefiscalbiensForeignKey;

	public List<CuentaContable> getcuentacontablefiscalbiensForeignKey() {
		return cuentacontablefiscalbiensForeignKey;
	}

	public void setcuentacontablefiscalbiensForeignKey(List<CuentaContable> cuentacontablefiscalbiensForeignKey) {
		this.cuentacontablefiscalbiensForeignKey = cuentacontablefiscalbiensForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablefiscalbienForeignKey;

	public CuentaContable getcuentacontablefiscalbienForeignKey() {
		return cuentacontablefiscalbienForeignKey;
	}

	public void setcuentacontablefiscalbienForeignKey(CuentaContable cuentacontablefiscalbienForeignKey) {
		this.cuentacontablefiscalbienForeignKey = cuentacontablefiscalbienForeignKey;
	}

	public String sFinalQueryComboCuentaContableFiscalServicio="";

	public List<CuentaContable> cuentacontablefiscalserviciosForeignKey;

	public List<CuentaContable> getcuentacontablefiscalserviciosForeignKey() {
		return cuentacontablefiscalserviciosForeignKey;
	}

	public void setcuentacontablefiscalserviciosForeignKey(List<CuentaContable> cuentacontablefiscalserviciosForeignKey) {
		this.cuentacontablefiscalserviciosForeignKey = cuentacontablefiscalserviciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablefiscalservicioForeignKey;

	public CuentaContable getcuentacontablefiscalservicioForeignKey() {
		return cuentacontablefiscalservicioForeignKey;
	}

	public void setcuentacontablefiscalservicioForeignKey(CuentaContable cuentacontablefiscalservicioForeignKey) {
		this.cuentacontablefiscalservicioForeignKey = cuentacontablefiscalservicioForeignKey;
	}

	public String sFinalQueryComboCuentaContableRetencionBien="";

	public List<CuentaContable> cuentacontableretencionbiensForeignKey;

	public List<CuentaContable> getcuentacontableretencionbiensForeignKey() {
		return cuentacontableretencionbiensForeignKey;
	}

	public void setcuentacontableretencionbiensForeignKey(List<CuentaContable> cuentacontableretencionbiensForeignKey) {
		this.cuentacontableretencionbiensForeignKey = cuentacontableretencionbiensForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableretencionbienForeignKey;

	public CuentaContable getcuentacontableretencionbienForeignKey() {
		return cuentacontableretencionbienForeignKey;
	}

	public void setcuentacontableretencionbienForeignKey(CuentaContable cuentacontableretencionbienForeignKey) {
		this.cuentacontableretencionbienForeignKey = cuentacontableretencionbienForeignKey;
	}

	public String sFinalQueryComboCuentaContableRetencionServicio="";

	public List<CuentaContable> cuentacontableretencionserviciosForeignKey;

	public List<CuentaContable> getcuentacontableretencionserviciosForeignKey() {
		return cuentacontableretencionserviciosForeignKey;
	}

	public void setcuentacontableretencionserviciosForeignKey(List<CuentaContable> cuentacontableretencionserviciosForeignKey) {
		this.cuentacontableretencionserviciosForeignKey = cuentacontableretencionserviciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableretencionservicioForeignKey;

	public CuentaContable getcuentacontableretencionservicioForeignKey() {
		return cuentacontableretencionservicioForeignKey;
	}

	public void setcuentacontableretencionservicioForeignKey(CuentaContable cuentacontableretencionservicioForeignKey) {
		this.cuentacontableretencionservicioForeignKey = cuentacontableretencionservicioForeignKey;
	}

	public String sFinalQueryComboCuentaContableIvaBien="";

	public List<CuentaContable> cuentacontableivabiensForeignKey;

	public List<CuentaContable> getcuentacontableivabiensForeignKey() {
		return cuentacontableivabiensForeignKey;
	}

	public void setcuentacontableivabiensForeignKey(List<CuentaContable> cuentacontableivabiensForeignKey) {
		this.cuentacontableivabiensForeignKey = cuentacontableivabiensForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableivabienForeignKey;

	public CuentaContable getcuentacontableivabienForeignKey() {
		return cuentacontableivabienForeignKey;
	}

	public void setcuentacontableivabienForeignKey(CuentaContable cuentacontableivabienForeignKey) {
		this.cuentacontableivabienForeignKey = cuentacontableivabienForeignKey;
	}

	public String sFinalQueryComboCuentaContableIvaServicio="";

	public List<CuentaContable> cuentacontableivaserviciosForeignKey;

	public List<CuentaContable> getcuentacontableivaserviciosForeignKey() {
		return cuentacontableivaserviciosForeignKey;
	}

	public void setcuentacontableivaserviciosForeignKey(List<CuentaContable> cuentacontableivaserviciosForeignKey) {
		this.cuentacontableivaserviciosForeignKey = cuentacontableivaserviciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableivaservicioForeignKey;

	public CuentaContable getcuentacontableivaservicioForeignKey() {
		return cuentacontableivaservicioForeignKey;
	}

	public void setcuentacontableivaservicioForeignKey(CuentaContable cuentacontableivaservicioForeignKey) {
		this.cuentacontableivaservicioForeignKey = cuentacontableivaservicioForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCuentaContableGastoActual=0L;

	public Long getidCuentaContableGastoActual() {
		return idCuentaContableGastoActual;
	}

	public void setidCuentaContableGastoActual(Long idCuentaContableGastoActual) {
		this.idCuentaContableGastoActual= idCuentaContableGastoActual;
	}
	public Long idCuentaContableFiscalBienActual=0L;

	public Long getidCuentaContableFiscalBienActual() {
		return idCuentaContableFiscalBienActual;
	}

	public void setidCuentaContableFiscalBienActual(Long idCuentaContableFiscalBienActual) {
		this.idCuentaContableFiscalBienActual= idCuentaContableFiscalBienActual;
	}
	public Long idCuentaContableFiscalServicioActual=0L;

	public Long getidCuentaContableFiscalServicioActual() {
		return idCuentaContableFiscalServicioActual;
	}

	public void setidCuentaContableFiscalServicioActual(Long idCuentaContableFiscalServicioActual) {
		this.idCuentaContableFiscalServicioActual= idCuentaContableFiscalServicioActual;
	}
	public Long idCuentaContableRetencionBienActual=0L;

	public Long getidCuentaContableRetencionBienActual() {
		return idCuentaContableRetencionBienActual;
	}

	public void setidCuentaContableRetencionBienActual(Long idCuentaContableRetencionBienActual) {
		this.idCuentaContableRetencionBienActual= idCuentaContableRetencionBienActual;
	}
	public Long idCuentaContableRetencionServicioActual=0L;

	public Long getidCuentaContableRetencionServicioActual() {
		return idCuentaContableRetencionServicioActual;
	}

	public void setidCuentaContableRetencionServicioActual(Long idCuentaContableRetencionServicioActual) {
		this.idCuentaContableRetencionServicioActual= idCuentaContableRetencionServicioActual;
	}
	public Long idCuentaContableIvaBienActual=0L;

	public Long getidCuentaContableIvaBienActual() {
		return idCuentaContableIvaBienActual;
	}

	public void setidCuentaContableIvaBienActual(Long idCuentaContableIvaBienActual) {
		this.idCuentaContableIvaBienActual= idCuentaContableIvaBienActual;
	}
	public Long idCuentaContableIvaServicioActual=0L;

	public Long getidCuentaContableIvaServicioActual() {
		return idCuentaContableIvaServicioActual;
	}

	public void setidCuentaContableIvaServicioActual(Long idCuentaContableIvaServicioActual) {
		this.idCuentaContableIvaServicioActual= idCuentaContableIvaServicioActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoTipoGastoEmpresa;
	public Boolean isPermisoNuevoTipoGastoEmpresa;
	public Boolean isPermisoActualizarTipoGastoEmpresa;
	public Boolean isPermisoActualizarOriginalTipoGastoEmpresa;
	public Boolean isPermisoEliminarTipoGastoEmpresa;
	public Boolean isPermisoGuardarCambiosTipoGastoEmpresa;
	public Boolean isPermisoConsultaTipoGastoEmpresa;
	public Boolean isPermisoBusquedaTipoGastoEmpresa;
	public Boolean isPermisoReporteTipoGastoEmpresa;
	public Boolean isPermisoPaginacionMedioTipoGastoEmpresa;
	public Boolean isPermisoPaginacionAltoTipoGastoEmpresa;
	public Boolean isPermisoPaginacionTodoTipoGastoEmpresa;
	public Boolean isPermisoCopiarTipoGastoEmpresa;
	public Boolean isPermisoVerFormTipoGastoEmpresa;
	public Boolean isPermisoDuplicarTipoGastoEmpresa;
	public Boolean isPermisoOrdenTipoGastoEmpresa;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public TipoGastoEmpresaParameterReturnGeneral tipogastoempresaReturnGeneral;
	public TipoGastoEmpresaParameterReturnGeneral tipogastoempresaParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoTipoGastoEmpresa=false;
	public Boolean esParaAccionDesdeFormularioTipoGastoEmpresa=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected TipoGastoEmpresaSessionBeanAdditional tipogastoempresaSessionBeanAdditional=null;
	
	public TipoGastoEmpresaSessionBeanAdditional getTipoGastoEmpresaSessionBeanAdditional() {
		return this.tipogastoempresaSessionBeanAdditional;
	}
	
	public void setTipoGastoEmpresaSessionBeanAdditional(TipoGastoEmpresaSessionBeanAdditional tipogastoempresaSessionBeanAdditional) {
		try {
			this.tipogastoempresaSessionBeanAdditional=tipogastoempresaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected TipoGastoEmpresaBeanSwingJInternalFrameAdditional tipogastoempresaBeanSwingJInternalFrameAdditional=null;
	//public class TipoGastoEmpresaBeanSwingJInternalFrame
	
	public TipoGastoEmpresaBeanSwingJInternalFrameAdditional getTipoGastoEmpresaBeanSwingJInternalFrameAdditional() {
		return this.tipogastoempresaBeanSwingJInternalFrameAdditional;
	}
	
	public void setTipoGastoEmpresaBeanSwingJInternalFrameAdditional(TipoGastoEmpresaBeanSwingJInternalFrameAdditional tipogastoempresaBeanSwingJInternalFrameAdditional) {
		try {
			this.tipogastoempresaBeanSwingJInternalFrameAdditional=tipogastoempresaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public TipoGastoEmpresaLogic tipogastoempresaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public TipoGastoEmpresa tipogastoempresaBean;
	public TipoGastoEmpresaConstantesFunciones tipogastoempresaConstantesFunciones;
	//public TipoGastoEmpresaParameterReturnGeneral tipogastoempresaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public FormatoLogic formatoLogic;
	public CuentaContableLogic cuentacontablegastoLogic;
	public CuentaContableLogic cuentacontablefiscalbienLogic;
	public CuentaContableLogic cuentacontablefiscalservicioLogic;
	public CuentaContableLogic cuentacontableretencionbienLogic;
	public CuentaContableLogic cuentacontableretencionservicioLogic;
	public CuentaContableLogic cuentacontableivabienLogic;
	public CuentaContableLogic cuentacontableivaservicioLogic;
	
	//PARAMETROS
	
	
	//public List<TipoGastoEmpresa> tipogastoempresas;	
	//public List<TipoGastoEmpresa> tipogastoempresasEliminados;
	//public List<TipoGastoEmpresa> tipogastoempresasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoTipoGastoEmpresa=false;
	public Boolean isVisibilidadCeldaDuplicarTipoGastoEmpresa=true;
	public Boolean isVisibilidadCeldaCopiarTipoGastoEmpresa=true;
	public Boolean isVisibilidadCeldaVerFormTipoGastoEmpresa=true;
	public Boolean isVisibilidadCeldaOrdenTipoGastoEmpresa=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;
	public Boolean isVisibilidadCeldaModificarTipoGastoEmpresa=false;
	public Boolean isVisibilidadCeldaActualizarTipoGastoEmpresa=false;
	public Boolean isVisibilidadCeldaEliminarTipoGastoEmpresa=false;
	public Boolean isVisibilidadCeldaCancelarTipoGastoEmpresa=false;
	public Boolean isVisibilidadCeldaGuardarTipoGastoEmpresa=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=false;	
	
	
	public Boolean isVisibilidadBusquedaPorNombre=false;
	public Boolean isVisibilidadFK_IdCuentaContableFiscalBien=false;
	public Boolean isVisibilidadFK_IdCuentaContableFiscalServicio=false;
	public Boolean isVisibilidadFK_IdCuentaContableGasto=false;
	public Boolean isVisibilidadFK_IdCuentaContableIvaBien=false;
	public Boolean isVisibilidadFK_IdCuentaContableIvaServicio=false;
	public Boolean isVisibilidadFK_IdCuentaContableRetencionBien=false;
	public Boolean isVisibilidadFK_IdCuentaContableRetencionServicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	
	public Long getiIdNuevoTipoGastoEmpresa() {
		return this.iIdNuevoTipoGastoEmpresa;
	}

	public void setiIdNuevoTipoGastoEmpresa(Long iIdNuevoTipoGastoEmpresa) {
		this.iIdNuevoTipoGastoEmpresa = iIdNuevoTipoGastoEmpresa;
	}
	
	public Long getidTipoGastoEmpresaActual() {
		return this.idTipoGastoEmpresaActual;
	}

	public void setidTipoGastoEmpresaActual(Long idTipoGastoEmpresaActual) {
		this.idTipoGastoEmpresaActual = idTipoGastoEmpresaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public TipoGastoEmpresa gettipogastoempresa() {
		return this.tipogastoempresa;
	}

	public void settipogastoempresa(TipoGastoEmpresa tipogastoempresa) {
		this.tipogastoempresa = tipogastoempresa;
	}
	
	public TipoGastoEmpresa gettipogastoempresaAux() {
		return this.tipogastoempresaAux;
	}

	public void settipogastoempresaAux(TipoGastoEmpresa tipogastoempresaAux) {
		this.tipogastoempresaAux = tipogastoempresaAux;
	}				
	
	public TipoGastoEmpresa gettipogastoempresaAnterior() {
		return this.tipogastoempresaAnterior;
	}

	public void settipogastoempresaAnterior(TipoGastoEmpresa tipogastoempresaAnterior) {
		this.tipogastoempresaAnterior = tipogastoempresaAnterior;
	}	
	
	public TipoGastoEmpresa gettipogastoempresaTotales() {
		return this.tipogastoempresaTotales;
	}

	public void settipogastoempresaTotales(TipoGastoEmpresa tipogastoempresaTotales) {
		this.tipogastoempresaTotales = tipogastoempresaTotales;
	}	
	
	public TipoGastoEmpresa gettipogastoempresaBean() {
		return this.tipogastoempresaBean;
	}

	public void settipogastoempresaBean(TipoGastoEmpresa tipogastoempresaBean) {
		this.tipogastoempresaBean = tipogastoempresaBean;
	}	
	
	public TipoGastoEmpresaParameterReturnGeneral gettipogastoempresaReturnGeneral() {
		return this.tipogastoempresaReturnGeneral;
	}

	public void settipogastoempresaReturnGeneral(TipoGastoEmpresaParameterReturnGeneral tipogastoempresaReturnGeneral) {
		this.tipogastoempresaReturnGeneral = tipogastoempresaReturnGeneral;
	}	
	
	
	public String nombreBusquedaPorNombre="";

	public String getnombreBusquedaPorNombre() {
		return this.nombreBusquedaPorNombre;
	}

	public void setnombreBusquedaPorNombre(String nombreBusquedaPorNombre) {
		this.nombreBusquedaPorNombre = nombreBusquedaPorNombre;
	}

	public Long id_cuenta_contable_fiscal_bienFK_IdCuentaContableFiscalBien=null;

	public Long getid_cuenta_contable_fiscal_bienFK_IdCuentaContableFiscalBien() {
		return this.id_cuenta_contable_fiscal_bienFK_IdCuentaContableFiscalBien;
	}

	public void setid_cuenta_contable_fiscal_bienFK_IdCuentaContableFiscalBien(Long id_cuenta_contable_fiscal_bienFK_IdCuentaContableFiscalBien) {
		this.id_cuenta_contable_fiscal_bienFK_IdCuentaContableFiscalBien = id_cuenta_contable_fiscal_bienFK_IdCuentaContableFiscalBien;
	}

	public Long id_cuenta_contable_fiscal_servicioFK_IdCuentaContableFiscalServicio=null;

	public Long getid_cuenta_contable_fiscal_servicioFK_IdCuentaContableFiscalServicio() {
		return this.id_cuenta_contable_fiscal_servicioFK_IdCuentaContableFiscalServicio;
	}

	public void setid_cuenta_contable_fiscal_servicioFK_IdCuentaContableFiscalServicio(Long id_cuenta_contable_fiscal_servicioFK_IdCuentaContableFiscalServicio) {
		this.id_cuenta_contable_fiscal_servicioFK_IdCuentaContableFiscalServicio = id_cuenta_contable_fiscal_servicioFK_IdCuentaContableFiscalServicio;
	}

	public Long id_cuenta_contable_gastoFK_IdCuentaContableGasto=null;

	public Long getid_cuenta_contable_gastoFK_IdCuentaContableGasto() {
		return this.id_cuenta_contable_gastoFK_IdCuentaContableGasto;
	}

	public void setid_cuenta_contable_gastoFK_IdCuentaContableGasto(Long id_cuenta_contable_gastoFK_IdCuentaContableGasto) {
		this.id_cuenta_contable_gastoFK_IdCuentaContableGasto = id_cuenta_contable_gastoFK_IdCuentaContableGasto;
	}

	public Long id_cuenta_contable_iva_bienFK_IdCuentaContableIvaBien=null;

	public Long getid_cuenta_contable_iva_bienFK_IdCuentaContableIvaBien() {
		return this.id_cuenta_contable_iva_bienFK_IdCuentaContableIvaBien;
	}

	public void setid_cuenta_contable_iva_bienFK_IdCuentaContableIvaBien(Long id_cuenta_contable_iva_bienFK_IdCuentaContableIvaBien) {
		this.id_cuenta_contable_iva_bienFK_IdCuentaContableIvaBien = id_cuenta_contable_iva_bienFK_IdCuentaContableIvaBien;
	}

	public Long id_cuenta_contable_iva_servicioFK_IdCuentaContableIvaServicio=null;

	public Long getid_cuenta_contable_iva_servicioFK_IdCuentaContableIvaServicio() {
		return this.id_cuenta_contable_iva_servicioFK_IdCuentaContableIvaServicio;
	}

	public void setid_cuenta_contable_iva_servicioFK_IdCuentaContableIvaServicio(Long id_cuenta_contable_iva_servicioFK_IdCuentaContableIvaServicio) {
		this.id_cuenta_contable_iva_servicioFK_IdCuentaContableIvaServicio = id_cuenta_contable_iva_servicioFK_IdCuentaContableIvaServicio;
	}

	public Long id_cuenta_contable_retencion_bienFK_IdCuentaContableRetencionBien=null;

	public Long getid_cuenta_contable_retencion_bienFK_IdCuentaContableRetencionBien() {
		return this.id_cuenta_contable_retencion_bienFK_IdCuentaContableRetencionBien;
	}

	public void setid_cuenta_contable_retencion_bienFK_IdCuentaContableRetencionBien(Long id_cuenta_contable_retencion_bienFK_IdCuentaContableRetencionBien) {
		this.id_cuenta_contable_retencion_bienFK_IdCuentaContableRetencionBien = id_cuenta_contable_retencion_bienFK_IdCuentaContableRetencionBien;
	}

	public Long id_cuenta_contable_retencion_servicioFK_IdCuentaContableRetencionServicio=null;

	public Long getid_cuenta_contable_retencion_servicioFK_IdCuentaContableRetencionServicio() {
		return this.id_cuenta_contable_retencion_servicioFK_IdCuentaContableRetencionServicio;
	}

	public void setid_cuenta_contable_retencion_servicioFK_IdCuentaContableRetencionServicio(Long id_cuenta_contable_retencion_servicioFK_IdCuentaContableRetencionServicio) {
		this.id_cuenta_contable_retencion_servicioFK_IdCuentaContableRetencionServicio = id_cuenta_contable_retencion_servicioFK_IdCuentaContableRetencionServicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_formatoFK_IdFormato=-1L;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public TipoGastoEmpresaLogic getTipoGastoEmpresaLogic()	{		
		return tipogastoempresaLogic;
	}

	public void setTipoGastoEmpresaLogic(TipoGastoEmpresaLogic tipogastoempresaLogic) {
		this.tipogastoempresaLogic = tipogastoempresaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoTipoGastoEmpresa() {
		return isEsNuevoTipoGastoEmpresa;
	}

	public void setIsEsNuevoTipoGastoEmpresa(Boolean isEsNuevoTipoGastoEmpresa) {
		this.isEsNuevoTipoGastoEmpresa = isEsNuevoTipoGastoEmpresa;
	}

	public Boolean getEsParaAccionDesdeFormularioTipoGastoEmpresa() {
		return esParaAccionDesdeFormularioTipoGastoEmpresa;
	}
	
	public void setEsParaAccionDesdeFormularioTipoGastoEmpresa(Boolean esParaAccionDesdeFormularioTipoGastoEmpresa) {
		this.esParaAccionDesdeFormularioTipoGastoEmpresa = esParaAccionDesdeFormularioTipoGastoEmpresa;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableGastosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablegastosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableGasto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablegastoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablegastosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableGasto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidCuentaContableGastoActual());
					this.cuentacontablegastosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableFiscalBiensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablefiscalbiensForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFiscalBien()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablefiscalbienLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablefiscalbiensForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableFiscalBien(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidCuentaContableFiscalBienActual());
					this.cuentacontablefiscalbiensForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableFiscalServiciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablefiscalserviciosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFiscalServicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablefiscalservicioLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablefiscalserviciosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableFiscalServicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidCuentaContableFiscalServicioActual());
					this.cuentacontablefiscalserviciosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableRetencionBiensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableretencionbiensForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableRetencionBien()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableretencionbienLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableretencionbiensForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableRetencionBien(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidCuentaContableRetencionBienActual());
					this.cuentacontableretencionbiensForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableRetencionServiciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableretencionserviciosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableRetencionServicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableretencionservicioLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableretencionserviciosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableRetencionServicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidCuentaContableRetencionServicioActual());
					this.cuentacontableretencionserviciosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIvaBiensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableivabiensForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIvaBien()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableivabienLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableivabiensForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIvaBien(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidCuentaContableIvaBienActual());
					this.cuentacontableivabiensForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIvaServiciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableivaserviciosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIvaServicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableivaservicioLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableivaserviciosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIvaServicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(tipogastoempresaSessionBean.getlidCuentaContableIvaServicioActual());
					this.cuentacontableivaserviciosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaTipoGastoEmpresa.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaTipoGastoEmpresaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaTipoGastoEmpresaGenerico!=null && jComboBoxid_empresaTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_empresaTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalTipoGastoEmpresa.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalTipoGastoEmpresaGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalTipoGastoEmpresaGenerico!=null && jComboBoxid_sucursalTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_sucursalTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoTipoGastoEmpresa.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoTipoGastoEmpresaGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoTipoGastoEmpresaGenerico!=null && jComboBoxid_formatoTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_formatoTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableGastoForeignKey(Long idCuentaContableGastoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablegastoTemp=null;

			for(CuentaContable cuentacontablegastoAux:cuentacontablegastosForeignKey) {
				if(cuentacontablegastoAux.getId()!=null && cuentacontablegastoAux.getId().equals(idCuentaContableGastoSeleccionado)) {
					cuentacontablegastoTemp=cuentacontablegastoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablegastoTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setCuentaContableGasto(cuentacontablegastoTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setSelectedItem(cuentacontablegastoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setSelectedItem(cuentacontablegastoTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableGastoForeignKeyDescripcion(Long idCuentaContableGastoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablegastoTemp=null;

			for(CuentaContable cuentacontablegastoAux:cuentacontablegastosForeignKey) {
				if(cuentacontablegastoAux.getId()!=null && cuentacontablegastoAux.getId().equals(idCuentaContableGastoSeleccionado)) {
					cuentacontablegastoTemp=cuentacontablegastoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablegastoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableGastoForeignKeyGenerico(Long idCuentaContableGastoSeleccionado,JComboBox jComboBoxid_cuenta_contable_gastoTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablegastoTemp=null;

			for(CuentaContable cuentacontablegastoAux:cuentacontablegastosForeignKey) {
				if(cuentacontablegastoAux.getId()!=null && cuentacontablegastoAux.getId().equals(idCuentaContableGastoSeleccionado)) {
					cuentacontablegastoTemp=cuentacontablegastoAux;
					break;
				}
			}

			if(cuentacontablegastoTemp!=null) {
				jComboBoxid_cuenta_contable_gastoTipoGastoEmpresaGenerico.setSelectedItem(cuentacontablegastoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_gastoTipoGastoEmpresaGenerico!=null && jComboBoxid_cuenta_contable_gastoTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_gastoTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableFiscalBienForeignKey(Long idCuentaContableFiscalBienSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablefiscalbienTemp=null;

			for(CuentaContable cuentacontablefiscalbienAux:cuentacontablefiscalbiensForeignKey) {
				if(cuentacontablefiscalbienAux.getId()!=null && cuentacontablefiscalbienAux.getId().equals(idCuentaContableFiscalBienSeleccionado)) {
					cuentacontablefiscalbienTemp=cuentacontablefiscalbienAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablefiscalbienTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setCuentaContableFiscalBien(cuentacontablefiscalbienTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setSelectedItem(cuentacontablefiscalbienTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setSelectedItem(cuentacontablefiscalbienTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableFiscalBienForeignKeyDescripcion(Long idCuentaContableFiscalBienSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablefiscalbienTemp=null;

			for(CuentaContable cuentacontablefiscalbienAux:cuentacontablefiscalbiensForeignKey) {
				if(cuentacontablefiscalbienAux.getId()!=null && cuentacontablefiscalbienAux.getId().equals(idCuentaContableFiscalBienSeleccionado)) {
					cuentacontablefiscalbienTemp=cuentacontablefiscalbienAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablefiscalbienTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableFiscalBienForeignKeyGenerico(Long idCuentaContableFiscalBienSeleccionado,JComboBox jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablefiscalbienTemp=null;

			for(CuentaContable cuentacontablefiscalbienAux:cuentacontablefiscalbiensForeignKey) {
				if(cuentacontablefiscalbienAux.getId()!=null && cuentacontablefiscalbienAux.getId().equals(idCuentaContableFiscalBienSeleccionado)) {
					cuentacontablefiscalbienTemp=cuentacontablefiscalbienAux;
					break;
				}
			}

			if(cuentacontablefiscalbienTemp!=null) {
				jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresaGenerico.setSelectedItem(cuentacontablefiscalbienTemp);
			} else {
				if(jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresaGenerico!=null && jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableFiscalServicioForeignKey(Long idCuentaContableFiscalServicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablefiscalservicioTemp=null;

			for(CuentaContable cuentacontablefiscalservicioAux:cuentacontablefiscalserviciosForeignKey) {
				if(cuentacontablefiscalservicioAux.getId()!=null && cuentacontablefiscalservicioAux.getId().equals(idCuentaContableFiscalServicioSeleccionado)) {
					cuentacontablefiscalservicioTemp=cuentacontablefiscalservicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablefiscalservicioTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setCuentaContableFiscalServicio(cuentacontablefiscalservicioTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setSelectedItem(cuentacontablefiscalservicioTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setSelectedItem(cuentacontablefiscalservicioTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableFiscalServicioForeignKeyDescripcion(Long idCuentaContableFiscalServicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablefiscalservicioTemp=null;

			for(CuentaContable cuentacontablefiscalservicioAux:cuentacontablefiscalserviciosForeignKey) {
				if(cuentacontablefiscalservicioAux.getId()!=null && cuentacontablefiscalservicioAux.getId().equals(idCuentaContableFiscalServicioSeleccionado)) {
					cuentacontablefiscalservicioTemp=cuentacontablefiscalservicioAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablefiscalservicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableFiscalServicioForeignKeyGenerico(Long idCuentaContableFiscalServicioSeleccionado,JComboBox jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablefiscalservicioTemp=null;

			for(CuentaContable cuentacontablefiscalservicioAux:cuentacontablefiscalserviciosForeignKey) {
				if(cuentacontablefiscalservicioAux.getId()!=null && cuentacontablefiscalservicioAux.getId().equals(idCuentaContableFiscalServicioSeleccionado)) {
					cuentacontablefiscalservicioTemp=cuentacontablefiscalservicioAux;
					break;
				}
			}

			if(cuentacontablefiscalservicioTemp!=null) {
				jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresaGenerico.setSelectedItem(cuentacontablefiscalservicioTemp);
			} else {
				if(jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresaGenerico!=null && jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableRetencionBienForeignKey(Long idCuentaContableRetencionBienSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableretencionbienTemp=null;

			for(CuentaContable cuentacontableretencionbienAux:cuentacontableretencionbiensForeignKey) {
				if(cuentacontableretencionbienAux.getId()!=null && cuentacontableretencionbienAux.getId().equals(idCuentaContableRetencionBienSeleccionado)) {
					cuentacontableretencionbienTemp=cuentacontableretencionbienAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableretencionbienTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setCuentaContableRetencionBien(cuentacontableretencionbienTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setSelectedItem(cuentacontableretencionbienTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setSelectedItem(cuentacontableretencionbienTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableRetencionBienForeignKeyDescripcion(Long idCuentaContableRetencionBienSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableretencionbienTemp=null;

			for(CuentaContable cuentacontableretencionbienAux:cuentacontableretencionbiensForeignKey) {
				if(cuentacontableretencionbienAux.getId()!=null && cuentacontableretencionbienAux.getId().equals(idCuentaContableRetencionBienSeleccionado)) {
					cuentacontableretencionbienTemp=cuentacontableretencionbienAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableretencionbienTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableRetencionBienForeignKeyGenerico(Long idCuentaContableRetencionBienSeleccionado,JComboBox jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableretencionbienTemp=null;

			for(CuentaContable cuentacontableretencionbienAux:cuentacontableretencionbiensForeignKey) {
				if(cuentacontableretencionbienAux.getId()!=null && cuentacontableretencionbienAux.getId().equals(idCuentaContableRetencionBienSeleccionado)) {
					cuentacontableretencionbienTemp=cuentacontableretencionbienAux;
					break;
				}
			}

			if(cuentacontableretencionbienTemp!=null) {
				jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresaGenerico.setSelectedItem(cuentacontableretencionbienTemp);
			} else {
				if(jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresaGenerico!=null && jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableRetencionServicioForeignKey(Long idCuentaContableRetencionServicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableretencionservicioTemp=null;

			for(CuentaContable cuentacontableretencionservicioAux:cuentacontableretencionserviciosForeignKey) {
				if(cuentacontableretencionservicioAux.getId()!=null && cuentacontableretencionservicioAux.getId().equals(idCuentaContableRetencionServicioSeleccionado)) {
					cuentacontableretencionservicioTemp=cuentacontableretencionservicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableretencionservicioTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setCuentaContableRetencionServicio(cuentacontableretencionservicioTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setSelectedItem(cuentacontableretencionservicioTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setSelectedItem(cuentacontableretencionservicioTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableRetencionServicioForeignKeyDescripcion(Long idCuentaContableRetencionServicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableretencionservicioTemp=null;

			for(CuentaContable cuentacontableretencionservicioAux:cuentacontableretencionserviciosForeignKey) {
				if(cuentacontableretencionservicioAux.getId()!=null && cuentacontableretencionservicioAux.getId().equals(idCuentaContableRetencionServicioSeleccionado)) {
					cuentacontableretencionservicioTemp=cuentacontableretencionservicioAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableretencionservicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableRetencionServicioForeignKeyGenerico(Long idCuentaContableRetencionServicioSeleccionado,JComboBox jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableretencionservicioTemp=null;

			for(CuentaContable cuentacontableretencionservicioAux:cuentacontableretencionserviciosForeignKey) {
				if(cuentacontableretencionservicioAux.getId()!=null && cuentacontableretencionservicioAux.getId().equals(idCuentaContableRetencionServicioSeleccionado)) {
					cuentacontableretencionservicioTemp=cuentacontableretencionservicioAux;
					break;
				}
			}

			if(cuentacontableretencionservicioTemp!=null) {
				jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresaGenerico.setSelectedItem(cuentacontableretencionservicioTemp);
			} else {
				if(jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresaGenerico!=null && jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIvaBienForeignKey(Long idCuentaContableIvaBienSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableivabienTemp=null;

			for(CuentaContable cuentacontableivabienAux:cuentacontableivabiensForeignKey) {
				if(cuentacontableivabienAux.getId()!=null && cuentacontableivabienAux.getId().equals(idCuentaContableIvaBienSeleccionado)) {
					cuentacontableivabienTemp=cuentacontableivabienAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableivabienTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setCuentaContableIvaBien(cuentacontableivabienTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setSelectedItem(cuentacontableivabienTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setSelectedItem(cuentacontableivabienTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIvaBienForeignKeyDescripcion(Long idCuentaContableIvaBienSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableivabienTemp=null;

			for(CuentaContable cuentacontableivabienAux:cuentacontableivabiensForeignKey) {
				if(cuentacontableivabienAux.getId()!=null && cuentacontableivabienAux.getId().equals(idCuentaContableIvaBienSeleccionado)) {
					cuentacontableivabienTemp=cuentacontableivabienAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableivabienTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIvaBienForeignKeyGenerico(Long idCuentaContableIvaBienSeleccionado,JComboBox jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableivabienTemp=null;

			for(CuentaContable cuentacontableivabienAux:cuentacontableivabiensForeignKey) {
				if(cuentacontableivabienAux.getId()!=null && cuentacontableivabienAux.getId().equals(idCuentaContableIvaBienSeleccionado)) {
					cuentacontableivabienTemp=cuentacontableivabienAux;
					break;
				}
			}

			if(cuentacontableivabienTemp!=null) {
				jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresaGenerico.setSelectedItem(cuentacontableivabienTemp);
			} else {
				if(jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresaGenerico!=null && jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIvaServicioForeignKey(Long idCuentaContableIvaServicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableivaservicioTemp=null;

			for(CuentaContable cuentacontableivaservicioAux:cuentacontableivaserviciosForeignKey) {
				if(cuentacontableivaservicioAux.getId()!=null && cuentacontableivaservicioAux.getId().equals(idCuentaContableIvaServicioSeleccionado)) {
					cuentacontableivaservicioTemp=cuentacontableivaservicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableivaservicioTemp!=null) {

					if(this.tipogastoempresa!=null) {
						this.tipogastoempresa.setCuentaContableIvaServicio(cuentacontableivaservicioTemp);
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setSelectedItem(cuentacontableivaservicioTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setSelectedItem(cuentacontableivaservicioTemp);
					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.getItemCount()>0) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIvaServicioForeignKeyDescripcion(Long idCuentaContableIvaServicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableivaservicioTemp=null;

			for(CuentaContable cuentacontableivaservicioAux:cuentacontableivaserviciosForeignKey) {
				if(cuentacontableivaservicioAux.getId()!=null && cuentacontableivaservicioAux.getId().equals(idCuentaContableIvaServicioSeleccionado)) {
					cuentacontableivaservicioTemp=cuentacontableivaservicioAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableivaservicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIvaServicioForeignKeyGenerico(Long idCuentaContableIvaServicioSeleccionado,JComboBox jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableivaservicioTemp=null;

			for(CuentaContable cuentacontableivaservicioAux:cuentacontableivaserviciosForeignKey) {
				if(cuentacontableivaservicioAux.getId()!=null && cuentacontableivaservicioAux.getId().equals(idCuentaContableIvaServicioSeleccionado)) {
					cuentacontableivaservicioTemp=cuentacontableivaservicioAux;
					break;
				}
			}

			if(cuentacontableivaservicioTemp!=null) {
				jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresaGenerico.setSelectedItem(cuentacontableivaservicioTemp);
			} else {
				if(jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresaGenerico!=null && jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_empresaTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaTipoGastoEmpresaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				tipogastoempresa.setid_empresa(empresaAux.getId());
				tipogastoempresa.setempresa_descripcion(TipoGastoEmpresaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				tipogastoempresa.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_sucursalTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalTipoGastoEmpresaGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				tipogastoempresa.setid_sucursal(sucursalAux.getId());
				tipogastoempresa.setsucursal_descripcion(TipoGastoEmpresaConstantesFunciones.getSucursalDescripcion(sucursalAux));
				tipogastoempresa.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_formatoTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoTipoGastoEmpresaGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				tipogastoempresa.setid_formato(formatoAux.getId());
				tipogastoempresa.setformato_descripcion(TipoGastoEmpresaConstantesFunciones.getFormatoDescripcion(formatoAux));
				tipogastoempresa.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableGastoForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_cuenta_contable_gastoTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_gastoTipoGastoEmpresaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_gastoTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				tipogastoempresa.setid_cuenta_contable_gasto(cuentacontableAux.getId());
				tipogastoempresa.setcuentacontablegasto_descripcion(TipoGastoEmpresaConstantesFunciones.getCuentaContableGastoDescripcion(cuentacontableAux));
				tipogastoempresa.setCuentaContableGasto(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableFiscalBienForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				tipogastoempresa.setid_cuenta_contable_fiscal_bien(cuentacontableAux.getId());
				tipogastoempresa.setcuentacontablefiscalbien_descripcion(TipoGastoEmpresaConstantesFunciones.getCuentaContableFiscalBienDescripcion(cuentacontableAux));
				tipogastoempresa.setCuentaContableFiscalBien(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableFiscalServicioForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				tipogastoempresa.setid_cuenta_contable_fiscal_servicio(cuentacontableAux.getId());
				tipogastoempresa.setcuentacontablefiscalservicio_descripcion(TipoGastoEmpresaConstantesFunciones.getCuentaContableFiscalServicioDescripcion(cuentacontableAux));
				tipogastoempresa.setCuentaContableFiscalServicio(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableRetencionBienForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				tipogastoempresa.setid_cuenta_contable_retencion_bien(cuentacontableAux.getId());
				tipogastoempresa.setcuentacontableretencionbien_descripcion(TipoGastoEmpresaConstantesFunciones.getCuentaContableRetencionBienDescripcion(cuentacontableAux));
				tipogastoempresa.setCuentaContableRetencionBien(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableRetencionServicioForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				tipogastoempresa.setid_cuenta_contable_retencion_servicio(cuentacontableAux.getId());
				tipogastoempresa.setcuentacontableretencionservicio_descripcion(TipoGastoEmpresaConstantesFunciones.getCuentaContableRetencionServicioDescripcion(cuentacontableAux));
				tipogastoempresa.setCuentaContableRetencionServicio(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIvaBienForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				tipogastoempresa.setid_cuenta_contable_iva_bien(cuentacontableAux.getId());
				tipogastoempresa.setcuentacontableivabien_descripcion(TipoGastoEmpresaConstantesFunciones.getCuentaContableIvaBienDescripcion(cuentacontableAux));
				tipogastoempresa.setCuentaContableIvaBien(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIvaServicioForeignKey(TipoGastoEmpresa tipogastoempresa,JComboBox jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				tipogastoempresa.setid_cuenta_contable_iva_servicio(cuentacontableAux.getId());
				tipogastoempresa.setcuentacontableivaservicio_descripcion(TipoGastoEmpresaConstantesFunciones.getCuentaContableIvaServicioDescripcion(cuentacontableAux));
				tipogastoempresa.setCuentaContableIvaServicio(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableGastosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.removeAllItems();

							for(CuentaContable cuentacontablegasto:this.cuentacontablegastosForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.addItem(cuentacontablegasto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableFiscalBiensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.removeAllItems();

							for(CuentaContable cuentacontablefiscalbien:this.cuentacontablefiscalbiensForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.addItem(cuentacontablefiscalbien);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableFiscalServiciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.removeAllItems();

							for(CuentaContable cuentacontablefiscalservicio:this.cuentacontablefiscalserviciosForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.addItem(cuentacontablefiscalservicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableRetencionBiensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.removeAllItems();

							for(CuentaContable cuentacontableretencionbien:this.cuentacontableretencionbiensForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.addItem(cuentacontableretencionbien);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableRetencionServiciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.removeAllItems();

							for(CuentaContable cuentacontableretencionservicio:this.cuentacontableretencionserviciosForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.addItem(cuentacontableretencionservicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIvaBiensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.removeAllItems();

							for(CuentaContable cuentacontableivabien:this.cuentacontableivabiensForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.addItem(cuentacontableivabien);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIvaServiciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.removeAllItems();

							for(CuentaContable cuentacontableivaservicio:this.cuentacontableivaserviciosForeignKey) {
								this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.addItem(cuentacontableivaservicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { 
					}

					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableGastoForeignKey(CuentaContable cuentacontablegasto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setSelectedItem(cuentacontablegasto);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableFiscalBienForeignKey(CuentaContable cuentacontablefiscalbien,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setSelectedItem(cuentacontablefiscalbien);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableFiscalServicioForeignKey(CuentaContable cuentacontablefiscalservicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setSelectedItem(cuentacontablefiscalservicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableRetencionBienForeignKey(CuentaContable cuentacontableretencionbien,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setSelectedItem(cuentacontableretencionbien);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableRetencionServicioForeignKey(CuentaContable cuentacontableretencionservicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setSelectedItem(cuentacontableretencionservicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIvaBienForeignKey(CuentaContable cuentacontableivabien,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setSelectedItem(cuentacontableivabien);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIvaServicioForeignKey(CuentaContable cuentacontableivaservicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setSelectedItem(cuentacontableivaservicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesTipoGastoEmpresa() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			TipoGastoEmpresaConstantesFunciones.refrescarForeignKeysDescripcionesTipoGastoEmpresa(this.tipogastoempresaLogic.getTipoGastoEmpresas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			TipoGastoEmpresaConstantesFunciones.refrescarForeignKeysDescripcionesTipoGastoEmpresa(this.tipogastoempresas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(CuentaContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//tipogastoempresaLogic.setTipoGastoEmpresas(this.tipogastoempresas);
			tipogastoempresaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public TipoGastoEmpresaParameterReturnGeneral getTipoGastoEmpresaParameterGeneral() {
		return this.tipogastoempresaParameterGeneral;
	}
	
	public void setTipoGastoEmpresaParameterGeneral(TipoGastoEmpresaParameterReturnGeneral tipogastoempresaParameterGeneral) {
		this.tipogastoempresaParameterGeneral = tipogastoempresaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoTipoGastoEmpresa() {
		return isPermisoTodoTipoGastoEmpresa;
	}

	public void setIsPermisoTodoTipoGastoEmpresa(Boolean isPermisoTodoTipoGastoEmpresa) {
		this.isPermisoTodoTipoGastoEmpresa = isPermisoTodoTipoGastoEmpresa;
	}

	public Boolean getIsPermisoNuevoTipoGastoEmpresa() {
		return isPermisoNuevoTipoGastoEmpresa;
	}

	public void setIsPermisoNuevoTipoGastoEmpresa(Boolean isPermisoNuevoTipoGastoEmpresa) {
		this.isPermisoNuevoTipoGastoEmpresa = isPermisoNuevoTipoGastoEmpresa;
	}

	public Boolean getIsPermisoActualizarTipoGastoEmpresa() {
		return isPermisoActualizarTipoGastoEmpresa;
	}

	public void setIsPermisoActualizarTipoGastoEmpresa(Boolean isPermisoActualizarTipoGastoEmpresa) {
		this.isPermisoActualizarTipoGastoEmpresa = isPermisoActualizarTipoGastoEmpresa;
	}

	public Boolean getIsPermisoEliminarTipoGastoEmpresa() {
		return isPermisoEliminarTipoGastoEmpresa;
	}

	public void setIsPermisoEliminarTipoGastoEmpresa(Boolean isPermisoEliminarTipoGastoEmpresa) {
		this.isPermisoEliminarTipoGastoEmpresa = isPermisoEliminarTipoGastoEmpresa;
	}

	public Boolean getIsPermisoGuardarCambiosTipoGastoEmpresa() {
		return isPermisoGuardarCambiosTipoGastoEmpresa;
	}

	public void setIsPermisoGuardarCambiosTipoGastoEmpresa(Boolean isPermisoGuardarCambiosTipoGastoEmpresa) {
		this.isPermisoGuardarCambiosTipoGastoEmpresa = isPermisoGuardarCambiosTipoGastoEmpresa;
	}
	
	public Boolean getIsPermisoConsultaTipoGastoEmpresa() {
		return isPermisoConsultaTipoGastoEmpresa;
	}

	public void setIsPermisoConsultaTipoGastoEmpresa(Boolean isPermisoConsultaTipoGastoEmpresa) {
		this.isPermisoConsultaTipoGastoEmpresa = isPermisoConsultaTipoGastoEmpresa;
	}

	public Boolean getIsPermisoBusquedaTipoGastoEmpresa() {
		return isPermisoBusquedaTipoGastoEmpresa;
	}

	public void setIsPermisoBusquedaTipoGastoEmpresa(Boolean isPermisoBusquedaTipoGastoEmpresa) {
		this.isPermisoBusquedaTipoGastoEmpresa = isPermisoBusquedaTipoGastoEmpresa;
	}

	public Boolean getIsPermisoReporteTipoGastoEmpresa() {
		return isPermisoReporteTipoGastoEmpresa;
	}

	public void setIsPermisoReporteTipoGastoEmpresa(Boolean isPermisoReporteTipoGastoEmpresa) {
		this.isPermisoReporteTipoGastoEmpresa = isPermisoReporteTipoGastoEmpresa;
	}
	
	public Boolean getIsPermisoPaginacionMedioTipoGastoEmpresa() {
		return isPermisoPaginacionMedioTipoGastoEmpresa;
	}

	public void setIsPermisoPaginacionMedioTipoGastoEmpresa(Boolean isPermisoPaginacionMedioTipoGastoEmpresa) {
		this.isPermisoPaginacionMedioTipoGastoEmpresa = isPermisoPaginacionMedioTipoGastoEmpresa;
	}
	
	public Boolean getIsPermisoPaginacionTodoTipoGastoEmpresa() {
		return isPermisoPaginacionTodoTipoGastoEmpresa;
	}

	public void setIsPermisoPaginacionTodoTipoGastoEmpresa(Boolean isPermisoPaginacionTodoTipoGastoEmpresa) {
		this.isPermisoPaginacionTodoTipoGastoEmpresa = isPermisoPaginacionTodoTipoGastoEmpresa;
	}
	
	public Boolean getIsPermisoPaginacionAltoTipoGastoEmpresa() {
		return isPermisoPaginacionAltoTipoGastoEmpresa;
	}

	public void setIsPermisoPaginacionAltoTipoGastoEmpresa(Boolean isPermisoPaginacionAltoTipoGastoEmpresa) {
		this.isPermisoPaginacionAltoTipoGastoEmpresa = isPermisoPaginacionAltoTipoGastoEmpresa;
	}
	
	public Boolean getIsPermisoCopiarTipoGastoEmpresa() {
		return isPermisoCopiarTipoGastoEmpresa;
	}

	public void setIsPermisoCopiarTipoGastoEmpresa(Boolean isPermisoCopiarTipoGastoEmpresa) {
		this.isPermisoCopiarTipoGastoEmpresa = isPermisoCopiarTipoGastoEmpresa;
	}
	
	public Boolean getIsPermisoVerFormTipoGastoEmpresa() {
		return isPermisoVerFormTipoGastoEmpresa;
	}

	public void setIsPermisoVerFormTipoGastoEmpresa(Boolean isPermisoVerFormTipoGastoEmpresa) {
		this.isPermisoVerFormTipoGastoEmpresa = isPermisoVerFormTipoGastoEmpresa;
	}
	
	public Boolean getIsPermisoDuplicarTipoGastoEmpresa() {
		return isPermisoDuplicarTipoGastoEmpresa;
	}

	public void setIsPermisoDuplicarTipoGastoEmpresa(Boolean isPermisoDuplicarTipoGastoEmpresa) {
		this.isPermisoDuplicarTipoGastoEmpresa = isPermisoDuplicarTipoGastoEmpresa;
	}
	
	public Boolean getIsPermisoOrdenTipoGastoEmpresa() {
		return isPermisoOrdenTipoGastoEmpresa;
	}

	public void setIsPermisoOrdenTipoGastoEmpresa(Boolean isPermisoOrdenTipoGastoEmpresa) {
		this.isPermisoOrdenTipoGastoEmpresa = isPermisoOrdenTipoGastoEmpresa;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoTipoGastoEmpresa() {
		return isVisibilidadCeldaNuevoTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaNuevoTipoGastoEmpresa(Boolean isVisibilidadCeldaNuevoTipoGastoEmpresa) {
		this.isVisibilidadCeldaNuevoTipoGastoEmpresa = isVisibilidadCeldaNuevoTipoGastoEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarTipoGastoEmpresa() {
		return isVisibilidadCeldaDuplicarTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaDuplicarTipoGastoEmpresa(Boolean isVisibilidadCeldaDuplicarTipoGastoEmpresa) {
		this.isVisibilidadCeldaDuplicarTipoGastoEmpresa = isVisibilidadCeldaDuplicarTipoGastoEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarTipoGastoEmpresa() {
		return isVisibilidadCeldaCopiarTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaCopiarTipoGastoEmpresa(Boolean isVisibilidadCeldaCopiarTipoGastoEmpresa) {
		this.isVisibilidadCeldaCopiarTipoGastoEmpresa = isVisibilidadCeldaCopiarTipoGastoEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormTipoGastoEmpresa() {
		return isVisibilidadCeldaVerFormTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaVerFormTipoGastoEmpresa(Boolean isVisibilidadCeldaVerFormTipoGastoEmpresa) {
		this.isVisibilidadCeldaVerFormTipoGastoEmpresa = isVisibilidadCeldaVerFormTipoGastoEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenTipoGastoEmpresa() {
		return isVisibilidadCeldaOrdenTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaOrdenTipoGastoEmpresa(Boolean isVisibilidadCeldaOrdenTipoGastoEmpresa) {
		this.isVisibilidadCeldaOrdenTipoGastoEmpresa = isVisibilidadCeldaOrdenTipoGastoEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa() {
		return isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa(Boolean isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa) {
		this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa = isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaModificarTipoGastoEmpresa() {
		return isVisibilidadCeldaModificarTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaModificarTipoGastoEmpresa(Boolean isVisibilidadCeldaModificarTipoGastoEmpresa) {
		this.isVisibilidadCeldaModificarTipoGastoEmpresa = isVisibilidadCeldaModificarTipoGastoEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarTipoGastoEmpresa() {
		return isVisibilidadCeldaActualizarTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaActualizarTipoGastoEmpresa(Boolean isVisibilidadCeldaActualizarTipoGastoEmpresa) {
		this.isVisibilidadCeldaActualizarTipoGastoEmpresa = isVisibilidadCeldaActualizarTipoGastoEmpresa;
	}

	public Boolean getIsVisibilidadCeldaEliminarTipoGastoEmpresa() {
		return isVisibilidadCeldaEliminarTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaEliminarTipoGastoEmpresa(Boolean isVisibilidadCeldaEliminarTipoGastoEmpresa) {
		this.isVisibilidadCeldaEliminarTipoGastoEmpresa = isVisibilidadCeldaEliminarTipoGastoEmpresa;
	}

	public Boolean getIsVisibilidadCeldaCancelarTipoGastoEmpresa() {
		return isVisibilidadCeldaCancelarTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaCancelarTipoGastoEmpresa(Boolean isVisibilidadCeldaCancelarTipoGastoEmpresa) {
		this.isVisibilidadCeldaCancelarTipoGastoEmpresa = isVisibilidadCeldaCancelarTipoGastoEmpresa;
	}

	public Boolean getIsVisibilidadCeldaGuardarTipoGastoEmpresa() {
		return isVisibilidadCeldaGuardarTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaGuardarTipoGastoEmpresa(Boolean isVisibilidadCeldaGuardarTipoGastoEmpresa) {
		this.isVisibilidadCeldaGuardarTipoGastoEmpresa = isVisibilidadCeldaGuardarTipoGastoEmpresa;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosTipoGastoEmpresa() {
		return isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa;
	}

	public void setIsVisibilidadCeldaGuardarCambiosTipoGastoEmpresa(Boolean isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa) {
		this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa = isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa;
	}
		
	public TipoGastoEmpresaSessionBean gettipogastoempresaSessionBean() {
		return this.tipogastoempresaSessionBean;
	}
	
	public void settipogastoempresaSessionBean(TipoGastoEmpresaSessionBean tipogastoempresaSessionBean) {
		this.tipogastoempresaSessionBean=tipogastoempresaSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorNombre() {
		return this.isVisibilidadBusquedaPorNombre;
	}

	public void setisVisibilidadBusquedaPorNombre(Boolean isVisibilidadBusquedaPorNombre) {
		this.isVisibilidadBusquedaPorNombre=isVisibilidadBusquedaPorNombre;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableFiscalBien() {
		return this.isVisibilidadFK_IdCuentaContableFiscalBien;
	}

	public void setisVisibilidadFK_IdCuentaContableFiscalBien(Boolean isVisibilidadFK_IdCuentaContableFiscalBien) {
		this.isVisibilidadFK_IdCuentaContableFiscalBien=isVisibilidadFK_IdCuentaContableFiscalBien;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableFiscalServicio() {
		return this.isVisibilidadFK_IdCuentaContableFiscalServicio;
	}

	public void setisVisibilidadFK_IdCuentaContableFiscalServicio(Boolean isVisibilidadFK_IdCuentaContableFiscalServicio) {
		this.isVisibilidadFK_IdCuentaContableFiscalServicio=isVisibilidadFK_IdCuentaContableFiscalServicio;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableGasto() {
		return this.isVisibilidadFK_IdCuentaContableGasto;
	}

	public void setisVisibilidadFK_IdCuentaContableGasto(Boolean isVisibilidadFK_IdCuentaContableGasto) {
		this.isVisibilidadFK_IdCuentaContableGasto=isVisibilidadFK_IdCuentaContableGasto;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIvaBien() {
		return this.isVisibilidadFK_IdCuentaContableIvaBien;
	}

	public void setisVisibilidadFK_IdCuentaContableIvaBien(Boolean isVisibilidadFK_IdCuentaContableIvaBien) {
		this.isVisibilidadFK_IdCuentaContableIvaBien=isVisibilidadFK_IdCuentaContableIvaBien;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIvaServicio() {
		return this.isVisibilidadFK_IdCuentaContableIvaServicio;
	}

	public void setisVisibilidadFK_IdCuentaContableIvaServicio(Boolean isVisibilidadFK_IdCuentaContableIvaServicio) {
		this.isVisibilidadFK_IdCuentaContableIvaServicio=isVisibilidadFK_IdCuentaContableIvaServicio;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableRetencionBien() {
		return this.isVisibilidadFK_IdCuentaContableRetencionBien;
	}

	public void setisVisibilidadFK_IdCuentaContableRetencionBien(Boolean isVisibilidadFK_IdCuentaContableRetencionBien) {
		this.isVisibilidadFK_IdCuentaContableRetencionBien=isVisibilidadFK_IdCuentaContableRetencionBien;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableRetencionServicio() {
		return this.isVisibilidadFK_IdCuentaContableRetencionServicio;
	}

	public void setisVisibilidadFK_IdCuentaContableRetencionServicio(Boolean isVisibilidadFK_IdCuentaContableRetencionServicio) {
		this.isVisibilidadFK_IdCuentaContableRetencionServicio=isVisibilidadFK_IdCuentaContableRetencionServicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(tipogastoempresa,null);
				this.setActualParaGuardarSucursalForeignKey(tipogastoempresa,null);
				this.setActualParaGuardarFormatoForeignKey(tipogastoempresa,null);
				this.setActualParaGuardarCuentaContableGastoForeignKey(tipogastoempresa,null);
				this.setActualParaGuardarCuentaContableFiscalBienForeignKey(tipogastoempresa,null);
				this.setActualParaGuardarCuentaContableFiscalServicioForeignKey(tipogastoempresa,null);
				this.setActualParaGuardarCuentaContableRetencionBienForeignKey(tipogastoempresa,null);
				this.setActualParaGuardarCuentaContableRetencionServicioForeignKey(tipogastoempresa,null);
				this.setActualParaGuardarCuentaContableIvaBienForeignKey(tipogastoempresa,null);
				this.setActualParaGuardarCuentaContableIvaServicioForeignKey(tipogastoempresa,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(TipoGastoEmpresa tipogastoempresa,TipoGastoEmpresa tipogastoempresaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalTipoGastoEmpresa(tipogastoempresa);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		tipogastoempresaAux.setId(tipogastoempresa.getId());
		tipogastoempresaAux.setVersionRow(tipogastoempresa.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessTipoGastoEmpresa();
		
			int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = tipogastoempresaValidator.getInvalidValues(this.tipogastoempresa);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			tipogastoempresaLogic.setDatosCliente(datosCliente);
			tipogastoempresaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				tipogastoempresaAux=new  TipoGastoEmpresa();
				
				tipogastoempresaAux.setIsNew(true);
				tipogastoempresaAux.setIsChanged(true);
				
				tipogastoempresaAux.setTipoGastoEmpresaOriginal(this.tipogastoempresa);
				
				tipogastoempresaAux.setId(this.tipogastoempresa.getId());	
				tipogastoempresaAux.setVersionRow(this.tipogastoempresa.getVersionRow());	
				tipogastoempresaAux.setid_empresa(this.tipogastoempresa.getid_empresa());	
				tipogastoempresaAux.setid_sucursal(this.tipogastoempresa.getid_sucursal());	
				tipogastoempresaAux.setnombre(this.tipogastoempresa.getnombre());	
				tipogastoempresaAux.setid_formato(this.tipogastoempresa.getid_formato());	
				tipogastoempresaAux.setdescripcion(this.tipogastoempresa.getdescripcion());	
				tipogastoempresaAux.setid_cuenta_contable_gasto(this.tipogastoempresa.getid_cuenta_contable_gasto());	
				tipogastoempresaAux.setid_cuenta_contable_fiscal_bien(this.tipogastoempresa.getid_cuenta_contable_fiscal_bien());	
				tipogastoempresaAux.setid_cuenta_contable_fiscal_servicio(this.tipogastoempresa.getid_cuenta_contable_fiscal_servicio());	
				tipogastoempresaAux.setid_cuenta_contable_retencion_bien(this.tipogastoempresa.getid_cuenta_contable_retencion_bien());	
				tipogastoempresaAux.setid_cuenta_contable_retencion_servicio(this.tipogastoempresa.getid_cuenta_contable_retencion_servicio());	
				tipogastoempresaAux.setid_cuenta_contable_iva_bien(this.tipogastoempresa.getid_cuenta_contable_iva_bien());	
				tipogastoempresaAux.setid_cuenta_contable_iva_servicio(this.tipogastoempresa.getid_cuenta_contable_iva_servicio());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.tipogastoempresaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(tipogastoempresaAux,tipogastoempresaLogic.getTipoGastoEmpresas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipogastoempresaAux,tipogastoempresas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.tipogastoempresaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresaLogic.saveTipoGastoEmpresas();//WithConnection
						//tipogastoempresaLogic.getSetVersionRowTipoGastoEmpresas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.tipogastoempresa,tipogastoempresaAux);
					
					this.refrescarForeignKeysDescripcionesTipoGastoEmpresa();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								tipogastoempresaLogic.saveTipoGastoEmpresaRelaciones(tipogastoempresaAux);//WithConnection
								//tipogastoempresaLogic.getSetVersionRowTipoGastoEmpresas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.tipogastoempresa,tipogastoempresaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.tipogastoempresaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(tipogastoempresaAux,tipogastoempresaLogic.getTipoGastoEmpresas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(tipogastoempresaAux,tipogastoempresas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.tipogastoempresa,tipogastoempresaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				tipogastoempresaAux=new  TipoGastoEmpresa();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado() 
					|| (this.tipogastoempresaSessionBean.getEsGuardarRelacionado() && this.tipogastoempresa.getId()>=0)) {
						
					tipogastoempresaAux.setIsNew(false);
				}
				
				tipogastoempresaAux.setIsDeleted(false);
			
				tipogastoempresaAux.setId(this.tipogastoempresa.getId());	
				tipogastoempresaAux.setVersionRow(this.tipogastoempresa.getVersionRow());	
				tipogastoempresaAux.setid_empresa(this.tipogastoempresa.getid_empresa());	
				tipogastoempresaAux.setid_sucursal(this.tipogastoempresa.getid_sucursal());	
				tipogastoempresaAux.setnombre(this.tipogastoempresa.getnombre());	
				tipogastoempresaAux.setid_formato(this.tipogastoempresa.getid_formato());	
				tipogastoempresaAux.setdescripcion(this.tipogastoempresa.getdescripcion());	
				tipogastoempresaAux.setid_cuenta_contable_gasto(this.tipogastoempresa.getid_cuenta_contable_gasto());	
				tipogastoempresaAux.setid_cuenta_contable_fiscal_bien(this.tipogastoempresa.getid_cuenta_contable_fiscal_bien());	
				tipogastoempresaAux.setid_cuenta_contable_fiscal_servicio(this.tipogastoempresa.getid_cuenta_contable_fiscal_servicio());	
				tipogastoempresaAux.setid_cuenta_contable_retencion_bien(this.tipogastoempresa.getid_cuenta_contable_retencion_bien());	
				tipogastoempresaAux.setid_cuenta_contable_retencion_servicio(this.tipogastoempresa.getid_cuenta_contable_retencion_servicio());	
				tipogastoempresaAux.setid_cuenta_contable_iva_bien(this.tipogastoempresa.getid_cuenta_contable_iva_bien());	
				tipogastoempresaAux.setid_cuenta_contable_iva_servicio(this.tipogastoempresa.getid_cuenta_contable_iva_servicio());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(tipogastoempresaAux,tipogastoempresaLogic.getTipoGastoEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipogastoempresaAux,tipogastoempresas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.tipogastoempresaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresaLogic.saveTipoGastoEmpresas();//WithConnection
						//tipogastoempresaLogic.getSetVersionRowTipoGastoEmpresas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.tipogastoempresa,tipogastoempresaAux);
					
					this.refrescarForeignKeysDescripcionesTipoGastoEmpresa();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								tipogastoempresaLogic.saveTipoGastoEmpresaRelaciones(tipogastoempresaAux);//WithConnection
								//tipogastoempresaLogic.getSetVersionRowTipoGastoEmpresas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.tipogastoempresa,tipogastoempresaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.tipogastoempresaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(tipogastoempresaAux,tipogastoempresaLogic.getTipoGastoEmpresas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(tipogastoempresaAux,tipogastoempresas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.tipogastoempresa,tipogastoempresaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				tipogastoempresaAux=new  TipoGastoEmpresa();
				
				tipogastoempresaAux.setIsNew(false);
				tipogastoempresaAux.setIsChanged(false);
				
				tipogastoempresaAux.setIsDeleted(true);
				
				tipogastoempresaAux.setId(this.tipogastoempresa.getId());	
				tipogastoempresaAux.setVersionRow(this.tipogastoempresa.getVersionRow());	
				tipogastoempresaAux.setid_empresa(this.tipogastoempresa.getid_empresa());	
				tipogastoempresaAux.setid_sucursal(this.tipogastoempresa.getid_sucursal());	
				tipogastoempresaAux.setnombre(this.tipogastoempresa.getnombre());	
				tipogastoempresaAux.setid_formato(this.tipogastoempresa.getid_formato());	
				tipogastoempresaAux.setdescripcion(this.tipogastoempresa.getdescripcion());	
				tipogastoempresaAux.setid_cuenta_contable_gasto(this.tipogastoempresa.getid_cuenta_contable_gasto());	
				tipogastoempresaAux.setid_cuenta_contable_fiscal_bien(this.tipogastoempresa.getid_cuenta_contable_fiscal_bien());	
				tipogastoempresaAux.setid_cuenta_contable_fiscal_servicio(this.tipogastoempresa.getid_cuenta_contable_fiscal_servicio());	
				tipogastoempresaAux.setid_cuenta_contable_retencion_bien(this.tipogastoempresa.getid_cuenta_contable_retencion_bien());	
				tipogastoempresaAux.setid_cuenta_contable_retencion_servicio(this.tipogastoempresa.getid_cuenta_contable_retencion_servicio());	
				tipogastoempresaAux.setid_cuenta_contable_iva_bien(this.tipogastoempresa.getid_cuenta_contable_iva_bien());	
				tipogastoempresaAux.setid_cuenta_contable_iva_servicio(this.tipogastoempresa.getid_cuenta_contable_iva_servicio());	
				
				if(this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.tipogastoempresaAux.getId()>=0) {	
						this.tipogastoempresasEliminados.add(tipogastoempresaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(tipogastoempresaAux,tipogastoempresaLogic.getTipoGastoEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipogastoempresaAux,tipogastoempresas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.tipogastoempresaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresaLogic.saveTipoGastoEmpresas();//WithConnection
						//tipogastoempresaLogic.getSetVersionRowTipoGastoEmpresas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								tipogastoempresaLogic.saveTipoGastoEmpresaRelaciones(tipogastoempresaAux);//WithConnection
								//tipogastoempresaLogic.getSetVersionRowTipoGastoEmpresas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.tipogastoempresaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(tipogastoempresaAux,tipogastoempresaLogic.getTipoGastoEmpresas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(tipogastoempresaAux,tipogastoempresas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getTipoGastoEmpresas().addAll(this.tipogastoempresasEliminados);
					
					tipogastoempresaLogic.saveTipoGastoEmpresas();//WithConnection
					//tipogastoempresaLogic.getSetVersionRowTipoGastoEmpresas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesTipoGastoEmpresa();
				
				this.tipogastoempresasEliminados= new ArrayList<TipoGastoEmpresa>();		
			}
			
			if(this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Tipo Gasto Empresa GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.tipogastoempresa=tipogastoempresaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessTipoGastoEmpresa();
      	}
		
	}	
	
	public void actualizarRelaciones(TipoGastoEmpresa tipogastoempresaLocal) throws Exception {
		
		if(this.tipogastoempresaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(TipoGastoEmpresa tipogastoempresaLocal) throws Exception {	
		if(this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				tipogastoempresaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				tipogastoempresaLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				tipogastoempresaLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablegastoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablegastoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablegastoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablegastoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablegastoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablegastosForeignKey);

				cuentacontablegastoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablegastoBeanSwingJInternalFrameLocal.cuentacontable);

				tipogastoempresaLocal.setCuentaContableGasto(cuentacontablegastoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableGasto();
				this.cargarCombosFrameCuentaContableGastosForeignKey("Formulario");
				this.setActualCuentaContableGastoForeignKey(cuentacontablegastoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablefiscalbienBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablefiscalbienBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablefiscalbienBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablefiscalbienBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablefiscalbienBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablefiscalbiensForeignKey);

				cuentacontablefiscalbienBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablefiscalbienBeanSwingJInternalFrameLocal.cuentacontable);

				tipogastoempresaLocal.setCuentaContableFiscalBien(cuentacontablefiscalbienBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableFiscalBien();
				this.cargarCombosFrameCuentaContableFiscalBiensForeignKey("Formulario");
				this.setActualCuentaContableFiscalBienForeignKey(cuentacontablefiscalbienBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablefiscalservicioBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablefiscalservicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablefiscalservicioBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablefiscalservicioBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablefiscalservicioBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablefiscalserviciosForeignKey);

				cuentacontablefiscalservicioBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablefiscalservicioBeanSwingJInternalFrameLocal.cuentacontable);

				tipogastoempresaLocal.setCuentaContableFiscalServicio(cuentacontablefiscalservicioBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableFiscalServicio();
				this.cargarCombosFrameCuentaContableFiscalServiciosForeignKey("Formulario");
				this.setActualCuentaContableFiscalServicioForeignKey(cuentacontablefiscalservicioBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableretencionbienBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableretencionbienBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableretencionbienBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableretencionbienBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableretencionbienBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableretencionbiensForeignKey);

				cuentacontableretencionbienBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableretencionbienBeanSwingJInternalFrameLocal.cuentacontable);

				tipogastoempresaLocal.setCuentaContableRetencionBien(cuentacontableretencionbienBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableRetencionBien();
				this.cargarCombosFrameCuentaContableRetencionBiensForeignKey("Formulario");
				this.setActualCuentaContableRetencionBienForeignKey(cuentacontableretencionbienBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableretencionservicioBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableretencionservicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableretencionservicioBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableretencionservicioBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableretencionservicioBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableretencionserviciosForeignKey);

				cuentacontableretencionservicioBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableretencionservicioBeanSwingJInternalFrameLocal.cuentacontable);

				tipogastoempresaLocal.setCuentaContableRetencionServicio(cuentacontableretencionservicioBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableRetencionServicio();
				this.cargarCombosFrameCuentaContableRetencionServiciosForeignKey("Formulario");
				this.setActualCuentaContableRetencionServicioForeignKey(cuentacontableretencionservicioBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableivabienBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableivabienBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableivabienBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableivabienBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableivabienBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableivabiensForeignKey);

				cuentacontableivabienBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableivabienBeanSwingJInternalFrameLocal.cuentacontable);

				tipogastoempresaLocal.setCuentaContableIvaBien(cuentacontableivabienBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIvaBien();
				this.cargarCombosFrameCuentaContableIvaBiensForeignKey("Formulario");
				this.setActualCuentaContableIvaBienForeignKey(cuentacontableivabienBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableivaservicioBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableivaservicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableivaservicioBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableivaservicioBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableivaservicioBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableivaserviciosForeignKey);

				cuentacontableivaservicioBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableivaservicioBeanSwingJInternalFrameLocal.cuentacontable);

				tipogastoempresaLocal.setCuentaContableIvaServicio(cuentacontableivaservicioBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIvaServicio();
				this.cargarCombosFrameCuentaContableIvaServiciosForeignKey("Formulario");
				this.setActualCuentaContableIvaServicioForeignKey(cuentacontableivaservicioBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarTipoGastoEmpresaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = tipogastoempresaValidator.getInvalidValues(this.tipogastoempresa);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(TipoGastoEmpresa tipogastoempresa,List<TipoGastoEmpresa> tipogastoempresas) throws Exception {
		try	{		
			TipoGastoEmpresaConstantesFunciones.actualizarLista(tipogastoempresa,tipogastoempresas,this.tipogastoempresaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(TipoGastoEmpresa tipogastoempresa,List<TipoGastoEmpresa> tipogastoempresas) throws Exception {
		try	{			
			TipoGastoEmpresaConstantesFunciones.actualizarSelectedLista(tipogastoempresa,tipogastoempresas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<TipoGastoEmpresa> tipogastoempresasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				tipogastoempresasLocal=this.tipogastoempresaLogic.getTipoGastoEmpresas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				tipogastoempresasLocal=this.tipogastoempresas;
			}
			//ARCHITECTURE
		
			for(TipoGastoEmpresa tipogastoempresaLocal:tipogastoempresasLocal) {
				if(this.permiteMantenimiento(tipogastoempresaLocal) && tipogastoempresaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+TipoGastoEmpresaConstantesFunciones.getTipoGastoEmpresaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_empresaTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_sucursalTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelnombreTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_formatoTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabeldescripcionTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEGASTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_gastoTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEFISCALBIEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_fiscal_bienTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEFISCALSERVICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_fiscal_servicioTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLERETENCIONBIEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_retencion_bienTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLERETENCIONSERVICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_retencion_servicioTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEIVABIEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_iva_bienTipoGastoEmpresa,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEIVASERVICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_iva_servicioTipoGastoEmpresa,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_empresaTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_sucursalTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelnombreTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_formatoTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabeldescripcionTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_gastoTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_fiscal_bienTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_fiscal_servicioTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_retencion_bienTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_retencion_servicioTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_iva_bienTipoGastoEmpresa,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelid_cuenta_contable_iva_servicioTipoGastoEmpresa,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoTipoGastoEmpresa--;	
		
		
		this.tipogastoempresaAux=new TipoGastoEmpresa();
		
		this.tipogastoempresaAux.setId(this.iIdNuevoTipoGastoEmpresa);
		this.tipogastoempresaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.tipogastoempresaLogic.getTipoGastoEmpresas().add(this.tipogastoempresaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.tipogastoempresas.add(this.tipogastoempresaAux);
		}
		//ARCHITECTURE
		
		this.tipogastoempresa=this.tipogastoempresaAux;
		
		if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioTipoGastoEmpresa(this.tipogastoempresa);
			this.setVariablesObjetoActualToFormularioForeignKeyTipoGastoEmpresa(this.tipogastoempresa);
		}
				
		//this.setDefaultControlesTipoGastoEmpresa();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyTipoGastoEmpresa();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyTipoGastoEmpresa();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyTipoGastoEmpresa();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualTipoGastoEmpresa(this.tipogastoempresaBean,this.tipogastoempresa,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.tipogastoempresaSessionBean.getConGuardarRelaciones()) {
			classes=TipoGastoEmpresaConstantesFunciones.getClassesRelationshipsOfTipoGastoEmpresa(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.tipogastoempresaReturnGeneral=tipogastoempresaLogic.procesarEventosTipoGastoEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.tipogastoempresaLogic.getTipoGastoEmpresas(),this.tipogastoempresa,this.tipogastoempresaParameterGeneral,this.isEsNuevoTipoGastoEmpresa,classes);//this.tipogastoempresaLogic.getTipoGastoEmpresa()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanTipoGastoEmpresa(this.tipogastoempresaReturnGeneral,this.tipogastoempresaBean,false);
		
		if(this.tipogastoempresaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyTipoGastoEmpresa(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresa());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioTipoGastoEmpresa(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresa());
		}
		
		if(this.tipogastoempresaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioTipoGastoEmpresa(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresa(),classes);//this.tipogastoempresaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyTipoGastoEmpresa();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyTipoGastoEmpresa();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.RecargarFormTipoGastoEmpresa(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingTipoGastoEmpresa(false);
						
			if(tipogastoempresaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTipoGastoEmpresa();
			}
			
			this.actualizarVisualTableDatosTipoGastoEmpresa();
			
			this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(this.getIndiceNuevoTipoGastoEmpresa(), this.getIndiceNuevoTipoGastoEmpresa());
			
			this.seleccionarFilaTablaTipoGastoEmpresaActual();
						
			this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesTipoGastoEmpresa(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreanombreTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarnombreTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreadescripcionTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activardescripcionTipoGastoEmpresa);	
		//
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_empresaTipoGastoEmpresa);//
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_sucursalTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_formatoTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_gastoTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_bienTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_bienTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_servicioTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_bienTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setEnabled(isHabilitar && this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_servicioTipoGastoEmpresa);
	};
	
	public void setDefaultControlesTipoGastoEmpresa() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoTipoGastoEmpresa(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.tipogastoempresaSessionBean.setConGuardarRelaciones(true);			
			this.tipogastoempresaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jTabbedPaneRelacionesTipoGastoEmpresa.setVisible(true);
			
					
		} else {
			//this.tipogastoempresaSessionBean.setConGuardarRelaciones(false);			
			this.tipogastoempresaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jTabbedPaneRelacionesTipoGastoEmpresa.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoTipoGastoEmpresa() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresaLogic.getTipoGastoEmpresas()) {
				if(tipogastoempresaAux.getId().equals(this.iIdNuevoTipoGastoEmpresa)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresas) {
				if(tipogastoempresaAux.getId().equals(this.iIdNuevoTipoGastoEmpresa)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresaLogic.getTipoGastoEmpresas()) {
				if(tipogastoempresaAux.getId().equals(tipogastoempresa.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresas) {
				if(tipogastoempresaAux.getId().equals(tipogastoempresa.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresaLogic.getTipoGastoEmpresas()) {
				if(tipogastoempresaAux.getTipoGastoEmpresaOriginal().getId().equals(tipogastoempresaOriginal.getId())) {
					existe=true;
					tipogastoempresaOriginal.setId(tipogastoempresaAux.getId());
					tipogastoempresaOriginal.setVersionRow(tipogastoempresaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresas) {
				if(tipogastoempresaAux.getTipoGastoEmpresaOriginal().getId().equals(tipogastoempresaOriginal.getId())) {
					existe=true;
					tipogastoempresaOriginal.setId(tipogastoempresaAux.getId());
					tipogastoempresaOriginal.setVersionRow(tipogastoempresaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosTipoGastoEmpresa(Boolean esParaCancelar) throws Exception {
		tipogastoempresasAux=new ArrayList<TipoGastoEmpresa>();
		tipogastoempresaAux=new TipoGastoEmpresa();
		
		if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresaLogic.getTipoGastoEmpresas()) {
					if(tipogastoempresaAux.getId()<0) {
						tipogastoempresasAux.add(tipogastoempresaAux);
					}		
				}
				this.iIdNuevoTipoGastoEmpresa=0L;
				this.tipogastoempresaLogic.getTipoGastoEmpresas().removeAll(tipogastoempresasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresas) {
					if(tipogastoempresaAux.getId()<0) {
						tipogastoempresasAux.add(tipogastoempresaAux);
					}		
				}
				this.iIdNuevoTipoGastoEmpresa=0L;
				this.tipogastoempresas.removeAll(tipogastoempresasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoTipoGastoEmpresa 
					&& this.tipogastoempresaLogic.getTipoGastoEmpresas().size()>0
					) {
					tipogastoempresaAux=this.tipogastoempresaLogic.getTipoGastoEmpresas().get(this.tipogastoempresaLogic.getTipoGastoEmpresas().size() - 1);
				
					if(tipogastoempresaAux.getId()<0) {
						this.tipogastoempresaLogic.getTipoGastoEmpresas().remove(tipogastoempresaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoTipoGastoEmpresa && this.tipogastoempresas.size()>0) {
					tipogastoempresaAux=this.tipogastoempresas.get(this.tipogastoempresas.size() - 1);
				
					if(tipogastoempresaAux.getId()<0) {
						this.tipogastoempresas.remove(tipogastoempresaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoTipoGastoEmpresa(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(tipogastoempresa.getId()<0) {
				this.tipogastoempresaLogic.getTipoGastoEmpresas().remove(this.tipogastoempresa);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(tipogastoempresa.getId()<0) {
				this.tipogastoempresas.remove(this.tipogastoempresa);
			}
		}			
	}
	
	public void setEstadosInicialesTipoGastoEmpresa(List<TipoGastoEmpresa> tipogastoempresasAux) throws Exception {
		TipoGastoEmpresaConstantesFunciones.setEstadosInicialesTipoGastoEmpresa(tipogastoempresasAux);
	}
	
	public void setEstadosInicialesTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresaAux) throws Exception {
		TipoGastoEmpresaConstantesFunciones.setEstadosInicialesTipoGastoEmpresa(tipogastoempresaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarTipoGastoEmpresaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarTipoGastoEmpresaActual()) {
				if(!this.isEsNuevoTipoGastoEmpresa) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoTipoGastoEmpresa=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarTipoGastoEmpresaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Tipo Gasto Empresa ?", "MANTENIMIENTO DE Tipo Gasto Empresa", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(TipoGastoEmpresa tipogastoempresa) throws Exception {
		TipoGastoEmpresaConstantesFunciones.seleccionarAsignar(this.tipogastoempresa,tipogastoempresa);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarTipoGastoEmpresa=this.isPermisoActualizarOriginalTipoGastoEmpresa;
			
			
			this.seleccionarAsignar(tipogastoempresa);
			
			

			idCuentaContableGastoActual=tipogastoempresa.getid_cuenta_contable_gasto();
			this.seleccionarCuentaContableGastoActual();

			idCuentaContableFiscalBienActual=tipogastoempresa.getid_cuenta_contable_fiscal_bien();
			this.seleccionarCuentaContableFiscalBienActual();

			idCuentaContableFiscalServicioActual=tipogastoempresa.getid_cuenta_contable_fiscal_servicio();
			this.seleccionarCuentaContableFiscalServicioActual();

			idCuentaContableRetencionBienActual=tipogastoempresa.getid_cuenta_contable_retencion_bien();
			this.seleccionarCuentaContableRetencionBienActual();

			idCuentaContableRetencionServicioActual=tipogastoempresa.getid_cuenta_contable_retencion_servicio();
			this.seleccionarCuentaContableRetencionServicioActual();

			idCuentaContableIvaBienActual=tipogastoempresa.getid_cuenta_contable_iva_bien();
			this.seleccionarCuentaContableIvaBienActual();

			idCuentaContableIvaServicioActual=tipogastoempresa.getid_cuenta_contable_iva_servicio();
			this.seleccionarCuentaContableIvaServicioActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			TipoGastoEmpresaConstantesFunciones.quitarEspaciosTipoGastoEmpresa(this.tipogastoempresa,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.tipogastoempresaSessionBean.setsFuncionBusquedaRapida(this.tipogastoempresaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCuentaContableGastoActual() throws Exception {
		try	{
			CuentaContable cuentacontablegastoAux=new CuentaContable();

			if(this.idCuentaContableGastoActual != null && this.idCuentaContableGastoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontablegastoLogic.getEntityWithConnection(this.idCuentaContableGastoActual);
					cuentacontablegastoAux= cuentacontablegastoLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablegastosForeignKey=new ArrayList<CuentaContable>();
				cuentacontablegastosForeignKey.add(cuentacontablegastoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableFiscalBienActual() throws Exception {
		try	{
			CuentaContable cuentacontablefiscalbienAux=new CuentaContable();

			if(this.idCuentaContableFiscalBienActual != null && this.idCuentaContableFiscalBienActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontablefiscalbienLogic.getEntityWithConnection(this.idCuentaContableFiscalBienActual);
					cuentacontablefiscalbienAux= cuentacontablefiscalbienLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablefiscalbiensForeignKey=new ArrayList<CuentaContable>();
				cuentacontablefiscalbiensForeignKey.add(cuentacontablefiscalbienAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableFiscalServicioActual() throws Exception {
		try	{
			CuentaContable cuentacontablefiscalservicioAux=new CuentaContable();

			if(this.idCuentaContableFiscalServicioActual != null && this.idCuentaContableFiscalServicioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontablefiscalservicioLogic.getEntityWithConnection(this.idCuentaContableFiscalServicioActual);
					cuentacontablefiscalservicioAux= cuentacontablefiscalservicioLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablefiscalserviciosForeignKey=new ArrayList<CuentaContable>();
				cuentacontablefiscalserviciosForeignKey.add(cuentacontablefiscalservicioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableRetencionBienActual() throws Exception {
		try	{
			CuentaContable cuentacontableretencionbienAux=new CuentaContable();

			if(this.idCuentaContableRetencionBienActual != null && this.idCuentaContableRetencionBienActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableretencionbienLogic.getEntityWithConnection(this.idCuentaContableRetencionBienActual);
					cuentacontableretencionbienAux= cuentacontableretencionbienLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableretencionbiensForeignKey=new ArrayList<CuentaContable>();
				cuentacontableretencionbiensForeignKey.add(cuentacontableretencionbienAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableRetencionServicioActual() throws Exception {
		try	{
			CuentaContable cuentacontableretencionservicioAux=new CuentaContable();

			if(this.idCuentaContableRetencionServicioActual != null && this.idCuentaContableRetencionServicioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableretencionservicioLogic.getEntityWithConnection(this.idCuentaContableRetencionServicioActual);
					cuentacontableretencionservicioAux= cuentacontableretencionservicioLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableretencionserviciosForeignKey=new ArrayList<CuentaContable>();
				cuentacontableretencionserviciosForeignKey.add(cuentacontableretencionservicioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableIvaBienActual() throws Exception {
		try	{
			CuentaContable cuentacontableivabienAux=new CuentaContable();

			if(this.idCuentaContableIvaBienActual != null && this.idCuentaContableIvaBienActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableivabienLogic.getEntityWithConnection(this.idCuentaContableIvaBienActual);
					cuentacontableivabienAux= cuentacontableivabienLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableivabiensForeignKey=new ArrayList<CuentaContable>();
				cuentacontableivabiensForeignKey.add(cuentacontableivabienAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableIvaServicioActual() throws Exception {
		try	{
			CuentaContable cuentacontableivaservicioAux=new CuentaContable();

			if(this.idCuentaContableIvaServicioActual != null && this.idCuentaContableIvaServicioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableivaservicioLogic.getEntityWithConnection(this.idCuentaContableIvaServicioActual);
					cuentacontableivaservicioAux= cuentacontableivaservicioLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableivaserviciosForeignKey=new ArrayList<CuentaContable>();
				cuentacontableivaserviciosForeignKey.add(cuentacontableivaservicioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoTipoGastoEmpresa) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosTipoGastoEmpresa(esParaCancelar);				
				this.cancelarNuevoTipoGastoEmpresa(esParaCancelar);								
			}
			
			this.tipogastoempresa=new TipoGastoEmpresa();
			
			this.inicializarTipoGastoEmpresa();
			
			this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarTipoGastoEmpresa() throws Exception {
		try {
			TipoGastoEmpresaConstantesFunciones.inicializarTipoGastoEmpresa(this.tipogastoempresa);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.tipogastoempresaLogic.getTipoGastoEmpresas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteTipoGastoEmpresas(String sAccionBusqueda,List<TipoGastoEmpresa> tipogastoempresasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="TipoGastoEmpresa"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="TipoGastoEmpresaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("TipoGastoEmpresaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="TipoGastoEmpresa"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Tipo Gasto Empresas");		
		parameters.put("busquedapor", TipoGastoEmpresaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceTipoGastoEmpresa=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			TipoGastoEmpresaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			TipoGastoEmpresaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceTipoGastoEmpresa=new JRBeanArrayDataSource(TipoGastoEmpresaJInternalFrame.TraerTipoGastoEmpresaBeans(tipogastoempresasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceTipoGastoEmpresa);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+TipoGastoEmpresaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+TipoGastoEmpresaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(TipoGastoEmpresaBean.TraerTipoGastoEmpresaBeans(tipogastoempresasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteTipoGastoEmpresas(sAccionBusqueda,sTipoArchivoReporte,tipogastoempresasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalTipoGastoEmpresas(sAccionBusqueda,sTipoArchivoReporte,tipogastoempresasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoTipoGastoEmpresaActionPerformed(null);
					//this.generarExcelReporteTipoGastoEmpresas(sAccionBusqueda,sTipoArchivoReporte,tipogastoempresasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalTipoGastoEmpresas(sAccionBusqueda,sTipoArchivoReporte,tipogastoempresasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesTipoGastoEmpresas(sAccionBusqueda,sTipoArchivoReporte,tipogastoempresasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesTipoGastoEmpresas(sAccionBusqueda,sTipoArchivoReporte,tipogastoempresasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteTipoGastoEmpresas(String sAccionBusqueda,String sTipoArchivoReporte,List<TipoGastoEmpresa> tipogastoempresasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipogastoempresa";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TipoGastoEmpresas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderTipoGastoEmpresa("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(TipoGastoEmpresa tipogastoempresa : tipogastoempresasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			TipoGastoEmpresaConstantesFunciones.generarExcelReporteDataTipoGastoEmpresa("NORMAL",row,workbook,tipogastoempresa,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderTipoGastoEmpresa(String sTipo,Row row,Workbook workbook) {
		
		TipoGastoEmpresaConstantesFunciones.generarExcelReporteHeaderTipoGastoEmpresa(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalTipoGastoEmpresas(String sAccionBusqueda,String sTipoArchivoReporte,List<TipoGastoEmpresa> tipogastoempresasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipogastoempresa_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TipoGastoEmpresas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(TipoGastoEmpresa tipogastoempresa : tipogastoempresasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(TipoGastoEmpresaConstantesFunciones.getTipoGastoEmpresaDescripcion(tipogastoempresa));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getcuentacontablegasto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getcuentacontablefiscalbien_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getcuentacontablefiscalservicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getcuentacontableretencionbien_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getcuentacontableretencionservicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getcuentacontableivabien_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(tipogastoempresa.getcuentacontableivaservicio_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesTipoGastoEmpresas(String sAccionBusqueda,String sTipoArchivoReporte,List<TipoGastoEmpresa> tipogastoempresasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<TipoGastoEmpresa> tipogastoempresasRespaldo=null;
		
		classes=TipoGastoEmpresaConstantesFunciones.getClassesRelationshipsOfTipoGastoEmpresa(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.tipogastoempresaLogic.setDatosCliente(this.datosCliente);
		this.tipogastoempresaLogic.setDatosDeep(this.datosDeep);
		this.tipogastoempresaLogic.setIsConDeep(true);
		
		tipogastoempresasRespaldo=this.tipogastoempresaLogic.getTipoGastoEmpresas();
		
		this.tipogastoempresaLogic.setTipoGastoEmpresas(tipogastoempresasParaReportes);	
		this.tipogastoempresaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		tipogastoempresasParaReportes=this.tipogastoempresaLogic.getTipoGastoEmpresas();
		this.tipogastoempresaLogic.setTipoGastoEmpresas(tipogastoempresasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipogastoempresa_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("TipoGastoEmpresas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderTipoGastoEmpresa("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(TipoGastoEmpresa tipogastoempresa : tipogastoempresasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderTipoGastoEmpresa("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			TipoGastoEmpresaConstantesFunciones.generarExcelReporteDataTipoGastoEmpresa("NORMAL",row,workbook,tipogastoempresa,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(TipoGastoEmpresaConstantesFunciones.getTipoGastoEmpresaDescripcion(tipogastoempresa));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessTipoGastoEmpresa() throws Exception {		
		this.startProcessTipoGastoEmpresa(true);
	}
	
	public void startProcessTipoGastoEmpresa(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasTipoGastoEmpresa ,this.jPanelParametrosReportesTipoGastoEmpresa, this.jScrollPanelDatosTipoGastoEmpresa,this.jPanelPaginacionTipoGastoEmpresa, this.jScrollPanelDatosEdicionTipoGastoEmpresa, this.jPanelAccionesTipoGastoEmpresa,this.jPanelAccionesFormularioTipoGastoEmpresa,this.jmenuBarTipoGastoEmpresa,this.jmenuBarDetalleTipoGastoEmpresa,this.jTtoolBarTipoGastoEmpresa,this.jTtoolBarDetalleTipoGastoEmpresa);		
		
		final JTabbedPane jTabbedPaneBusquedasTipoGastoEmpresa=this.jTabbedPaneBusquedasTipoGastoEmpresa; 
		
		final JPanel jPanelParametrosReportesTipoGastoEmpresa=this.jPanelParametrosReportesTipoGastoEmpresa;
		//final JScrollPane jScrollPanelDatosTipoGastoEmpresa=this.jScrollPanelDatosTipoGastoEmpresa;
		final JTable jTableDatosTipoGastoEmpresa=this.jTableDatosTipoGastoEmpresa;		
		final JPanel jPanelPaginacionTipoGastoEmpresa=this.jPanelPaginacionTipoGastoEmpresa;
		//final JScrollPane jScrollPanelDatosEdicionTipoGastoEmpresa=this.jScrollPanelDatosEdicionTipoGastoEmpresa;
		final JPanel jPanelAccionesTipoGastoEmpresa=this.jPanelAccionesTipoGastoEmpresa;
		
		JPanel jPanelCamposAuxiliarTipoGastoEmpresa=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarTipoGastoEmpresa=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			jPanelCamposAuxiliarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelCamposTipoGastoEmpresa;
			jPanelAccionesFormularioAuxiliarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelAccionesFormularioTipoGastoEmpresa;
		}
		
		final JPanel jPanelCamposTipoGastoEmpresa=jPanelCamposAuxiliarTipoGastoEmpresa;
		final JPanel jPanelAccionesFormularioTipoGastoEmpresa=jPanelAccionesFormularioAuxiliarTipoGastoEmpresa;
		
		
		final JMenuBar jmenuBarTipoGastoEmpresa=this.jmenuBarTipoGastoEmpresa;
		final JToolBar jTtoolBarTipoGastoEmpresa=this.jTtoolBarTipoGastoEmpresa;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarTipoGastoEmpresa=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarTipoGastoEmpresa=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			jmenuBarDetalleAuxiliarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jmenuBarDetalleTipoGastoEmpresa;
			jTtoolBarDetalleAuxiliarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jTtoolBarDetalleTipoGastoEmpresa;
		}
		
		final JMenuBar jmenuBarDetalleTipoGastoEmpresa=jmenuBarDetalleAuxiliarTipoGastoEmpresa;
		final JToolBar jTtoolBarDetalleTipoGastoEmpresa=jTtoolBarDetalleAuxiliarTipoGastoEmpresa;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasTipoGastoEmpresa;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesTipoGastoEmpresa;
			processRunnable.jTableDatos=jTableDatosTipoGastoEmpresa;
			processRunnable.jPanelCampos=jPanelCamposTipoGastoEmpresa;
			processRunnable.jPanelPaginacion=jPanelPaginacionTipoGastoEmpresa;
			processRunnable.jPanelAcciones=jPanelAccionesTipoGastoEmpresa;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioTipoGastoEmpresa;
			
			
			processRunnable.jmenuBar=jmenuBarTipoGastoEmpresa;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleTipoGastoEmpresa;
			processRunnable.jTtoolBar=jTtoolBarTipoGastoEmpresa;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleTipoGastoEmpresa;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasTipoGastoEmpresa ,jPanelParametrosReportesTipoGastoEmpresa,jTableDatosTipoGastoEmpresa, /*jScrollPanelDatosTipoGastoEmpresa,*/jPanelCamposTipoGastoEmpresa,jPanelPaginacionTipoGastoEmpresa, /*jScrollPanelDatosEdicionTipoGastoEmpresa,*/ jPanelAccionesTipoGastoEmpresa,jPanelAccionesFormularioTipoGastoEmpresa,jmenuBarTipoGastoEmpresa,jmenuBarDetalleTipoGastoEmpresa,jTtoolBarTipoGastoEmpresa,jTtoolBarDetalleTipoGastoEmpresa);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasTipoGastoEmpresa ,jPanelParametrosReportesTipoGastoEmpresa, jScrollPanelDatosTipoGastoEmpresa,jPanelPaginacionTipoGastoEmpresa, jScrollPanelDatosEdicionTipoGastoEmpresa, jPanelAccionesTipoGastoEmpresa,jPanelAccionesFormularioTipoGastoEmpresa,jmenuBarTipoGastoEmpresa,jmenuBarDetalleTipoGastoEmpresa,jTtoolBarTipoGastoEmpresa,jTtoolBarDetalleTipoGastoEmpresa);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessTipoGastoEmpresa() {// throws Exception 
		this.finishProcessTipoGastoEmpresa(true);
	}
	
	public void finishProcessTipoGastoEmpresa(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasTipoGastoEmpresa ,this.jPanelParametrosReportesTipoGastoEmpresa, this.jScrollPanelDatosTipoGastoEmpresa,this.jPanelPaginacionTipoGastoEmpresa, this.jScrollPanelDatosEdicionTipoGastoEmpresa, this.jPanelAccionesTipoGastoEmpresa,this.jPanelAccionesFormularioTipoGastoEmpresa,this.jmenuBarTipoGastoEmpresa,this.jmenuBarDetalleTipoGastoEmpresa,this.jTtoolBarTipoGastoEmpresa,this.jTtoolBarDetalleTipoGastoEmpresa);		
		
		final JTabbedPane jTabbedPaneBusquedasTipoGastoEmpresa=this.jTabbedPaneBusquedasTipoGastoEmpresa; 
		
		final JPanel jPanelParametrosReportesTipoGastoEmpresa=this.jPanelParametrosReportesTipoGastoEmpresa;
		//final JScrollPane jScrollPanelDatosTipoGastoEmpresa=this.jScrollPanelDatosTipoGastoEmpresa;
		final JTable jTableDatosTipoGastoEmpresa=this.jTableDatosTipoGastoEmpresa;		
		final JPanel jPanelPaginacionTipoGastoEmpresa=this.jPanelPaginacionTipoGastoEmpresa;
		//final JScrollPane jScrollPanelDatosEdicionTipoGastoEmpresa=this.jScrollPanelDatosEdicionTipoGastoEmpresa;
		final JPanel jPanelAccionesTipoGastoEmpresa=this.jPanelAccionesTipoGastoEmpresa;
		
		JPanel jPanelCamposAuxiliarTipoGastoEmpresa=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarTipoGastoEmpresa=new JPanel();
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			jPanelCamposAuxiliarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelCamposTipoGastoEmpresa;
			jPanelAccionesFormularioAuxiliarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelAccionesFormularioTipoGastoEmpresa;
		}
		
		final JPanel jPanelCamposTipoGastoEmpresa=jPanelCamposAuxiliarTipoGastoEmpresa;
		final JPanel jPanelAccionesFormularioTipoGastoEmpresa=jPanelAccionesFormularioAuxiliarTipoGastoEmpresa;
		
		
		final JMenuBar jmenuBarTipoGastoEmpresa=this.jmenuBarTipoGastoEmpresa;		
		final JToolBar jTtoolBarTipoGastoEmpresa=this.jTtoolBarTipoGastoEmpresa;
				
		JMenuBar jmenuBarDetalleAuxiliarTipoGastoEmpresa=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarTipoGastoEmpresa=new JToolBar();
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			jmenuBarDetalleAuxiliarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jmenuBarDetalleTipoGastoEmpresa;
			jTtoolBarDetalleAuxiliarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jTtoolBarDetalleTipoGastoEmpresa;		
		}
		
		final JMenuBar jmenuBarDetalleTipoGastoEmpresa=jmenuBarDetalleAuxiliarTipoGastoEmpresa;
		final JToolBar jTtoolBarDetalleTipoGastoEmpresa=jTtoolBarDetalleAuxiliarTipoGastoEmpresa;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasTipoGastoEmpresa;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesTipoGastoEmpresa;
			processRunnable.jTableDatos=jTableDatosTipoGastoEmpresa;
			processRunnable.jPanelCampos=jPanelCamposTipoGastoEmpresa;
			processRunnable.jPanelPaginacion=jPanelPaginacionTipoGastoEmpresa;
			processRunnable.jPanelAcciones=jPanelAccionesTipoGastoEmpresa;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioTipoGastoEmpresa;
			
			
			processRunnable.jmenuBar=jmenuBarTipoGastoEmpresa;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleTipoGastoEmpresa;
			processRunnable.jTtoolBar=jTtoolBarTipoGastoEmpresa;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleTipoGastoEmpresa;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasTipoGastoEmpresa ,jPanelParametrosReportesTipoGastoEmpresa, jTableDatosTipoGastoEmpresa,/*jScrollPanelDatosTipoGastoEmpresa,*/jPanelCamposTipoGastoEmpresa,jPanelPaginacionTipoGastoEmpresa, /*jScrollPanelDatosEdicionTipoGastoEmpresa,*/ jPanelAccionesTipoGastoEmpresa,jPanelAccionesFormularioTipoGastoEmpresa,jmenuBarTipoGastoEmpresa,jmenuBarDetalleTipoGastoEmpresa,jTtoolBarTipoGastoEmpresa,jTtoolBarDetalleTipoGastoEmpresa));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesTipoGastoEmpresa(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarTipoGastoEmpresa(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuTipoGastoEmpresa(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarTipoGastoEmpresa(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarTipoGastoEmpresa,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleTipoGastoEmpresa,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuTipoGastoEmpresa(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarTipoGastoEmpresa,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleTipoGastoEmpresa,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.tipogastoempresaConstantesFunciones.getsFinalQueryTipoGastoEmpresa();
		String  finalQueryPaginacionTodos=this.tipogastoempresaConstantesFunciones.getsFinalQueryTipoGastoEmpresa();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=TipoGastoEmpresaConstantesFunciones.getArrayColumnasGlobalesNoTipoGastoEmpresa(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=TipoGastoEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoGastoEmpresa(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,TipoGastoEmpresaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.tipogastoempresasEliminados= new ArrayList<TipoGastoEmpresa>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessTipoGastoEmpresa();
		
				///*TipoGastoEmpresaSessionBean*/this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			
			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=TipoGastoEmpresaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=TipoGastoEmpresaConstantesFunciones.getClassesForeignKeysOfTipoGastoEmpresa(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/tipogastoempresa."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			tipogastoempresasAux= new ArrayList<TipoGastoEmpresa>();
			
				
			tipogastoempresaLogic.setDatosCliente(this.datosCliente);
			tipogastoempresaLogic.setDatosDeep(this.datosDeep);
			tipogastoempresaLogic.setIsConDeep(true);
			
			
			tipogastoempresaLogic.getTipoGastoEmpresaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					tipogastoempresaLogic.getTodosTipoGastoEmpresas(finalQueryGlobal,pagination);
					
					//tipogastoempresaLogic.getTodosTipoGastoEmpresasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(tipogastoempresaLogic.getTipoGastoEmpresas()==null|| tipogastoempresaLogic.getTipoGastoEmpresas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							tipogastoempresasAux= new ArrayList<TipoGastoEmpresa>();
							tipogastoempresasAux.addAll(tipogastoempresaLogic.getTipoGastoEmpresas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipogastoempresasAux= new ArrayList<TipoGastoEmpresa>();
							tipogastoempresasAux.addAll(tipogastoempresas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							tipogastoempresaLogic.getTodosTipoGastoEmpresas(finalQueryGlobal+"",this.pagination);												
							
							//tipogastoempresaLogic.getTodosTipoGastoEmpresasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteTipoGastoEmpresas("Todos",tipogastoempresaLogic.getTipoGastoEmpresas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							tipogastoempresaLogic.setTipoGastoEmpresas(new ArrayList<TipoGastoEmpresa>());					
							tipogastoempresaLogic.getTipoGastoEmpresas().addAll(tipogastoempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipogastoempresas=new ArrayList<TipoGastoEmpresa>();
							tipogastoempresas.addAll(tipogastoempresasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idTipoGastoEmpresa=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idTipoGastoEmpresa=this.idActual;
				
				} else if(this.idTipoGastoEmpresaActual!=null && this.idTipoGastoEmpresaActual!=0L) {
					idTipoGastoEmpresa=idTipoGastoEmpresaActual;
				}
				
					
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndicePorId(idTipoGastoEmpresa);
				
				this.tipogastoempresas=new ArrayList<TipoGastoEmpresa>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					tipogastoempresaLogic.getEntity(idTipoGastoEmpresa);
					
					//tipogastoempresaLogic.getEntityWithConnection(idTipoGastoEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.setTipoGastoEmpresas(new ArrayList<TipoGastoEmpresa>());
					tipogastoempresaLogic.getTipoGastoEmpresas().add(tipogastoempresaLogic.getTipoGastoEmpresa());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresas=new ArrayList<TipoGastoEmpresa>();
					this.tipogastoempresas.add(tipogastoempresa);
				}
				
				if(tipogastoempresaLogic.getTipoGastoEmpresa()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorNombre")) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipogastoempresaLogic.getTipoGastoEmpresasBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipogastoempresaLogic.getTipoGastoEmpresas()==null||tipogastoempresaLogic.getTipoGastoEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipogastoempresas==null|| tipogastoempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresasAux=new ArrayList<TipoGastoEmpresa>();
						tipogastoempresasAux.addAll(tipogastoempresaLogic.getTipoGastoEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipogastoempresasAux=new ArrayList<TipoGastoEmpresa>();
							tipogastoempresasAux.addAll(tipogastoempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipogastoempresaLogic.getTipoGastoEmpresasBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoGastoEmpresas("BusquedaPorNombre",tipogastoempresaLogic.getTipoGastoEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoGastoEmpresas("BusquedaPorNombre",tipogastoempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresaLogic.setTipoGastoEmpresas(new ArrayList<TipoGastoEmpresa>());
						tipogastoempresaLogic.getTipoGastoEmpresas().addAll(tipogastoempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipogastoempresas=new ArrayList<TipoGastoEmpresa>();
							tipogastoempresas.addAll(tipogastoempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipogastoempresaLogic.getTipoGastoEmpresas()==null||tipogastoempresaLogic.getTipoGastoEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipogastoempresas==null|| tipogastoempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresasAux=new ArrayList<TipoGastoEmpresa>();
						tipogastoempresasAux.addAll(tipogastoempresaLogic.getTipoGastoEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipogastoempresasAux=new ArrayList<TipoGastoEmpresa>();
							tipogastoempresasAux.addAll(tipogastoempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipogastoempresaLogic.getTipoGastoEmpresasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoGastoEmpresas("FK_IdEmpresa",tipogastoempresaLogic.getTipoGastoEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoGastoEmpresas("FK_IdEmpresa",tipogastoempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresaLogic.setTipoGastoEmpresas(new ArrayList<TipoGastoEmpresa>());
						tipogastoempresaLogic.getTipoGastoEmpresas().addAll(tipogastoempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipogastoempresas=new ArrayList<TipoGastoEmpresa>();
							tipogastoempresas.addAll(tipogastoempresasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=tipogastoempresaLogic.getTipoGastoEmpresas()==null||tipogastoempresaLogic.getTipoGastoEmpresas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=tipogastoempresas==null|| tipogastoempresas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresasAux=new ArrayList<TipoGastoEmpresa>();
						tipogastoempresasAux.addAll(tipogastoempresaLogic.getTipoGastoEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipogastoempresasAux=new ArrayList<TipoGastoEmpresa>();
							tipogastoempresasAux.addAll(tipogastoempresas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							tipogastoempresaLogic.getTipoGastoEmpresasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=TipoGastoEmpresaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteTipoGastoEmpresas("FK_IdSucursal",tipogastoempresaLogic.getTipoGastoEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteTipoGastoEmpresas("FK_IdSucursal",tipogastoempresas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresaLogic.setTipoGastoEmpresas(new ArrayList<TipoGastoEmpresa>());
						tipogastoempresaLogic.getTipoGastoEmpresas().addAll(tipogastoempresasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipogastoempresas=new ArrayList<TipoGastoEmpresa>();
							tipogastoempresas.addAll(tipogastoempresasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesTipoGastoEmpresa();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessTipoGastoEmpresa();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=tipogastoempresaLogic.getTipoGastoEmpresas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=tipogastoempresas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=tipogastoempresaLogic.getTipoGastoEmpresas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=tipogastoempresas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(TipoGastoEmpresa tipogastoempresa) {
		Boolean permite=true;
		
		if(this.tipogastoempresa.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=TipoGastoEmpresaConstantesFunciones.getOrderByListaTipoGastoEmpresa();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=TipoGastoEmpresaConstantesFunciones.getOrderByListaTipoGastoEmpresa();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoGastoEmpresa tipogastoempresa:tipogastoempresaLogic.getTipoGastoEmpresas()) {
				if(tipogastoempresa.getsType().equals(Constantes2.S_TOTALES)) {
					tipogastoempresaTotales=tipogastoempresa;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoGastoEmpresa tipogastoempresa:this.tipogastoempresas) {
				if(tipogastoempresa.getsType().equals(Constantes2.S_TOTALES)) {
					tipogastoempresaTotales=tipogastoempresa;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.tipogastoempresaAux=new TipoGastoEmpresa();
			this.tipogastoempresaAux.setsType(Constantes2.S_TOTALES);
			this.tipogastoempresaAux.setIsNew(false);
			this.tipogastoempresaAux.setIsChanged(false);
			this.tipogastoempresaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				TipoGastoEmpresaConstantesFunciones.TotalizarValoresFilaTipoGastoEmpresa(this.tipogastoempresaLogic.getTipoGastoEmpresas(),this.tipogastoempresaAux);
				
				this.tipogastoempresaLogic.getTipoGastoEmpresas().add(this.tipogastoempresaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				TipoGastoEmpresaConstantesFunciones.TotalizarValoresFilaTipoGastoEmpresa(this.tipogastoempresas,this.tipogastoempresaAux);
				
				this.tipogastoempresas.add(this.tipogastoempresaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		tipogastoempresaTotales=new TipoGastoEmpresa();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.tipogastoempresaLogic.getTipoGastoEmpresas().remove(tipogastoempresaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.tipogastoempresas.remove(tipogastoempresaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		tipogastoempresaTotales=new TipoGastoEmpresa();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(TipoGastoEmpresa tipogastoempresa:tipogastoempresaLogic.getTipoGastoEmpresas()) {
				if(tipogastoempresa.getsType().equals(Constantes2.S_TOTALES)) {
					tipogastoempresaTotales=tipogastoempresa;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				TipoGastoEmpresaConstantesFunciones.TotalizarValoresFilaTipoGastoEmpresa(this.tipogastoempresaLogic.getTipoGastoEmpresas(),tipogastoempresaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(TipoGastoEmpresa tipogastoempresa:this.tipogastoempresas) {
				if(tipogastoempresa.getsType().equals(Constantes2.S_TOTALES)) {
					tipogastoempresaTotales=tipogastoempresa;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				TipoGastoEmpresaConstantesFunciones.TotalizarValoresFilaTipoGastoEmpresa(this.tipogastoempresas,tipogastoempresaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getTipoGastoEmpresasBusquedaPorNombre()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableFiscalBien()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableFiscalBien";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableFiscalServicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableFiscalServicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableGasto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableGasto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableIvaBien()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIvaBien";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableIvaServicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIvaServicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableRetencionBien()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableRetencionBien";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableRetencionServicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableRetencionServicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getTipoGastoEmpresasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getTipoGastoEmpresasBusquedaPorNombre(String sFinalQuery,String nombre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasBusquedaPorNombre(sFinalQuery,this.pagination,nombre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableFiscalBien(String sFinalQuery,Long id_cuenta_contable_fiscal_bien)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdCuentaContableFiscalBien(sFinalQuery,this.pagination,id_cuenta_contable_fiscal_bien);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableFiscalServicio(String sFinalQuery,Long id_cuenta_contable_fiscal_servicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdCuentaContableFiscalServicio(sFinalQuery,this.pagination,id_cuenta_contable_fiscal_servicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableGasto(String sFinalQuery,Long id_cuenta_contable_gasto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdCuentaContableGasto(sFinalQuery,this.pagination,id_cuenta_contable_gasto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableIvaBien(String sFinalQuery,Long id_cuenta_contable_iva_bien)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdCuentaContableIvaBien(sFinalQuery,this.pagination,id_cuenta_contable_iva_bien);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableIvaServicio(String sFinalQuery,Long id_cuenta_contable_iva_servicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdCuentaContableIvaServicio(sFinalQuery,this.pagination,id_cuenta_contable_iva_servicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableRetencionBien(String sFinalQuery,Long id_cuenta_contable_retencion_bien)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdCuentaContableRetencionBien(sFinalQuery,this.pagination,id_cuenta_contable_retencion_bien);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdCuentaContableRetencionServicio(String sFinalQuery,Long id_cuenta_contable_retencion_servicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdCuentaContableRetencionServicio(sFinalQuery,this.pagination,id_cuenta_contable_retencion_servicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getTipoGastoEmpresasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLogic.getTipoGastoEmpresasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosTipoGastoEmpresa() {
		this.isPermisoTodoTipoGastoEmpresa=false;
		this.isPermisoNuevoTipoGastoEmpresa=false;
		this.isPermisoActualizarTipoGastoEmpresa=false;
		this.isPermisoActualizarOriginalTipoGastoEmpresa=false;
		this.isPermisoEliminarTipoGastoEmpresa=false;
		this.isPermisoGuardarCambiosTipoGastoEmpresa=false;
		this.isPermisoConsultaTipoGastoEmpresa=false;
		this.isPermisoBusquedaTipoGastoEmpresa=false;
		this.isPermisoReporteTipoGastoEmpresa=false;		
		this.isPermisoOrdenTipoGastoEmpresa=false;		
		this.isPermisoPaginacionMedioTipoGastoEmpresa=false;		
		this.isPermisoPaginacionAltoTipoGastoEmpresa=false;
		this.isPermisoPaginacionTodoTipoGastoEmpresa=false;
		this.isPermisoCopiarTipoGastoEmpresa=false;		
		this.isPermisoVerFormTipoGastoEmpresa=false;		
		this.isPermisoDuplicarTipoGastoEmpresa=false;		
		this.isPermisoOrdenTipoGastoEmpresa=false;		
	}
	
	public void setPermisosUsuarioTipoGastoEmpresa(Boolean isPermiso) {
		this.isPermisoTodoTipoGastoEmpresa=isPermiso;
		this.isPermisoNuevoTipoGastoEmpresa=isPermiso;
		this.isPermisoActualizarTipoGastoEmpresa=isPermiso;
		this.isPermisoActualizarOriginalTipoGastoEmpresa=isPermiso;
		this.isPermisoEliminarTipoGastoEmpresa=isPermiso;
		this.isPermisoGuardarCambiosTipoGastoEmpresa=isPermiso;
		this.isPermisoConsultaTipoGastoEmpresa=isPermiso;
		this.isPermisoBusquedaTipoGastoEmpresa=isPermiso;
		this.isPermisoReporteTipoGastoEmpresa=isPermiso;
		this.isPermisoOrdenTipoGastoEmpresa=isPermiso;		
		this.isPermisoPaginacionMedioTipoGastoEmpresa=isPermiso;		
		this.isPermisoPaginacionAltoTipoGastoEmpresa=isPermiso;		
		this.isPermisoPaginacionTodoTipoGastoEmpresa=isPermiso;		
		this.isPermisoCopiarTipoGastoEmpresa=isPermiso;		
		this.isPermisoVerFormTipoGastoEmpresa=isPermiso;		
		this.isPermisoDuplicarTipoGastoEmpresa=isPermiso;
		this.isPermisoOrdenTipoGastoEmpresa=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioTipoGastoEmpresa(Boolean isPermiso) {
		//this.isPermisoTodoTipoGastoEmpresa=isPermiso;
		this.isPermisoNuevoTipoGastoEmpresa=isPermiso;
		this.isPermisoActualizarTipoGastoEmpresa=isPermiso;
		this.isPermisoActualizarOriginalTipoGastoEmpresa=isPermiso;
		this.isPermisoEliminarTipoGastoEmpresa=isPermiso;
		this.isPermisoGuardarCambiosTipoGastoEmpresa=isPermiso;
		//this.isPermisoConsultaTipoGastoEmpresa=isPermiso;
		//this.isPermisoBusquedaTipoGastoEmpresa=isPermiso;
		//this.isPermisoReporteTipoGastoEmpresa=isPermiso;
		//this.isPermisoOrdenTipoGastoEmpresa=isPermiso;		
		//this.isPermisoPaginacionMedioTipoGastoEmpresa=isPermiso;		
		//this.isPermisoPaginacionAltoTipoGastoEmpresa=isPermiso;		
		//this.isPermisoPaginacionTodoTipoGastoEmpresa=isPermiso;		
		//this.isPermisoCopiarTipoGastoEmpresa=isPermiso;		
		//this.isPermisoDuplicarTipoGastoEmpresa=isPermiso;
		//this.isPermisoOrdenTipoGastoEmpresa=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioTipoGastoEmpresaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(TipoGastoEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioTipoGastoEmpresaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioTipoGastoEmpresaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionTipoGastoEmpresaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioTipoGastoEmpresaClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioTipoGastoEmpresa() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(TipoGastoEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoTipoGastoEmpresa=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarTipoGastoEmpresa=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalTipoGastoEmpresa=this.isPermisoActualizarTipoGastoEmpresa;
			this.isPermisoEliminarTipoGastoEmpresa=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosTipoGastoEmpresa=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaTipoGastoEmpresa=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaTipoGastoEmpresa=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoTipoGastoEmpresa=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteTipoGastoEmpresa=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenTipoGastoEmpresa=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioTipoGastoEmpresa=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoTipoGastoEmpresa=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoTipoGastoEmpresa=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarTipoGastoEmpresa=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormTipoGastoEmpresa=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarTipoGastoEmpresa=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenTipoGastoEmpresa=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosTipoGastoEmpresa.setToolTipText(this.jTableDatosTipoGastoEmpresa.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioTipoGastoEmpresa(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioTipoGastoEmpresa(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(TipoGastoEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(TipoGastoEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioTipoGastoEmpresa() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyTipoGastoEmpresaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.cuentacontablegastosForeignKey=new ArrayList();
				this.cuentacontablefiscalbiensForeignKey=new ArrayList();
				this.cuentacontablefiscalserviciosForeignKey=new ArrayList();
				this.cuentacontableretencionbiensForeignKey=new ArrayList();
				this.cuentacontableretencionserviciosForeignKey=new ArrayList();
				this.cuentacontableivabiensForeignKey=new ArrayList();
				this.cuentacontableivaserviciosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyTipoGastoEmpresaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(TipoGastoEmpresaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyTipoGastoEmpresaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableGastoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableFiscalBienListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableFiscalServicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableRetencionBienListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableRetencionServicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIvaBienListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIvaServicioListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableGastoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablegastosForeignKey==null||this.cuentacontablegastosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableGastosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableFiscalBienListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablefiscalbiensForeignKey==null||this.cuentacontablefiscalbiensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableFiscalBiensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableFiscalServicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablefiscalserviciosForeignKey==null||this.cuentacontablefiscalserviciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableFiscalServiciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableRetencionBienListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableretencionbiensForeignKey==null||this.cuentacontableretencionbiensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableRetencionBiensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableRetencionServicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableretencionserviciosForeignKey==null||this.cuentacontableretencionserviciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableRetencionServiciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIvaBienListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableivabiensForeignKey==null||this.cuentacontableivabiensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIvaBiensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIvaServicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableivaserviciosForeignKey==null||this.cuentacontableivaserviciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIvaServiciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyTipoGastoEmpresaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			TipoGastoEmpresaParameterReturnGeneral tipogastoempresaReturnGeneral=new TipoGastoEmpresaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_empresaTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_empresaTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_sucursalTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_sucursalTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_formatoTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_formatoTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalCuentaContableGasto="";

				if(((this.cuentacontablegastosForeignKey==null||this.cuentacontablegastosForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_gastoTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_gastoTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableGasto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableGasto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableGasto=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableGasto, "");
						finalQueryGlobalCuentaContableGasto+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableGastosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableGasto=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidCuentaContableGastoActual();
					}
				} else {
					finalQueryGlobalCuentaContableGasto="NONE";
				}


				String finalQueryGlobalCuentaContableFiscalBien="";

				if(((this.cuentacontablefiscalbiensForeignKey==null||this.cuentacontablefiscalbiensForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_fiscal_bienTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_fiscal_bienTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFiscalBien()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableFiscalBien=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableFiscalBien=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableFiscalBien, "");
						finalQueryGlobalCuentaContableFiscalBien+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableFiscalBiensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableFiscalBien=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidCuentaContableFiscalBienActual();
					}
				} else {
					finalQueryGlobalCuentaContableFiscalBien="NONE";
				}


				String finalQueryGlobalCuentaContableFiscalServicio="";

				if(((this.cuentacontablefiscalserviciosForeignKey==null||this.cuentacontablefiscalserviciosForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFiscalServicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableFiscalServicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableFiscalServicio=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableFiscalServicio, "");
						finalQueryGlobalCuentaContableFiscalServicio+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableFiscalServiciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableFiscalServicio=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidCuentaContableFiscalServicioActual();
					}
				} else {
					finalQueryGlobalCuentaContableFiscalServicio="NONE";
				}


				String finalQueryGlobalCuentaContableRetencionBien="";

				if(((this.cuentacontableretencionbiensForeignKey==null||this.cuentacontableretencionbiensForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_retencion_bienTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_retencion_bienTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableRetencionBien()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableRetencionBien=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableRetencionBien=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableRetencionBien, "");
						finalQueryGlobalCuentaContableRetencionBien+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableRetencionBiensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableRetencionBien=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidCuentaContableRetencionBienActual();
					}
				} else {
					finalQueryGlobalCuentaContableRetencionBien="NONE";
				}


				String finalQueryGlobalCuentaContableRetencionServicio="";

				if(((this.cuentacontableretencionserviciosForeignKey==null||this.cuentacontableretencionserviciosForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_retencion_servicioTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_retencion_servicioTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableRetencionServicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableRetencionServicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableRetencionServicio=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableRetencionServicio, "");
						finalQueryGlobalCuentaContableRetencionServicio+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableRetencionServiciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableRetencionServicio=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidCuentaContableRetencionServicioActual();
					}
				} else {
					finalQueryGlobalCuentaContableRetencionServicio="NONE";
				}


				String finalQueryGlobalCuentaContableIvaBien="";

				if(((this.cuentacontableivabiensForeignKey==null||this.cuentacontableivabiensForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_iva_bienTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_iva_bienTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIvaBien()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIvaBien=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIvaBien=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIvaBien, "");
						finalQueryGlobalCuentaContableIvaBien+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIvaBiensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIvaBien=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidCuentaContableIvaBienActual();
					}
				} else {
					finalQueryGlobalCuentaContableIvaBien="NONE";
				}


				String finalQueryGlobalCuentaContableIvaServicio="";

				if(((this.cuentacontableivaserviciosForeignKey==null||this.cuentacontableivaserviciosForeignKey.size()<=0) && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_iva_servicioTipoGastoEmpresa)
					 || (this.esRecargarFks && this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_iva_servicioTipoGastoEmpresa)) {

					if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIvaServicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIvaServicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIvaServicio=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIvaServicio, "");
						finalQueryGlobalCuentaContableIvaServicio+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIvaServiciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIvaServicio=" WHERE " + ConstantesSql.ID + "="+tipogastoempresaSessionBean.getlidCuentaContableIvaServicioActual();
					}
				} else {
					finalQueryGlobalCuentaContableIvaServicio="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				tipogastoempresaReturnGeneral=tipogastoempresaLogic.cargarCombosLoteForeignKeyTipoGastoEmpresa(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalFormato,finalQueryGlobalCuentaContableGasto,finalQueryGlobalCuentaContableFiscalBien,finalQueryGlobalCuentaContableFiscalServicio,finalQueryGlobalCuentaContableRetencionBien,finalQueryGlobalCuentaContableRetencionServicio,finalQueryGlobalCuentaContableIvaBien,finalQueryGlobalCuentaContableIvaServicio);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=tipogastoempresaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=tipogastoempresaReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=tipogastoempresaReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableGasto.equals("NONE")) {
				this.cuentacontablegastosForeignKey=tipogastoempresaReturnGeneral.getcuentacontablegastosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableFiscalBien.equals("NONE")) {
				this.cuentacontablefiscalbiensForeignKey=tipogastoempresaReturnGeneral.getcuentacontablefiscalbiensForeignKey();
			}

			if(!finalQueryGlobalCuentaContableFiscalServicio.equals("NONE")) {
				this.cuentacontablefiscalserviciosForeignKey=tipogastoempresaReturnGeneral.getcuentacontablefiscalserviciosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableRetencionBien.equals("NONE")) {
				this.cuentacontableretencionbiensForeignKey=tipogastoempresaReturnGeneral.getcuentacontableretencionbiensForeignKey();
			}

			if(!finalQueryGlobalCuentaContableRetencionServicio.equals("NONE")) {
				this.cuentacontableretencionserviciosForeignKey=tipogastoempresaReturnGeneral.getcuentacontableretencionserviciosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIvaBien.equals("NONE")) {
				this.cuentacontableivabiensForeignKey=tipogastoempresaReturnGeneral.getcuentacontableivabiensForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIvaServicio.equals("NONE")) {
				this.cuentacontableivaserviciosForeignKey=tipogastoempresaReturnGeneral.getcuentacontableivaserviciosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyTipoGastoEmpresa()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyCuentaContableGasto();
			this.addItemDefectoCombosForeignKeyCuentaContableFiscalBien();
			this.addItemDefectoCombosForeignKeyCuentaContableFiscalServicio();
			this.addItemDefectoCombosForeignKeyCuentaContableRetencionBien();
			this.addItemDefectoCombosForeignKeyCuentaContableRetencionServicio();
			this.addItemDefectoCombosForeignKeyCuentaContableIvaBien();
			this.addItemDefectoCombosForeignKeyCuentaContableIvaServicio();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.tipogastoempresaSessionBean==null) {
				this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableGasto()throws Exception {
		try {

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableGasto()) {
				CuentaContable cuentacontablegasto=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablegasto,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablegasto.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablegastosForeignKey,cuentacontablegasto,true)) {

					this.cuentacontablegastosForeignKey.add(0,cuentacontablegasto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableFiscalBien()throws Exception {
		try {

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFiscalBien()) {
				CuentaContable cuentacontablefiscalbien=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablefiscalbien,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablefiscalbien.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablefiscalbiensForeignKey,cuentacontablefiscalbien,true)) {

					this.cuentacontablefiscalbiensForeignKey.add(0,cuentacontablefiscalbien);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableFiscalServicio()throws Exception {
		try {

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFiscalServicio()) {
				CuentaContable cuentacontablefiscalservicio=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablefiscalservicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablefiscalservicio.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablefiscalserviciosForeignKey,cuentacontablefiscalservicio,true)) {

					this.cuentacontablefiscalserviciosForeignKey.add(0,cuentacontablefiscalservicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableRetencionBien()throws Exception {
		try {

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableRetencionBien()) {
				CuentaContable cuentacontableretencionbien=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableretencionbien,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableretencionbien.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableretencionbiensForeignKey,cuentacontableretencionbien,true)) {

					this.cuentacontableretencionbiensForeignKey.add(0,cuentacontableretencionbien);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableRetencionServicio()throws Exception {
		try {

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableRetencionServicio()) {
				CuentaContable cuentacontableretencionservicio=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableretencionservicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableretencionservicio.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableretencionserviciosForeignKey,cuentacontableretencionservicio,true)) {

					this.cuentacontableretencionserviciosForeignKey.add(0,cuentacontableretencionservicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIvaBien()throws Exception {
		try {

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIvaBien()) {
				CuentaContable cuentacontableivabien=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableivabien,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableivabien.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableivabiensForeignKey,cuentacontableivabien,true)) {

					this.cuentacontableivabiensForeignKey.add(0,cuentacontableivabien);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIvaServicio()throws Exception {
		try {

			if(!this.tipogastoempresaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIvaServicio()) {
				CuentaContable cuentacontableivaservicio=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableivaservicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableivaservicio.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableivaserviciosForeignKey,cuentacontableivaservicio,true)) {

					this.cuentacontableivaserviciosForeignKey.add(0,cuentacontableivaservicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyTipoGastoEmpresa()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyTipoGastoEmpresa(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyTipoGastoEmpresa()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyTipoGastoEmpresa();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa)throws Exception {	
		try {
			
			this.setActualFormatoForeignKey(tipogastoempresa.getid_formato(),false,"Formulario");
			this.setActualCuentaContableGastoForeignKey(tipogastoempresa.getid_cuenta_contable_gasto(),false,"Formulario");
			this.setActualCuentaContableFiscalBienForeignKey(tipogastoempresa.getid_cuenta_contable_fiscal_bien(),false,"Formulario");
			this.setActualCuentaContableFiscalServicioForeignKey(tipogastoempresa.getid_cuenta_contable_fiscal_servicio(),false,"Formulario");
			this.setActualCuentaContableRetencionBienForeignKey(tipogastoempresa.getid_cuenta_contable_retencion_bien(),false,"Formulario");
			this.setActualCuentaContableRetencionServicioForeignKey(tipogastoempresa.getid_cuenta_contable_retencion_servicio(),false,"Formulario");
			this.setActualCuentaContableIvaBienForeignKey(tipogastoempresa.getid_cuenta_contable_iva_bien(),false,"Formulario");
			this.setActualCuentaContableIvaServicioForeignKey(tipogastoempresa.getid_cuenta_contable_iva_servicio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,String sTipoEvento)throws Exception {	
		try {
			
			

				if(tipogastoempresa.getCuentaContableGasto()!=null && !sTipoEvento.equals("id_cuenta_contable_gastoTipoGastoEmpresa")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablegastosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablegastosForeignKey.add(tipogastoempresa.getCuentaContableGasto());

					this.addItemDefectoCombosForeignKeyCuentaContableGasto();
					this.cargarCombosFrameCuentaContableGastosForeignKey("Todos");
				}

				if(tipogastoempresa.getCuentaContableFiscalBien()!=null && !sTipoEvento.equals("id_cuenta_contable_fiscal_bienTipoGastoEmpresa")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablefiscalbiensForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablefiscalbiensForeignKey.add(tipogastoempresa.getCuentaContableFiscalBien());

					this.addItemDefectoCombosForeignKeyCuentaContableFiscalBien();
					this.cargarCombosFrameCuentaContableFiscalBiensForeignKey("Todos");
				}

				if(tipogastoempresa.getCuentaContableFiscalServicio()!=null && !sTipoEvento.equals("id_cuenta_contable_fiscal_servicioTipoGastoEmpresa")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablefiscalserviciosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablefiscalserviciosForeignKey.add(tipogastoempresa.getCuentaContableFiscalServicio());

					this.addItemDefectoCombosForeignKeyCuentaContableFiscalServicio();
					this.cargarCombosFrameCuentaContableFiscalServiciosForeignKey("Todos");
				}

				if(tipogastoempresa.getCuentaContableRetencionBien()!=null && !sTipoEvento.equals("id_cuenta_contable_retencion_bienTipoGastoEmpresa")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableretencionbiensForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableretencionbiensForeignKey.add(tipogastoempresa.getCuentaContableRetencionBien());

					this.addItemDefectoCombosForeignKeyCuentaContableRetencionBien();
					this.cargarCombosFrameCuentaContableRetencionBiensForeignKey("Todos");
				}

				if(tipogastoempresa.getCuentaContableRetencionServicio()!=null && !sTipoEvento.equals("id_cuenta_contable_retencion_servicioTipoGastoEmpresa")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableretencionserviciosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableretencionserviciosForeignKey.add(tipogastoempresa.getCuentaContableRetencionServicio());

					this.addItemDefectoCombosForeignKeyCuentaContableRetencionServicio();
					this.cargarCombosFrameCuentaContableRetencionServiciosForeignKey("Todos");
				}

				if(tipogastoempresa.getCuentaContableIvaBien()!=null && !sTipoEvento.equals("id_cuenta_contable_iva_bienTipoGastoEmpresa")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableivabiensForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableivabiensForeignKey.add(tipogastoempresa.getCuentaContableIvaBien());

					this.addItemDefectoCombosForeignKeyCuentaContableIvaBien();
					this.cargarCombosFrameCuentaContableIvaBiensForeignKey("Todos");
				}

				if(tipogastoempresa.getCuentaContableIvaServicio()!=null && !sTipoEvento.equals("id_cuenta_contable_iva_servicioTipoGastoEmpresa")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableivaserviciosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableivaserviciosForeignKey.add(tipogastoempresa.getCuentaContableIvaServicio());

					this.addItemDefectoCombosForeignKeyCuentaContableIvaServicio();
					this.cargarCombosFrameCuentaContableIvaServiciosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyTipoGastoEmpresa()throws Exception {	
		try {
			
			this.setActualFormatoForeignKey(this.tipogastoempresaConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualCuentaContableGastoForeignKey(this.tipogastoempresaConstantesFunciones.getid_cuenta_contable_gasto(),false,"Formulario");
			this.setActualCuentaContableFiscalBienForeignKey(this.tipogastoempresaConstantesFunciones.getid_cuenta_contable_fiscal_bien(),false,"Formulario");
			this.setActualCuentaContableFiscalServicioForeignKey(this.tipogastoempresaConstantesFunciones.getid_cuenta_contable_fiscal_servicio(),false,"Formulario");
			this.setActualCuentaContableRetencionBienForeignKey(this.tipogastoempresaConstantesFunciones.getid_cuenta_contable_retencion_bien(),false,"Formulario");
			this.setActualCuentaContableRetencionServicioForeignKey(this.tipogastoempresaConstantesFunciones.getid_cuenta_contable_retencion_servicio(),false,"Formulario");
			this.setActualCuentaContableIvaBienForeignKey(this.tipogastoempresaConstantesFunciones.getid_cuenta_contable_iva_bien(),false,"Formulario");
			this.setActualCuentaContableIvaServicioForeignKey(this.tipogastoempresaConstantesFunciones.getid_cuenta_contable_iva_servicio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyTipoGastoEmpresa()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyTipoGastoEmpresa()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyTipoGastoEmpresa()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroTipoGastoEmpresa()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyTipoGastoEmpresa()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableGastosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableFiscalBiensForeignKey("Todos");
			this.cargarCombosFrameCuentaContableFiscalServiciosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableRetencionBiensForeignKey("Todos");
			this.cargarCombosFrameCuentaContableRetencionServiciosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIvaBiensForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIvaServiciosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyTipoGastoEmpresa(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableGastosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableFiscalBiensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableFiscalServiciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableRetencionBiensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableRetencionServiciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIvaBiensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIvaServiciosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyTipoGastoEmpresa()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.getItemCount()>0) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	




















	
	

	public TipoGastoEmpresaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public TipoGastoEmpresaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public TipoGastoEmpresaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean(); 
		this.tipogastoempresaConstantesFunciones=new TipoGastoEmpresaConstantesFunciones(); 
		this.tipogastoempresaBean=new TipoGastoEmpresa();//(this.tipogastoempresaConstantesFunciones); 		
		this.tipogastoempresaReturnGeneral=new TipoGastoEmpresaParameterReturnGeneral(); 
		
		this.tipogastoempresaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.tipogastoempresaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public TipoGastoEmpresaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public TipoGastoEmpresaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public TipoGastoEmpresaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessTipoGastoEmpresa(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.tipogastoempresaConstantesFunciones=new TipoGastoEmpresaConstantesFunciones(); 
			this.tipogastoempresaBean=new TipoGastoEmpresa();//this.tipogastoempresaConstantesFunciones); 			
			this.tipogastoempresaReturnGeneral=new TipoGastoEmpresaParameterReturnGeneral(); 
		
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Tipo Gasto Empresa Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			
			
			this.tipogastoempresa=new TipoGastoEmpresa();
			this.tipogastoempresas = new ArrayList<TipoGastoEmpresa>();
			this.tipogastoempresasAux = new ArrayList<TipoGastoEmpresa>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic=new TipoGastoEmpresaLogic();
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}
			
			//this.tipogastoempresaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.tipogastoempresaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormTipoGastoEmpresa);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoTipoGastoEmpresa);	
					}
					
					if(this.jInternalFrameImportacionTipoGastoEmpresa!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionTipoGastoEmpresa);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByTipoGastoEmpresa!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByTipoGastoEmpresa);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormTipoGastoEmpresa);
				this.jInternalFrameDetalleFormTipoGastoEmpresa.setVisible(false);
				this.jInternalFrameDetalleFormTipoGastoEmpresa.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoTipoGastoEmpresa);
					this.jInternalFrameReporteDinamicoTipoGastoEmpresa.setVisible(false);
					this.jInternalFrameReporteDinamicoTipoGastoEmpresa.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionTipoGastoEmpresa!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionTipoGastoEmpresa);
					this.jInternalFrameImportacionTipoGastoEmpresa.setVisible(false);
					this.jInternalFrameImportacionTipoGastoEmpresa.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByTipoGastoEmpresa!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByTipoGastoEmpresa);
					this.jInternalFrameOrderByTipoGastoEmpresa.setVisible(false);
					this.jInternalFrameOrderByTipoGastoEmpresa.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idTipoGastoEmpresaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=TipoGastoEmpresaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.tipogastoempresaReturnGeneral=new TipoGastoEmpresaParameterReturnGeneral();
			
			this.tipogastoempresaParameterGeneral=new TipoGastoEmpresaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.tipogastoempresaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(TipoGastoEmpresaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.tipogastoempresaSessionBean.getEsGuardarRelacionado(),this.tipogastoempresaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.tipogastoempresaSessionBean.getEsGuardarRelacionado(),this.tipogastoempresaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=false;
			this.isVisibilidadCeldaDuplicarTipoGastoEmpresa=true;
			this.isVisibilidadCeldaCopiarTipoGastoEmpresa=true;
			this.isVisibilidadCeldaVerFormTipoGastoEmpresa=true;
			this.isVisibilidadCeldaOrdenTipoGastoEmpresa=true;
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=false;
			
			
			this.isVisibilidadBusquedaPorNombre=true;
			this.isVisibilidadFK_IdCuentaContableFiscalBien=true;
			this.isVisibilidadFK_IdCuentaContableFiscalServicio=true;
			this.isVisibilidadFK_IdCuentaContableGasto=true;
			this.isVisibilidadFK_IdCuentaContableIvaBien=true;
			this.isVisibilidadFK_IdCuentaContableIvaServicio=true;
			this.isVisibilidadFK_IdCuentaContableRetencionBien=true;
			this.isVisibilidadFK_IdCuentaContableRetencionServicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdSucursal=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosTipoGastoEmpresa();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioTipoGastoEmpresa(false);
			
			this.setPermisosUsuarioTipoGastoEmpresa();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado() 
				|| (this.tipogastoempresaSessionBean.getEsGuardarRelacionado() && this.tipogastoempresaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioTipoGastoEmpresaClasesRelacionadas();
			}
			
			if(this.tipogastoempresaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioTipoGastoEmpresaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosTipoGastoEmpresa();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualTipoGastoEmpresa();
			}
			
			if(!this.isPermisoBusquedaTipoGastoEmpresa) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioTipoGastoEmpresa,this.isPermisoPaginacionMedioTipoGastoEmpresa,this.isPermisoPaginacionTodoTipoGastoEmpresa);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(TipoGastoEmpresaConstantesFunciones.getTiposSeleccionarTipoGastoEmpresa());
				
				this.tiposColumnasSelect=TipoGastoEmpresaConstantesFunciones.getTiposSeleccionarTipoGastoEmpresa(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioTipoGastoEmpresa();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioTipoGastoEmpresa(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioTipoGastoEmpresa(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesTipoGastoEmpresa() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.formatoLogic=new FormatoLogic();
			this.cuentacontablegastoLogic=new CuentaContableLogic();
			this.cuentacontablefiscalbienLogic=new CuentaContableLogic();
			this.cuentacontablefiscalservicioLogic=new CuentaContableLogic();
			this.cuentacontableretencionbienLogic=new CuentaContableLogic();
			this.cuentacontableretencionservicioLogic=new CuentaContableLogic();
			this.cuentacontableivabienLogic=new CuentaContableLogic();
			this.cuentacontableivaservicioLogic=new CuentaContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				tipogastoempresaImplementable= (TipoGastoEmpresaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+TipoGastoEmpresaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				tipogastoempresaImplementableHome= (TipoGastoEmpresaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+TipoGastoEmpresaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.tipogastoempresas= new ArrayList<TipoGastoEmpresa>();
			this.tipogastoempresasEliminados= new ArrayList<TipoGastoEmpresa>();
						
			this.isEsNuevoTipoGastoEmpresa=false;
			this.esParaAccionDesdeFormularioTipoGastoEmpresa=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCuentaContableGastoActual=0L;
			this.idCuentaContableFiscalBienActual=0L;
			this.idCuentaContableFiscalServicioActual=0L;
			this.idCuentaContableRetencionBienActual=0L;
			this.idCuentaContableRetencionServicioActual=0L;
			this.idCuentaContableIvaBienActual=0L;
			this.idCuentaContableIvaServicioActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.cuentacontablegastosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablefiscalbiensForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablefiscalserviciosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableretencionbiensForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableretencionserviciosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableivabiensForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableivaserviciosForeignKey=new ArrayList<CuentaContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyTipoGastoEmpresa(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroTipoGastoEmpresa();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=TipoGastoEmpresaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingTipoGastoEmpresa(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioTipoGastoEmpresa();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioTipoGastoEmpresa();
			}
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasTipoGastoEmpresa.getTabCount(); i++) {
					this.jTabbedPaneBusquedasTipoGastoEmpresa.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasTipoGastoEmpresa.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessTipoGastoEmpresa(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga TipoGastoEmpresa: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectTipoGastoEmpresa() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesTipoGastoEmpresa")) {
				iIndex=this.jInternalFrameDetalleFormTipoGastoEmpresa.jTabbedPaneRelacionesTipoGastoEmpresa.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormTipoGastoEmpresa.jTabbedPaneRelacionesTipoGastoEmpresa.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessTipoGastoEmpresa();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyTipoGastoEmpresa(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyTipoGastoEmpresa(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyTipoGastoEmpresa(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyTipoGastoEmpresaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyTipoGastoEmpresa();
		
		this.cargarCombosFrameForeignKeyTipoGastoEmpresa();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyTipoGastoEmpresa();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyTipoGastoEmpresa();
		}
	}
	
	

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableGasto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableGastoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableGasto();
				this.cargarCombosFrameCuentaContableGastosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableGasto(this.cuentacontablegastosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableFiscalBien(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableFiscalBienListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableFiscalBien();
				this.cargarCombosFrameCuentaContableFiscalBiensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableFiscalBien(this.cuentacontablefiscalbiensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableFiscalServicio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableFiscalServicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableFiscalServicio();
				this.cargarCombosFrameCuentaContableFiscalServiciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableFiscalServicio(this.cuentacontablefiscalserviciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableRetencionBien(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableRetencionBienListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableRetencionBien();
				this.cargarCombosFrameCuentaContableRetencionBiensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableRetencionBien(this.cuentacontableretencionbiensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableRetencionServicio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableRetencionServicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableRetencionServicio();
				this.cargarCombosFrameCuentaContableRetencionServiciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableRetencionServicio(this.cuentacontableretencionserviciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIvaBien(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIvaBienListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIvaBien();
				this.cargarCombosFrameCuentaContableIvaBiensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableIvaBien(this.cuentacontableivabiensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIvaServicio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIvaServicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIvaServicio();
				this.cargarCombosFrameCuentaContableIvaServiciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableIvaServicio(this.cuentacontableivaserviciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoTipoGastoEmpresaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.tipogastoempresaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
			
			if(jTableDatosTipoGastoEmpresa.getRowCount()>=1) {
				jTableDatosTipoGastoEmpresa.removeRowSelectionInterval(0, jTableDatosTipoGastoEmpresa.getRowCount()-1);						
			}
			
			this.isEsNuevoTipoGastoEmpresa=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoTipoGastoEmpresa(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesTipoGastoEmpresa(true);			
			//this.tipogastoempresa=new TipoGastoEmpresa();
			//this.tipogastoempresa.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTipoGastoEmpresa(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoGastoEmpresa() ;
			
			if(TipoGastoEmpresaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTipoGastoEmpresa(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.tipogastoempresa);	
			this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);				
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
			if(this.tipogastoempresaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar TipoGastoEmpresa: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarTipoGastoEmpresaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosTipoGastoEmpresa.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosTipoGastoEmpresa.getSelectedRows().length;			
			}
			
			tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoTipoGastoEmpresa--;			
				//TipoGastoEmpresa tipogastoempresaAux= new TipoGastoEmpresa();			
				//tipogastoempresaAux.setId(this.iIdNuevoTipoGastoEmpresa);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//TipoGastoEmpresa tipogastoempresaOrigen=new TipoGastoEmpresa();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(TipoGastoEmpresa tipogastoempresaOrigen : tipogastoempresasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							tipogastoempresaOrigen =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							tipogastoempresaOrigen =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaTipoGastoEmpresa();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.tipogastoempresa.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosTipoGastoEmpresa(tipogastoempresaOrigen,this.tipogastoempresa,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.tipogastoempresaLogic.getTipoGastoEmpresas().add(this.tipogastoempresaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.tipogastoempresas.add(this.tipogastoempresaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
				
				this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(this.getIndiceNuevoTipoGastoEmpresa(), this.getIndiceNuevoTipoGastoEmpresa());
				
				int iLastRow =  this.jTableDatosTipoGastoEmpresa.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosTipoGastoEmpresa.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosTipoGastoEmpresa.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();									
		
			TipoGastoEmpresa tipogastoempresaOrigen=new TipoGastoEmpresa();
			TipoGastoEmpresa tipogastoempresaDestino=new TipoGastoEmpresa();
				
			tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosTipoGastoEmpresa.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || tipogastoempresasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosTipoGastoEmpresa.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresaOrigen =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						tipogastoempresaOrigen =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						tipogastoempresaDestino =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						tipogastoempresaDestino =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				tipogastoempresaOrigen =tipogastoempresasSeleccionados.get(0);
				tipogastoempresaDestino =tipogastoempresasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosTipoGastoEmpresa(tipogastoempresaOrigen,tipogastoempresaDestino,true,false);
				
				tipogastoempresaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(tipogastoempresaDestino,tipogastoempresaLogic.getTipoGastoEmpresas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(tipogastoempresaDestino,tipogastoempresas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
				
				//this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(this.getIndiceNuevoTipoGastoEmpresa(), this.getIndiceNuevoTipoGastoEmpresa());
				
				int iLastRow =  this.jTableDatosTipoGastoEmpresa.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosTipoGastoEmpresa.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosTipoGastoEmpresa.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormTipoGastoEmpresa.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesTipoGastoEmpresa.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(!isVisible);
			this.jPanelPaginacionTipoGastoEmpresa.setVisible(!isVisible);
			this.jPanelAccionesTipoGastoEmpresa.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameTipoGastoEmpresa();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoTipoGastoEmpresa();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionTipoGastoEmpresa();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByTipoGastoEmpresa();
			
			this.abrirFrameOrderByTipoGastoEmpresa();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByTipoGastoEmpresa();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleTipoGastoEmpresa(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormTipoGastoEmpresa);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormTipoGastoEmpresa.isMaximum()) {
					this.jInternalFrameDetalleFormTipoGastoEmpresa.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormTipoGastoEmpresa.setSize(this.jInternalFrameDetalleFormTipoGastoEmpresa.iWidthFormulario,this.jInternalFrameDetalleFormTipoGastoEmpresa.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormTipoGastoEmpresa.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormTipoGastoEmpresa.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormTipoGastoEmpresa.isMaximum()) {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jContentPaneDetalleTipoGastoEmpresa.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormTipoGastoEmpresa.jTabbedPaneRelacionesTipoGastoEmpresa.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormTipoGastoEmpresa.jContentPaneDetalleTipoGastoEmpresa.getWidth(),TipoGastoEmpresaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormTipoGastoEmpresa.jTabbedPaneRelacionesTipoGastoEmpresa.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormTipoGastoEmpresa.jContentPaneDetalleTipoGastoEmpresa.getWidth(),TipoGastoEmpresaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormTipoGastoEmpresa.jTabbedPaneRelacionesTipoGastoEmpresa.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormTipoGastoEmpresa.jContentPaneDetalleTipoGastoEmpresa.getWidth(),TipoGastoEmpresaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormTipoGastoEmpresa.setVisible(true);
	        this.jInternalFrameDetalleFormTipoGastoEmpresa.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByTipoGastoEmpresa() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByTipoGastoEmpresa==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByTipoGastoEmpresa=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByTipoGastoEmpresa,false,this);
				} else {
					this.jInternalFrameOrderByTipoGastoEmpresa=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByTipoGastoEmpresa,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByTipoGastoEmpresa);
				this.jInternalFrameOrderByTipoGastoEmpresa.setVisible(false);
				this.jInternalFrameOrderByTipoGastoEmpresa.setSelected(false);
				
				this.jInternalFrameOrderByTipoGastoEmpresa.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByTipoGastoEmpresa"));
				
				this.inicializarActualizarBindingTablaOrderByTipoGastoEmpresa();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionTipoGastoEmpresa() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionTipoGastoEmpresa==null) {
				
				this.jInternalFrameImportacionTipoGastoEmpresa=new ImportacionJInternalFrame(TipoGastoEmpresaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionTipoGastoEmpresa);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionTipoGastoEmpresa);
				this.jInternalFrameImportacionTipoGastoEmpresa.setVisible(false);
				this.jInternalFrameImportacionTipoGastoEmpresa.setSelected(false);


				this.jInternalFrameImportacionTipoGastoEmpresa.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionTipoGastoEmpresa"));
				this.jInternalFrameImportacionTipoGastoEmpresa.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionTipoGastoEmpresa"));
				this.jInternalFrameImportacionTipoGastoEmpresa.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionTipoGastoEmpresa"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoTipoGastoEmpresa() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa==null) {
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa=new ReporteDinamicoJInternalFrame(TipoGastoEmpresaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoTipoGastoEmpresa);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoTipoGastoEmpresa);
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.setVisible(false);
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTipoGastoEmpresa"));
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTipoGastoEmpresa"));
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTipoGastoEmpresa"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTipoGastoEmpresa();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleTipoGastoEmpresa() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormTipoGastoEmpresa);
			
	       	this.jInternalFrameDetalleFormTipoGastoEmpresa.setVisible(false);
	        this.jInternalFrameDetalleFormTipoGastoEmpresa.setSelected(false);
			
			//this.jInternalFrameDetalleFormTipoGastoEmpresa.dispose();
			//this.jInternalFrameDetalleFormTipoGastoEmpresa=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoTipoGastoEmpresa() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoTipoGastoEmpresa.setVisible(true);
	        this.jInternalFrameReporteDinamicoTipoGastoEmpresa.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionTipoGastoEmpresa() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionTipoGastoEmpresa.setVisible(true);
	        this.jInternalFrameImportacionTipoGastoEmpresa.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByTipoGastoEmpresa() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByTipoGastoEmpresa.setVisible(true);
	        this.jInternalFrameOrderByTipoGastoEmpresa.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByTipoGastoEmpresa() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByTipoGastoEmpresa.setVisible(false);
	        this.jInternalFrameOrderByTipoGastoEmpresa.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoTipoGastoEmpresa() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoTipoGastoEmpresa.setVisible(false);
	        this.jInternalFrameReporteDinamicoTipoGastoEmpresa.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionTipoGastoEmpresa() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionTipoGastoEmpresa.setVisible(false);
	        this.jInternalFrameImportacionTipoGastoEmpresa.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContableGasto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableGasto";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
						TitledBorder titledBorderCuentaContableGasto=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableGasto.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableGasto(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableFiscalBien(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableFiscalBien";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
						TitledBorder titledBorderCuentaContableFiscalBien=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableFiscalBien.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableFiscalBien(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableFiscalServicio(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableFiscalServicio";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
						TitledBorder titledBorderCuentaContableFiscalServicio=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableFiscalServicio.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableFiscalServicio(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableRetencionBien(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableRetencionBien";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
						TitledBorder titledBorderCuentaContableRetencionBien=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableRetencionBien.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableRetencionBien(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableRetencionServicio(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableRetencionServicio";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
						TitledBorder titledBorderCuentaContableRetencionServicio=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableRetencionServicio.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableRetencionServicio(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIvaBien(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIvaBien";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
						TitledBorder titledBorderCuentaContableIvaBien=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIvaBien.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIvaBien(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIvaServicio(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIvaServicio";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
						TitledBorder titledBorderCuentaContableIvaServicio=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIvaServicio.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIvaServicio(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarTipoGastoEmpresa(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarTipoGastoEmpresa(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesTipoGastoEmpresa(true);
			//this.isEsNuevoTipoGastoEmpresa=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTipoGastoEmpresa(false) ;
			
			if(tipogastoempresaSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(TipoGastoEmpresaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTipoGastoEmpresa(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoGastoEmpresa(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaTipoGastoEmpresaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarTipoGastoEmpresa(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesTipoGastoEmpresa(true);
			//this.isEsNuevoTipoGastoEmpresa=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.tipogastoempresa.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesTipoGastoEmpresa(false) ;
			
			if(TipoGastoEmpresaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleTipoGastoEmpresa(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoGastoEmpresa(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CuentaContableGasto")) {
				if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_gastoTipoGastoEmpresa) {
					this.cargarCombosCuentaContableGastosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
					this.cargarCombosFrameCuentaContableGastosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_gasto (id);

				this.recargarComboTablaCuentaContableGasto(this.cuentacontablegastosForeignKey);

			}
			
			if(sType.equals("CuentaContableFiscalBien")) {
				if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_fiscal_bienTipoGastoEmpresa) {
					this.cargarCombosCuentaContableFiscalBiensForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
					this.cargarCombosFrameCuentaContableFiscalBiensForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_fiscal_bien (id);

				this.recargarComboTablaCuentaContableFiscalBien(this.cuentacontablefiscalbiensForeignKey);

			}
			
			if(sType.equals("CuentaContableFiscalServicio")) {
				if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa) {
					this.cargarCombosCuentaContableFiscalServiciosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
					this.cargarCombosFrameCuentaContableFiscalServiciosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_fiscal_servicio (id);

				this.recargarComboTablaCuentaContableFiscalServicio(this.cuentacontablefiscalserviciosForeignKey);

			}
			
			if(sType.equals("CuentaContableRetencionBien")) {
				if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_retencion_bienTipoGastoEmpresa) {
					this.cargarCombosCuentaContableRetencionBiensForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
					this.cargarCombosFrameCuentaContableRetencionBiensForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_retencion_bien (id);

				this.recargarComboTablaCuentaContableRetencionBien(this.cuentacontableretencionbiensForeignKey);

			}
			
			if(sType.equals("CuentaContableRetencionServicio")) {
				if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_retencion_servicioTipoGastoEmpresa) {
					this.cargarCombosCuentaContableRetencionServiciosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
					this.cargarCombosFrameCuentaContableRetencionServiciosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_retencion_servicio (id);

				this.recargarComboTablaCuentaContableRetencionServicio(this.cuentacontableretencionserviciosForeignKey);

			}
			
			if(sType.equals("CuentaContableIvaBien")) {
				if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_iva_bienTipoGastoEmpresa) {
					this.cargarCombosCuentaContableIvaBiensForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
					this.cargarCombosFrameCuentaContableIvaBiensForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_iva_bien (id);

				this.recargarComboTablaCuentaContableIvaBien(this.cuentacontableivabiensForeignKey);

			}
			
			if(sType.equals("CuentaContableIvaServicio")) {
				if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_iva_servicioTipoGastoEmpresa) {
					this.cargarCombosCuentaContableIvaServiciosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
					this.cargarCombosFrameCuentaContableIvaServiciosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_iva_servicio (id);

				this.recargarComboTablaCuentaContableIvaServicio(this.cuentacontableivaserviciosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableGasto(List<CuentaContable> cuentacontablegastosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableGasto=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO));
		TableCellEditor tableCellEditorCuentaContableGasto =tableColumnCuentaContableGasto.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableGasto;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablegastosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablegastosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableFiscalBien(List<CuentaContable> cuentacontablefiscalbiensForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableFiscalBien=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN));
		TableCellEditor tableCellEditorCuentaContableFiscalBien =tableColumnCuentaContableFiscalBien.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableFiscalBien;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablefiscalbiensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablefiscalbiensForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableFiscalServicio(List<CuentaContable> cuentacontablefiscalserviciosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableFiscalServicio=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO));
		TableCellEditor tableCellEditorCuentaContableFiscalServicio =tableColumnCuentaContableFiscalServicio.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableFiscalServicio;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablefiscalserviciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablefiscalserviciosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableRetencionBien(List<CuentaContable> cuentacontableretencionbiensForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableRetencionBien=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN));
		TableCellEditor tableCellEditorCuentaContableRetencionBien =tableColumnCuentaContableRetencionBien.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableRetencionBien;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableretencionbiensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableretencionbiensForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableRetencionServicio(List<CuentaContable> cuentacontableretencionserviciosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableRetencionServicio=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO));
		TableCellEditor tableCellEditorCuentaContableRetencionServicio =tableColumnCuentaContableRetencionServicio.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableRetencionServicio;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableretencionserviciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableretencionserviciosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIvaBien(List<CuentaContable> cuentacontableivabiensForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIvaBien=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN));
		TableCellEditor tableCellEditorCuentaContableIvaBien =tableColumnCuentaContableIvaBien.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIvaBien;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableivabiensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableivabiensForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIvaServicio(List<CuentaContable> cuentacontableivaserviciosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIvaServicio=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO));
		TableCellEditor tableCellEditorCuentaContableIvaServicio =tableColumnCuentaContableIvaServicio.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIvaServicio;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableivaserviciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableivaserviciosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_gasto (Long id) throws Exception {
		this.setActualCuentaContableGastoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_fiscal_bien (Long id) throws Exception {
		this.setActualCuentaContableFiscalBienForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_fiscal_servicio (Long id) throws Exception {
		this.setActualCuentaContableFiscalServicioForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_retencion_bien (Long id) throws Exception {
		this.setActualCuentaContableRetencionBienForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_retencion_servicio (Long id) throws Exception {
		this.setActualCuentaContableRetencionServicioForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_iva_bien (Long id) throws Exception {
		this.setActualCuentaContableIvaBienForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_iva_servicio (Long id) throws Exception {
		this.setActualCuentaContableIvaServicioForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesTipoGastoEmpresa(false);
			
			//if(!this.isEsNuevoTipoGastoEmpresa) {								
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				
			}
			
			if(this.permiteMantenimiento(this.tipogastoempresa)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoTipoGastoEmpresa=true;
					this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
					this.isEsNuevoTipoGastoEmpresa=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoTipoGastoEmpresa=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoTipoGastoEmpresa=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesTipoGastoEmpresa(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTipoGastoEmpresa(false);
				
				this.habilitarDeshabilitarControlesTipoGastoEmpresa(false);
			
												
				
				if(TipoGastoEmpresaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleTipoGastoEmpresa();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoTipoGastoEmpresaActionPerformed(evt,tipogastoempresaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualTipoGastoEmpresa(this.tipogastoempresa,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,tipogastoempresaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.tipogastoempresa.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				this.tipogastoempresa.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				this.tipogastoempresa.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.tipogastoempresa)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((TipoGastoEmpresaModel) this.jTableDatosTipoGastoEmpresa.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoTipoGastoEmpresa=true;
				this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
				this.isEsNuevoTipoGastoEmpresa=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesTipoGastoEmpresa(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTipoGastoEmpresa(false);
				
				this.habilitarDeshabilitarControlesTipoGastoEmpresa(false);
				
				
				
				if(TipoGastoEmpresaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleTipoGastoEmpresa();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosTipoGastoEmpresa.getRowCount()>=1) {
				jTableDatosTipoGastoEmpresa.removeRowSelectionInterval(0, jTableDatosTipoGastoEmpresa.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesTipoGastoEmpresa(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesTipoGastoEmpresa(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualTipoGastoEmpresa(false) ;
			
			this.isEsNuevoTipoGastoEmpresa=false;
			
			if(TipoGastoEmpresaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleTipoGastoEmpresa();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingTipoGastoEmpresa(false);
				
				//SI ES MANUAL
				if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualTipoGastoEmpresa();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoTipoGastoEmpresa--;			
			//TipoGastoEmpresa tipogastoempresaAux= new TipoGastoEmpresa();			
			//tipogastoempresaAux.setId(this.iIdNuevoTipoGastoEmpresa);
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaTipoGastoEmpresa();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
			
			this.tipogastoempresa.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.tipogastoempresaLogic.getTipoGastoEmpresas().add(this.tipogastoempresaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.tipogastoempresas.add(this.tipogastoempresaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
			
			this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(this.getIndiceNuevoTipoGastoEmpresa(), this.getIndiceNuevoTipoGastoEmpresa());
			
			int iLastRow =  this.jTableDatosTipoGastoEmpresa.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosTipoGastoEmpresa.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosTipoGastoEmpresa.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoGastoEmpresa(false);
			
			//SI ES MANUAL
			if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTipoGastoEmpresa();
			}
			
			//this.abrirFrameTreeTipoGastoEmpresa();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Tipo Gasto EmpresaS ?", "MANTENIMIENTO DE Tipo Gasto Empresa", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionTipoGastoEmpresa.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralTipoGastoEmpresa();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.tipogastoempresaReturnGeneral=tipogastoempresaLogic.procesarImportacionTipoGastoEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.tipogastoempresaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarTipoGastoEmpresaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionTipoGastoEmpresa.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionTipoGastoEmpresa.setFileImportacion(this.jInternalFrameImportacionTipoGastoEmpresa.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionTipoGastoEmpresa.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionTipoGastoEmpresa.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionTipoGastoEmpresa.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionTipoGastoEmpresa.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();		

		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("TipoGastoEmpresaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"TipoGastoEmpresaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteTipoGastoEmpresas("Todos",tipogastoempresasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableGasto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableGasto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableGasto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableGasto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableFiscalBien_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableFiscalBien_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableFiscalBien_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableFiscalBien_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableFiscalServicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableFiscalServicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableFiscalServicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableFiscalServicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableRetencionBien_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableRetencionBien_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableRetencionBien_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableRetencionBien_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableRetencionServicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableRetencionServicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableRetencionServicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableRetencionServicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIvaBien_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIvaBien_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIvaBien_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIvaBien_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIvaServicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIvaServicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIvaServicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIvaServicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO:
					sNombreCampoCategoria="id_cuenta_contable_gasto";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN:
					sNombreCampoCategoria="id_cuenta_contable_fiscal_bien";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO:
					sNombreCampoCategoria="id_cuenta_contable_fiscal_servicio";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN:
					sNombreCampoCategoria="id_cuenta_contable_retencion_bien";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO:
					sNombreCampoCategoria="id_cuenta_contable_retencion_servicio";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN:
					sNombreCampoCategoria="id_cuenta_contable_iva_bien";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO:
					sNombreCampoCategoria="id_cuenta_contable_iva_servicio";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO:
					sNombreCampoCategoriaValor="id_cuenta_contable_gasto";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN:
					sNombreCampoCategoriaValor="id_cuenta_contable_fiscal_bien";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO:
					sNombreCampoCategoriaValor="id_cuenta_contable_fiscal_servicio";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN:
					sNombreCampoCategoriaValor="id_cuenta_contable_retencion_bien";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO:
					sNombreCampoCategoriaValor="id_cuenta_contable_retencion_servicio";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN:
					sNombreCampoCategoriaValor="id_cuenta_contable_iva_bien";
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO:
					sNombreCampoCategoriaValor="id_cuenta_contable_iva_servicio";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Gasto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_gasto");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Fiscal Bien",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_fiscal_bien");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Fiscal Servicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_fiscal_servicio");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Retencion Bien",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_retencion_bien");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Retencion Servicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_retencion_servicio");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Iva Bien",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_iva_bien");
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Iva Servicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_iva_servicio");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();		
		
		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipogastoempresa";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("TipoGastoEmpresas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getcuentacontablegasto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getcuentacontablefiscalbien_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getcuentacontablefiscalservicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getcuentacontableretencionbien_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getcuentacontableretencionservicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getcuentacontableivabien_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO);
					iRow++;

					for(TipoGastoEmpresa tipogastoempresa:tipogastoempresasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(tipogastoempresa.getcuentacontableivaservicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelTipoGastoEmpresa(row);				
			//	iRow++;
			//}				
			
			//for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelTipoGastoEmpresa(tipogastoempresaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoGastoEmpresa(false);
			
			//SI ES MANUAL
			if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualTipoGastoEmpresa();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoGastoEmpresa(false);
			
			//SI ES MANUAL
			if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualTipoGastoEmpresa();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingTipoGastoEmpresa(false);
			
			//SI ES MANUAL
			if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualTipoGastoEmpresa();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaTipoGastoEmpresa() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosTipoGastoEmpresa.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosTipoGastoEmpresa.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosTipoGastoEmpresa.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosTipoGastoEmpresa.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosTipoGastoEmpresa.setMinimumSize(dimensionMinimum);
		this.jTableDatosTipoGastoEmpresa.setMaximumSize(dimensionMaximum);
		this.jTableDatosTipoGastoEmpresa.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingTipoGastoEmpresa(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingTipoGastoEmpresa(esInicializar,true);
	}
	
	public void inicializarActualizarBindingTipoGastoEmpresa(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaTipoGastoEmpresa(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesTipoGastoEmpresa(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasTipoGastoEmpresa(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesTipoGastoEmpresa(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesTipoGastoEmpresa(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualTipoGastoEmpresa() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaTipoGastoEmpresa();
		
		this.inicializarActualizarBindingBotonesManualTipoGastoEmpresa(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualTipoGastoEmpresa();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesTipoGastoEmpresa() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualTipoGastoEmpresa(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualTipoGastoEmpresa(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosTipoGastoEmpresa.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosTipoGastoEmpresa.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteTipoGastoEmpresa.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormTipoGastoEmpresa.jCheckBoxPostAccionNuevoTipoGastoEmpresa.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormTipoGastoEmpresa.jCheckBoxPostAccionSinCerrarTipoGastoEmpresa.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormTipoGastoEmpresa.jCheckBoxPostAccionSinMensajeTipoGastoEmpresa.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosTipoGastoEmpresa.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosTipoGastoEmpresa.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteTipoGastoEmpresa.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jCheckBoxPostAccionNuevoTipoGastoEmpresa.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jCheckBoxPostAccionSinCerrarTipoGastoEmpresa.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jCheckBoxPostAccionSinMensajeTipoGastoEmpresa.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionTipoGastoEmpresa.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionTipoGastoEmpresa.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesTipoGastoEmpresa.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesTipoGastoEmpresa.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesTipoGastoEmpresa.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarTipoGastoEmpresa.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesTipoGastoEmpresa.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesTipoGastoEmpresa.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralTipoGastoEmpresa.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesTipoGastoEmpresa(Boolean esInicializar) throws Exception {
		try	{	
			if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualTipoGastoEmpresa(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesTipoGastoEmpresa() throws Exception {
		try	{
			if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualTipoGastoEmpresa();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleTipoGastoEmpresa() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualTipoGastoEmpresa() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesTipoGastoEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesTipoGastoEmpresa.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesTipoGastoEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesTipoGastoEmpresa.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesTipoGastoEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesTipoGastoEmpresa.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionTipoGastoEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionTipoGastoEmpresa.addItem(reporte);
			}
			
			
			if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionTipoGastoEmpresa.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionTipoGastoEmpresa.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesTipoGastoEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesTipoGastoEmpresa.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesTipoGastoEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesTipoGastoEmpresa.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarTipoGastoEmpresa.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarTipoGastoEmpresa.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarTipoGastoEmpresa.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTipoGastoEmpresa();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualTipoGastoEmpresa() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa!=null) {
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa!=null) {
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa!=null) {
				
				if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualTipoGastoEmpresa()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.nombreBusquedaPorNombre=this.jTextAreanombreBusquedaPorNombreTipoGastoEmpresa.getText();
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasTipoGastoEmpresa(Boolean esInicializar) throws Exception {				
		if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualTipoGastoEmpresa();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaTipoGastoEmpresa() throws Exception {
		this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByTipoGastoEmpresa() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByTipoGastoEmpresa.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByTipoGastoEmpresa.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTipoGastoEmpresa.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByTipoGastoEmpresa.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTipoGastoEmpresa.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosTipoGastoEmpresaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByTipoGastoEmpresa.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByTipoGastoEmpresa.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByTipoGastoEmpresa.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaTipoGastoEmpresa(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=tipogastoempresaLogic.getTipoGastoEmpresas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=tipogastoempresas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosTipoGastoEmpresa.setModel(new TipoGastoEmpresaModel(this.tipogastoempresaLogic.getTipoGastoEmpresas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosTipoGastoEmpresa.setModel(new TipoGastoEmpresaModel(this.tipogastoempresas,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByTipoGastoEmpresa!=null && this.jInternalFrameOrderByTipoGastoEmpresa.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByTipoGastoEmpresa();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+TipoGastoEmpresaConstantesFunciones.SCLASSWEBTITULO,tipogastoempresaConstantesFunciones.resaltarSeleccionarTipoGastoEmpresa,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+TipoGastoEmpresaConstantesFunciones.SCLASSWEBTITULO,tipogastoempresaConstantesFunciones.resaltarSeleccionarTipoGastoEmpresa,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_ID));

		if(this.tipogastoempresaConstantesFunciones.mostraridTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.tipogastoempresaConstantesFunciones.resaltaridTipoGastoEmpresa,this.tipogastoempresaConstantesFunciones.activaridTipoGastoEmpresa,this,true,"idTipoGastoEmpresa","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipogastoempresaConstantesFunciones.resaltaridTipoGastoEmpresa,this.tipogastoempresaConstantesFunciones.activaridTipoGastoEmpresa,this,true,"idTipoGastoEmpresa","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_empresaTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_empresaTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_empresaTipoGastoEmpresa));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_empresaTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_empresaTipoGastoEmpresa,false,"id_empresaTipoGastoEmpresa","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_sucursalTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_sucursalTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_sucursalTipoGastoEmpresa));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_sucursalTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_sucursalTipoGastoEmpresa,false,"id_sucursalTipoGastoEmpresa","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE));

		if(this.tipogastoempresaConstantesFunciones.mostrarnombreTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.tipogastoempresaConstantesFunciones.resaltarnombreTipoGastoEmpresa,this.tipogastoempresaConstantesFunciones.activarnombreTipoGastoEmpresa,this,true,"nombreTipoGastoEmpresa","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipogastoempresaConstantesFunciones.resaltarnombreTipoGastoEmpresa,this.tipogastoempresaConstantesFunciones.activarnombreTipoGastoEmpresa,this,true,"nombreTipoGastoEmpresa","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_formatoTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_formatoTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_formatoTipoGastoEmpresa));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_formatoTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_formatoTipoGastoEmpresa,true,"id_formatoTipoGastoEmpresa","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION));

		if(this.tipogastoempresaConstantesFunciones.mostrardescripcionTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.tipogastoempresaConstantesFunciones.resaltardescripcionTipoGastoEmpresa,this.tipogastoempresaConstantesFunciones.activardescripcionTipoGastoEmpresa,this,true,"descripcionTipoGastoEmpresa","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.tipogastoempresaConstantesFunciones.resaltardescripcionTipoGastoEmpresa,this.tipogastoempresaConstantesFunciones.activardescripcionTipoGastoEmpresa,this,true,"descripcionTipoGastoEmpresa","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_gastoTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablegastosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_gastoTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_gastoTipoGastoEmpresa));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablegastosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_gastoTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_gastoTipoGastoEmpresa,true,"id_cuenta_contable_gastoTipoGastoEmpresa","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_fiscal_bienTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablefiscalbiensForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_fiscal_bienTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_bienTipoGastoEmpresa));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablefiscalbiensForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_fiscal_bienTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_bienTipoGastoEmpresa,true,"id_cuenta_contable_fiscal_bienTipoGastoEmpresa","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablefiscalserviciosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablefiscalserviciosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa,true,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresa","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_retencion_bienTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableretencionbiensForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_retencion_bienTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_bienTipoGastoEmpresa));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableretencionbiensForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_retencion_bienTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_bienTipoGastoEmpresa,true,"id_cuenta_contable_retencion_bienTipoGastoEmpresa","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_retencion_servicioTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableretencionserviciosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_retencion_servicioTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_servicioTipoGastoEmpresa));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableretencionserviciosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_retencion_servicioTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_servicioTipoGastoEmpresa,true,"id_cuenta_contable_retencion_servicioTipoGastoEmpresa","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_iva_bienTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableivabiensForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_iva_bienTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_bienTipoGastoEmpresa));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableivabiensForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_iva_bienTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_bienTipoGastoEmpresa,true,"id_cuenta_contable_iva_bienTipoGastoEmpresa","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO));

		if(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_iva_servicioTipoGastoEmpresa && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableivaserviciosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_iva_servicioTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_servicioTipoGastoEmpresa));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableivaserviciosForeignKey,this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_iva_servicioTipoGastoEmpresa,this,this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_servicioTipoGastoEmpresa,true,"id_cuenta_contable_iva_servicioTipoGastoEmpresa","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new TipoGastoEmpresaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.tipogastoempresaSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.tipogastoempresaSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosTipoGastoEmpresa.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.tipogastoempresaSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.tipogastoempresaSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosTipoGastoEmpresa.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.tipogastoempresaSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.tipogastoempresaSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosTipoGastoEmpresa.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosTipoGastoEmpresa.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosTipoGastoEmpresa.moveColumn(this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosTipoGastoEmpresa.moveColumn(this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosTipoGastoEmpresa.moveColumn(this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosTipoGastoEmpresa.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosTipoGastoEmpresa.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosTipoGastoEmpresa,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosTipoGastoEmpresa.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosTipoGastoEmpresa.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosTipoGastoEmpresa.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=tipogastoempresaLogic.getTipoGastoEmpresas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=tipogastoempresas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosTipoGastoEmpresa.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosTipoGastoEmpresa.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosTipoGastoEmpresa();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoTipoGastoEmpresa=false;
					
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
				if(this.tipogastoempresaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosTipoGastoEmpresa.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.tipogastoempresa.getsType().equals("DUPLICADO")
				   || this.tipogastoempresa.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoTipoGastoEmpresa=true;
				
				} else {
					this.isEsNuevoTipoGastoEmpresa=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
					if(this.tipogastoempresa.getId()>=0 && !this.tipogastoempresa.getIsNew()) {						
						this.isEsNuevoTipoGastoEmpresa=false;
						
					} else {
						this.isEsNuevoTipoGastoEmpresa=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoTipoGastoEmpresa(esRelaciones);						
				
				this.seleccionarTipoGastoEmpresa(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.tipogastoempresa.getId()<0) {
					this.isEsNuevoTipoGastoEmpresa=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarTipoGastoEmpresa(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarTipoGastoEmpresa(evt,rowIndex);
				}	
				
				if(this.tipogastoempresaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion TipoGastoEmpresa: " + this.dDif); 
					}
				}								
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarTipoGastoEmpresa(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.tipogastoempresa)) {
					if(this.tipogastoempresa.getId()>0) {
						this.tipogastoempresa.setIsDeleted(true);
						
						this.tipogastoempresasEliminados.add(this.tipogastoempresa);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.tipogastoempresaLogic.getTipoGastoEmpresas().remove(this.tipogastoempresa);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.tipogastoempresas.remove(this.tipogastoempresa);				
					}
					
					
					((TipoGastoEmpresaModel) this.jTableDatosTipoGastoEmpresa.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarTipoGastoEmpresa(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoTipoGastoEmpresa) {
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosTipoGastoEmpresa.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosTipoGastoEmpresa.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioTipoGastoEmpresa(this.tipogastoempresa);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.tipogastoempresaConstantesFunciones.cargarid_empresaTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_empresaTipoGastoEmpresa) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.tipogastoempresa.getid_empresa());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(tipogastoempresa.getEmpresa()!=null) {
							this.empresasForeignKey.add(tipogastoempresa.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.tipogastoempresa.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.tipogastoempresaConstantesFunciones.cargarid_sucursalTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_sucursalTipoGastoEmpresa) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.tipogastoempresa.getid_sucursal());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(tipogastoempresa.getSucursal()!=null) {
							this.sucursalsForeignKey.add(tipogastoempresa.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.tipogastoempresa.getid_sucursal(),false,"Formulario");

					//Formato
					if(!this.tipogastoempresaConstantesFunciones.cargarid_formatoTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_formatoTipoGastoEmpresa) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.tipogastoempresa.getid_formato());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(tipogastoempresa.getFormato()!=null) {
							this.formatosForeignKey.add(tipogastoempresa.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.tipogastoempresa.getid_formato(),false,"Formulario");

					//CuentaContableGasto
					if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_gastoTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_cuenta_contable_gastoTipoGastoEmpresa) {
						//this.cargarCombosCuentaContableGastosForeignKeyLista(" where id="+this.tipogastoempresa.getid_cuenta_contable_gasto());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.cuentacontablegastosForeignKey=new ArrayList<CuentaContable>();

						if(tipogastoempresa.getCuentaContableGasto()!=null) {
							this.cuentacontablegastosForeignKey.add(tipogastoempresa.getCuentaContableGasto());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableGasto();
						this.cargarCombosFrameCuentaContableGastosForeignKey("Todos");
					}
					this.setActualCuentaContableGastoForeignKey(this.tipogastoempresa.getid_cuenta_contable_gasto(),false,"Formulario");

					//CuentaContableFiscalBien
					if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_fiscal_bienTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_cuenta_contable_fiscal_bienTipoGastoEmpresa) {
						//this.cargarCombosCuentaContableFiscalBiensForeignKeyLista(" where id="+this.tipogastoempresa.getid_cuenta_contable_fiscal_bien());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.cuentacontablefiscalbiensForeignKey=new ArrayList<CuentaContable>();

						if(tipogastoempresa.getCuentaContableFiscalBien()!=null) {
							this.cuentacontablefiscalbiensForeignKey.add(tipogastoempresa.getCuentaContableFiscalBien());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableFiscalBien();
						this.cargarCombosFrameCuentaContableFiscalBiensForeignKey("Todos");
					}
					this.setActualCuentaContableFiscalBienForeignKey(this.tipogastoempresa.getid_cuenta_contable_fiscal_bien(),false,"Formulario");

					//CuentaContableFiscalServicio
					if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_cuenta_contable_fiscal_servicioTipoGastoEmpresa) {
						//this.cargarCombosCuentaContableFiscalServiciosForeignKeyLista(" where id="+this.tipogastoempresa.getid_cuenta_contable_fiscal_servicio());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.cuentacontablefiscalserviciosForeignKey=new ArrayList<CuentaContable>();

						if(tipogastoempresa.getCuentaContableFiscalServicio()!=null) {
							this.cuentacontablefiscalserviciosForeignKey.add(tipogastoempresa.getCuentaContableFiscalServicio());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableFiscalServicio();
						this.cargarCombosFrameCuentaContableFiscalServiciosForeignKey("Todos");
					}
					this.setActualCuentaContableFiscalServicioForeignKey(this.tipogastoempresa.getid_cuenta_contable_fiscal_servicio(),false,"Formulario");

					//CuentaContableRetencionBien
					if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_retencion_bienTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_cuenta_contable_retencion_bienTipoGastoEmpresa) {
						//this.cargarCombosCuentaContableRetencionBiensForeignKeyLista(" where id="+this.tipogastoempresa.getid_cuenta_contable_retencion_bien());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.cuentacontableretencionbiensForeignKey=new ArrayList<CuentaContable>();

						if(tipogastoempresa.getCuentaContableRetencionBien()!=null) {
							this.cuentacontableretencionbiensForeignKey.add(tipogastoempresa.getCuentaContableRetencionBien());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableRetencionBien();
						this.cargarCombosFrameCuentaContableRetencionBiensForeignKey("Todos");
					}
					this.setActualCuentaContableRetencionBienForeignKey(this.tipogastoempresa.getid_cuenta_contable_retencion_bien(),false,"Formulario");

					//CuentaContableRetencionServicio
					if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_retencion_servicioTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_cuenta_contable_retencion_servicioTipoGastoEmpresa) {
						//this.cargarCombosCuentaContableRetencionServiciosForeignKeyLista(" where id="+this.tipogastoempresa.getid_cuenta_contable_retencion_servicio());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.cuentacontableretencionserviciosForeignKey=new ArrayList<CuentaContable>();

						if(tipogastoempresa.getCuentaContableRetencionServicio()!=null) {
							this.cuentacontableretencionserviciosForeignKey.add(tipogastoempresa.getCuentaContableRetencionServicio());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableRetencionServicio();
						this.cargarCombosFrameCuentaContableRetencionServiciosForeignKey("Todos");
					}
					this.setActualCuentaContableRetencionServicioForeignKey(this.tipogastoempresa.getid_cuenta_contable_retencion_servicio(),false,"Formulario");

					//CuentaContableIvaBien
					if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_iva_bienTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_cuenta_contable_iva_bienTipoGastoEmpresa) {
						//this.cargarCombosCuentaContableIvaBiensForeignKeyLista(" where id="+this.tipogastoempresa.getid_cuenta_contable_iva_bien());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.cuentacontableivabiensForeignKey=new ArrayList<CuentaContable>();

						if(tipogastoempresa.getCuentaContableIvaBien()!=null) {
							this.cuentacontableivabiensForeignKey.add(tipogastoempresa.getCuentaContableIvaBien());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIvaBien();
						this.cargarCombosFrameCuentaContableIvaBiensForeignKey("Todos");
					}
					this.setActualCuentaContableIvaBienForeignKey(this.tipogastoempresa.getid_cuenta_contable_iva_bien(),false,"Formulario");

					//CuentaContableIvaServicio
					if(!this.tipogastoempresaConstantesFunciones.cargarid_cuenta_contable_iva_servicioTipoGastoEmpresa || this.tipogastoempresaConstantesFunciones.event_dependid_cuenta_contable_iva_servicioTipoGastoEmpresa) {
						//this.cargarCombosCuentaContableIvaServiciosForeignKeyLista(" where id="+this.tipogastoempresa.getid_cuenta_contable_iva_servicio());
									//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
						this.cuentacontableivaserviciosForeignKey=new ArrayList<CuentaContable>();

						if(tipogastoempresa.getCuentaContableIvaServicio()!=null) {
							this.cuentacontableivaserviciosForeignKey.add(tipogastoempresa.getCuentaContableIvaServicio());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIvaServicio();
						this.cargarCombosFrameCuentaContableIvaServiciosForeignKey("Todos");
					}
					this.setActualCuentaContableIvaServicioForeignKey(this.tipogastoempresa.getid_cuenta_contable_iva_servicio(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesTipoGastoEmpresa("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesTipoGastoEmpresa(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualTipoGastoEmpresa() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoTipoGastoEmpresa(tipogastoempresa,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioTipoGastoEmpresa(tipogastoempresa);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyTipoGastoEmpresa(tipogastoempresa,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyTipoGastoEmpresa(tipogastoempresa);
	}
	
	public void setVariablesObjetoActualToFormularioTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.setText(tipogastoempresa.getId().toString());
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreanombreTipoGastoEmpresa.setText(tipogastoempresa.getnombre());
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreadescripcionTipoGastoEmpresa.setText(tipogastoempresa.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,TipoGastoEmpresa tipogastoempresaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,tipogastoempresaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,TipoGastoEmpresa tipogastoempresaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				tipogastoempresaLocal=this.tipogastoempresa;
			} else {
				tipogastoempresaLocal=this.tipogastoempresaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(tipogastoempresaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoTipoGastoEmpresa(tipogastoempresaLocal,true);
					
					if(tipogastoempresaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(tipogastoempresaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(tipogastoempresaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(tipogastoempresa,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(tipogastoempresa);
	}
	
	public void setVariablesFormularioToObjetoActualTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(tipogastoempresa,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.getText()==null || this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.getText()=="" || this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.getText()=="Id") {
				this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.setText("0");
			}

			if(conColumnasBase) {tipogastoempresa.setId(Long.parseLong(this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoGastoEmpresaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelIdTipoGastoEmpresa,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipogastoempresa.setnombre(this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreanombreTipoGastoEmpresa.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelnombreTipoGastoEmpresa,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			tipogastoempresa.setdescripcion(this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreadescripcionTipoGastoEmpresa.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabeldescripcionTipoGastoEmpresa,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresaBean,TipoGastoEmpresa tipogastoempresa,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && tipogastoempresaBean.getid_formato()!=null && !tipogastoempresaBean.getid_formato().equals(-1L))) {tipogastoempresa.setid_formato(tipogastoempresaBean.getid_formato());}
			if(conDefault || (!conDefault && tipogastoempresaBean.getid_cuenta_contable_gasto()!=null && !tipogastoempresaBean.getid_cuenta_contable_gasto().equals(null))) {tipogastoempresa.setid_cuenta_contable_gasto(tipogastoempresaBean.getid_cuenta_contable_gasto());}
			if(conDefault || (!conDefault && tipogastoempresaBean.getid_cuenta_contable_fiscal_bien()!=null && !tipogastoempresaBean.getid_cuenta_contable_fiscal_bien().equals(null))) {tipogastoempresa.setid_cuenta_contable_fiscal_bien(tipogastoempresaBean.getid_cuenta_contable_fiscal_bien());}
			if(conDefault || (!conDefault && tipogastoempresaBean.getid_cuenta_contable_fiscal_servicio()!=null && !tipogastoempresaBean.getid_cuenta_contable_fiscal_servicio().equals(null))) {tipogastoempresa.setid_cuenta_contable_fiscal_servicio(tipogastoempresaBean.getid_cuenta_contable_fiscal_servicio());}
			if(conDefault || (!conDefault && tipogastoempresaBean.getid_cuenta_contable_retencion_bien()!=null && !tipogastoempresaBean.getid_cuenta_contable_retencion_bien().equals(null))) {tipogastoempresa.setid_cuenta_contable_retencion_bien(tipogastoempresaBean.getid_cuenta_contable_retencion_bien());}
			if(conDefault || (!conDefault && tipogastoempresaBean.getid_cuenta_contable_retencion_servicio()!=null && !tipogastoempresaBean.getid_cuenta_contable_retencion_servicio().equals(null))) {tipogastoempresa.setid_cuenta_contable_retencion_servicio(tipogastoempresaBean.getid_cuenta_contable_retencion_servicio());}
			if(conDefault || (!conDefault && tipogastoempresaBean.getid_cuenta_contable_iva_bien()!=null && !tipogastoempresaBean.getid_cuenta_contable_iva_bien().equals(null))) {tipogastoempresa.setid_cuenta_contable_iva_bien(tipogastoempresaBean.getid_cuenta_contable_iva_bien());}
			if(conDefault || (!conDefault && tipogastoempresaBean.getid_cuenta_contable_iva_servicio()!=null && !tipogastoempresaBean.getid_cuenta_contable_iva_servicio().equals(null))) {tipogastoempresa.setid_cuenta_contable_iva_servicio(tipogastoempresaBean.getid_cuenta_contable_iva_servicio());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresaOrigen,TipoGastoEmpresa tipogastoempresa,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && tipogastoempresaOrigen.getId()!=null && !tipogastoempresaOrigen.getId().equals(0L))) {tipogastoempresa.setId(tipogastoempresaOrigen.getId());}}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getnombre()!=null && !tipogastoempresaOrigen.getnombre().equals(""))) {tipogastoempresa.setnombre(tipogastoempresaOrigen.getnombre());}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getid_formato()!=null && !tipogastoempresaOrigen.getid_formato().equals(-1L))) {tipogastoempresa.setid_formato(tipogastoempresaOrigen.getid_formato());}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getdescripcion()!=null && !tipogastoempresaOrigen.getdescripcion().equals(""))) {tipogastoempresa.setdescripcion(tipogastoempresaOrigen.getdescripcion());}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getid_cuenta_contable_gasto()!=null && !tipogastoempresaOrigen.getid_cuenta_contable_gasto().equals(null))) {tipogastoempresa.setid_cuenta_contable_gasto(tipogastoempresaOrigen.getid_cuenta_contable_gasto());}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getid_cuenta_contable_fiscal_bien()!=null && !tipogastoempresaOrigen.getid_cuenta_contable_fiscal_bien().equals(null))) {tipogastoempresa.setid_cuenta_contable_fiscal_bien(tipogastoempresaOrigen.getid_cuenta_contable_fiscal_bien());}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getid_cuenta_contable_fiscal_servicio()!=null && !tipogastoempresaOrigen.getid_cuenta_contable_fiscal_servicio().equals(null))) {tipogastoempresa.setid_cuenta_contable_fiscal_servicio(tipogastoempresaOrigen.getid_cuenta_contable_fiscal_servicio());}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getid_cuenta_contable_retencion_bien()!=null && !tipogastoempresaOrigen.getid_cuenta_contable_retencion_bien().equals(null))) {tipogastoempresa.setid_cuenta_contable_retencion_bien(tipogastoempresaOrigen.getid_cuenta_contable_retencion_bien());}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getid_cuenta_contable_retencion_servicio()!=null && !tipogastoempresaOrigen.getid_cuenta_contable_retencion_servicio().equals(null))) {tipogastoempresa.setid_cuenta_contable_retencion_servicio(tipogastoempresaOrigen.getid_cuenta_contable_retencion_servicio());}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getid_cuenta_contable_iva_bien()!=null && !tipogastoempresaOrigen.getid_cuenta_contable_iva_bien().equals(null))) {tipogastoempresa.setid_cuenta_contable_iva_bien(tipogastoempresaOrigen.getid_cuenta_contable_iva_bien());}
			if(conDefault || (!conDefault && tipogastoempresaOrigen.getid_cuenta_contable_iva_servicio()!=null && !tipogastoempresaOrigen.getid_cuenta_contable_iva_servicio().equals(null))) {tipogastoempresa.setid_cuenta_contable_iva_servicio(tipogastoempresaOrigen.getid_cuenta_contable_iva_servicio());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.setText(tipogastoempresa.getId().toString());
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreanombreTipoGastoEmpresa.setText(tipogastoempresa.getnombre());
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreadescripcionTipoGastoEmpresa.setText(tipogastoempresa.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioTipoGastoEmpresa(TipoGastoEmpresaBean tipogastoempresaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.setText(tipogastoempresaBean.getId().toString());
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreanombreTipoGastoEmpresa.setText(tipogastoempresaBean.getnombre());
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreadescripcionTipoGastoEmpresa.setText(tipogastoempresaBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanTipoGastoEmpresa(TipoGastoEmpresaParameterReturnGeneral tipogastoempresaReturnGeneral,TipoGastoEmpresaBean tipogastoempresaBean,Boolean conDefault) throws Exception { 
		try {
			TipoGastoEmpresa tipogastoempresaLocal=new TipoGastoEmpresa();
			
			tipogastoempresaLocal=tipogastoempresaReturnGeneral.getTipoGastoEmpresa();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && tipogastoempresaLocal.getId()!=null && !tipogastoempresaLocal.getId().equals(0L))) {tipogastoempresaBean.setId(tipogastoempresaLocal.getId());}}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getnombre()!=null && !tipogastoempresaLocal.getnombre().equals(""))) {tipogastoempresaBean.setnombre(tipogastoempresaLocal.getnombre());}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getid_formato()!=null && !tipogastoempresaLocal.getid_formato().equals(-1L))) {tipogastoempresaBean.setid_formato(tipogastoempresaLocal.getid_formato());}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getdescripcion()!=null && !tipogastoempresaLocal.getdescripcion().equals(""))) {tipogastoempresaBean.setdescripcion(tipogastoempresaLocal.getdescripcion());}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getid_cuenta_contable_gasto()!=null && !tipogastoempresaLocal.getid_cuenta_contable_gasto().equals(null))) {tipogastoempresaBean.setid_cuenta_contable_gasto(tipogastoempresaLocal.getid_cuenta_contable_gasto());}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getid_cuenta_contable_fiscal_bien()!=null && !tipogastoempresaLocal.getid_cuenta_contable_fiscal_bien().equals(null))) {tipogastoempresaBean.setid_cuenta_contable_fiscal_bien(tipogastoempresaLocal.getid_cuenta_contable_fiscal_bien());}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getid_cuenta_contable_fiscal_servicio()!=null && !tipogastoempresaLocal.getid_cuenta_contable_fiscal_servicio().equals(null))) {tipogastoempresaBean.setid_cuenta_contable_fiscal_servicio(tipogastoempresaLocal.getid_cuenta_contable_fiscal_servicio());}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getid_cuenta_contable_retencion_bien()!=null && !tipogastoempresaLocal.getid_cuenta_contable_retencion_bien().equals(null))) {tipogastoempresaBean.setid_cuenta_contable_retencion_bien(tipogastoempresaLocal.getid_cuenta_contable_retencion_bien());}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getid_cuenta_contable_retencion_servicio()!=null && !tipogastoempresaLocal.getid_cuenta_contable_retencion_servicio().equals(null))) {tipogastoempresaBean.setid_cuenta_contable_retencion_servicio(tipogastoempresaLocal.getid_cuenta_contable_retencion_servicio());}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getid_cuenta_contable_iva_bien()!=null && !tipogastoempresaLocal.getid_cuenta_contable_iva_bien().equals(null))) {tipogastoempresaBean.setid_cuenta_contable_iva_bien(tipogastoempresaLocal.getid_cuenta_contable_iva_bien());}
			if(conDefault || (!conDefault && tipogastoempresaLocal.getid_cuenta_contable_iva_servicio()!=null && !tipogastoempresaLocal.getid_cuenta_contable_iva_servicio().equals(null))) {tipogastoempresaBean.setid_cuenta_contable_iva_servicio(tipogastoempresaLocal.getid_cuenta_contable_iva_servicio());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxTipoGastoEmpresaGenerico(Long idTipoGastoEmpresaSeleccionado,JComboBox jComboBoxTipoGastoEmpresa,List<TipoGastoEmpresa> tipogastoempresasLocal)throws Exception {
		try {
			TipoGastoEmpresa  tipogastoempresaTemp=null;

			for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasLocal) {
				if(tipogastoempresaAux.getId()!=null && tipogastoempresaAux.getId().equals(idTipoGastoEmpresaSeleccionado)) {
					tipogastoempresaTemp=tipogastoempresaAux;
					break;
				}
			}

			jComboBoxTipoGastoEmpresa.setSelectedItem(tipogastoempresaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxTipoGastoEmpresaGenerico(JComboBox jComboBoxTipoGastoEmpresa,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxTipoGastoEmpresa.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxTipoGastoEmpresa.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxTipoGastoEmpresa.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxTipoGastoEmpresa.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxTipoGastoEmpresa.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxTipoGastoEmpresa.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxTipoGastoEmpresa.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxTipoGastoEmpresa.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxTipoGastoEmpresa.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxTipoGastoEmpresa.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tipogastoempresa=(TipoGastoEmpresa) tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			tipogastoempresa =(TipoGastoEmpresa) tipogastoempresas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getformato_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableGasto")) {
			//sDescripcion=this.getActualCuentaContableGastoForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getcuentacontablegasto_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableGastoForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getcuentacontablegasto_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableFiscalBien")) {
			//sDescripcion=this.getActualCuentaContableFiscalBienForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getcuentacontablefiscalbien_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableFiscalBienForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getcuentacontablefiscalbien_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableFiscalServicio")) {
			//sDescripcion=this.getActualCuentaContableFiscalServicioForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getcuentacontablefiscalservicio_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableFiscalServicioForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getcuentacontablefiscalservicio_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableRetencionBien")) {
			//sDescripcion=this.getActualCuentaContableRetencionBienForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getcuentacontableretencionbien_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableRetencionBienForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getcuentacontableretencionbien_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableRetencionServicio")) {
			//sDescripcion=this.getActualCuentaContableRetencionServicioForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getcuentacontableretencionservicio_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableRetencionServicioForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getcuentacontableretencionservicio_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIvaBien")) {
			//sDescripcion=this.getActualCuentaContableIvaBienForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getcuentacontableivabien_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIvaBienForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getcuentacontableivabien_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIvaServicio")) {
			//sDescripcion=this.getActualCuentaContableIvaServicioForeignKeyDescripcion((Long)value);
			if(!tipogastoempresa.getIsNew() && !tipogastoempresa.getIsChanged() && !tipogastoempresa.getIsDeleted()) {
				sDescripcion=tipogastoempresa.getcuentacontableivaservicio_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIvaServicioForeignKeyDescripcion((Long)value);
				sDescripcion=tipogastoempresa.getcuentacontableivaservicio_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		TipoGastoEmpresa tipogastoempresaRow=new TipoGastoEmpresa();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tipogastoempresaRow=(TipoGastoEmpresa) tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			tipogastoempresaRow=(TipoGastoEmpresa) tipogastoempresas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualTipoGastoEmpresa(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaNuevoTipoGastoEmpresa && this.isPermisoNuevoTipoGastoEmpresa));			
			this.jButtonDuplicarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaDuplicarTipoGastoEmpresa && this.isPermisoDuplicarTipoGastoEmpresa));			
			this.jButtonCopiarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaCopiarTipoGastoEmpresa && this.isPermisoCopiarTipoGastoEmpresa));
			this.jButtonVerFormTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaVerFormTipoGastoEmpresa && this.isPermisoVerFormTipoGastoEmpresa));
			
			this.jButtonAbrirOrderByTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaOrdenTipoGastoEmpresa && this.isPermisoOrdenTipoGastoEmpresa));			
			
			this.jButtonNuevoRelacionesTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa && this.isPermisoNuevoTipoGastoEmpresa));			
			this.jButtonNuevoGuardarCambiosTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaNuevoTipoGastoEmpresa && this.isPermisoNuevoTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonModificarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaModificarTipoGastoEmpresa && this.isPermisoActualizarTipoGastoEmpresa));	
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaActualizarTipoGastoEmpresa && this.isPermisoActualizarTipoGastoEmpresa));	
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaEliminarTipoGastoEmpresa && this.isPermisoEliminarTipoGastoEmpresa));
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarTipoGastoEmpresa.setVisible(this.isVisibilidadCeldaCancelarTipoGastoEmpresa);							
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaGuardarTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));			
			
			}
						
			this.jButtonGuardarCambiosTablaTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaNuevoTipoGastoEmpresa && this.isPermisoNuevoTipoGastoEmpresa));						
			this.jButtonDuplicarToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaDuplicarTipoGastoEmpresa && this.isPermisoDuplicarTipoGastoEmpresa));						
			this.jButtonCopiarToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaCopiarTipoGastoEmpresa && this.isPermisoCopiarTipoGastoEmpresa));			
			this.jButtonVerFormToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaVerFormTipoGastoEmpresa && this.isPermisoVerFormTipoGastoEmpresa));			
			this.jButtonAbrirOrderByToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaOrdenTipoGastoEmpresa && this.isPermisoOrdenTipoGastoEmpresa));
			this.jButtonNuevoRelacionesToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa && this.isPermisoNuevoTipoGastoEmpresa));			
			this.jButtonNuevoGuardarCambiosToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaNuevoTipoGastoEmpresa && this.isPermisoNuevoTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));			
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonModificarToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaModificarTipoGastoEmpresa && this.isPermisoActualizarTipoGastoEmpresa));	
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaActualizarTipoGastoEmpresa  && this.isPermisoActualizarTipoGastoEmpresa));	
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaEliminarTipoGastoEmpresa && this.isPermisoEliminarTipoGastoEmpresa));
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarToolBarTipoGastoEmpresa.setVisible(this.isVisibilidadCeldaCancelarTipoGastoEmpresa);				
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaGuardarTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaNuevoTipoGastoEmpresa && this.isPermisoNuevoTipoGastoEmpresa));			
			this.jMenuItemDuplicarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaDuplicarTipoGastoEmpresa && this.isPermisoDuplicarTipoGastoEmpresa));			
			this.jMenuItemCopiarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaCopiarTipoGastoEmpresa && this.isPermisoCopiarTipoGastoEmpresa));			
			this.jMenuItemVerFormTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaVerFormTipoGastoEmpresa && this.isPermisoVerFormTipoGastoEmpresa));			
			this.jMenuItemAbrirOrderByTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaOrdenTipoGastoEmpresa && this.isPermisoOrdenTipoGastoEmpresa));			
			//this.jMenuItemMostrarOcultarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaOrdenTipoGastoEmpresa && this.isPermisoOrdenTipoGastoEmpresa));
			this.jMenuItemDetalleAbrirOrderByTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaOrdenTipoGastoEmpresa && this.isPermisoOrdenTipoGastoEmpresa));			
			//this.jMenuItemDetalleMostrarOcultarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaOrdenTipoGastoEmpresa && this.isPermisoOrdenTipoGastoEmpresa));			
			this.jMenuItemNuevoRelacionesTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa && this.isPermisoNuevoTipoGastoEmpresa));			
			this.jMenuItemNuevoGuardarCambiosTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaNuevoTipoGastoEmpresa && this.isPermisoNuevoTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));									
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemModificarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaModificarTipoGastoEmpresa && this.isPermisoActualizarTipoGastoEmpresa));	
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemActualizarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaActualizarTipoGastoEmpresa && this.isPermisoActualizarTipoGastoEmpresa));	
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemEliminarTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaEliminarTipoGastoEmpresa && this.isPermisoEliminarTipoGastoEmpresa));
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemCancelarTipoGastoEmpresa.setVisible(this.isVisibilidadCeldaCancelarTipoGastoEmpresa);				
			}
			
			this.jMenuItemGuardarCambiosTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaGuardarTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));						
			this.jMenuItemGuardarCambiosTablaTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=this.jButtonNuevoTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaDuplicarTipoGastoEmpresa=this.jButtonDuplicarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaCopiarTipoGastoEmpresa=this.jButtonCopiarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaVerFormTipoGastoEmpresa=this.jButtonVerFormTipoGastoEmpresa.isVisible();
			
			this.isVisibilidadCeldaOrdenTipoGastoEmpresa=this.jButtonAbrirOrderByTipoGastoEmpresa.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=this.jButtonNuevoRelacionesTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=this.jButtonModificarTipoGastoEmpresa.isVisible();
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaGuardarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosTipoGastoEmpresa.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=this.jButtonGuardarCambiosTablaTipoGastoEmpresa.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=this.jButtonNuevoToolBarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=this.jButtonNuevoRelacionesToolBarTipoGastoEmpresa.isVisible();
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonModificarToolBarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarToolBarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarToolBarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarToolBarTipoGastoEmpresa.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarTipoGastoEmpresa=this.jButtonGuardarCambiosToolBarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=this.jButtonGuardarCambiosTablaToolBarTipoGastoEmpresa.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=this.jMenuItemNuevoTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=this.jMenuItemNuevoRelacionesTipoGastoEmpresa.isVisible();
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemModificarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemActualizarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemEliminarTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemCancelarTipoGastoEmpresa.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarTipoGastoEmpresa=this.jMenuItemGuardarCambiosTipoGastoEmpresa.isVisible();
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=this.jMenuItemGuardarCambiosTablaTipoGastoEmpresa.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesTipoGastoEmpresa(Boolean esInicializar) {
		if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.tipogastoempresaSessionBean.getConGuardarRelaciones()) {
				//if(this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesTipoGastoEmpresa();
			}
			
			this.inicializarActualizarBindingBotonesManualTipoGastoEmpresa(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualTipoGastoEmpresa() {
		this.jButtonNuevoTipoGastoEmpresa.setVisible(this.isPermisoNuevoTipoGastoEmpresa);			
		this.jButtonDuplicarTipoGastoEmpresa.setVisible(this.isPermisoDuplicarTipoGastoEmpresa);			
		this.jButtonCopiarTipoGastoEmpresa.setVisible(this.isPermisoCopiarTipoGastoEmpresa);			
		this.jButtonVerFormTipoGastoEmpresa.setVisible(this.isPermisoVerFormTipoGastoEmpresa);			
		
		this.jButtonAbrirOrderByTipoGastoEmpresa.setVisible(this.isPermisoOrdenTipoGastoEmpresa);					
		
		this.jButtonNuevoRelacionesTipoGastoEmpresa.setVisible(this.isPermisoNuevoTipoGastoEmpresa);			
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonModificarTipoGastoEmpresa.setVisible(this.isPermisoActualizarTipoGastoEmpresa);	
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarTipoGastoEmpresa.setVisible(this.isPermisoActualizarTipoGastoEmpresa);	
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarTipoGastoEmpresa.setVisible(this.isPermisoEliminarTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarTipoGastoEmpresa.setVisible(this.isVisibilidadCeldaCancelarTipoGastoEmpresa);						
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosTipoGastoEmpresa.setVisible(this.isPermisoGuardarCambiosTipoGastoEmpresa);							
		}
		
		this.jButtonGuardarCambiosTablaTipoGastoEmpresa.setVisible(this.isPermisoActualizarTipoGastoEmpresa);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleTipoGastoEmpresa() {
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonModificarTipoGastoEmpresa.setVisible(this.isPermisoActualizarTipoGastoEmpresa);	
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarTipoGastoEmpresa.setVisible(this.isPermisoActualizarTipoGastoEmpresa);	
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarTipoGastoEmpresa.setVisible(this.isPermisoEliminarTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarTipoGastoEmpresa.setVisible(this.isVisibilidadCeldaCancelarTipoGastoEmpresa);							
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosTipoGastoEmpresa.setVisible((this.isVisibilidadCeldaGuardarTipoGastoEmpresa && this.isPermisoGuardarCambiosTipoGastoEmpresa));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosTipoGastoEmpresa() {
		if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualTipoGastoEmpresa();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesTipoGastoEmpresa() {
	}
	
	public void jTableDatosTipoGastoEmpresaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarTipoGastoEmpresa(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.tipogastoempresa.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.tipogastoempresa.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.tipogastoempresa.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.tipogastoempresa.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.tipogastoempresa.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.tipogastoempresa.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_gastoTipoGastoEmpresaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontablegastoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontablegastoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontablegastoBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableGasto";

			if(!this.sFinalQueryGeneral_cuentacontablegasto.equals("")) {
				this.cuentacontablegastoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontablegasto);
				this.cuentacontablegastoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontablegastoBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontablegastoBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontablegastoBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableGasto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontablegastoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTipoGastoEmpresa=null;
			TitledBorder titledBordercuentacontablegasto=null;

			if(!this.jScrollPanelDatosTipoGastoEmpresa.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				titledBordercuentacontablegasto=(TitledBorder)this.cuentacontablegastoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablegasto.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_gastoTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablegasto=true;

			idTienePermisocuentacontablegasto=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablegasto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.cuentacontablegastoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablegastoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablegastoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_cuenta_contable_gasto()!=null) {
					this.cuentacontablegastoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablegastoBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_cuenta_contable_gasto());
					this.cuentacontablegastoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablegastoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablegastoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablegastoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBordercuentacontablegasto=(TitledBorder)this.cuentacontablegastoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablegasto.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_gastoTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_cuenta_contable_gasto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_gasto = "+this.tipogastoempresa.getid_cuenta_contable_gasto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontablefiscalbienBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontablefiscalbienBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontablefiscalbienBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableFiscalBien";

			if(!this.sFinalQueryGeneral_cuentacontablefiscalbien.equals("")) {
				this.cuentacontablefiscalbienBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontablefiscalbien);
				this.cuentacontablefiscalbienBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontablefiscalbienBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontablefiscalbienBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontablefiscalbienBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableFiscalBien.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontablefiscalbienBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTipoGastoEmpresa=null;
			TitledBorder titledBordercuentacontablefiscalbien=null;

			if(!this.jScrollPanelDatosTipoGastoEmpresa.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				titledBordercuentacontablefiscalbien=(TitledBorder)this.cuentacontablefiscalbienBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablefiscalbien.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablefiscalbien=true;

			idTienePermisocuentacontablefiscalbien=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablefiscalbien) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.cuentacontablefiscalbienBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablefiscalbienBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablefiscalbienBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_cuenta_contable_fiscal_bien()!=null) {
					this.cuentacontablefiscalbienBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablefiscalbienBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_cuenta_contable_fiscal_bien());
					this.cuentacontablefiscalbienBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablefiscalbienBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablefiscalbienBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablefiscalbienBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBordercuentacontablefiscalbien=(TitledBorder)this.cuentacontablefiscalbienBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablefiscalbien.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_cuenta_contable_fiscal_bien()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_fiscal_bien = "+this.tipogastoempresa.getid_cuenta_contable_fiscal_bien().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontablefiscalservicioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontablefiscalservicioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontablefiscalservicioBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableFiscalServicio";

			if(!this.sFinalQueryGeneral_cuentacontablefiscalservicio.equals("")) {
				this.cuentacontablefiscalservicioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontablefiscalservicio);
				this.cuentacontablefiscalservicioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontablefiscalservicioBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontablefiscalservicioBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontablefiscalservicioBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableFiscalServicio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontablefiscalservicioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTipoGastoEmpresa=null;
			TitledBorder titledBordercuentacontablefiscalservicio=null;

			if(!this.jScrollPanelDatosTipoGastoEmpresa.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				titledBordercuentacontablefiscalservicio=(TitledBorder)this.cuentacontablefiscalservicioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablefiscalservicio.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablefiscalservicio=true;

			idTienePermisocuentacontablefiscalservicio=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablefiscalservicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.cuentacontablefiscalservicioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablefiscalservicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablefiscalservicioBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_cuenta_contable_fiscal_servicio()!=null) {
					this.cuentacontablefiscalservicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablefiscalservicioBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_cuenta_contable_fiscal_servicio());
					this.cuentacontablefiscalservicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablefiscalservicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablefiscalservicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablefiscalservicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBordercuentacontablefiscalservicio=(TitledBorder)this.cuentacontablefiscalservicioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablefiscalservicio.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_cuenta_contable_fiscal_servicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_fiscal_servicio = "+this.tipogastoempresa.getid_cuenta_contable_fiscal_servicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableretencionbienBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableretencionbienBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableretencionbienBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableRetencionBien";

			if(!this.sFinalQueryGeneral_cuentacontableretencionbien.equals("")) {
				this.cuentacontableretencionbienBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableretencionbien);
				this.cuentacontableretencionbienBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableretencionbienBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableretencionbienBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableretencionbienBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableRetencionBien.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableretencionbienBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTipoGastoEmpresa=null;
			TitledBorder titledBordercuentacontableretencionbien=null;

			if(!this.jScrollPanelDatosTipoGastoEmpresa.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				titledBordercuentacontableretencionbien=(TitledBorder)this.cuentacontableretencionbienBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableretencionbien.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableretencionbien=true;

			idTienePermisocuentacontableretencionbien=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableretencionbien) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.cuentacontableretencionbienBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableretencionbienBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableretencionbienBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_cuenta_contable_retencion_bien()!=null) {
					this.cuentacontableretencionbienBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableretencionbienBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_cuenta_contable_retencion_bien());
					this.cuentacontableretencionbienBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableretencionbienBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableretencionbienBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableretencionbienBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBordercuentacontableretencionbien=(TitledBorder)this.cuentacontableretencionbienBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableretencionbien.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_cuenta_contable_retencion_bien()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_retencion_bien = "+this.tipogastoempresa.getid_cuenta_contable_retencion_bien().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableretencionservicioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableretencionservicioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableretencionservicioBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableRetencionServicio";

			if(!this.sFinalQueryGeneral_cuentacontableretencionservicio.equals("")) {
				this.cuentacontableretencionservicioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableretencionservicio);
				this.cuentacontableretencionservicioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableretencionservicioBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableretencionservicioBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableretencionservicioBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableRetencionServicio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableretencionservicioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTipoGastoEmpresa=null;
			TitledBorder titledBordercuentacontableretencionservicio=null;

			if(!this.jScrollPanelDatosTipoGastoEmpresa.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				titledBordercuentacontableretencionservicio=(TitledBorder)this.cuentacontableretencionservicioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableretencionservicio.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableretencionservicio=true;

			idTienePermisocuentacontableretencionservicio=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableretencionservicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.cuentacontableretencionservicioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableretencionservicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableretencionservicioBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_cuenta_contable_retencion_servicio()!=null) {
					this.cuentacontableretencionservicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableretencionservicioBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_cuenta_contable_retencion_servicio());
					this.cuentacontableretencionservicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableretencionservicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableretencionservicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableretencionservicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBordercuentacontableretencionservicio=(TitledBorder)this.cuentacontableretencionservicioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableretencionservicio.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_cuenta_contable_retencion_servicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_retencion_servicio = "+this.tipogastoempresa.getid_cuenta_contable_retencion_servicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableivabienBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableivabienBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableivabienBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableIvaBien";

			if(!this.sFinalQueryGeneral_cuentacontableivabien.equals("")) {
				this.cuentacontableivabienBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableivabien);
				this.cuentacontableivabienBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableivabienBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableivabienBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableivabienBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableIvaBien.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableivabienBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTipoGastoEmpresa=null;
			TitledBorder titledBordercuentacontableivabien=null;

			if(!this.jScrollPanelDatosTipoGastoEmpresa.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				titledBordercuentacontableivabien=(TitledBorder)this.cuentacontableivabienBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableivabien.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableivabien=true;

			idTienePermisocuentacontableivabien=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableivabien) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.cuentacontableivabienBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableivabienBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableivabienBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_cuenta_contable_iva_bien()!=null) {
					this.cuentacontableivabienBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableivabienBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_cuenta_contable_iva_bien());
					this.cuentacontableivabienBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableivabienBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableivabienBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableivabienBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBordercuentacontableivabien=(TitledBorder)this.cuentacontableivabienBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableivabien.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_cuenta_contable_iva_bien()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_iva_bien = "+this.tipogastoempresa.getid_cuenta_contable_iva_bien().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableivaservicioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableivaservicioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableivaservicioBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableIvaServicio";

			if(!this.sFinalQueryGeneral_cuentacontableivaservicio.equals("")) {
				this.cuentacontableivaservicioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableivaservicio);
				this.cuentacontableivaservicioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableivaservicioBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableivaservicioBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableivaservicioBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableIvaServicio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableivaservicioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderTipoGastoEmpresa=null;
			TitledBorder titledBordercuentacontableivaservicio=null;

			if(!this.jScrollPanelDatosTipoGastoEmpresa.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				titledBordercuentacontableivaservicio=(TitledBorder)this.cuentacontableivaservicioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableivaservicio.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableivaservicio=true;

			idTienePermisocuentacontableivaservicio=this.tienePermisosUsuarioEnPaginaWebTipoGastoEmpresa(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableivaservicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosTipoGastoEmpresa.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosTipoGastoEmpresa.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);

				this.cuentacontableivaservicioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableivaservicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableivaservicioBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.tipogastoempresaLogic.getConnexion());

				if(this.tipogastoempresa.getid_cuenta_contable_iva_servicio()!=null) {
					this.cuentacontableivaservicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableivaservicioBeanSwingJInternalFrame.setIdActual(this.tipogastoempresa.getid_cuenta_contable_iva_servicio());
					this.cuentacontableivaservicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableivaservicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableivaservicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableivaservicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderTipoGastoEmpresa=(TitledBorder)this.jScrollPanelDatosTipoGastoEmpresa.getBorder();
				TitledBorder titledBordercuentacontableivaservicio=(TitledBorder)this.cuentacontableivaservicioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableivaservicio.setTitle(titledBorderTipoGastoEmpresa.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.gettipogastoempresa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.tipogastoempresa==null) {
						this.tipogastoempresa = new TipoGastoEmpresa();
					}

					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);
				}

				if(this.tipogastoempresa.getid_cuenta_contable_iva_servicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_iva_servicio = "+this.tipogastoempresa.getid_cuenta_contable_iva_servicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingTipoGastoEmpresa(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorNombreTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasBusquedaPorNombre();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableFiscalBienTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdCuentaContableFiscalBien();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableFiscalServicioTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdCuentaContableFiscalServicio();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableGastoTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdCuentaContableGasto();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIvaBienTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdCuentaContableIvaBien();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIvaServicioTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdCuentaContableIvaServicio();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableRetencionBienTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdCuentaContableRetencionBien();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableRetencionServicioTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdCuentaContableRetencionServicio();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdEmpresa();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdFormato();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalTipoGastoEmpresaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);

			this.getTipoGastoEmpresasFK_IdSucursal();

			this.inicializarActualizarBindingTipoGastoEmpresa(false);

			//if(TipoGastoEmpresaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.tipogastoempresaLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameTipoGastoEmpresa() {
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.setVisible(false);	    			
			this.jInternalFrameDetalleFormTipoGastoEmpresa.dispose();
			this.jInternalFrameDetalleFormTipoGastoEmpresa=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa!=null) {
			this.jInternalFrameReporteDinamicoTipoGastoEmpresa.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoTipoGastoEmpresa.dispose();
			this.jInternalFrameReporteDinamicoTipoGastoEmpresa=null;
		}
		
		if(this.jInternalFrameImportacionTipoGastoEmpresa!=null) {
			this.jInternalFrameImportacionTipoGastoEmpresa.setVisible(false);	    			
			this.jInternalFrameImportacionTipoGastoEmpresa.dispose();
			this.jInternalFrameImportacionTipoGastoEmpresa=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessTipoGastoEmpresa();
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
			
			if(sTipo.equals("NuevoTipoGastoEmpresa")) {
				jButtonNuevoTipoGastoEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarTipoGastoEmpresa")) {
				jButtonDuplicarTipoGastoEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarTipoGastoEmpresa")) {
				jButtonCopiarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("VerFormTipoGastoEmpresa")) {
				jButtonVerFormTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarTipoGastoEmpresa")) {
				jButtonNuevoTipoGastoEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarTipoGastoEmpresa")) {
				jButtonDuplicarTipoGastoEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoTipoGastoEmpresa")) {
				jButtonNuevoTipoGastoEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarTipoGastoEmpresa")) {
				jButtonDuplicarTipoGastoEmpresaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesTipoGastoEmpresa")) {
				jButtonNuevoTipoGastoEmpresaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarTipoGastoEmpresa")) {
				jButtonNuevoTipoGastoEmpresaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesTipoGastoEmpresa")) {
				jButtonNuevoTipoGastoEmpresaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarTipoGastoEmpresa")) {
				jButtonModificarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarTipoGastoEmpresa")) {
				jButtonModificarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarTipoGastoEmpresa")) {
				jButtonModificarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarTipoGastoEmpresa")) {
				jButtonActualizarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarTipoGastoEmpresa")) {
				jButtonActualizarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarTipoGastoEmpresa")) {
				jButtonActualizarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("EliminarTipoGastoEmpresa")) {
				jButtonEliminarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarTipoGastoEmpresa")) {
				jButtonEliminarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarTipoGastoEmpresa")) {
				jButtonEliminarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CancelarTipoGastoEmpresa")) {
				jButtonCancelarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarTipoGastoEmpresa")) {
				jButtonCancelarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarTipoGastoEmpresa")) {
				jButtonCancelarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CerrarTipoGastoEmpresa")) {
				jButtonCerrarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarTipoGastoEmpresa")) {
				jButtonCerrarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarTipoGastoEmpresa")) {
				jButtonCerrarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarTipoGastoEmpresa")) {
				jButtonMostrarOcultarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarTipoGastoEmpresa")) {
				jButtonCancelarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTipoGastoEmpresa")) {
				jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarTipoGastoEmpresa")) {
				jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarTipoGastoEmpresa")) {
				jButtonCopiarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarTipoGastoEmpresa")) {
				jButtonVerFormTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTipoGastoEmpresa")) {
				jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarTipoGastoEmpresa")) {
				jButtonCopiarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormTipoGastoEmpresa")) {
				jButtonVerFormTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaTipoGastoEmpresa")) {
				jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarTipoGastoEmpresa")) {
				jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaTipoGastoEmpresa")) {
				jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionTipoGastoEmpresa")) {
				jButtonRecargarInformacionTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarTipoGastoEmpresa")) {
				jButtonRecargarInformacionTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionTipoGastoEmpresa")) {
				jButtonRecargarInformacionTipoGastoEmpresaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresTipoGastoEmpresa")) {
				jButtonAnterioresTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarTipoGastoEmpresa")) {
				jButtonAnterioresTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreTipoGastoEmpresa")) {
				jButtonAnterioresTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesTipoGastoEmpresa")) {
				jButtonSiguientesTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarTipoGastoEmpresa")) {
				jButtonSiguientesTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesTipoGastoEmpresa")) {
				jButtonSiguientesTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByTipoGastoEmpresa") || sTipo.equals("MenuItemDetalleAbrirOrderByTipoGastoEmpresa")) {
				jButtonAbrirOrderByTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarTipoGastoEmpresa") || sTipo.equals("MenuItemDetalleMostrarOcultarTipoGastoEmpresa")) {
				jButtonMostrarOcultarTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosTipoGastoEmpresa")) {
				jButtonNuevoGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarTipoGastoEmpresa")) {
				jButtonNuevoGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosTipoGastoEmpresa")) {
				jButtonNuevoGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoTipoGastoEmpresa")) {
				jButtonCerrarReporteDinamicoTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoTipoGastoEmpresa")) {
				jButtonGenerarReporteDinamicoTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoTipoGastoEmpresa")) {
				
				jButtonGenerarExcelReporteDinamicoTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionTipoGastoEmpresa")) {
				jButtonCerrarImportacionTipoGastoEmpresaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionTipoGastoEmpresa")) {
				
				jButtonGenerarImportacionTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionTipoGastoEmpresa")) {
				
				jButtonAbrirImportacionTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesTipoGastoEmpresa")) {
				jComboBoxTiposAccionesTipoGastoEmpresaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesTipoGastoEmpresa")) {
				jComboBoxTiposRelacionesTipoGastoEmpresaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioTipoGastoEmpresa")) {
				jComboBoxTiposAccionesTipoGastoEmpresaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarTipoGastoEmpresa")) {
				
				jComboBoxTiposSeleccionarTipoGastoEmpresaActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralTipoGastoEmpresa")) {
				jTextFieldValorCampoGeneralTipoGastoEmpresaActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByTipoGastoEmpresa")) {
				jButtonAbrirOrderByTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarTipoGastoEmpresa")) {
				jButtonAbrirOrderByTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByTipoGastoEmpresa")) {
				jButtonCerrarOrderByTipoGastoEmpresaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idTipoGastoEmpresaBusqueda")) {
				this.jButtonidTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaTipoGastoEmpresaUpdate")) {
				this.jButtonid_empresaTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaTipoGastoEmpresaBusqueda")) {
				this.jButtonid_empresaTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalTipoGastoEmpresaUpdate")) {
				this.jButtonid_sucursalTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalTipoGastoEmpresaBusqueda")) {
				this.jButtonid_sucursalTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreTipoGastoEmpresaBusqueda")) {
				this.jButtonnombreTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoTipoGastoEmpresaUpdate")) {
				this.jButtonid_formatoTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoTipoGastoEmpresaBusqueda")) {
				this.jButtonid_formatoTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionTipoGastoEmpresaBusqueda")) {
				this.jButtondescripcionTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_gastoTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_gastoTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_gastoTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableGasto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_gastoTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_gastoTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_gastoTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_gastoTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_bienTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableFiscalBien("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_bienTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_servicioTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableFiscalServicio("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_bienTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_bienTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableRetencionBien("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_bienTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_bienTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_servicioTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableRetencionServicio("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_servicioTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_bienTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_bienTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableIvaBien("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_bienTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_bienTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_servicioTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_servicioTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableIvaServicio("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_servicioTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_servicioTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("BusquedaPorNombreTipoGastoEmpresa")) {
				this.jButtonBusquedaPorNombreTipoGastoEmpresaActionPerformed(evt);
			}
			
			;
			
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessTipoGastoEmpresa();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				


				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			TipoGastoEmpresa tipogastoempresaLocal=null;
			
			if(!this.getEsControlTabla()) {
				tipogastoempresaLocal=this.tipogastoempresa;
			} else {
				tipogastoempresaLocal=this.tipogastoempresaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
							
				
				


				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoGastoEmpresaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
								
						
				


				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
								
				
				


				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoGastoEmpresaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
			
			this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
							
				
				


				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
			
			this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
								
				
				


				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoGastoEmpresaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
			
			this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoGastoEmpresaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosTipoGastoEmpresa")) {
					jCheckBoxSeleccionarTodosTipoGastoEmpresaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosTipoGastoEmpresa")) {
					jCheckBoxSeleccionadosTipoGastoEmpresaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarTipoGastoEmpresa")) {
					
				}
				
				


				
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
												
				
				


				
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoGastoEmpresaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.tipogastoempresa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.tipogastoempresa);
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(TipoGastoEmpresa.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",TipoGastoEmpresa.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaTipoGastoEmpresaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.tipogastoempresaAnterior =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarTipoGastoEmpresa")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosTipoGastoEmpresaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosTipoGastoEmpresa.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.tipogastoempresa =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.tipogastoempresa);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarTipoGastoEmpresa")) {
				
				}
				
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarTipoGastoEmpresa")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosTipoGastoEmpresa.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarTipoGastoEmpresa")) {
			
			}
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessTipoGastoEmpresa();
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
			if(sTipo.equals("NuevoTipoGastoEmpresa")) {
				jButtonNuevoTipoGastoEmpresaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarTipoGastoEmpresa")) {
				jButtonDuplicarTipoGastoEmpresaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarTipoGastoEmpresa")) {
				jButtonCopiarTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormTipoGastoEmpresa")) {
				jButtonVerFormTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesTipoGastoEmpresa")) {
				jButtonNuevoTipoGastoEmpresaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarTipoGastoEmpresa")) {
				jButtonModificarTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarTipoGastoEmpresa")) {
				jButtonActualizarTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarTipoGastoEmpresa")) {
				jButtonEliminarTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaTipoGastoEmpresa")) {
				jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarTipoGastoEmpresa")) {
				jButtonCancelarTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTipoGastoEmpresa")) {
				jButtonCerrarTipoGastoEmpresaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTipoGastoEmpresa")) {
				jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosTipoGastoEmpresa")) {
				jButtonNuevoGuardarCambiosTipoGastoEmpresaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByTipoGastoEmpresa")) {
				jButtonAbrirOrderByTipoGastoEmpresaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionTipoGastoEmpresa")) {
				jButtonRecargarInformacionTipoGastoEmpresaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresTipoGastoEmpresa")) {
				jButtonAnterioresTipoGastoEmpresaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesTipoGastoEmpresa")) {
				jButtonSiguientesTipoGastoEmpresaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idTipoGastoEmpresaBusqueda")) {
				this.jButtonidTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaTipoGastoEmpresaUpdate")) {
				this.jButtonid_empresaTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaTipoGastoEmpresaBusqueda")) {
				this.jButtonid_empresaTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalTipoGastoEmpresaUpdate")) {
				this.jButtonid_sucursalTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalTipoGastoEmpresaBusqueda")) {
				this.jButtonid_sucursalTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreTipoGastoEmpresaBusqueda")) {
				this.jButtonnombreTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoTipoGastoEmpresaUpdate")) {
				this.jButtonid_formatoTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoTipoGastoEmpresaBusqueda")) {
				this.jButtonid_formatoTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionTipoGastoEmpresaBusqueda")) {
				this.jButtondescripcionTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_gastoTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_gastoTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_gastoTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableGasto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_gastoTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_gastoTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_gastoTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_gastoTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_bienTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableFiscalBien("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_bienTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_servicioTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableFiscalServicio("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_bienTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_bienTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableRetencionBien("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_bienTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_bienTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_servicioTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableRetencionServicio("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencion_servicioTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_bienTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_bienTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableIvaBien("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_bienTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_bienTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_servicioTipoGastoEmpresa")) {
				this.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_servicioTipoGastoEmpresaArbol")) {
				this.abrirFrameTreeCuentaContableIvaServicio("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_servicioTipoGastoEmpresaUpdate")) {
				this.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iva_servicioTipoGastoEmpresaBusqueda")) {
				this.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaBusquedaActionPerformed(evt);
			}
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessTipoGastoEmpresa();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameTipoGastoEmpresa")) {
				closingInternalFrameTipoGastoEmpresa();
				
			} else if(sTipo.equals("jButtonCancelarTipoGastoEmpresa")) {
				JInternalFrameBase jInternalFrameDetalleFormTipoGastoEmpresa = (JInternalFrameBase)evt.getSource();
	            	
	            TipoGastoEmpresaBeanSwingJInternalFrame jInternalFrameParent=(TipoGastoEmpresaBeanSwingJInternalFrame)jInternalFrameDetalleFormTipoGastoEmpresa.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarTipoGastoEmpresaActionPerformed(null);
			}
			
			TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.tipogastoempresa,new Object(),this.tipogastoempresaParameterGeneral,this.tipogastoempresaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormTipoGastoEmpresa(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormTipoGastoEmpresa(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormTipoGastoEmpresa(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.tipogastoempresa)) {
			if(!esControlTabla) {
				if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);			
				}
				
				if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.tipogastoempresaReturnGeneral=tipogastoempresaLogic.procesarEventosTipoGastoEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipogastoempresaLogic.getTipoGastoEmpresas(),this.tipogastoempresa,this.tipogastoempresaParameterGeneral,this.isEsNuevoTipoGastoEmpresa,classes);//this.tipogastoempresaLogic.getTipoGastoEmpresa()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanTipoGastoEmpresa(this.tipogastoempresaReturnGeneral,this.tipogastoempresaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanTipoGastoEmpresa(classes,this.tipogastoempresaReturnGeneral,this.tipogastoempresaBean,false);
					}
						
					if(this.tipogastoempresaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyTipoGastoEmpresa(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresa());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioTipoGastoEmpresa(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresa());	
					}
						
					if(this.tipogastoempresaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioTipoGastoEmpresa(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresa(),classes);//this.tipogastoempresaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioTipoGastoEmpresa(this.tipogastoempresa,classes);//this.tipogastoempresaBean);									
				}
			
				if(TipoGastoEmpresaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualTipoGastoEmpresa(this.tipogastoempresa,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysTipoGastoEmpresa(this.tipogastoempresa);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.tipogastoempresaAnterior!=null) {
						this.tipogastoempresa=this.tipogastoempresaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.tipogastoempresaReturnGeneral=tipogastoempresaLogic.procesarEventosTipoGastoEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipogastoempresaLogic.getTipoGastoEmpresas(),this.tipogastoempresa,this.tipogastoempresaParameterGeneral,this.isEsNuevoTipoGastoEmpresa,classes);//this.tipogastoempresaLogic.getTipoGastoEmpresa()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.tipogastoempresaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.tipogastoempresaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresa(),tipogastoempresaLogic.getTipoGastoEmpresas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresa(),this.tipogastoempresas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosTipoGastoEmpresa.repaint();
				
				//((AbstractTableModel) this.jTableDatosTipoGastoEmpresa.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosTipoGastoEmpresa();
			}
		}
	}
	
	public void actualizarVisualTableDatosTipoGastoEmpresa() throws Exception {
		
		TipoGastoEmpresaModel tipogastoempresaModel=(TipoGastoEmpresaModel)this.jTableDatosTipoGastoEmpresa.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tipogastoempresaModel.tipogastoempresas=this.tipogastoempresaLogic.getTipoGastoEmpresas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			tipogastoempresaModel.tipogastoempresas=this.tipogastoempresas;
		}
		
		
		((TipoGastoEmpresaModel) this.jTableDatosTipoGastoEmpresa.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaTipoGastoEmpresa() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.gettipogastoempresaAnterior(),this.tipogastoempresaLogic.getTipoGastoEmpresas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.gettipogastoempresaAnterior(),this.tipogastoempresas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosTipoGastoEmpresa();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipogastoempresa,new Object(),generalEntityParameterGeneral,this.tipogastoempresaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.tipogastoempresaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=TipoGastoEmpresaConstantesFunciones.getClassesRelationshipsOfTipoGastoEmpresa(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=TipoGastoEmpresaConstantesFunciones.getClassesRelationshipsFromStringsOfTipoGastoEmpresa(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormTipoGastoEmpresa(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				TipoGastoEmpresaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.tipogastoempresa,new Object(),generalEntityParameterGeneral,this.tipogastoempresaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioTipoGastoEmpresa(TipoGastoEmpresaBean tipogastoempresaBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanTipoGastoEmpresa(ArrayList<Classe> classes,TipoGastoEmpresaReturnGeneral tipogastoempresaReturnGeneral,TipoGastoEmpresaBean tipogastoempresaBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.tipogastoempresa)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa = new TipoGastoEmpresaDetalleFormJInternalFrame(jDesktopPane,this.tipogastoempresaSessionBean.getConGuardarRelaciones(),this.tipogastoempresaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.setVisible(false);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.setSelected(false);						
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.tipogastoempresaLogic=this.tipogastoempresaLogic;
		
		this.cargarCombosFrameForeignKeyTipoGastoEmpresa("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleTipoGastoEmpresa();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleTipoGastoEmpresa();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyTipoGastoEmpresa("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyTipoGastoEmpresa();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarTipoGastoEmpresa"));
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonModificarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"ModificarTipoGastoEmpresa"));

		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonModificarToolBarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"ModificarToolBarTipoGastoEmpresa"));
					
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemModificarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"MenuItemModificarTipoGastoEmpresa"));		
		
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"ActualizarTipoGastoEmpresa"));
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarToolBarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"ActualizarToolBarTipoGastoEmpresa"));
						
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemActualizarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemActualizarTipoGastoEmpresa"));		
		
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"EliminarTipoGastoEmpresa"));
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"EliminarToolBarTipoGastoEmpresa"));
								
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemEliminarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemEliminarTipoGastoEmpresa"));		
		
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"CancelarTipoGastoEmpresa"));
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"CancelarToolBarTipoGastoEmpresa"));
					
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemCancelarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemCancelarTipoGastoEmpresa"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemDetalleCerrarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarTipoGastoEmpresa"));		
		
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTipoGastoEmpresa"));
		
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTipoGastoEmpresa"));
		
		
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioTipoGastoEmpresa"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonidTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"idTipoGastoEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_empresaTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_empresaTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaTipoGastoEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_sucursalTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_sucursalTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalTipoGastoEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonnombreTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"nombreTipoGastoEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_formatoTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_formatoTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_formatoTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoTipoGastoEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtondescripcionTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_gastoTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_gastoTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_gastoTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableGasto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFiscalBien("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFiscalServicio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableRetencionBien("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableRetencionServicio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_iva_bienTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIvaBien("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIvaServicio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jTabbedPaneRelacionesTipoGastoEmpresa.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesTipoGastoEmpresa"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameTipoGastoEmpresa"));
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarTipoGastoEmpresa"));
		}
		
		this.jTableDatosTipoGastoEmpresa.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarTipoGastoEmpresa"));
		
		this.jTableDatosTipoGastoEmpresa.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarTipoGastoEmpresa"));
		
		this.jButtonNuevoTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"NuevoTipoGastoEmpresa"));
		
		this.jButtonDuplicarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"DuplicarTipoGastoEmpresa"));
		
		this.jButtonCopiarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"CopiarTipoGastoEmpresa"));
		
		this.jButtonVerFormTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"VerFormTipoGastoEmpresa"));
		
		
		this.jButtonNuevoToolBarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"NuevoToolBarTipoGastoEmpresa"));
			
		this.jButtonDuplicarToolBarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"DuplicarToolBarTipoGastoEmpresa"));
			
		this.jMenuItemNuevoTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemNuevoTipoGastoEmpresa"));
			
		this.jMenuItemDuplicarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarTipoGastoEmpresa"));		
		
		
		this.jButtonNuevoRelacionesTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"NuevoRelacionesTipoGastoEmpresa"));
		
		
		this.jButtonNuevoRelacionesToolBarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarTipoGastoEmpresa"));
			
		this.jMenuItemNuevoRelacionesTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesTipoGastoEmpresa"));		
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonModificarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"ModificarTipoGastoEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonModificarToolBarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"ModificarToolBarTipoGastoEmpresa"));
			
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemModificarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"MenuItemModificarTipoGastoEmpresa"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"ActualizarTipoGastoEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonActualizarToolBarTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"ActualizarToolBarTipoGastoEmpresa"));
				
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemActualizarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemActualizarTipoGastoEmpresa"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"EliminarTipoGastoEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonEliminarToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"EliminarToolBarTipoGastoEmpresa"));
						
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemEliminarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemEliminarTipoGastoEmpresa"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"CancelarTipoGastoEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonCancelarToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"CancelarToolBarTipoGastoEmpresa"));
			
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemCancelarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemCancelarTipoGastoEmpresa"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarTipoGastoEmpresa"));		
		
		
		this.jButtonCerrarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"CerrarTipoGastoEmpresa"));
		
		
		this.jButtonCerrarToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"CerrarToolBarTipoGastoEmpresa"));
			
		this.jMenuItemCerrarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemCerrarTipoGastoEmpresa"));
			
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jMenuItemDetalleCerrarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarTipoGastoEmpresa"));		
		}
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosTipoGastoEmpresa"));
		}
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarTipoGastoEmpresa"));
		}
		
		this.jButtonCopiarToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"CopiarToolBarTipoGastoEmpresa"));
			
		this.jButtonVerFormToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"VerFormToolBarTipoGastoEmpresa"));
		
		this.jMenuItemGuardarCambiosTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosTipoGastoEmpresa"));
			
		this.jMenuItemCopiarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemCopiarTipoGastoEmpresa"));		
		
		this.jMenuItemVerFormTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemVerFormTipoGastoEmpresa"));		
		
		
		this.jButtonGuardarCambiosTablaTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaTipoGastoEmpresa"));
		
		
		this.jButtonGuardarCambiosTablaToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarTipoGastoEmpresa"));
			
		this.jMenuItemGuardarCambiosTablaTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaTipoGastoEmpresa"));		
		
		
		
		this.jButtonRecargarInformacionTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"RecargarInformacionTipoGastoEmpresa"));
					
		this.jButtonRecargarInformacionToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarTipoGastoEmpresa"));
		
		this.jMenuItemRecargarInformacionTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionTipoGastoEmpresa"));		
		
		
		
		this.jButtonAnterioresTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"AnterioresTipoGastoEmpresa"));
		
		
		this.jButtonAnterioresToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"AnterioresToolBarTipoGastoEmpresa"));
		
		this.jMenuItemAnterioresTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresTipoGastoEmpresa"));		
		
		
		this.jButtonSiguientesTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"SiguientesTipoGastoEmpresa"));
		
		
		this.jButtonSiguientesToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"SiguientesToolBarTipoGastoEmpresa"));
			
		this.jMenuItemSiguientesTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesTipoGastoEmpresa"));
			
		this.jMenuItemAbrirOrderByTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByTipoGastoEmpresa"));
			
		this.jMenuItemMostrarOcultarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarTipoGastoEmpresa"));
			
		this.jMenuItemDetalleAbrirOrderByTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByTipoGastoEmpresa"));
			
		this.jMenuItemDetalleMostarOcultarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarTipoGastoEmpresa"));		
		
		
		this.jButtonNuevoGuardarCambiosTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosTipoGastoEmpresa"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarTipoGastoEmpresa"));
			
		this.jMenuItemNuevoGuardarCambiosTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosTipoGastoEmpresa"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosTipoGastoEmpresa.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosTipoGastoEmpresa"));

		this.jCheckBoxSeleccionadosTipoGastoEmpresa.addItemListener(new CheckBoxItemListener(this,"SeleccionadosTipoGastoEmpresa"));
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioTipoGastoEmpresa"));
		}
		
		
		this.jComboBoxTiposRelacionesTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"TiposRelacionesTipoGastoEmpresa"));
			
		this.jComboBoxTiposAccionesTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"TiposAccionesTipoGastoEmpresa"));
					
		this.jComboBoxTiposSeleccionarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"TiposSeleccionarTipoGastoEmpresa"));
			
		this.jTextFieldValorCampoGeneralTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralTipoGastoEmpresa"));		
		
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonidTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"idTipoGastoEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_empresaTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_empresaTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaTipoGastoEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_sucursalTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_sucursalTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalTipoGastoEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonnombreTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"nombreTipoGastoEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_formatoTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_formatoTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_formatoTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoTipoGastoEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtondescripcionTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_gastoTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_gastoTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_gastoTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableGasto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFiscalBien("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFiscalServicio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableRetencionBien("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableRetencionServicio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_iva_bienTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIvaBien("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIvaServicio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorNombreTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreTipoGastoEmpresa"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoTipoGastoEmpresa!=null) {
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTipoGastoEmpresa"));
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTipoGastoEmpresa"));
				this.jInternalFrameReporteDinamicoTipoGastoEmpresa.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTipoGastoEmpresa"));
			}
			
			//this.jButtonCerrarReporteDinamicoTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoTipoGastoEmpresa"));				
			//this.jButtonGenerarReporteDinamicoTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoTipoGastoEmpresa"));
			//this.jButtonGenerarExcelReporteDinamicoTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoTipoGastoEmpresa"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionTipoGastoEmpresa!=null) {
				this.jInternalFrameImportacionTipoGastoEmpresa.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionTipoGastoEmpresa"));
				this.jInternalFrameImportacionTipoGastoEmpresa.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionTipoGastoEmpresa"));
				this.jInternalFrameImportacionTipoGastoEmpresa.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionTipoGastoEmpresa"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"AbrirOrderByTipoGastoEmpresa"));
			
			this.jButtonAbrirOrderByToolBarTipoGastoEmpresa.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarTipoGastoEmpresa"));			
			
			if(this.jInternalFrameOrderByTipoGastoEmpresa!=null) {
				this.jInternalFrameOrderByTipoGastoEmpresa.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByTipoGastoEmpresa"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jTabbedPaneRelacionesTipoGastoEmpresa.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesTipoGastoEmpresa"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameTipoGastoEmpresa();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormTipoGastoEmpresa = (JInternalFrameBase)event.getSource();
	            	
	            TipoGastoEmpresaBeanSwingJInternalFrame jInternalFrameParent=(TipoGastoEmpresaBeanSwingJInternalFrame)jInternalFrameDetalleFormTipoGastoEmpresa.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarTipoGastoEmpresaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosTipoGastoEmpresa.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosTipoGastoEmpresaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosTipoGastoEmpresa.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosTipoGastoEmpresa.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoGastoEmpresaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoGastoEmpresaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoGastoEmpresaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoTipoGastoEmpresa";
		inputMap = this.jButtonNuevoTipoGastoEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoTipoGastoEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoTipoGastoEmpresaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoGastoEmpresaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoGastoEmpresaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoTipoGastoEmpresaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesTipoGastoEmpresa";
		inputMap = this.jButtonNuevoRelacionesTipoGastoEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesTipoGastoEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoTipoGastoEmpresaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarTipoGastoEmpresa";
		inputMap = this.jButtonModificarTipoGastoEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarTipoGastoEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarTipoGastoEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarTipoGastoEmpresa";
		inputMap = this.jButtonActualizarTipoGastoEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarTipoGastoEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarTipoGastoEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarTipoGastoEmpresa";
		inputMap = this.jButtonEliminarTipoGastoEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarTipoGastoEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarTipoGastoEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarTipoGastoEmpresa";
		inputMap = this.jButtonCancelarTipoGastoEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarTipoGastoEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarTipoGastoEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarTipoGastoEmpresa";
		inputMap = this.jButtonCerrarTipoGastoEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarTipoGastoEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarTipoGastoEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosTipoGastoEmpresa";
		inputMap = this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosTipoGastoEmpresa.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonGuardarCambiosTipoGastoEmpresa.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosTipoGastoEmpresaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosTipoGastoEmpresa.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosTipoGastoEmpresaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesTipoGastoEmpresa.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesTipoGastoEmpresaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarTipoGastoEmpresa.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarTipoGastoEmpresaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralTipoGastoEmpresa.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralTipoGastoEmpresaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonidTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"idTipoGastoEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_empresaTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_empresaTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaTipoGastoEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_sucursalTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_sucursalTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalTipoGastoEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonnombreTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"nombreTipoGastoEmpresaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_formatoTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_formatoTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_formatoTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoTipoGastoEmpresaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtondescripcionTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_gastoTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_gastoTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_gastoTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableGasto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_gastoTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFiscalBien("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_bienTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFiscalServicio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_fiscal_servicioTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableRetencionBien("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_bienTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableRetencionServicio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencion_servicioTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_iva_bienTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIvaBien("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_bienTipoGastoEmpresaBusqueda"));
		//jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresa.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresa"));
		//jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIvaServicio("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iva_servicioTipoGastoEmpresaBusqueda"));
		
		
		this.jButtonBusquedaPorNombreTipoGastoEmpresa.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreTipoGastoEmpresa"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionTipoGastoEmpresa.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionTipoGastoEmpresaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarTipoGastoEmpresaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarTipoGastoEmpresa.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosTipoGastoEmpresa(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresaLogic.getTipoGastoEmpresas()) {
					tipogastoempresaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresas) {
					tipogastoempresaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosTipoGastoEmpresaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresaLogic.getTipoGastoEmpresas()) {
						tipogastoempresaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresas) {
						tipogastoempresaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresaLogic.getTipoGastoEmpresas()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresas) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosTipoGastoEmpresa.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosTipoGastoEmpresa.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosTipoGastoEmpresaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosTipoGastoEmpresa.getSelectedRows();
			
			TipoGastoEmpresa tipogastoempresaLocal=new TipoGastoEmpresa();
			
			//this.seleccionarTodosTipoGastoEmpresa(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogastoempresaLocal =(TipoGastoEmpresa) this.tipogastoempresaLogic.getTipoGastoEmpresas().toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					tipogastoempresaLocal =(TipoGastoEmpresa) this.tipogastoempresas.toArray()[this.jTableDatosTipoGastoEmpresa.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				tipogastoempresaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresaLogic.getTipoGastoEmpresas()) {
						tipogastoempresaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresas) {
						tipogastoempresaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosTipoGastoEmpresa.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosTipoGastoEmpresa.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosTipoGastoEmpresa,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualTipoGastoEmpresaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarTipoGastoEmpresaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralTipoGastoEmpresaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralTipoGastoEmpresa.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresaLogic.getTipoGastoEmpresas()) {
				
						if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							tipogastoempresaAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							tipogastoempresaAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresas) {
					
						if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							tipogastoempresaAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							tipogastoempresaAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesTipoGastoEmpresaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioTipoGastoEmpresa=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesTipoGastoEmpresa.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteTipoGastoEmpresa) {				
					conSplash=true;//false;										
					
					//this.startProcessTipoGastoEmpresa(conSplash);
				
					this.generarReporteTipoGastoEmpresasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoTipoGastoEmpresasSeleccionados();
				//this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoTipoGastoEmpresasSeleccionados(false);
				//this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoTipoGastoEmpresasSeleccionados(true);
				//this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessTipoGastoEmpresa();
				
				this.exportarTipoGastoEmpresasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionTipoGastoEmpresas();
				//this.importarTipoGastoEmpresas();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessTipoGastoEmpresa();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelTipoGastoEmpresasSeleccionados();
				//this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Tipo Gasto Empresa", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessTipoGastoEmpresa();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoTipoGastoEmpresa)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyTipoGastoEmpresa(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.setSelectedIndex(0);					
				}	
			} 			
			else if(TipoGastoEmpresaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteTipoGastoEmpresa) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessTipoGastoEmpresa(conSplash);
					
						//this.actualizarParametrosGeneralTipoGastoEmpresa();
						
						this.generarReporteProcesoAccionTipoGastoEmpresasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(TipoGastoEmpresaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Tipo Gasto EmpresaS SELECCIONADOS?", "MANTENIMIENTO DE Tipo Gasto Empresa", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessTipoGastoEmpresa();
				
						this.actualizarParametrosGeneralTipoGastoEmpresa();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.tipogastoempresaReturnGeneral=tipogastoempresaLogic.procesarAccionTipoGastoEmpresasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.tipogastoempresaLogic.getTipoGastoEmpresas(),this.tipogastoempresaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarTipoGastoEmpresaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralTipoGastoEmpresa();
					
					TipoGastoEmpresaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarTipoGastoEmpresaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesTipoGastoEmpresa.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxTiposAccionesFormularioTipoGastoEmpresa.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessTipoGastoEmpresa(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesTipoGastoEmpresaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessTipoGastoEmpresa();
			
			if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();		
			TipoGastoEmpresa tipogastoempresa=new TipoGastoEmpresa();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingTipoGastoEmpresa(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesTipoGastoEmpresa.getSelectedItem();
			
			
			
			
			tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
			//this.sTipoAccion;
			
			if(tipogastoempresasSeleccionados.size()==1) {
				for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasSeleccionados) {
					tipogastoempresa=tipogastoempresaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessTipoGastoEmpresa();
			
      		//this.finishProcessTipoGastoEmpresa(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarTipoGastoEmpresaReturnGeneral() throws Exception {
		if(this.tipogastoempresaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.tipogastoempresaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.tipogastoempresaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.tipogastoempresaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.tipogastoempresaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.tipogastoempresaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingTipoGastoEmpresa(false);
		}
		
		if(this.tipogastoempresaReturnGeneral.getConRetornoLista() || this.tipogastoempresaReturnGeneral.getConRetornoObjeto()) {
			if(this.tipogastoempresaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.tipogastoempresaLogic.setTipoGastoEmpresas(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.tipogastoempresaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.tipogastoempresaLogic.setTipoGastoEmpresa(this.tipogastoempresaReturnGeneral.getTipoGastoEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingTipoGastoEmpresa(false);
		}
	}
	
	public void actualizarParametrosGeneralTipoGastoEmpresa() throws Exception {
		
		
	}
	
	public ArrayList<TipoGastoEmpresa> getTipoGastoEmpresasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioTipoGastoEmpresa) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresaLogic.getTipoGastoEmpresas()) {
					if(tipogastoempresaAux.getIsSelected()) {
						tipogastoempresasSeleccionados.add(tipogastoempresaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(TipoGastoEmpresa tipogastoempresaAux:this.tipogastoempresas) {
					if(tipogastoempresaAux.getIsSelected()) {
						tipogastoempresasSeleccionados.add(tipogastoempresaAux);				
					}
				}
			}
			
			if(tipogastoempresasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						tipogastoempresasSeleccionados.addAll(this.tipogastoempresaLogic.getTipoGastoEmpresas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						tipogastoempresasSeleccionados.addAll(this.tipogastoempresas);				
					}
				}
			}
		} else {
			tipogastoempresasSeleccionados.add(this.tipogastoempresa);
		}
		
		return tipogastoempresasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteTipoGastoEmpresasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalTipoGastoEmpresasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoTipoGastoEmpresasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoTipoGastoEmpresasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoTipoGastoEmpresasSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Tipo Gasto Empresa",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesTipoGastoEmpresasSeleccionados() throws Exception {
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();		
		
		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteTipoGastoEmpresas("Todos",tipogastoempresasSeleccionados);
		
	}	
	
	public void generarReporteNormalTipoGastoEmpresasSeleccionados() throws Exception {
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();		
		
		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteTipoGastoEmpresas("Todos",tipogastoempresasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionTipoGastoEmpresasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();
		
		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteTipoGastoEmpresas("Todos",tipogastoempresasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoTipoGastoEmpresasSeleccionados() throws Exception {
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();		
		
		
		this.abrirInicializarFrameReporteDinamicoTipoGastoEmpresa();
		
		
		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoTipoGastoEmpresa();
		
		
		//this.generarReporteTipoGastoEmpresas("Todos",tipogastoempresasSeleccionados ,tipogastoempresaImplementable,tipogastoempresaImplementableHome);
	}
	
	public void mostrarImportacionTipoGastoEmpresas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionTipoGastoEmpresa();
		
		this.abrirFrameImportacionTipoGastoEmpresa();		
		
			
		//this.generarReporteTipoGastoEmpresas("Todos",tipogastoempresasSeleccionados ,tipogastoempresaImplementable,tipogastoempresaImplementableHome);
	}
	
	public void importarTipoGastoEmpresas() throws Exception {		
	
	}
	
	public void exportarTipoGastoEmpresasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelTipoGastoEmpresasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoTipoGastoEmpresasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlTipoGastoEmpresasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Tipo Gasto Empresa",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoTipoGastoEmpresasSeleccionados() throws Exception {
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();		
		
		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipogastoempresa."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarTipoGastoEmpresa(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarTipoGastoEmpresa(tipogastoempresaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//tipogastoempresaAux.setsDetalleGeneralEntityReporte(tipogastoempresaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarTipoGastoEmpresa(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=tipogastoempresa.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getcuentacontablegasto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getcuentacontablefiscalbien_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getcuentacontablefiscalservicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getcuentacontableretencionbien_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getcuentacontableretencionservicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getcuentacontableivabien_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=tipogastoempresa.getcuentacontableivaservicio_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelTipoGastoEmpresasSeleccionados() throws Exception {
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();		
		
		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipogastoempresa.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("TipoGastoEmpresas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelTipoGastoEmpresa(row);				
				iRow++;
			}				
			
			for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelTipoGastoEmpresa(tipogastoempresaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlTipoGastoEmpresasSeleccionados() throws Exception {
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();		
		
		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"tipogastoempresa.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("tipogastoempresas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("tipogastoempresa");
			//elementRoot.appendChild(element);
		
			for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasSeleccionados) {
				element = document.createElement("tipogastoempresa");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlTipoGastoEmpresa(tipogastoempresaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Tipo Gasto Empresa",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelTipoGastoEmpresa(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN);
		cell = row.createCell(iColumn++);cell.setCellValue(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getcuentacontablegasto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getcuentacontablefiscalbien_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getcuentacontablefiscalservicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getcuentacontableretencionbien_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getcuentacontableretencionservicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getcuentacontableivabien_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(tipogastoempresa.getcuentacontableivaservicio_descripcion());				
	}
	
	public void setFilaDatosExportarXmlTipoGastoEmpresa(TipoGastoEmpresa tipogastoempresa,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(TipoGastoEmpresaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(tipogastoempresa.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(TipoGastoEmpresaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(tipogastoempresa.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(tipogastoempresa.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(tipogastoempresa.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementnombre = document.createElement(TipoGastoEmpresaConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(tipogastoempresa.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementformato_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(tipogastoempresa.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementdescripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(tipogastoempresa.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcuentacontablegasto_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEGASTO);
		elementcuentacontablegasto_descripcion.appendChild(document.createTextNode(tipogastoempresa.getcuentacontablegasto_descripcion()));
		element.appendChild(elementcuentacontablegasto_descripcion);

		Element elementcuentacontablefiscalbien_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEFISCALBIEN);
		elementcuentacontablefiscalbien_descripcion.appendChild(document.createTextNode(tipogastoempresa.getcuentacontablefiscalbien_descripcion()));
		element.appendChild(elementcuentacontablefiscalbien_descripcion);

		Element elementcuentacontablefiscalservicio_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEFISCALSERVICIO);
		elementcuentacontablefiscalservicio_descripcion.appendChild(document.createTextNode(tipogastoempresa.getcuentacontablefiscalservicio_descripcion()));
		element.appendChild(elementcuentacontablefiscalservicio_descripcion);

		Element elementcuentacontableretencionbien_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLERETENCIONBIEN);
		elementcuentacontableretencionbien_descripcion.appendChild(document.createTextNode(tipogastoempresa.getcuentacontableretencionbien_descripcion()));
		element.appendChild(elementcuentacontableretencionbien_descripcion);

		Element elementcuentacontableretencionservicio_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLERETENCIONSERVICIO);
		elementcuentacontableretencionservicio_descripcion.appendChild(document.createTextNode(tipogastoempresa.getcuentacontableretencionservicio_descripcion()));
		element.appendChild(elementcuentacontableretencionservicio_descripcion);

		Element elementcuentacontableivabien_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEIVABIEN);
		elementcuentacontableivabien_descripcion.appendChild(document.createTextNode(tipogastoempresa.getcuentacontableivabien_descripcion()));
		element.appendChild(elementcuentacontableivabien_descripcion);

		Element elementcuentacontableivaservicio_descripcion = document.createElement(TipoGastoEmpresaConstantesFunciones.IDCUENTACONTABLEIVASERVICIO);
		elementcuentacontableivaservicio_descripcion.appendChild(document.createTextNode(tipogastoempresa.getcuentacontableivaservicio_descripcion()));
		element.appendChild(elementcuentacontableivaservicio_descripcion);
	}
	
	public void generarReporteGroupGenericoTipoGastoEmpresasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados=new ArrayList<TipoGastoEmpresa>();
		
		tipogastoempresasSeleccionados=this.getTipoGastoEmpresasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoTipoGastoEmpresa(tipogastoempresasSeleccionados);
		
		this.generarReporteTipoGastoEmpresas("Todos",tipogastoempresasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoTipoGastoEmpresa(ArrayList<TipoGastoEmpresa> tipogastoempresasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(TipoGastoEmpresa tipogastoempresaAux:tipogastoempresasSeleccionados) {
				tipogastoempresaAux.setsDetalleGeneralEntityReporte(tipogastoempresaAux.toString());
			
				if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEGASTO)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getcuentacontablegasto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALBIEN)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getcuentacontablefiscalbien_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEFISCALSERVICIO)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getcuentacontablefiscalservicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONBIEN)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getcuentacontableretencionbien_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLERETENCIONSERVICIO)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getcuentacontableretencionservicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVABIEN)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getcuentacontableivabien_descripcion());
				}
				 else if(sTipoSeleccionar.equals(TipoGastoEmpresaConstantesFunciones.LABEL_IDCUENTACONTABLEIVASERVICIO)) {
					existe=true;
					tipogastoempresaAux.setsDescripcionGeneralEntityReporte1(tipogastoempresaAux.getcuentacontableivaservicio_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,TipoGastoEmpresaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesTipoGastoEmpresa(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoTipoGastoEmpresa=true;
				this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=true;
				this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=true;
			}
			
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=false;
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=true;
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=false;
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=true;
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=true;
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=false;
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=true;
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				} else {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=true;
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=true;
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=true;
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=true;
				} else {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=false;
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				} else {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=false;
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=false;
			this.isVisibilidadCeldaModificarTipoGastoEmpresa=true;
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaCancelarTipoGastoEmpresa=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				} else {
					this.isVisibilidadCeldaGuardarTipoGastoEmpresa=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(TipoGastoEmpresaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=true;
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=true;
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=true;
		} else {
			this.actualizarEstadoPanelsTipoGastoEmpresa(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarTipoGastoEmpresa=false;
			//this.isVisibilidadCeldaVerFormTipoGastoEmpresa=false;
			this.isVisibilidadCeldaDuplicarTipoGastoEmpresa=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!tipogastoempresaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;
		} else {
			this.isVisibilidadCeldaNuevoTipoGastoEmpresa=false;
			this.isVisibilidadCeldaGuardarCambiosTipoGastoEmpresa=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
			if(!tipogastoempresaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;												
			}
			
			this.jButtonCerrarTipoGastoEmpresa.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesTipoGastoEmpresa=false;
		}
		
		if(!this.permiteMantenimiento(this.tipogastoempresa)) {
			this.isVisibilidadCeldaActualizarTipoGastoEmpresa=false;
			this.isVisibilidadCeldaEliminarTipoGastoEmpresa=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesTipoGastoEmpresa() {
	}
	
	public void actualizarEstadoPanelsTipoGastoEmpresa(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosEdicionTipoGastoEmpresa.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoGastoEmpresa!=null) {
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosTipoGastoEmpresa.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoGastoEmpresa!=null) {
				this.jPanelPaginacionTipoGastoEmpresa.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoGastoEmpresa!=null) {
				this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosEdicionTipoGastoEmpresa.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoGastoEmpresa!=null) {
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosTipoGastoEmpresa.setVisible(false);
			}
			
			if(this.jPanelPaginacionTipoGastoEmpresa!=null) {
				this.jPanelPaginacionTipoGastoEmpresa.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTipoGastoEmpresa!=null) {
				this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosEdicionTipoGastoEmpresa.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoGastoEmpresa!=null) {
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosTipoGastoEmpresa.setVisible(false);
			}
			
			if(this.jPanelPaginacionTipoGastoEmpresa!=null) {
				this.jPanelPaginacionTipoGastoEmpresa.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTipoGastoEmpresa!=null) {
				this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosEdicionTipoGastoEmpresa.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoGastoEmpresa!=null) {
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosTipoGastoEmpresa.setVisible(false);
			}
			
			if(this.jPanelPaginacionTipoGastoEmpresa!=null) {
				this.jPanelPaginacionTipoGastoEmpresa.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesTipoGastoEmpresa!=null) {
				this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosEdicionTipoGastoEmpresa.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoGastoEmpresa!=null) {
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosTipoGastoEmpresa.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoGastoEmpresa!=null) {
				this.jPanelPaginacionTipoGastoEmpresa.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoGastoEmpresa!=null) {
				this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosEdicionTipoGastoEmpresa.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoGastoEmpresa!=null) {
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosTipoGastoEmpresa.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoGastoEmpresa!=null) {
				this.jPanelPaginacionTipoGastoEmpresa.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoGastoEmpresa!=null) {
				this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosEdicionTipoGastoEmpresa.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoGastoEmpresa!=null) {
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosTipoGastoEmpresa!=null) {
				this.jScrollPanelDatosTipoGastoEmpresa.setVisible(true);
			}
			
			if(this.jPanelPaginacionTipoGastoEmpresa!=null) {
				this.jPanelPaginacionTipoGastoEmpresa.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesTipoGastoEmpresa!=null) {
				this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasTipoGastoEmpresa!=null) {
					this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesTipoGastoEmpresa!=null) {
				this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.tipogastoempresaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasTipoGastoEmpresa!=null) {
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesTipoGastoEmpresa!=null) {
				this.jPanelParametrosReportesTipoGastoEmpresa.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorNombre=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadBusquedaPorNombre=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadBusquedaPorNombre=isParaFormatoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableGasto(Boolean isParaCuentaContableGasto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableGastoNegation=!isParaCuentaContableGasto;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableGastoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableFiscalBien(Boolean isParaCuentaContableFiscalBien){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableFiscalBienNegation=!isParaCuentaContableFiscalBien;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableFiscalBienNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableFiscalServicio(Boolean isParaCuentaContableFiscalServicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableFiscalServicioNegation=!isParaCuentaContableFiscalServicio;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableFiscalServicioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableRetencionBien(Boolean isParaCuentaContableRetencionBien){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableRetencionBienNegation=!isParaCuentaContableRetencionBien;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableRetencionBienNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableRetencionServicio(Boolean isParaCuentaContableRetencionServicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableRetencionServicioNegation=!isParaCuentaContableRetencionServicio;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableRetencionServicioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIvaBien(Boolean isParaCuentaContableIvaBien){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIvaBienNegation=!isParaCuentaContableIvaBien;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableIvaBienNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIvaServicio(Boolean isParaCuentaContableIvaServicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIvaServicioNegation=!isParaCuentaContableIvaServicio;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableIvaServicioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(jPanelBusquedaPorNombreTipoGastoEmpresa);}
		}
		
	}
	
	
	
	

	public String registrarSesionTipoGastoEmpresaParaBusquedaCuentaContableGastos() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(tipogastoempresaSessionBean==null) {
				tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(cuentacontablegastoSessionBean==null) {
				cuentacontablegastoSessionBean=new CuentaContableSessionBean();
			}

			cuentacontablegastoSessionBean.setsPathNavegacionActual(tipogastoempresaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontablegastoSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontablegastoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontablegastoSessionBean.getisPaginaPopup();
			cuentacontablegastoSessionBean.setisPaginaPopup(false);
			cuentacontablegastoSessionBean.setEstaModoBusqueda(true);
			cuentacontablegastoSessionBean.setsFuncionBusquedaRapida("window.opener.tipogastoempresaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_gasto(TO_REPLACE);");
			cuentacontablegastoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontablegastoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionTipoGastoEmpresa(true);
			//cuentacontableSessionBean.setlidTipoGastoEmpresaActual(this.idTipoGastoEmpresaActual);

			tipogastoempresaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoGastoEmpresa(true);
			tipogastoempresaSessionBean.setlIdTipoGastoEmpresaActualForeignKey(this.idTipoGastoEmpresaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionTipoGastoEmpresaParaBusquedaCuentaContableFiscalBiens() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(tipogastoempresaSessionBean==null) {
				tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(cuentacontablefiscalbienSessionBean==null) {
				cuentacontablefiscalbienSessionBean=new CuentaContableSessionBean();
			}

			cuentacontablefiscalbienSessionBean.setsPathNavegacionActual(tipogastoempresaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontablefiscalbienSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontablefiscalbienSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontablefiscalbienSessionBean.getisPaginaPopup();
			cuentacontablefiscalbienSessionBean.setisPaginaPopup(false);
			cuentacontablefiscalbienSessionBean.setEstaModoBusqueda(true);
			cuentacontablefiscalbienSessionBean.setsFuncionBusquedaRapida("window.opener.tipogastoempresaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_fiscal_bien(TO_REPLACE);");
			cuentacontablefiscalbienSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontablefiscalbienSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionTipoGastoEmpresa(true);
			//cuentacontableSessionBean.setlidTipoGastoEmpresaActual(this.idTipoGastoEmpresaActual);

			tipogastoempresaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoGastoEmpresa(true);
			tipogastoempresaSessionBean.setlIdTipoGastoEmpresaActualForeignKey(this.idTipoGastoEmpresaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionTipoGastoEmpresaParaBusquedaCuentaContableFiscalServicios() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(tipogastoempresaSessionBean==null) {
				tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(cuentacontablefiscalservicioSessionBean==null) {
				cuentacontablefiscalservicioSessionBean=new CuentaContableSessionBean();
			}

			cuentacontablefiscalservicioSessionBean.setsPathNavegacionActual(tipogastoempresaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontablefiscalservicioSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontablefiscalservicioSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontablefiscalservicioSessionBean.getisPaginaPopup();
			cuentacontablefiscalservicioSessionBean.setisPaginaPopup(false);
			cuentacontablefiscalservicioSessionBean.setEstaModoBusqueda(true);
			cuentacontablefiscalservicioSessionBean.setsFuncionBusquedaRapida("window.opener.tipogastoempresaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_fiscal_servicio(TO_REPLACE);");
			cuentacontablefiscalservicioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontablefiscalservicioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionTipoGastoEmpresa(true);
			//cuentacontableSessionBean.setlidTipoGastoEmpresaActual(this.idTipoGastoEmpresaActual);

			tipogastoempresaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoGastoEmpresa(true);
			tipogastoempresaSessionBean.setlIdTipoGastoEmpresaActualForeignKey(this.idTipoGastoEmpresaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionTipoGastoEmpresaParaBusquedaCuentaContableRetencionBiens() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(tipogastoempresaSessionBean==null) {
				tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(cuentacontableretencionbienSessionBean==null) {
				cuentacontableretencionbienSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableretencionbienSessionBean.setsPathNavegacionActual(tipogastoempresaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableretencionbienSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableretencionbienSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableretencionbienSessionBean.getisPaginaPopup();
			cuentacontableretencionbienSessionBean.setisPaginaPopup(false);
			cuentacontableretencionbienSessionBean.setEstaModoBusqueda(true);
			cuentacontableretencionbienSessionBean.setsFuncionBusquedaRapida("window.opener.tipogastoempresaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_retencion_bien(TO_REPLACE);");
			cuentacontableretencionbienSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableretencionbienSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionTipoGastoEmpresa(true);
			//cuentacontableSessionBean.setlidTipoGastoEmpresaActual(this.idTipoGastoEmpresaActual);

			tipogastoempresaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoGastoEmpresa(true);
			tipogastoempresaSessionBean.setlIdTipoGastoEmpresaActualForeignKey(this.idTipoGastoEmpresaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionTipoGastoEmpresaParaBusquedaCuentaContableRetencionServicios() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(tipogastoempresaSessionBean==null) {
				tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(cuentacontableretencionservicioSessionBean==null) {
				cuentacontableretencionservicioSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableretencionservicioSessionBean.setsPathNavegacionActual(tipogastoempresaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableretencionservicioSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableretencionservicioSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableretencionservicioSessionBean.getisPaginaPopup();
			cuentacontableretencionservicioSessionBean.setisPaginaPopup(false);
			cuentacontableretencionservicioSessionBean.setEstaModoBusqueda(true);
			cuentacontableretencionservicioSessionBean.setsFuncionBusquedaRapida("window.opener.tipogastoempresaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_retencion_servicio(TO_REPLACE);");
			cuentacontableretencionservicioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableretencionservicioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionTipoGastoEmpresa(true);
			//cuentacontableSessionBean.setlidTipoGastoEmpresaActual(this.idTipoGastoEmpresaActual);

			tipogastoempresaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoGastoEmpresa(true);
			tipogastoempresaSessionBean.setlIdTipoGastoEmpresaActualForeignKey(this.idTipoGastoEmpresaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionTipoGastoEmpresaParaBusquedaCuentaContableIvaBiens() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(tipogastoempresaSessionBean==null) {
				tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(cuentacontableivabienSessionBean==null) {
				cuentacontableivabienSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableivabienSessionBean.setsPathNavegacionActual(tipogastoempresaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableivabienSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableivabienSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableivabienSessionBean.getisPaginaPopup();
			cuentacontableivabienSessionBean.setisPaginaPopup(false);
			cuentacontableivabienSessionBean.setEstaModoBusqueda(true);
			cuentacontableivabienSessionBean.setsFuncionBusquedaRapida("window.opener.tipogastoempresaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_iva_bien(TO_REPLACE);");
			cuentacontableivabienSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableivabienSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionTipoGastoEmpresa(true);
			//cuentacontableSessionBean.setlidTipoGastoEmpresaActual(this.idTipoGastoEmpresaActual);

			tipogastoempresaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoGastoEmpresa(true);
			tipogastoempresaSessionBean.setlIdTipoGastoEmpresaActualForeignKey(this.idTipoGastoEmpresaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionTipoGastoEmpresaParaBusquedaCuentaContableIvaServicios() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(tipogastoempresaSessionBean==null) {
				tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
			}

			if(cuentacontableivaservicioSessionBean==null) {
				cuentacontableivaservicioSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableivaservicioSessionBean.setsPathNavegacionActual(tipogastoempresaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableivaservicioSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableivaservicioSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableivaservicioSessionBean.getisPaginaPopup();
			cuentacontableivaservicioSessionBean.setisPaginaPopup(false);
			cuentacontableivaservicioSessionBean.setEstaModoBusqueda(true);
			cuentacontableivaservicioSessionBean.setsFuncionBusquedaRapida("window.opener.tipogastoempresaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_iva_servicio(TO_REPLACE);");
			cuentacontableivaservicioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableivaservicioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(TipoGastoEmpresaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionTipoGastoEmpresa(true);
			//cuentacontableSessionBean.setlidTipoGastoEmpresaActual(this.idTipoGastoEmpresaActual);

			tipogastoempresaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyTipoGastoEmpresa(true);
			tipogastoempresaSessionBean.setlIdTipoGastoEmpresaActualForeignKey(this.idTipoGastoEmpresaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//TipoGastoEmpresaSessionBean tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
		
		if(this.tipogastoempresaSessionBean==null) {
			this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
		}
		
		this.tipogastoempresaSessionBean.setsUltimaBusquedaTipoGastoEmpresa(this.getsAccionBusqueda());
		this.tipogastoempresaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.tipogastoempresaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
			tipogastoempresaSessionBean.setnombre(this.getnombreBusquedaPorNombre());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			tipogastoempresaSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			tipogastoempresaSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//TipoGastoEmpresaSessionBean tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
		
		if(this.tipogastoempresaSessionBean==null) {
			this.tipogastoempresaSessionBean=new TipoGastoEmpresaSessionBean();
		}
		
		if(this.tipogastoempresaSessionBean.getsUltimaBusquedaTipoGastoEmpresa()!=null&&!this.tipogastoempresaSessionBean.getsUltimaBusquedaTipoGastoEmpresa().equals("")) {
			this.setsAccionBusqueda(tipogastoempresaSessionBean.getsUltimaBusquedaTipoGastoEmpresa());
			this.setiNumeroPaginacion(tipogastoempresaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(tipogastoempresaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
				this.setnombreBusquedaPorNombre(tipogastoempresaSessionBean.getnombre());
				tipogastoempresaSessionBean.setnombre("");
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(tipogastoempresaSessionBean.getid_empresa());
				tipogastoempresaSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(tipogastoempresaSessionBean.getid_sucursal());
				tipogastoempresaSessionBean.setid_sucursal(-1L);
			}
		}
		
		this.tipogastoempresaSessionBean.setsUltimaBusquedaTipoGastoEmpresa("");
		this.tipogastoempresaSessionBean.setiNumeroPaginacion(TipoGastoEmpresaConstantesFunciones.INUMEROPAGINACION);
		this.tipogastoempresaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaTipoGastoEmpresa(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioTipoGastoEmpresa() {
		this.updateBorderResaltarBusquedasFormularioTipoGastoEmpresa();
		this.updateVisibilidadBusquedasFormularioTipoGastoEmpresa();
		this.updateHabilitarBusquedasFormularioTipoGastoEmpresa();
	}
	
	public void updateBorderResaltarBusquedasFormularioTipoGastoEmpresa() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasTipoGastoEmpresa.getComponents().length>0) {
	

		if(this.tipogastoempresaConstantesFunciones.resaltarBusquedaPorNombreTipoGastoEmpresa!=null) {
			index= this.jTabbedPaneBusquedasTipoGastoEmpresa.indexOfComponent(this.jPanelBusquedaPorNombreTipoGastoEmpresa);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoGastoEmpresa.getComponent(index);
				jPanel.setBorder(this.tipogastoempresaConstantesFunciones.resaltarBusquedaPorNombreTipoGastoEmpresa);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioTipoGastoEmpresa() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasTipoGastoEmpresa.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasTipoGastoEmpresa.indexOfComponent(this.jPanelBusquedaPorNombreTipoGastoEmpresa);
			jPanel=(JPanel)this.jTabbedPaneBusquedasTipoGastoEmpresa.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.tipogastoempresaConstantesFunciones.mostrarBusquedaPorNombreTipoGastoEmpresa);
			if(!this.tipogastoempresaConstantesFunciones.mostrarBusquedaPorNombreTipoGastoEmpresa && index>-1) {
				this.jTabbedPaneBusquedasTipoGastoEmpresa.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioTipoGastoEmpresa() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasTipoGastoEmpresa.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasTipoGastoEmpresa.indexOfComponent(this.jPanelBusquedaPorNombreTipoGastoEmpresa);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasTipoGastoEmpresa.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.tipogastoempresaConstantesFunciones.activarBusquedaPorNombreTipoGastoEmpresa);
				this.jTabbedPaneBusquedasTipoGastoEmpresa.setEnabledAt(index,this.tipogastoempresaConstantesFunciones.activarBusquedaPorNombreTipoGastoEmpresa);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaTipoGastoEmpresa(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorNombre")) {
			index= this.jTabbedPaneBusquedasTipoGastoEmpresa.indexOfComponent(this.jPanelBusquedaPorNombreTipoGastoEmpresa);

			this.jTabbedPaneBusquedasTipoGastoEmpresa.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasTipoGastoEmpresa.getComponent(index);

			this.tipogastoempresaConstantesFunciones.setResaltarBusquedaPorNombreTipoGastoEmpresa(resaltar);

			jPanel.setBorder(this.tipogastoempresaConstantesFunciones.resaltarBusquedaPorNombreTipoGastoEmpresa);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarTipoGastoEmpresa.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioTipoGastoEmpresa() throws Exception {

		if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioTipoGastoEmpresa();
		this.updateVisibilidadResaltarControlesFormularioTipoGastoEmpresa();
		this.updateHabilitarResaltarControlesFormularioTipoGastoEmpresa();
		
	}
	
	public void updateBorderResaltarControlesFormularioTipoGastoEmpresa() throws Exception {
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.tipogastoempresaConstantesFunciones.resaltaridTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltaridTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_empresaTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_empresaTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_sucursalTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_sucursalTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarnombreTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreanombreTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarnombreTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_formatoTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_formatoTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltardescripcionTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreadescripcionTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltardescripcionTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_gastoTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_gastoTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_fiscal_bienTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_fiscal_bienTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_retencion_bienTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_retencion_bienTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_retencion_servicioTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_retencion_servicioTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_iva_bienTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_iva_bienTipoGastoEmpresa);}
		if(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_iva_servicioTipoGastoEmpresa!=null && this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setBorder(this.tipogastoempresaConstantesFunciones.resaltarid_cuenta_contable_iva_servicioTipoGastoEmpresa);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioTipoGastoEmpresa() throws Exception {		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
	
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostraridTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelidTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostraridTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_empresaTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_empresaTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_empresaTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_sucursalTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_sucursalTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_sucursalTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreanombreTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarnombreTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelnombreTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarnombreTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_formatoTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_formatoTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_formatoTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreadescripcionTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrardescripcionTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPaneldescripcionTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrardescripcionTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_gastoTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_cuenta_contable_gastoTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_gastoTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_gastoTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_fiscal_bienTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_fiscal_bienTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_fiscal_bienTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_retencion_bienTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_cuenta_contable_retencion_bienTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_retencion_bienTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_retencion_bienTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_retencion_servicioTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_retencion_servicioTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_retencion_servicioTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_iva_bienTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_cuenta_contable_iva_bienTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_iva_bienTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_iva_bienTipoGastoEmpresa);
		//this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_iva_servicioTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jPanelid_cuenta_contable_iva_servicioTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_iva_servicioTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresa.setVisible(this.tipogastoempresaConstantesFunciones.mostrarid_cuenta_contable_iva_servicioTipoGastoEmpresa);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioTipoGastoEmpresa() throws Exception {
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormTipoGastoEmpresa!=null) {
	
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jLabelidTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activaridTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_empresaTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_empresaTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_sucursalTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_sucursalTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreanombreTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarnombreTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_formatoTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_formatoTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jTextAreadescripcionTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activardescripcionTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_gastoTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_gastoTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_gastoTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_gastoTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_bienTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_bienTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_bienTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_fiscal_servicioTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_fiscal_servicioTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_bienTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_bienTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_bienTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_bienTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_servicioTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_retencion_servicioTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_retencion_servicioTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_bienTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_bienTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_bienTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_bienTipoGastoEmpresa);
		this.jInternalFrameDetalleFormTipoGastoEmpresa.jComboBoxid_cuenta_contable_iva_servicioTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_servicioTipoGastoEmpresa);
			this.jInternalFrameDetalleFormTipoGastoEmpresa.jButtonid_cuenta_contable_iva_servicioTipoGastoEmpresa.setEnabled(this.tipogastoempresaConstantesFunciones.activarid_cuenta_contable_iva_servicioTipoGastoEmpresa);
		}
	}
	
		
}