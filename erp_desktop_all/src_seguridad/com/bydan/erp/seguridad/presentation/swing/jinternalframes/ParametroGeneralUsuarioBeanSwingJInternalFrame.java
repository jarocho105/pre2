/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.seguridad.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.seguridad.util.ParametroGeneralUsuarioConstantesFunciones;
import com.bydan.erp.seguridad.util.ParametroGeneralUsuarioParameterReturnGeneral;
//import com.bydan.erp.seguridad.util.ParametroGeneralUsuarioParameterGeneral;
//import com.bydan.erp.seguridad.presentation.report.source.ParametroGeneralUsuarioBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.seguridad.resources.reportes.AuxiliarReportes;


import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.seguridad.business.logic.*;

import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.seguridad.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ParametroGeneralUsuarioBeanSwingJInternalFrame extends ParametroGeneralUsuarioJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ParametroGeneralUsuarioBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ParametroGeneralUsuario> parametrogeneralusuarioValidator = new ClassValidator<ParametroGeneralUsuario>(ParametroGeneralUsuario.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ParametroGeneralUsuario parametrogeneralusuario;	
	public ParametroGeneralUsuario parametrogeneralusuarioAux;
	public ParametroGeneralUsuario parametrogeneralusuarioAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ParametroGeneralUsuario parametrogeneralusuarioTotales;
	public Long idParametroGeneralUsuarioActual;
	public Long iIdNuevoParametroGeneralUsuario=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboTipoVisual="";

	public List<TipoVisual> tipovisualsForeignKey;

	public List<TipoVisual> gettipovisualsForeignKey() {
		return tipovisualsForeignKey;
	}

	public void settipovisualsForeignKey(List<TipoVisual> tipovisualsForeignKey) {
		this.tipovisualsForeignKey = tipovisualsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoVisual tipovisualForeignKey;

	public TipoVisual gettipovisualForeignKey() {
		return tipovisualForeignKey;
	}

	public void settipovisualForeignKey(TipoVisual tipovisualForeignKey) {
		this.tipovisualForeignKey = tipovisualForeignKey;
	}

	public String sFinalQueryComboTipoFondo="";

	public List<TipoFondo> tipofondosForeignKey;

	public List<TipoFondo> gettipofondosForeignKey() {
		return tipofondosForeignKey;
	}

	public void settipofondosForeignKey(List<TipoFondo> tipofondosForeignKey) {
		this.tipofondosForeignKey = tipofondosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoFondo tipofondoForeignKey;

	public TipoFondo gettipofondoForeignKey() {
		return tipofondoForeignKey;
	}

	public void settipofondoForeignKey(TipoFondo tipofondoForeignKey) {
		this.tipofondoForeignKey = tipofondoForeignKey;
	}

	public String sFinalQueryComboTipoFondoBorde="";

	public List<TipoFondo> tipofondobordesForeignKey;

	public List<TipoFondo> gettipofondobordesForeignKey() {
		return tipofondobordesForeignKey;
	}

	public void settipofondobordesForeignKey(List<TipoFondo> tipofondobordesForeignKey) {
		this.tipofondobordesForeignKey = tipofondobordesForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoFondo tipofondobordeForeignKey;

	public TipoFondo gettipofondobordeForeignKey() {
		return tipofondobordeForeignKey;
	}

	public void settipofondobordeForeignKey(TipoFondo tipofondobordeForeignKey) {
		this.tipofondobordeForeignKey = tipofondobordeForeignKey;
	}

	public String sFinalQueryComboTipoFondoControl="";

	public List<TipoFondoControl> tipofondocontrolsForeignKey;

	public List<TipoFondoControl> gettipofondocontrolsForeignKey() {
		return tipofondocontrolsForeignKey;
	}

	public void settipofondocontrolsForeignKey(List<TipoFondoControl> tipofondocontrolsForeignKey) {
		this.tipofondocontrolsForeignKey = tipofondocontrolsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoFondoControl tipofondocontrolForeignKey;

	public TipoFondoControl gettipofondocontrolForeignKey() {
		return tipofondocontrolForeignKey;
	}

	public void settipofondocontrolForeignKey(TipoFondoControl tipofondocontrolForeignKey) {
		this.tipofondocontrolForeignKey = tipofondocontrolForeignKey;
	}

	public String sFinalQueryComboTipoFuente="";

	public List<TipoFuente> tipofuentesForeignKey;

	public List<TipoFuente> gettipofuentesForeignKey() {
		return tipofuentesForeignKey;
	}

	public void settipofuentesForeignKey(List<TipoFuente> tipofuentesForeignKey) {
		this.tipofuentesForeignKey = tipofuentesForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoFuente tipofuenteForeignKey;

	public TipoFuente gettipofuenteForeignKey() {
		return tipofuenteForeignKey;
	}

	public void settipofuenteForeignKey(TipoFuente tipofuenteForeignKey) {
		this.tipofuenteForeignKey = tipofuenteForeignKey;
	}

	public String sFinalQueryComboTipoTamanioControlNormal="";

	public List<TipoTamanioControl> tipotamaniocontrolnormalsForeignKey;

	public List<TipoTamanioControl> gettipotamaniocontrolnormalsForeignKey() {
		return tipotamaniocontrolnormalsForeignKey;
	}

	public void settipotamaniocontrolnormalsForeignKey(List<TipoTamanioControl> tipotamaniocontrolnormalsForeignKey) {
		this.tipotamaniocontrolnormalsForeignKey = tipotamaniocontrolnormalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTamanioControl tipotamaniocontrolnormalForeignKey;

	public TipoTamanioControl gettipotamaniocontrolnormalForeignKey() {
		return tipotamaniocontrolnormalForeignKey;
	}

	public void settipotamaniocontrolnormalForeignKey(TipoTamanioControl tipotamaniocontrolnormalForeignKey) {
		this.tipotamaniocontrolnormalForeignKey = tipotamaniocontrolnormalForeignKey;
	}

	public String sFinalQueryComboTipoTamanioControlRelacion="";

	public List<TipoTamanioControl> tipotamaniocontrolrelacionsForeignKey;

	public List<TipoTamanioControl> gettipotamaniocontrolrelacionsForeignKey() {
		return tipotamaniocontrolrelacionsForeignKey;
	}

	public void settipotamaniocontrolrelacionsForeignKey(List<TipoTamanioControl> tipotamaniocontrolrelacionsForeignKey) {
		this.tipotamaniocontrolrelacionsForeignKey = tipotamaniocontrolrelacionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTamanioControl tipotamaniocontrolrelacionForeignKey;

	public TipoTamanioControl gettipotamaniocontrolrelacionForeignKey() {
		return tipotamaniocontrolrelacionForeignKey;
	}

	public void settipotamaniocontrolrelacionForeignKey(TipoTamanioControl tipotamaniocontrolrelacionForeignKey) {
		this.tipotamaniocontrolrelacionForeignKey = tipotamaniocontrolrelacionForeignKey;
	}

	public String sFinalQueryComboTipoExportar="";

	public List<TipoExportar> tipoexportarsForeignKey;

	public List<TipoExportar> gettipoexportarsForeignKey() {
		return tipoexportarsForeignKey;
	}

	public void settipoexportarsForeignKey(List<TipoExportar> tipoexportarsForeignKey) {
		this.tipoexportarsForeignKey = tipoexportarsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoExportar tipoexportarForeignKey;

	public TipoExportar gettipoexportarForeignKey() {
		return tipoexportarForeignKey;
	}

	public void settipoexportarForeignKey(TipoExportar tipoexportarForeignKey) {
		this.tipoexportarForeignKey = tipoexportarForeignKey;
	}

	public String sFinalQueryComboTipoDelimiter="";

	public List<TipoDelimiter> tipodelimitersForeignKey;

	public List<TipoDelimiter> gettipodelimitersForeignKey() {
		return tipodelimitersForeignKey;
	}

	public void settipodelimitersForeignKey(List<TipoDelimiter> tipodelimitersForeignKey) {
		this.tipodelimitersForeignKey = tipodelimitersForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDelimiter tipodelimiterForeignKey;

	public TipoDelimiter gettipodelimiterForeignKey() {
		return tipodelimiterForeignKey;
	}

	public void settipodelimiterForeignKey(TipoDelimiter tipodelimiterForeignKey) {
		this.tipodelimiterForeignKey = tipodelimiterForeignKey;
	}

		
	
	
	
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoParametroGeneralUsuario;
	public Boolean isPermisoNuevoParametroGeneralUsuario;
	public Boolean isPermisoActualizarParametroGeneralUsuario;
	public Boolean isPermisoActualizarOriginalParametroGeneralUsuario;
	public Boolean isPermisoEliminarParametroGeneralUsuario;
	public Boolean isPermisoGuardarCambiosParametroGeneralUsuario;
	public Boolean isPermisoConsultaParametroGeneralUsuario;
	public Boolean isPermisoBusquedaParametroGeneralUsuario;
	public Boolean isPermisoReporteParametroGeneralUsuario;
	public Boolean isPermisoPaginacionMedioParametroGeneralUsuario;
	public Boolean isPermisoPaginacionAltoParametroGeneralUsuario;
	public Boolean isPermisoPaginacionTodoParametroGeneralUsuario;
	public Boolean isPermisoCopiarParametroGeneralUsuario;
	public Boolean isPermisoVerFormParametroGeneralUsuario;
	public Boolean isPermisoDuplicarParametroGeneralUsuario;
	public Boolean isPermisoOrdenParametroGeneralUsuario;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ParametroGeneralUsuarioParameterReturnGeneral parametrogeneralusuarioReturnGeneral;
	public ParametroGeneralUsuarioParameterReturnGeneral parametrogeneralusuarioParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoParametroGeneralUsuario=false;
	public Boolean esParaAccionDesdeFormularioParametroGeneralUsuario=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ParametroGeneralUsuarioSessionBeanAdditional parametrogeneralusuarioSessionBeanAdditional=null;
	
	public ParametroGeneralUsuarioSessionBeanAdditional getParametroGeneralUsuarioSessionBeanAdditional() {
		return this.parametrogeneralusuarioSessionBeanAdditional;
	}
	
	public void setParametroGeneralUsuarioSessionBeanAdditional(ParametroGeneralUsuarioSessionBeanAdditional parametrogeneralusuarioSessionBeanAdditional) {
		try {
			this.parametrogeneralusuarioSessionBeanAdditional=parametrogeneralusuarioSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional parametrogeneralusuarioBeanSwingJInternalFrameAdditional=null;
	//public class ParametroGeneralUsuarioBeanSwingJInternalFrame
	
	public ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional getParametroGeneralUsuarioBeanSwingJInternalFrameAdditional() {
		return this.parametrogeneralusuarioBeanSwingJInternalFrameAdditional;
	}
	
	public void setParametroGeneralUsuarioBeanSwingJInternalFrameAdditional(ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional parametrogeneralusuarioBeanSwingJInternalFrameAdditional) {
		try {
			this.parametrogeneralusuarioBeanSwingJInternalFrameAdditional=parametrogeneralusuarioBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ParametroGeneralUsuarioLogic parametrogeneralusuarioLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ParametroGeneralUsuario parametrogeneralusuarioBean;
	public ParametroGeneralUsuarioConstantesFunciones parametrogeneralusuarioConstantesFunciones;
	//public ParametroGeneralUsuarioParameterReturnGeneral parametrogeneralusuarioReturnGeneral;
	
	//FK
	
	public UsuarioLogic usuarioLogic;
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public MonedaLogic monedaLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public TipoVisualLogic tipovisualLogic;
	public TipoFondoLogic tipofondoLogic;
	public TipoFondoLogic tipofondobordeLogic;
	public TipoFondoControlLogic tipofondocontrolLogic;
	public TipoFuenteLogic tipofuenteLogic;
	public TipoTamanioControlLogic tipotamaniocontrolnormalLogic;
	public TipoTamanioControlLogic tipotamaniocontrolrelacionLogic;
	public TipoExportarLogic tipoexportarLogic;
	public TipoDelimiterLogic tipodelimiterLogic;
	
	//PARAMETROS
	
	
	//public List<ParametroGeneralUsuario> parametrogeneralusuarios;	
	//public List<ParametroGeneralUsuario> parametrogeneralusuariosEliminados;
	//public List<ParametroGeneralUsuario> parametrogeneralusuariosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoParametroGeneralUsuario=false;
	public Boolean isVisibilidadCeldaDuplicarParametroGeneralUsuario=true;
	public Boolean isVisibilidadCeldaCopiarParametroGeneralUsuario=true;
	public Boolean isVisibilidadCeldaVerFormParametroGeneralUsuario=true;
	public Boolean isVisibilidadCeldaOrdenParametroGeneralUsuario=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
	public Boolean isVisibilidadCeldaModificarParametroGeneralUsuario=false;
	public Boolean isVisibilidadCeldaActualizarParametroGeneralUsuario=false;
	public Boolean isVisibilidadCeldaEliminarParametroGeneralUsuario=false;
	public Boolean isVisibilidadCeldaCancelarParametroGeneralUsuario=false;
	public Boolean isVisibilidadCeldaGuardarParametroGeneralUsuario=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoDelimiter=false;
	public Boolean isVisibilidadFK_IdTipoExportar=false;
	public Boolean isVisibilidadFK_IdTipoFondo=false;
	public Boolean isVisibilidadFK_IdTipoFondoBorde=false;
	public Boolean isVisibilidadFK_IdTipoFondoControl=false;
	public Boolean isVisibilidadFK_IdTipoFuente=false;
	public Boolean isVisibilidadFK_IdTipoTamanioControlNormal=false;
	public Boolean isVisibilidadFK_IdTipoTamanioControlRelacion=false;
	public Boolean isVisibilidadFK_IdTipoVisual=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	
	public Long getiIdNuevoParametroGeneralUsuario() {
		return this.iIdNuevoParametroGeneralUsuario;
	}

	public void setiIdNuevoParametroGeneralUsuario(Long iIdNuevoParametroGeneralUsuario) {
		this.iIdNuevoParametroGeneralUsuario = iIdNuevoParametroGeneralUsuario;
	}
	
	public Long getidParametroGeneralUsuarioActual() {
		return this.idParametroGeneralUsuarioActual;
	}

	public void setidParametroGeneralUsuarioActual(Long idParametroGeneralUsuarioActual) {
		this.idParametroGeneralUsuarioActual = idParametroGeneralUsuarioActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ParametroGeneralUsuario getparametrogeneralusuario() {
		return this.parametrogeneralusuario;
	}

	public void setparametrogeneralusuario(ParametroGeneralUsuario parametrogeneralusuario) {
		this.parametrogeneralusuario = parametrogeneralusuario;
	}
	
	public ParametroGeneralUsuario getparametrogeneralusuarioAux() {
		return this.parametrogeneralusuarioAux;
	}

	public void setparametrogeneralusuarioAux(ParametroGeneralUsuario parametrogeneralusuarioAux) {
		this.parametrogeneralusuarioAux = parametrogeneralusuarioAux;
	}				
	
	public ParametroGeneralUsuario getparametrogeneralusuarioAnterior() {
		return this.parametrogeneralusuarioAnterior;
	}

	public void setparametrogeneralusuarioAnterior(ParametroGeneralUsuario parametrogeneralusuarioAnterior) {
		this.parametrogeneralusuarioAnterior = parametrogeneralusuarioAnterior;
	}	
	
	public ParametroGeneralUsuario getparametrogeneralusuarioTotales() {
		return this.parametrogeneralusuarioTotales;
	}

	public void setparametrogeneralusuarioTotales(ParametroGeneralUsuario parametrogeneralusuarioTotales) {
		this.parametrogeneralusuarioTotales = parametrogeneralusuarioTotales;
	}	
	
	public ParametroGeneralUsuario getparametrogeneralusuarioBean() {
		return this.parametrogeneralusuarioBean;
	}

	public void setparametrogeneralusuarioBean(ParametroGeneralUsuario parametrogeneralusuarioBean) {
		this.parametrogeneralusuarioBean = parametrogeneralusuarioBean;
	}	
	
	public ParametroGeneralUsuarioParameterReturnGeneral getparametrogeneralusuarioReturnGeneral() {
		return this.parametrogeneralusuarioReturnGeneral;
	}

	public void setparametrogeneralusuarioReturnGeneral(ParametroGeneralUsuarioParameterReturnGeneral parametrogeneralusuarioReturnGeneral) {
		this.parametrogeneralusuarioReturnGeneral = parametrogeneralusuarioReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_delimiterFK_IdTipoDelimiter=-1L;

	public Long getid_tipo_delimiterFK_IdTipoDelimiter() {
		return this.id_tipo_delimiterFK_IdTipoDelimiter;
	}

	public void setid_tipo_delimiterFK_IdTipoDelimiter(Long id_tipo_delimiterFK_IdTipoDelimiter) {
		this.id_tipo_delimiterFK_IdTipoDelimiter = id_tipo_delimiterFK_IdTipoDelimiter;
	}

	public Long id_tipo_exportarFK_IdTipoExportar=-1L;

	public Long getid_tipo_exportarFK_IdTipoExportar() {
		return this.id_tipo_exportarFK_IdTipoExportar;
	}

	public void setid_tipo_exportarFK_IdTipoExportar(Long id_tipo_exportarFK_IdTipoExportar) {
		this.id_tipo_exportarFK_IdTipoExportar = id_tipo_exportarFK_IdTipoExportar;
	}

	public Long id_tipo_fondoFK_IdTipoFondo=-1L;

	public Long getid_tipo_fondoFK_IdTipoFondo() {
		return this.id_tipo_fondoFK_IdTipoFondo;
	}

	public void setid_tipo_fondoFK_IdTipoFondo(Long id_tipo_fondoFK_IdTipoFondo) {
		this.id_tipo_fondoFK_IdTipoFondo = id_tipo_fondoFK_IdTipoFondo;
	}

	public Long id_tipo_fondo_bordeFK_IdTipoFondoBorde=-1L;

	public Long getid_tipo_fondo_bordeFK_IdTipoFondoBorde() {
		return this.id_tipo_fondo_bordeFK_IdTipoFondoBorde;
	}

	public void setid_tipo_fondo_bordeFK_IdTipoFondoBorde(Long id_tipo_fondo_bordeFK_IdTipoFondoBorde) {
		this.id_tipo_fondo_bordeFK_IdTipoFondoBorde = id_tipo_fondo_bordeFK_IdTipoFondoBorde;
	}

	public Long id_tipo_fondo_controlFK_IdTipoFondoControl=-1L;

	public Long getid_tipo_fondo_controlFK_IdTipoFondoControl() {
		return this.id_tipo_fondo_controlFK_IdTipoFondoControl;
	}

	public void setid_tipo_fondo_controlFK_IdTipoFondoControl(Long id_tipo_fondo_controlFK_IdTipoFondoControl) {
		this.id_tipo_fondo_controlFK_IdTipoFondoControl = id_tipo_fondo_controlFK_IdTipoFondoControl;
	}

	public Long id_tipo_fuenteFK_IdTipoFuente=-1L;

	public Long getid_tipo_fuenteFK_IdTipoFuente() {
		return this.id_tipo_fuenteFK_IdTipoFuente;
	}

	public void setid_tipo_fuenteFK_IdTipoFuente(Long id_tipo_fuenteFK_IdTipoFuente) {
		this.id_tipo_fuenteFK_IdTipoFuente = id_tipo_fuenteFK_IdTipoFuente;
	}

	public Long id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal=-1L;

	public Long getid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal() {
		return this.id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal;
	}

	public void setid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal(Long id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal) {
		this.id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal = id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal;
	}

	public Long id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion=-1L;

	public Long getid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion() {
		return this.id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion;
	}

	public void setid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion(Long id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion) {
		this.id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion = id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion;
	}

	public Long id_tipo_visualFK_IdTipoVisual=-1L;

	public Long getid_tipo_visualFK_IdTipoVisual() {
		return this.id_tipo_visualFK_IdTipoVisual;
	}

	public void setid_tipo_visualFK_IdTipoVisual(Long id_tipo_visualFK_IdTipoVisual) {
		this.id_tipo_visualFK_IdTipoVisual = id_tipo_visualFK_IdTipoVisual;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ParametroGeneralUsuarioLogic getParametroGeneralUsuarioLogic()	{		
		return parametrogeneralusuarioLogic;
	}

	public void setParametroGeneralUsuarioLogic(ParametroGeneralUsuarioLogic parametrogeneralusuarioLogic) {
		this.parametrogeneralusuarioLogic = parametrogeneralusuarioLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoParametroGeneralUsuario() {
		return isEsNuevoParametroGeneralUsuario;
	}

	public void setIsEsNuevoParametroGeneralUsuario(Boolean isEsNuevoParametroGeneralUsuario) {
		this.isEsNuevoParametroGeneralUsuario = isEsNuevoParametroGeneralUsuario;
	}

	public Boolean getEsParaAccionDesdeFormularioParametroGeneralUsuario() {
		return esParaAccionDesdeFormularioParametroGeneralUsuario;
	}
	
	public void setEsParaAccionDesdeFormularioParametroGeneralUsuario(Boolean esParaAccionDesdeFormularioParametroGeneralUsuario) {
		this.esParaAccionDesdeFormularioParametroGeneralUsuario = esParaAccionDesdeFormularioParametroGeneralUsuario;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoVisualsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipovisualsForeignKey=new ArrayList<TipoVisual>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoVisualLogic tipovisualLogic=new TipoVisualLogic();

			tipovisualLogic.getTipoVisualDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoVisual()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipovisualLogic.getTipoVisualDataAccess().setIsForForeingKeyData(true);

					tipovisualLogic.getTodosTipoVisualsWithConnection(sFinalQuery,new Pagination());

					this.tipovisualsForeignKey=tipovisualLogic.getTipoVisuals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoVisual(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipovisualLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidTipoVisualActual());
					this.tipovisualsForeignKey.add(tipovisualLogic.getTipoVisual());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoFondosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipofondosForeignKey=new ArrayList<TipoFondo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoFondoLogic tipofondoLogic=new TipoFondoLogic();

			tipofondoLogic.getTipoFondoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFondo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipofondoLogic.getTipoFondoDataAccess().setIsForForeingKeyData(true);

					tipofondoLogic.getTodosTipoFondosWithConnection(sFinalQuery,new Pagination());

					this.tipofondosForeignKey=tipofondoLogic.getTipoFondos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoFondo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipofondoLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidTipoFondoActual());
					this.tipofondosForeignKey.add(tipofondoLogic.getTipoFondo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoFondoBordesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipofondobordesForeignKey=new ArrayList<TipoFondo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoFondoLogic tipofondoLogic=new TipoFondoLogic();

			tipofondoLogic.getTipoFondoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFondoBorde()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipofondobordeLogic.getTipoFondoDataAccess().setIsForForeingKeyData(true);

					tipofondoLogic.getTodosTipoFondosWithConnection(sFinalQuery,new Pagination());

					this.tipofondobordesForeignKey=tipofondoLogic.getTipoFondos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoFondoBorde(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipofondoLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidTipoFondoBordeActual());
					this.tipofondobordesForeignKey.add(tipofondoLogic.getTipoFondo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoFondoControlsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipofondocontrolsForeignKey=new ArrayList<TipoFondoControl>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoFondoControlLogic tipofondocontrolLogic=new TipoFondoControlLogic();

			tipofondocontrolLogic.getTipoFondoControlDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFondoControl()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipofondocontrolLogic.getTipoFondoControlDataAccess().setIsForForeingKeyData(true);

					tipofondocontrolLogic.getTodosTipoFondoControlsWithConnection(sFinalQuery,new Pagination());

					this.tipofondocontrolsForeignKey=tipofondocontrolLogic.getTipoFondoControls();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoFondoControl(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipofondocontrolLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidTipoFondoControlActual());
					this.tipofondocontrolsForeignKey.add(tipofondocontrolLogic.getTipoFondoControl());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoFuentesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipofuentesForeignKey=new ArrayList<TipoFuente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoFuenteLogic tipofuenteLogic=new TipoFuenteLogic();

			tipofuenteLogic.getTipoFuenteDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFuente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipofuenteLogic.getTipoFuenteDataAccess().setIsForForeingKeyData(true);

					tipofuenteLogic.getTodosTipoFuentesWithConnection(sFinalQuery,new Pagination());

					this.tipofuentesForeignKey=tipofuenteLogic.getTipoFuentes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoFuente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipofuenteLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidTipoFuenteActual());
					this.tipofuentesForeignKey.add(tipofuenteLogic.getTipoFuente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTamanioControlNormalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotamaniocontrolnormalsForeignKey=new ArrayList<TipoTamanioControl>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTamanioControlLogic tipotamaniocontrolLogic=new TipoTamanioControlLogic();

			tipotamaniocontrolLogic.getTipoTamanioControlDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoTamanioControlNormal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotamaniocontrolnormalLogic.getTipoTamanioControlDataAccess().setIsForForeingKeyData(true);

					tipotamaniocontrolLogic.getTodosTipoTamanioControlsWithConnection(sFinalQuery,new Pagination());

					this.tipotamaniocontrolnormalsForeignKey=tipotamaniocontrolLogic.getTipoTamanioControls();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTamanioControlNormal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotamaniocontrolLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidTipoTamanioControlNormalActual());
					this.tipotamaniocontrolnormalsForeignKey.add(tipotamaniocontrolLogic.getTipoTamanioControl());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTamanioControlRelacionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotamaniocontrolrelacionsForeignKey=new ArrayList<TipoTamanioControl>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTamanioControlLogic tipotamaniocontrolLogic=new TipoTamanioControlLogic();

			tipotamaniocontrolLogic.getTipoTamanioControlDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoTamanioControlRelacion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotamaniocontrolrelacionLogic.getTipoTamanioControlDataAccess().setIsForForeingKeyData(true);

					tipotamaniocontrolLogic.getTodosTipoTamanioControlsWithConnection(sFinalQuery,new Pagination());

					this.tipotamaniocontrolrelacionsForeignKey=tipotamaniocontrolLogic.getTipoTamanioControls();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTamanioControlRelacion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotamaniocontrolLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidTipoTamanioControlRelacionActual());
					this.tipotamaniocontrolrelacionsForeignKey.add(tipotamaniocontrolLogic.getTipoTamanioControl());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoExportarsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoexportarsForeignKey=new ArrayList<TipoExportar>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoExportarLogic tipoexportarLogic=new TipoExportarLogic();

			tipoexportarLogic.getTipoExportarDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoExportar()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoexportarLogic.getTipoExportarDataAccess().setIsForForeingKeyData(true);

					tipoexportarLogic.getTodosTipoExportarsWithConnection(sFinalQuery,new Pagination());

					this.tipoexportarsForeignKey=tipoexportarLogic.getTipoExportars();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoExportar(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoexportarLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidTipoExportarActual());
					this.tipoexportarsForeignKey.add(tipoexportarLogic.getTipoExportar());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDelimitersForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodelimitersForeignKey=new ArrayList<TipoDelimiter>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDelimiterLogic tipodelimiterLogic=new TipoDelimiterLogic();

			tipodelimiterLogic.getTipoDelimiterDataAccess().setIsForForeingKeyData(true);

			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoDelimiter()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodelimiterLogic.getTipoDelimiterDataAccess().setIsForForeingKeyData(true);

					tipodelimiterLogic.getTodosTipoDelimitersWithConnection(sFinalQuery,new Pagination());

					this.tipodelimitersForeignKey=tipodelimiterLogic.getTipoDelimiters();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDelimiter(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodelimiterLogic.getEntityWithConnection(parametrogeneralusuarioSessionBean.getlidTipoDelimiterActual());
					this.tipodelimitersForeignKey.add(tipodelimiterLogic.getTipoDelimiter());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioParametroGeneralUsuario.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdUsuario") || sFormularioTipoBusqueda.equals("Todos")){
					if(usuarioTemp!=null && jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario!=null) {
						jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.setSelectedItem(usuarioTemp);
					} else {
						if(jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario!=null) {
							//jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.setSelectedItem(usuarioTemp);
							if(jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioParametroGeneralUsuarioGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioParametroGeneralUsuarioGenerico!=null && jComboBoxid_usuarioParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_usuarioParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaParametroGeneralUsuario.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpresa") || sFormularioTipoBusqueda.equals("Todos")){
					if(empresaTemp!=null && jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario!=null) {
						jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.setSelectedItem(empresaTemp);
					} else {
						if(jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario!=null) {
							//jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.setSelectedItem(empresaTemp);
							if(jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaParametroGeneralUsuarioGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaParametroGeneralUsuarioGenerico!=null && jComboBoxid_empresaParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_empresaParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalParametroGeneralUsuario.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalParametroGeneralUsuarioGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalParametroGeneralUsuarioGenerico!=null && jComboBoxid_sucursalParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_sucursalParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioParametroGeneralUsuario.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioParametroGeneralUsuarioGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioParametroGeneralUsuarioGenerico!=null && jComboBoxid_ejercicioParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoParametroGeneralUsuario.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoParametroGeneralUsuarioGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoParametroGeneralUsuarioGenerico!=null && jComboBoxid_periodoParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_periodoParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaParametroGeneralUsuario.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdMoneda") || sFormularioTipoBusqueda.equals("Todos")){
					if(monedaTemp!=null && jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario!=null) {
						jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.setSelectedItem(monedaTemp);
					} else {
						if(jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario!=null) {
							//jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.setSelectedItem(monedaTemp);
							if(jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaParametroGeneralUsuarioGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaParametroGeneralUsuarioGenerico!=null && jComboBoxid_monedaParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_monedaParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioParametroGeneralUsuario.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioParametroGeneralUsuarioGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioParametroGeneralUsuarioGenerico!=null && jComboBoxid_anioParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_anioParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesParametroGeneralUsuario.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesParametroGeneralUsuarioGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesParametroGeneralUsuarioGenerico!=null && jComboBoxid_mesParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_mesParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoVisualForeignKey(Long idTipoVisualSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoVisual  tipovisualTemp=null;

			for(TipoVisual tipovisualAux:tipovisualsForeignKey) {
				if(tipovisualAux.getId()!=null && tipovisualAux.getId().equals(idTipoVisualSeleccionado)) {
					tipovisualTemp=tipovisualAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipovisualTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setTipoVisual(tipovisualTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.setSelectedItem(tipovisualTemp);
					}
				} else {
					//jComboBoxid_tipo_visualParametroGeneralUsuario.setSelectedItem(tipovisualTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoVisualForeignKeyDescripcion(Long idTipoVisualSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoVisual  tipovisualTemp=null;

			for(TipoVisual tipovisualAux:tipovisualsForeignKey) {
				if(tipovisualAux.getId()!=null && tipovisualAux.getId().equals(idTipoVisualSeleccionado)) {
					tipovisualTemp=tipovisualAux;
					break;
				}
			}


			sDescripcion=TipoVisualConstantesFunciones.getTipoVisualDescripcion(tipovisualTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoVisualForeignKeyGenerico(Long idTipoVisualSeleccionado,JComboBox jComboBoxid_tipo_visualParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoVisual  tipovisualTemp=null;

			for(TipoVisual tipovisualAux:tipovisualsForeignKey) {
				if(tipovisualAux.getId()!=null && tipovisualAux.getId().equals(idTipoVisualSeleccionado)) {
					tipovisualTemp=tipovisualAux;
					break;
				}
			}

			if(tipovisualTemp!=null) {
				jComboBoxid_tipo_visualParametroGeneralUsuarioGenerico.setSelectedItem(tipovisualTemp);
			} else {
				if(jComboBoxid_tipo_visualParametroGeneralUsuarioGenerico!=null && jComboBoxid_tipo_visualParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_tipo_visualParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoFondoForeignKey(Long idTipoFondoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoFondo  tipofondoTemp=null;

			for(TipoFondo tipofondoAux:tipofondosForeignKey) {
				if(tipofondoAux.getId()!=null && tipofondoAux.getId().equals(idTipoFondoSeleccionado)) {
					tipofondoTemp=tipofondoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipofondoTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setTipoFondo(tipofondoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.setSelectedItem(tipofondoTemp);
					}
				} else {
					//jComboBoxid_tipo_fondoParametroGeneralUsuario.setSelectedItem(tipofondoTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoFondo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipofondoTemp!=null && jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario!=null) {
						jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.setSelectedItem(tipofondoTemp);
					} else {
						if(jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario!=null) {
							//jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.setSelectedItem(tipofondoTemp);
							if(jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoFondoForeignKeyDescripcion(Long idTipoFondoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoFondo  tipofondoTemp=null;

			for(TipoFondo tipofondoAux:tipofondosForeignKey) {
				if(tipofondoAux.getId()!=null && tipofondoAux.getId().equals(idTipoFondoSeleccionado)) {
					tipofondoTemp=tipofondoAux;
					break;
				}
			}


			sDescripcion=TipoFondoConstantesFunciones.getTipoFondoDescripcion(tipofondoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoFondoForeignKeyGenerico(Long idTipoFondoSeleccionado,JComboBox jComboBoxid_tipo_fondoParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoFondo  tipofondoTemp=null;

			for(TipoFondo tipofondoAux:tipofondosForeignKey) {
				if(tipofondoAux.getId()!=null && tipofondoAux.getId().equals(idTipoFondoSeleccionado)) {
					tipofondoTemp=tipofondoAux;
					break;
				}
			}

			if(tipofondoTemp!=null) {
				jComboBoxid_tipo_fondoParametroGeneralUsuarioGenerico.setSelectedItem(tipofondoTemp);
			} else {
				if(jComboBoxid_tipo_fondoParametroGeneralUsuarioGenerico!=null && jComboBoxid_tipo_fondoParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_tipo_fondoParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoFondoBordeForeignKey(Long idTipoFondoBordeSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoFondo  tipofondobordeTemp=null;

			for(TipoFondo tipofondobordeAux:tipofondobordesForeignKey) {
				if(tipofondobordeAux.getId()!=null && tipofondobordeAux.getId().equals(idTipoFondoBordeSeleccionado)) {
					tipofondobordeTemp=tipofondobordeAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipofondobordeTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setTipoFondoBorde(tipofondobordeTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setSelectedItem(tipofondobordeTemp);
					}
				} else {
					//jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setSelectedItem(tipofondobordeTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoFondoBorde") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipofondobordeTemp!=null && jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario!=null) {
						jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.setSelectedItem(tipofondobordeTemp);
					} else {
						if(jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario!=null) {
							//jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.setSelectedItem(tipofondobordeTemp);
							if(jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoFondoBordeForeignKeyDescripcion(Long idTipoFondoBordeSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoFondo  tipofondobordeTemp=null;

			for(TipoFondo tipofondobordeAux:tipofondobordesForeignKey) {
				if(tipofondobordeAux.getId()!=null && tipofondobordeAux.getId().equals(idTipoFondoBordeSeleccionado)) {
					tipofondobordeTemp=tipofondobordeAux;
					break;
				}
			}


			sDescripcion=TipoFondoConstantesFunciones.getTipoFondoDescripcion(tipofondobordeTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoFondoBordeForeignKeyGenerico(Long idTipoFondoBordeSeleccionado,JComboBox jComboBoxid_tipo_fondo_bordeParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoFondo  tipofondobordeTemp=null;

			for(TipoFondo tipofondobordeAux:tipofondobordesForeignKey) {
				if(tipofondobordeAux.getId()!=null && tipofondobordeAux.getId().equals(idTipoFondoBordeSeleccionado)) {
					tipofondobordeTemp=tipofondobordeAux;
					break;
				}
			}

			if(tipofondobordeTemp!=null) {
				jComboBoxid_tipo_fondo_bordeParametroGeneralUsuarioGenerico.setSelectedItem(tipofondobordeTemp);
			} else {
				if(jComboBoxid_tipo_fondo_bordeParametroGeneralUsuarioGenerico!=null && jComboBoxid_tipo_fondo_bordeParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_tipo_fondo_bordeParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoFondoControlForeignKey(Long idTipoFondoControlSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoFondoControl  tipofondocontrolTemp=null;

			for(TipoFondoControl tipofondocontrolAux:tipofondocontrolsForeignKey) {
				if(tipofondocontrolAux.getId()!=null && tipofondocontrolAux.getId().equals(idTipoFondoControlSeleccionado)) {
					tipofondocontrolTemp=tipofondocontrolAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipofondocontrolTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setTipoFondoControl(tipofondocontrolTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setSelectedItem(tipofondocontrolTemp);
					}
				} else {
					//jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setSelectedItem(tipofondocontrolTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoFondoControl") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipofondocontrolTemp!=null && jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario!=null) {
						jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.setSelectedItem(tipofondocontrolTemp);
					} else {
						if(jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario!=null) {
							//jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.setSelectedItem(tipofondocontrolTemp);
							if(jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoFondoControlForeignKeyDescripcion(Long idTipoFondoControlSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoFondoControl  tipofondocontrolTemp=null;

			for(TipoFondoControl tipofondocontrolAux:tipofondocontrolsForeignKey) {
				if(tipofondocontrolAux.getId()!=null && tipofondocontrolAux.getId().equals(idTipoFondoControlSeleccionado)) {
					tipofondocontrolTemp=tipofondocontrolAux;
					break;
				}
			}


			sDescripcion=TipoFondoControlConstantesFunciones.getTipoFondoControlDescripcion(tipofondocontrolTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoFondoControlForeignKeyGenerico(Long idTipoFondoControlSeleccionado,JComboBox jComboBoxid_tipo_fondo_controlParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoFondoControl  tipofondocontrolTemp=null;

			for(TipoFondoControl tipofondocontrolAux:tipofondocontrolsForeignKey) {
				if(tipofondocontrolAux.getId()!=null && tipofondocontrolAux.getId().equals(idTipoFondoControlSeleccionado)) {
					tipofondocontrolTemp=tipofondocontrolAux;
					break;
				}
			}

			if(tipofondocontrolTemp!=null) {
				jComboBoxid_tipo_fondo_controlParametroGeneralUsuarioGenerico.setSelectedItem(tipofondocontrolTemp);
			} else {
				if(jComboBoxid_tipo_fondo_controlParametroGeneralUsuarioGenerico!=null && jComboBoxid_tipo_fondo_controlParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_tipo_fondo_controlParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoFuenteForeignKey(Long idTipoFuenteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoFuente  tipofuenteTemp=null;

			for(TipoFuente tipofuenteAux:tipofuentesForeignKey) {
				if(tipofuenteAux.getId()!=null && tipofuenteAux.getId().equals(idTipoFuenteSeleccionado)) {
					tipofuenteTemp=tipofuenteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipofuenteTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setTipoFuente(tipofuenteTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.setSelectedItem(tipofuenteTemp);
					}
				} else {
					//jComboBoxid_tipo_fuenteParametroGeneralUsuario.setSelectedItem(tipofuenteTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoFuente") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipofuenteTemp!=null && jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario!=null) {
						jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.setSelectedItem(tipofuenteTemp);
					} else {
						if(jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario!=null) {
							//jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.setSelectedItem(tipofuenteTemp);
							if(jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoFuenteForeignKeyDescripcion(Long idTipoFuenteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoFuente  tipofuenteTemp=null;

			for(TipoFuente tipofuenteAux:tipofuentesForeignKey) {
				if(tipofuenteAux.getId()!=null && tipofuenteAux.getId().equals(idTipoFuenteSeleccionado)) {
					tipofuenteTemp=tipofuenteAux;
					break;
				}
			}


			sDescripcion=TipoFuenteConstantesFunciones.getTipoFuenteDescripcion(tipofuenteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoFuenteForeignKeyGenerico(Long idTipoFuenteSeleccionado,JComboBox jComboBoxid_tipo_fuenteParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoFuente  tipofuenteTemp=null;

			for(TipoFuente tipofuenteAux:tipofuentesForeignKey) {
				if(tipofuenteAux.getId()!=null && tipofuenteAux.getId().equals(idTipoFuenteSeleccionado)) {
					tipofuenteTemp=tipofuenteAux;
					break;
				}
			}

			if(tipofuenteTemp!=null) {
				jComboBoxid_tipo_fuenteParametroGeneralUsuarioGenerico.setSelectedItem(tipofuenteTemp);
			} else {
				if(jComboBoxid_tipo_fuenteParametroGeneralUsuarioGenerico!=null && jComboBoxid_tipo_fuenteParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_tipo_fuenteParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTamanioControlNormalForeignKey(Long idTipoTamanioControlNormalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTamanioControl  tipotamaniocontrolnormalTemp=null;

			for(TipoTamanioControl tipotamaniocontrolnormalAux:tipotamaniocontrolnormalsForeignKey) {
				if(tipotamaniocontrolnormalAux.getId()!=null && tipotamaniocontrolnormalAux.getId().equals(idTipoTamanioControlNormalSeleccionado)) {
					tipotamaniocontrolnormalTemp=tipotamaniocontrolnormalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotamaniocontrolnormalTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setTipoTamanioControlNormal(tipotamaniocontrolnormalTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolnormalTemp);
					}
				} else {
					//jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolnormalTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTamanioControlNormal") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotamaniocontrolnormalTemp!=null && jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario!=null) {
						jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolnormalTemp);
					} else {
						if(jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario!=null) {
							//jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolnormalTemp);
							if(jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTamanioControlNormalForeignKeyDescripcion(Long idTipoTamanioControlNormalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTamanioControl  tipotamaniocontrolnormalTemp=null;

			for(TipoTamanioControl tipotamaniocontrolnormalAux:tipotamaniocontrolnormalsForeignKey) {
				if(tipotamaniocontrolnormalAux.getId()!=null && tipotamaniocontrolnormalAux.getId().equals(idTipoTamanioControlNormalSeleccionado)) {
					tipotamaniocontrolnormalTemp=tipotamaniocontrolnormalAux;
					break;
				}
			}


			sDescripcion=TipoTamanioControlConstantesFunciones.getTipoTamanioControlDescripcion(tipotamaniocontrolnormalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTamanioControlNormalForeignKeyGenerico(Long idTipoTamanioControlNormalSeleccionado,JComboBox jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoTamanioControl  tipotamaniocontrolnormalTemp=null;

			for(TipoTamanioControl tipotamaniocontrolnormalAux:tipotamaniocontrolnormalsForeignKey) {
				if(tipotamaniocontrolnormalAux.getId()!=null && tipotamaniocontrolnormalAux.getId().equals(idTipoTamanioControlNormalSeleccionado)) {
					tipotamaniocontrolnormalTemp=tipotamaniocontrolnormalAux;
					break;
				}
			}

			if(tipotamaniocontrolnormalTemp!=null) {
				jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuarioGenerico.setSelectedItem(tipotamaniocontrolnormalTemp);
			} else {
				if(jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuarioGenerico!=null && jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTamanioControlRelacionForeignKey(Long idTipoTamanioControlRelacionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTamanioControl  tipotamaniocontrolrelacionTemp=null;

			for(TipoTamanioControl tipotamaniocontrolrelacionAux:tipotamaniocontrolrelacionsForeignKey) {
				if(tipotamaniocontrolrelacionAux.getId()!=null && tipotamaniocontrolrelacionAux.getId().equals(idTipoTamanioControlRelacionSeleccionado)) {
					tipotamaniocontrolrelacionTemp=tipotamaniocontrolrelacionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotamaniocontrolrelacionTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setTipoTamanioControlRelacion(tipotamaniocontrolrelacionTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolrelacionTemp);
					}
				} else {
					//jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolrelacionTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTamanioControlRelacion") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotamaniocontrolrelacionTemp!=null && jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario!=null) {
						jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolrelacionTemp);
					} else {
						if(jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario!=null) {
							//jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolrelacionTemp);
							if(jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTamanioControlRelacionForeignKeyDescripcion(Long idTipoTamanioControlRelacionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTamanioControl  tipotamaniocontrolrelacionTemp=null;

			for(TipoTamanioControl tipotamaniocontrolrelacionAux:tipotamaniocontrolrelacionsForeignKey) {
				if(tipotamaniocontrolrelacionAux.getId()!=null && tipotamaniocontrolrelacionAux.getId().equals(idTipoTamanioControlRelacionSeleccionado)) {
					tipotamaniocontrolrelacionTemp=tipotamaniocontrolrelacionAux;
					break;
				}
			}


			sDescripcion=TipoTamanioControlConstantesFunciones.getTipoTamanioControlDescripcion(tipotamaniocontrolrelacionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTamanioControlRelacionForeignKeyGenerico(Long idTipoTamanioControlRelacionSeleccionado,JComboBox jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoTamanioControl  tipotamaniocontrolrelacionTemp=null;

			for(TipoTamanioControl tipotamaniocontrolrelacionAux:tipotamaniocontrolrelacionsForeignKey) {
				if(tipotamaniocontrolrelacionAux.getId()!=null && tipotamaniocontrolrelacionAux.getId().equals(idTipoTamanioControlRelacionSeleccionado)) {
					tipotamaniocontrolrelacionTemp=tipotamaniocontrolrelacionAux;
					break;
				}
			}

			if(tipotamaniocontrolrelacionTemp!=null) {
				jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuarioGenerico.setSelectedItem(tipotamaniocontrolrelacionTemp);
			} else {
				if(jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuarioGenerico!=null && jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoExportarForeignKey(Long idTipoExportarSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoExportar  tipoexportarTemp=null;

			for(TipoExportar tipoexportarAux:tipoexportarsForeignKey) {
				if(tipoexportarAux.getId()!=null && tipoexportarAux.getId().equals(idTipoExportarSeleccionado)) {
					tipoexportarTemp=tipoexportarAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoexportarTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setTipoExportar(tipoexportarTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.setSelectedItem(tipoexportarTemp);
					}
				} else {
					//jComboBoxid_tipo_exportarParametroGeneralUsuario.setSelectedItem(tipoexportarTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoExportar") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoexportarTemp!=null && jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario!=null) {
						jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.setSelectedItem(tipoexportarTemp);
					} else {
						if(jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario!=null) {
							//jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.setSelectedItem(tipoexportarTemp);
							if(jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoExportarForeignKeyDescripcion(Long idTipoExportarSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoExportar  tipoexportarTemp=null;

			for(TipoExportar tipoexportarAux:tipoexportarsForeignKey) {
				if(tipoexportarAux.getId()!=null && tipoexportarAux.getId().equals(idTipoExportarSeleccionado)) {
					tipoexportarTemp=tipoexportarAux;
					break;
				}
			}


			sDescripcion=TipoExportarConstantesFunciones.getTipoExportarDescripcion(tipoexportarTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoExportarForeignKeyGenerico(Long idTipoExportarSeleccionado,JComboBox jComboBoxid_tipo_exportarParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoExportar  tipoexportarTemp=null;

			for(TipoExportar tipoexportarAux:tipoexportarsForeignKey) {
				if(tipoexportarAux.getId()!=null && tipoexportarAux.getId().equals(idTipoExportarSeleccionado)) {
					tipoexportarTemp=tipoexportarAux;
					break;
				}
			}

			if(tipoexportarTemp!=null) {
				jComboBoxid_tipo_exportarParametroGeneralUsuarioGenerico.setSelectedItem(tipoexportarTemp);
			} else {
				if(jComboBoxid_tipo_exportarParametroGeneralUsuarioGenerico!=null && jComboBoxid_tipo_exportarParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_tipo_exportarParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDelimiterForeignKey(Long idTipoDelimiterSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDelimiter  tipodelimiterTemp=null;

			for(TipoDelimiter tipodelimiterAux:tipodelimitersForeignKey) {
				if(tipodelimiterAux.getId()!=null && tipodelimiterAux.getId().equals(idTipoDelimiterSeleccionado)) {
					tipodelimiterTemp=tipodelimiterAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodelimiterTemp!=null) {

					if(this.parametrogeneralusuario!=null) {
						this.parametrogeneralusuario.setTipoDelimiter(tipodelimiterTemp);
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.setSelectedItem(tipodelimiterTemp);
					}
				} else {
					//jComboBoxid_tipo_delimiterParametroGeneralUsuario.setSelectedItem(tipodelimiterTemp);
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDelimiter") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodelimiterTemp!=null && jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario!=null) {
						jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.setSelectedItem(tipodelimiterTemp);
					} else {
						if(jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario!=null) {
							//jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.setSelectedItem(tipodelimiterTemp);
							if(jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.getItemCount()>0) {
								jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDelimiterForeignKeyDescripcion(Long idTipoDelimiterSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDelimiter  tipodelimiterTemp=null;

			for(TipoDelimiter tipodelimiterAux:tipodelimitersForeignKey) {
				if(tipodelimiterAux.getId()!=null && tipodelimiterAux.getId().equals(idTipoDelimiterSeleccionado)) {
					tipodelimiterTemp=tipodelimiterAux;
					break;
				}
			}


			sDescripcion=TipoDelimiterConstantesFunciones.getTipoDelimiterDescripcion(tipodelimiterTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDelimiterForeignKeyGenerico(Long idTipoDelimiterSeleccionado,JComboBox jComboBoxid_tipo_delimiterParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoDelimiter  tipodelimiterTemp=null;

			for(TipoDelimiter tipodelimiterAux:tipodelimitersForeignKey) {
				if(tipodelimiterAux.getId()!=null && tipodelimiterAux.getId().equals(idTipoDelimiterSeleccionado)) {
					tipodelimiterTemp=tipodelimiterAux;
					break;
				}
			}

			if(tipodelimiterTemp!=null) {
				jComboBoxid_tipo_delimiterParametroGeneralUsuarioGenerico.setSelectedItem(tipodelimiterTemp);
			} else {
				if(jComboBoxid_tipo_delimiterParametroGeneralUsuarioGenerico!=null && jComboBoxid_tipo_delimiterParametroGeneralUsuarioGenerico.getItemCount()>0) {
					jComboBoxid_tipo_delimiterParametroGeneralUsuarioGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_usuarioParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioParametroGeneralUsuarioGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				parametrogeneralusuario.setid_usuario(usuarioAux.getId());
				parametrogeneralusuario.setusuario_descripcion(ParametroGeneralUsuarioConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				parametrogeneralusuario.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_empresaParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaParametroGeneralUsuarioGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrogeneralusuario.setid_empresa(empresaAux.getId());
				parametrogeneralusuario.setempresa_descripcion(ParametroGeneralUsuarioConstantesFunciones.getEmpresaDescripcion(empresaAux));
				parametrogeneralusuario.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_sucursalParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalParametroGeneralUsuarioGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				parametrogeneralusuario.setid_sucursal(sucursalAux.getId());
				parametrogeneralusuario.setsucursal_descripcion(ParametroGeneralUsuarioConstantesFunciones.getSucursalDescripcion(sucursalAux));
				parametrogeneralusuario.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_ejercicioParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioParametroGeneralUsuarioGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				parametrogeneralusuario.setid_ejercicio(ejercicioAux.getId());
				parametrogeneralusuario.setejercicio_descripcion(ParametroGeneralUsuarioConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				parametrogeneralusuario.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_periodoParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoParametroGeneralUsuarioGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				parametrogeneralusuario.setid_periodo(periodoAux.getId());
				parametrogeneralusuario.setperiodo_descripcion(ParametroGeneralUsuarioConstantesFunciones.getPeriodoDescripcion(periodoAux));
				parametrogeneralusuario.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_monedaParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaParametroGeneralUsuarioGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				parametrogeneralusuario.setid_moneda(monedaAux.getId());
				parametrogeneralusuario.setmoneda_descripcion(ParametroGeneralUsuarioConstantesFunciones.getMonedaDescripcion(monedaAux));
				parametrogeneralusuario.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_anioParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioParametroGeneralUsuarioGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				parametrogeneralusuario.setid_anio(anioAux.getId());
				parametrogeneralusuario.setanio_descripcion(ParametroGeneralUsuarioConstantesFunciones.getAnioDescripcion(anioAux));
				parametrogeneralusuario.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_mesParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesParametroGeneralUsuarioGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				parametrogeneralusuario.setid_mes(mesAux.getId());
				parametrogeneralusuario.setmes_descripcion(ParametroGeneralUsuarioConstantesFunciones.getMesDescripcion(mesAux));
				parametrogeneralusuario.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoVisualForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_tipo_visualParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoVisual  tipovisualAux=new TipoVisual();

			if(jComboBoxid_tipo_visualParametroGeneralUsuarioGenerico==null) {
				tipovisualAux=(TipoVisual)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.getSelectedItem();
			} else {
				tipovisualAux=(TipoVisual)jComboBoxid_tipo_visualParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(tipovisualAux!=null && tipovisualAux.getId()!=null) {
				parametrogeneralusuario.setid_tipo_visual(tipovisualAux.getId());
				parametrogeneralusuario.settipovisual_descripcion(ParametroGeneralUsuarioConstantesFunciones.getTipoVisualDescripcion(tipovisualAux));
				parametrogeneralusuario.setTipoVisual(tipovisualAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoFondoForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_tipo_fondoParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoFondo  tipofondoAux=new TipoFondo();

			if(jComboBoxid_tipo_fondoParametroGeneralUsuarioGenerico==null) {
				tipofondoAux=(TipoFondo)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.getSelectedItem();
			} else {
				tipofondoAux=(TipoFondo)jComboBoxid_tipo_fondoParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(tipofondoAux!=null && tipofondoAux.getId()!=null) {
				parametrogeneralusuario.setid_tipo_fondo(tipofondoAux.getId());
				parametrogeneralusuario.settipofondo_descripcion(ParametroGeneralUsuarioConstantesFunciones.getTipoFondoDescripcion(tipofondoAux));
				parametrogeneralusuario.setTipoFondo(tipofondoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoFondoBordeForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_tipo_fondo_bordeParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoFondo  tipofondoAux=new TipoFondo();

			if(jComboBoxid_tipo_fondo_bordeParametroGeneralUsuarioGenerico==null) {
				tipofondoAux=(TipoFondo)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.getSelectedItem();
			} else {
				tipofondoAux=(TipoFondo)jComboBoxid_tipo_fondo_bordeParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(tipofondoAux!=null && tipofondoAux.getId()!=null) {
				parametrogeneralusuario.setid_tipo_fondo_borde(tipofondoAux.getId());
				parametrogeneralusuario.settipofondoborde_descripcion(ParametroGeneralUsuarioConstantesFunciones.getTipoFondoBordeDescripcion(tipofondoAux));
				parametrogeneralusuario.setTipoFondoBorde(tipofondoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoFondoControlForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_tipo_fondo_controlParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoFondoControl  tipofondocontrolAux=new TipoFondoControl();

			if(jComboBoxid_tipo_fondo_controlParametroGeneralUsuarioGenerico==null) {
				tipofondocontrolAux=(TipoFondoControl)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.getSelectedItem();
			} else {
				tipofondocontrolAux=(TipoFondoControl)jComboBoxid_tipo_fondo_controlParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(tipofondocontrolAux!=null && tipofondocontrolAux.getId()!=null) {
				parametrogeneralusuario.setid_tipo_fondo_control(tipofondocontrolAux.getId());
				parametrogeneralusuario.settipofondocontrol_descripcion(ParametroGeneralUsuarioConstantesFunciones.getTipoFondoControlDescripcion(tipofondocontrolAux));
				parametrogeneralusuario.setTipoFondoControl(tipofondocontrolAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoFuenteForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_tipo_fuenteParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoFuente  tipofuenteAux=new TipoFuente();

			if(jComboBoxid_tipo_fuenteParametroGeneralUsuarioGenerico==null) {
				tipofuenteAux=(TipoFuente)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.getSelectedItem();
			} else {
				tipofuenteAux=(TipoFuente)jComboBoxid_tipo_fuenteParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(tipofuenteAux!=null && tipofuenteAux.getId()!=null) {
				parametrogeneralusuario.setid_tipo_fuente(tipofuenteAux.getId());
				parametrogeneralusuario.settipofuente_descripcion(ParametroGeneralUsuarioConstantesFunciones.getTipoFuenteDescripcion(tipofuenteAux));
				parametrogeneralusuario.setTipoFuente(tipofuenteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTamanioControlNormalForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoTamanioControl  tipotamaniocontrolAux=new TipoTamanioControl();

			if(jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuarioGenerico==null) {
				tipotamaniocontrolAux=(TipoTamanioControl)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.getSelectedItem();
			} else {
				tipotamaniocontrolAux=(TipoTamanioControl)jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(tipotamaniocontrolAux!=null && tipotamaniocontrolAux.getId()!=null) {
				parametrogeneralusuario.setid_tipo_tamanio_control_normal(tipotamaniocontrolAux.getId());
				parametrogeneralusuario.settipotamaniocontrolnormal_descripcion(ParametroGeneralUsuarioConstantesFunciones.getTipoTamanioControlNormalDescripcion(tipotamaniocontrolAux));
				parametrogeneralusuario.setTipoTamanioControlNormal(tipotamaniocontrolAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTamanioControlRelacionForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoTamanioControl  tipotamaniocontrolAux=new TipoTamanioControl();

			if(jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuarioGenerico==null) {
				tipotamaniocontrolAux=(TipoTamanioControl)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.getSelectedItem();
			} else {
				tipotamaniocontrolAux=(TipoTamanioControl)jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(tipotamaniocontrolAux!=null && tipotamaniocontrolAux.getId()!=null) {
				parametrogeneralusuario.setid_tipo_tamanio_control_relacion(tipotamaniocontrolAux.getId());
				parametrogeneralusuario.settipotamaniocontrolrelacion_descripcion(ParametroGeneralUsuarioConstantesFunciones.getTipoTamanioControlRelacionDescripcion(tipotamaniocontrolAux));
				parametrogeneralusuario.setTipoTamanioControlRelacion(tipotamaniocontrolAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoExportarForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_tipo_exportarParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoExportar  tipoexportarAux=new TipoExportar();

			if(jComboBoxid_tipo_exportarParametroGeneralUsuarioGenerico==null) {
				tipoexportarAux=(TipoExportar)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.getSelectedItem();
			} else {
				tipoexportarAux=(TipoExportar)jComboBoxid_tipo_exportarParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(tipoexportarAux!=null && tipoexportarAux.getId()!=null) {
				parametrogeneralusuario.setid_tipo_exportar(tipoexportarAux.getId());
				parametrogeneralusuario.settipoexportar_descripcion(ParametroGeneralUsuarioConstantesFunciones.getTipoExportarDescripcion(tipoexportarAux));
				parametrogeneralusuario.setTipoExportar(tipoexportarAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDelimiterForeignKey(ParametroGeneralUsuario parametrogeneralusuario,JComboBox jComboBoxid_tipo_delimiterParametroGeneralUsuarioGenerico)throws Exception
	{
		try
		{
			TipoDelimiter  tipodelimiterAux=new TipoDelimiter();

			if(jComboBoxid_tipo_delimiterParametroGeneralUsuarioGenerico==null) {
				tipodelimiterAux=(TipoDelimiter)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.getSelectedItem();
			} else {
				tipodelimiterAux=(TipoDelimiter)jComboBoxid_tipo_delimiterParametroGeneralUsuarioGenerico.getSelectedItem();
			}

			if(tipodelimiterAux!=null && tipodelimiterAux.getId()!=null) {
				parametrogeneralusuario.setid_tipo_delimiter(tipodelimiterAux.getId());
				parametrogeneralusuario.settipodelimiter_descripcion(ParametroGeneralUsuarioConstantesFunciones.getTipoDelimiterDescripcion(tipodelimiterAux));
				parametrogeneralusuario.setTipoDelimiter(tipodelimiterAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUsuario") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.addItem(usuario);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpresa") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.addItem(empresa);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdMoneda") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.addItem(moneda);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoVisualsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoVisual=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.removeAllItems();

							for(TipoVisual tipovisual:this.tipovisualsForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.addItem(tipovisual);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoFondosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoFondo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.removeAllItems();

							for(TipoFondo tipofondo:this.tipofondosForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.addItem(tipofondo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoFondo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.removeAllItems();

							for(TipoFondo tipofondo:this.tipofondosForeignKey) {
								this.jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.addItem(tipofondo);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoFondoBordesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoFondo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.removeAllItems();

							for(TipoFondo tipofondoborde:this.tipofondobordesForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.addItem(tipofondoborde);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoFondoBorde") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.removeAllItems();

							for(TipoFondo tipofondoborde:this.tipofondobordesForeignKey) {
								this.jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.addItem(tipofondoborde);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoFondoControlsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoFondoControl=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.removeAllItems();

							for(TipoFondoControl tipofondocontrol:this.tipofondocontrolsForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.addItem(tipofondocontrol);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoFondoControl") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.removeAllItems();

							for(TipoFondoControl tipofondocontrol:this.tipofondocontrolsForeignKey) {
								this.jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.addItem(tipofondocontrol);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoFuentesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoFuente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.removeAllItems();

							for(TipoFuente tipofuente:this.tipofuentesForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.addItem(tipofuente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoFuente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.removeAllItems();

							for(TipoFuente tipofuente:this.tipofuentesForeignKey) {
								this.jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.addItem(tipofuente);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTamanioControlNormalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTamanioControl=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.removeAllItems();

							for(TipoTamanioControl tipotamaniocontrolnormal:this.tipotamaniocontrolnormalsForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.addItem(tipotamaniocontrolnormal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTamanioControlNormal") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.removeAllItems();

							for(TipoTamanioControl tipotamaniocontrolnormal:this.tipotamaniocontrolnormalsForeignKey) {
								this.jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.addItem(tipotamaniocontrolnormal);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTamanioControlRelacionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTamanioControl=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.removeAllItems();

							for(TipoTamanioControl tipotamaniocontrolrelacion:this.tipotamaniocontrolrelacionsForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.addItem(tipotamaniocontrolrelacion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTamanioControlRelacion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.removeAllItems();

							for(TipoTamanioControl tipotamaniocontrolrelacion:this.tipotamaniocontrolrelacionsForeignKey) {
								this.jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.addItem(tipotamaniocontrolrelacion);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoExportarsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoExportar=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.removeAllItems();

							for(TipoExportar tipoexportar:this.tipoexportarsForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.addItem(tipoexportar);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoExportar") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.removeAllItems();

							for(TipoExportar tipoexportar:this.tipoexportarsForeignKey) {
								this.jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.addItem(tipoexportar);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDelimitersForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDelimiter=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.removeAllItems();

							for(TipoDelimiter tipodelimiter:this.tipodelimitersForeignKey) {
								this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.addItem(tipodelimiter);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { 
					}

					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDelimiter") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.removeAllItems();

							for(TipoDelimiter tipodelimiter:this.tipodelimitersForeignKey) {
								this.jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.addItem(tipodelimiter);
							}
						}

						if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.setSelectedItem(usuario);
						} else {
							this.jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.setSelectedItem(empresa);
						} else {
							this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.setSelectedItem(moneda);
						} else {
							this.jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoVisualForeignKey(TipoVisual tipovisual,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.setSelectedItem(tipovisual);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoFondoForeignKey(TipoFondo tipofondo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.setSelectedItem(tipofondo);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.setSelectedItem(tipofondo);
						} else {
							this.jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoFondoBordeForeignKey(TipoFondo tipofondoborde,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setSelectedItem(tipofondoborde);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.setSelectedItem(tipofondoborde);
						} else {
							this.jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoFondoControlForeignKey(TipoFondoControl tipofondocontrol,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setSelectedItem(tipofondocontrol);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.setSelectedItem(tipofondocontrol);
						} else {
							this.jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoFuenteForeignKey(TipoFuente tipofuente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.setSelectedItem(tipofuente);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.setSelectedItem(tipofuente);
						} else {
							this.jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTamanioControlNormalForeignKey(TipoTamanioControl tipotamaniocontrolnormal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolnormal);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolnormal);
						} else {
							this.jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTamanioControlRelacionForeignKey(TipoTamanioControl tipotamaniocontrolrelacion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolrelacion);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.setSelectedItem(tipotamaniocontrolrelacion);
						} else {
							this.jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoExportarForeignKey(TipoExportar tipoexportar,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.setSelectedItem(tipoexportar);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.setSelectedItem(tipoexportar);
						} else {
							this.jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDelimiterForeignKey(TipoDelimiter tipodelimiter,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.setSelectedItem(tipodelimiter);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.setSelectedItem(tipodelimiter);
						} else {
							this.jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesParametroGeneralUsuario() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ParametroGeneralUsuarioConstantesFunciones.refrescarForeignKeysDescripcionesParametroGeneralUsuario(this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ParametroGeneralUsuarioConstantesFunciones.refrescarForeignKeysDescripcionesParametroGeneralUsuario(this.parametrogeneralusuarios);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(TipoVisual.class));
		classes.add(new Classe(TipoFondo.class));
		classes.add(new Classe(TipoFondoControl.class));
		classes.add(new Classe(TipoFuente.class));
		classes.add(new Classe(TipoTamanioControl.class));
		classes.add(new Classe(TipoExportar.class));
		classes.add(new Classe(TipoDelimiter.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//parametrogeneralusuarioLogic.setParametroGeneralUsuarios(this.parametrogeneralusuarios);
			parametrogeneralusuarioLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ParametroGeneralUsuarioParameterReturnGeneral getParametroGeneralUsuarioParameterGeneral() {
		return this.parametrogeneralusuarioParameterGeneral;
	}
	
	public void setParametroGeneralUsuarioParameterGeneral(ParametroGeneralUsuarioParameterReturnGeneral parametrogeneralusuarioParameterGeneral) {
		this.parametrogeneralusuarioParameterGeneral = parametrogeneralusuarioParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoParametroGeneralUsuario() {
		return isPermisoTodoParametroGeneralUsuario;
	}

	public void setIsPermisoTodoParametroGeneralUsuario(Boolean isPermisoTodoParametroGeneralUsuario) {
		this.isPermisoTodoParametroGeneralUsuario = isPermisoTodoParametroGeneralUsuario;
	}

	public Boolean getIsPermisoNuevoParametroGeneralUsuario() {
		return isPermisoNuevoParametroGeneralUsuario;
	}

	public void setIsPermisoNuevoParametroGeneralUsuario(Boolean isPermisoNuevoParametroGeneralUsuario) {
		this.isPermisoNuevoParametroGeneralUsuario = isPermisoNuevoParametroGeneralUsuario;
	}

	public Boolean getIsPermisoActualizarParametroGeneralUsuario() {
		return isPermisoActualizarParametroGeneralUsuario;
	}

	public void setIsPermisoActualizarParametroGeneralUsuario(Boolean isPermisoActualizarParametroGeneralUsuario) {
		this.isPermisoActualizarParametroGeneralUsuario = isPermisoActualizarParametroGeneralUsuario;
	}

	public Boolean getIsPermisoEliminarParametroGeneralUsuario() {
		return isPermisoEliminarParametroGeneralUsuario;
	}

	public void setIsPermisoEliminarParametroGeneralUsuario(Boolean isPermisoEliminarParametroGeneralUsuario) {
		this.isPermisoEliminarParametroGeneralUsuario = isPermisoEliminarParametroGeneralUsuario;
	}

	public Boolean getIsPermisoGuardarCambiosParametroGeneralUsuario() {
		return isPermisoGuardarCambiosParametroGeneralUsuario;
	}

	public void setIsPermisoGuardarCambiosParametroGeneralUsuario(Boolean isPermisoGuardarCambiosParametroGeneralUsuario) {
		this.isPermisoGuardarCambiosParametroGeneralUsuario = isPermisoGuardarCambiosParametroGeneralUsuario;
	}
	
	public Boolean getIsPermisoConsultaParametroGeneralUsuario() {
		return isPermisoConsultaParametroGeneralUsuario;
	}

	public void setIsPermisoConsultaParametroGeneralUsuario(Boolean isPermisoConsultaParametroGeneralUsuario) {
		this.isPermisoConsultaParametroGeneralUsuario = isPermisoConsultaParametroGeneralUsuario;
	}

	public Boolean getIsPermisoBusquedaParametroGeneralUsuario() {
		return isPermisoBusquedaParametroGeneralUsuario;
	}

	public void setIsPermisoBusquedaParametroGeneralUsuario(Boolean isPermisoBusquedaParametroGeneralUsuario) {
		this.isPermisoBusquedaParametroGeneralUsuario = isPermisoBusquedaParametroGeneralUsuario;
	}

	public Boolean getIsPermisoReporteParametroGeneralUsuario() {
		return isPermisoReporteParametroGeneralUsuario;
	}

	public void setIsPermisoReporteParametroGeneralUsuario(Boolean isPermisoReporteParametroGeneralUsuario) {
		this.isPermisoReporteParametroGeneralUsuario = isPermisoReporteParametroGeneralUsuario;
	}
	
	public Boolean getIsPermisoPaginacionMedioParametroGeneralUsuario() {
		return isPermisoPaginacionMedioParametroGeneralUsuario;
	}

	public void setIsPermisoPaginacionMedioParametroGeneralUsuario(Boolean isPermisoPaginacionMedioParametroGeneralUsuario) {
		this.isPermisoPaginacionMedioParametroGeneralUsuario = isPermisoPaginacionMedioParametroGeneralUsuario;
	}
	
	public Boolean getIsPermisoPaginacionTodoParametroGeneralUsuario() {
		return isPermisoPaginacionTodoParametroGeneralUsuario;
	}

	public void setIsPermisoPaginacionTodoParametroGeneralUsuario(Boolean isPermisoPaginacionTodoParametroGeneralUsuario) {
		this.isPermisoPaginacionTodoParametroGeneralUsuario = isPermisoPaginacionTodoParametroGeneralUsuario;
	}
	
	public Boolean getIsPermisoPaginacionAltoParametroGeneralUsuario() {
		return isPermisoPaginacionAltoParametroGeneralUsuario;
	}

	public void setIsPermisoPaginacionAltoParametroGeneralUsuario(Boolean isPermisoPaginacionAltoParametroGeneralUsuario) {
		this.isPermisoPaginacionAltoParametroGeneralUsuario = isPermisoPaginacionAltoParametroGeneralUsuario;
	}
	
	public Boolean getIsPermisoCopiarParametroGeneralUsuario() {
		return isPermisoCopiarParametroGeneralUsuario;
	}

	public void setIsPermisoCopiarParametroGeneralUsuario(Boolean isPermisoCopiarParametroGeneralUsuario) {
		this.isPermisoCopiarParametroGeneralUsuario = isPermisoCopiarParametroGeneralUsuario;
	}
	
	public Boolean getIsPermisoVerFormParametroGeneralUsuario() {
		return isPermisoVerFormParametroGeneralUsuario;
	}

	public void setIsPermisoVerFormParametroGeneralUsuario(Boolean isPermisoVerFormParametroGeneralUsuario) {
		this.isPermisoVerFormParametroGeneralUsuario = isPermisoVerFormParametroGeneralUsuario;
	}
	
	public Boolean getIsPermisoDuplicarParametroGeneralUsuario() {
		return isPermisoDuplicarParametroGeneralUsuario;
	}

	public void setIsPermisoDuplicarParametroGeneralUsuario(Boolean isPermisoDuplicarParametroGeneralUsuario) {
		this.isPermisoDuplicarParametroGeneralUsuario = isPermisoDuplicarParametroGeneralUsuario;
	}
	
	public Boolean getIsPermisoOrdenParametroGeneralUsuario() {
		return isPermisoOrdenParametroGeneralUsuario;
	}

	public void setIsPermisoOrdenParametroGeneralUsuario(Boolean isPermisoOrdenParametroGeneralUsuario) {
		this.isPermisoOrdenParametroGeneralUsuario = isPermisoOrdenParametroGeneralUsuario;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoParametroGeneralUsuario() {
		return isVisibilidadCeldaNuevoParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaNuevoParametroGeneralUsuario(Boolean isVisibilidadCeldaNuevoParametroGeneralUsuario) {
		this.isVisibilidadCeldaNuevoParametroGeneralUsuario = isVisibilidadCeldaNuevoParametroGeneralUsuario;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarParametroGeneralUsuario() {
		return isVisibilidadCeldaDuplicarParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaDuplicarParametroGeneralUsuario(Boolean isVisibilidadCeldaDuplicarParametroGeneralUsuario) {
		this.isVisibilidadCeldaDuplicarParametroGeneralUsuario = isVisibilidadCeldaDuplicarParametroGeneralUsuario;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarParametroGeneralUsuario() {
		return isVisibilidadCeldaCopiarParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaCopiarParametroGeneralUsuario(Boolean isVisibilidadCeldaCopiarParametroGeneralUsuario) {
		this.isVisibilidadCeldaCopiarParametroGeneralUsuario = isVisibilidadCeldaCopiarParametroGeneralUsuario;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormParametroGeneralUsuario() {
		return isVisibilidadCeldaVerFormParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaVerFormParametroGeneralUsuario(Boolean isVisibilidadCeldaVerFormParametroGeneralUsuario) {
		this.isVisibilidadCeldaVerFormParametroGeneralUsuario = isVisibilidadCeldaVerFormParametroGeneralUsuario;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenParametroGeneralUsuario() {
		return isVisibilidadCeldaOrdenParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaOrdenParametroGeneralUsuario(Boolean isVisibilidadCeldaOrdenParametroGeneralUsuario) {
		this.isVisibilidadCeldaOrdenParametroGeneralUsuario = isVisibilidadCeldaOrdenParametroGeneralUsuario;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario() {
		return isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario(Boolean isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario) {
		this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario = isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario;
	}
	
	public Boolean getIsVisibilidadCeldaModificarParametroGeneralUsuario() {
		return isVisibilidadCeldaModificarParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaModificarParametroGeneralUsuario(Boolean isVisibilidadCeldaModificarParametroGeneralUsuario) {
		this.isVisibilidadCeldaModificarParametroGeneralUsuario = isVisibilidadCeldaModificarParametroGeneralUsuario;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarParametroGeneralUsuario() {
		return isVisibilidadCeldaActualizarParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaActualizarParametroGeneralUsuario(Boolean isVisibilidadCeldaActualizarParametroGeneralUsuario) {
		this.isVisibilidadCeldaActualizarParametroGeneralUsuario = isVisibilidadCeldaActualizarParametroGeneralUsuario;
	}

	public Boolean getIsVisibilidadCeldaEliminarParametroGeneralUsuario() {
		return isVisibilidadCeldaEliminarParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaEliminarParametroGeneralUsuario(Boolean isVisibilidadCeldaEliminarParametroGeneralUsuario) {
		this.isVisibilidadCeldaEliminarParametroGeneralUsuario = isVisibilidadCeldaEliminarParametroGeneralUsuario;
	}

	public Boolean getIsVisibilidadCeldaCancelarParametroGeneralUsuario() {
		return isVisibilidadCeldaCancelarParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaCancelarParametroGeneralUsuario(Boolean isVisibilidadCeldaCancelarParametroGeneralUsuario) {
		this.isVisibilidadCeldaCancelarParametroGeneralUsuario = isVisibilidadCeldaCancelarParametroGeneralUsuario;
	}

	public Boolean getIsVisibilidadCeldaGuardarParametroGeneralUsuario() {
		return isVisibilidadCeldaGuardarParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaGuardarParametroGeneralUsuario(Boolean isVisibilidadCeldaGuardarParametroGeneralUsuario) {
		this.isVisibilidadCeldaGuardarParametroGeneralUsuario = isVisibilidadCeldaGuardarParametroGeneralUsuario;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosParametroGeneralUsuario() {
		return isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario;
	}

	public void setIsVisibilidadCeldaGuardarCambiosParametroGeneralUsuario(Boolean isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario) {
		this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario = isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario;
	}
		
	public ParametroGeneralUsuarioSessionBean getparametrogeneralusuarioSessionBean() {
		return this.parametrogeneralusuarioSessionBean;
	}
	
	public void setparametrogeneralusuarioSessionBean(ParametroGeneralUsuarioSessionBean parametrogeneralusuarioSessionBean) {
		this.parametrogeneralusuarioSessionBean=parametrogeneralusuarioSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoDelimiter() {
		return this.isVisibilidadFK_IdTipoDelimiter;
	}

	public void setisVisibilidadFK_IdTipoDelimiter(Boolean isVisibilidadFK_IdTipoDelimiter) {
		this.isVisibilidadFK_IdTipoDelimiter=isVisibilidadFK_IdTipoDelimiter;
	}

	public Boolean getisVisibilidadFK_IdTipoExportar() {
		return this.isVisibilidadFK_IdTipoExportar;
	}

	public void setisVisibilidadFK_IdTipoExportar(Boolean isVisibilidadFK_IdTipoExportar) {
		this.isVisibilidadFK_IdTipoExportar=isVisibilidadFK_IdTipoExportar;
	}

	public Boolean getisVisibilidadFK_IdTipoFondo() {
		return this.isVisibilidadFK_IdTipoFondo;
	}

	public void setisVisibilidadFK_IdTipoFondo(Boolean isVisibilidadFK_IdTipoFondo) {
		this.isVisibilidadFK_IdTipoFondo=isVisibilidadFK_IdTipoFondo;
	}

	public Boolean getisVisibilidadFK_IdTipoFondoBorde() {
		return this.isVisibilidadFK_IdTipoFondoBorde;
	}

	public void setisVisibilidadFK_IdTipoFondoBorde(Boolean isVisibilidadFK_IdTipoFondoBorde) {
		this.isVisibilidadFK_IdTipoFondoBorde=isVisibilidadFK_IdTipoFondoBorde;
	}

	public Boolean getisVisibilidadFK_IdTipoFondoControl() {
		return this.isVisibilidadFK_IdTipoFondoControl;
	}

	public void setisVisibilidadFK_IdTipoFondoControl(Boolean isVisibilidadFK_IdTipoFondoControl) {
		this.isVisibilidadFK_IdTipoFondoControl=isVisibilidadFK_IdTipoFondoControl;
	}

	public Boolean getisVisibilidadFK_IdTipoFuente() {
		return this.isVisibilidadFK_IdTipoFuente;
	}

	public void setisVisibilidadFK_IdTipoFuente(Boolean isVisibilidadFK_IdTipoFuente) {
		this.isVisibilidadFK_IdTipoFuente=isVisibilidadFK_IdTipoFuente;
	}

	public Boolean getisVisibilidadFK_IdTipoTamanioControlNormal() {
		return this.isVisibilidadFK_IdTipoTamanioControlNormal;
	}

	public void setisVisibilidadFK_IdTipoTamanioControlNormal(Boolean isVisibilidadFK_IdTipoTamanioControlNormal) {
		this.isVisibilidadFK_IdTipoTamanioControlNormal=isVisibilidadFK_IdTipoTamanioControlNormal;
	}

	public Boolean getisVisibilidadFK_IdTipoTamanioControlRelacion() {
		return this.isVisibilidadFK_IdTipoTamanioControlRelacion;
	}

	public void setisVisibilidadFK_IdTipoTamanioControlRelacion(Boolean isVisibilidadFK_IdTipoTamanioControlRelacion) {
		this.isVisibilidadFK_IdTipoTamanioControlRelacion=isVisibilidadFK_IdTipoTamanioControlRelacion;
	}

	public Boolean getisVisibilidadFK_IdTipoVisual() {
		return this.isVisibilidadFK_IdTipoVisual;
	}

	public void setisVisibilidadFK_IdTipoVisual(Boolean isVisibilidadFK_IdTipoVisual) {
		this.isVisibilidadFK_IdTipoVisual=isVisibilidadFK_IdTipoVisual;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario)throws Exception {
		try {
			
				this.setActualParaGuardarUsuarioForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarEmpresaForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarSucursalForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarEjercicioForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarPeriodoForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarMonedaForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarAnioForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarMesForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarTipoVisualForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarTipoFondoForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarTipoFondoBordeForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarTipoFondoControlForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarTipoFuenteForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarTipoTamanioControlNormalForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarTipoTamanioControlRelacionForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarTipoExportarForeignKey(parametrogeneralusuario,null);
				this.setActualParaGuardarTipoDelimiterForeignKey(parametrogeneralusuario,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ParametroGeneralUsuario parametrogeneralusuario,ParametroGeneralUsuario parametrogeneralusuarioAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalParametroGeneralUsuario(parametrogeneralusuario);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		parametrogeneralusuarioAux.setId(parametrogeneralusuario.getId());
		parametrogeneralusuarioAux.setVersionRow(parametrogeneralusuario.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessParametroGeneralUsuario();
		
			int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = parametrogeneralusuarioValidator.getInvalidValues(this.parametrogeneralusuario);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			parametrogeneralusuarioLogic.setDatosCliente(datosCliente);
			parametrogeneralusuarioLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				parametrogeneralusuarioAux=new  ParametroGeneralUsuario();
				
				parametrogeneralusuarioAux.setIsNew(true);
				parametrogeneralusuarioAux.setIsChanged(true);
				
				parametrogeneralusuarioAux.setParametroGeneralUsuarioOriginal(this.parametrogeneralusuario);
				
				parametrogeneralusuarioAux.setId(this.parametrogeneralusuario.getId());	
				parametrogeneralusuarioAux.setVersionRow(this.parametrogeneralusuario.getVersionRow());	
				parametrogeneralusuarioAux.setid_empresa(this.parametrogeneralusuario.getid_empresa());	
				parametrogeneralusuarioAux.setid_sucursal(this.parametrogeneralusuario.getid_sucursal());	
				parametrogeneralusuarioAux.setid_ejercicio(this.parametrogeneralusuario.getid_ejercicio());	
				parametrogeneralusuarioAux.setid_periodo(this.parametrogeneralusuario.getid_periodo());	
				parametrogeneralusuarioAux.setid_moneda(this.parametrogeneralusuario.getid_moneda());	
				parametrogeneralusuarioAux.setfecha_sistema(this.parametrogeneralusuario.getfecha_sistema());	
				parametrogeneralusuarioAux.setid_anio(this.parametrogeneralusuario.getid_anio());	
				parametrogeneralusuarioAux.setid_mes(this.parametrogeneralusuario.getid_mes());	
				parametrogeneralusuarioAux.setdia(this.parametrogeneralusuario.getdia());	
				parametrogeneralusuarioAux.setid_tipo_visual(this.parametrogeneralusuario.getid_tipo_visual());	
				parametrogeneralusuarioAux.setid_tipo_fondo(this.parametrogeneralusuario.getid_tipo_fondo());	
				parametrogeneralusuarioAux.setid_tipo_fondo_borde(this.parametrogeneralusuario.getid_tipo_fondo_borde());	
				parametrogeneralusuarioAux.setid_tipo_fondo_control(this.parametrogeneralusuario.getid_tipo_fondo_control());	
				parametrogeneralusuarioAux.setid_tipo_fuente(this.parametrogeneralusuario.getid_tipo_fuente());	
				parametrogeneralusuarioAux.setid_tipo_tamanio_control_normal(this.parametrogeneralusuario.getid_tipo_tamanio_control_normal());	
				parametrogeneralusuarioAux.setid_tipo_tamanio_control_relacion(this.parametrogeneralusuario.getid_tipo_tamanio_control_relacion());	
				parametrogeneralusuarioAux.setcon_tamanio_control_manual(this.parametrogeneralusuario.getcon_tamanio_control_manual());	
				parametrogeneralusuarioAux.setcon_tamanio_control_todo_relacion(this.parametrogeneralusuario.getcon_tamanio_control_todo_relacion());	
				parametrogeneralusuarioAux.setcon_guardar_relaciones(this.parametrogeneralusuario.getcon_guardar_relaciones());	
				parametrogeneralusuarioAux.setcon_mensaje_confirmacion(this.parametrogeneralusuario.getcon_mensaje_confirmacion());	
				parametrogeneralusuarioAux.setcon_botones_tool_bar(this.parametrogeneralusuario.getcon_botones_tool_bar());	
				parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_general(this.parametrogeneralusuario.getcon_mostrar_acciones_campo_general());	
				parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_relaciones(this.parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones());	
				parametrogeneralusuarioAux.setid_tipo_exportar(this.parametrogeneralusuario.getid_tipo_exportar());	
				parametrogeneralusuarioAux.setid_tipo_delimiter(this.parametrogeneralusuario.getid_tipo_delimiter());	
				parametrogeneralusuarioAux.setcon_exportar_cabecera(this.parametrogeneralusuario.getcon_exportar_cabecera());	
				parametrogeneralusuarioAux.setcon_exportar_campo_version(this.parametrogeneralusuario.getcon_exportar_campo_version());	
				parametrogeneralusuarioAux.setpath_exportar(this.parametrogeneralusuario.getpath_exportar());	
				parametrogeneralusuarioAux.setcon_precargar_ventanas(this.parametrogeneralusuario.getcon_precargar_ventanas());	
				parametrogeneralusuarioAux.setcon_precargar_por_usuario(this.parametrogeneralusuario.getcon_precargar_por_usuario());	
				parametrogeneralusuarioAux.setcon_cargar_por_parte(this.parametrogeneralusuario.getcon_cargar_por_parte());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrogeneralusuarioSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(parametrogeneralusuarioAux,parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrogeneralusuarioAux,parametrogeneralusuarios);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.parametrogeneralusuarioSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.saveParametroGeneralUsuarios();//WithConnection
						//parametrogeneralusuarioLogic.getSetVersionRowParametroGeneralUsuarios();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrogeneralusuario,parametrogeneralusuarioAux);
					
					this.refrescarForeignKeysDescripcionesParametroGeneralUsuario();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				parametrogeneralusuarioAux=new  ParametroGeneralUsuario();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado() 
					|| (this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado() && this.parametrogeneralusuario.getId()>=0)) {
						
					parametrogeneralusuarioAux.setIsNew(false);
				}
				
				parametrogeneralusuarioAux.setIsDeleted(false);
			
				parametrogeneralusuarioAux.setId(this.parametrogeneralusuario.getId());	
				parametrogeneralusuarioAux.setVersionRow(this.parametrogeneralusuario.getVersionRow());	
				parametrogeneralusuarioAux.setid_empresa(this.parametrogeneralusuario.getid_empresa());	
				parametrogeneralusuarioAux.setid_sucursal(this.parametrogeneralusuario.getid_sucursal());	
				parametrogeneralusuarioAux.setid_ejercicio(this.parametrogeneralusuario.getid_ejercicio());	
				parametrogeneralusuarioAux.setid_periodo(this.parametrogeneralusuario.getid_periodo());	
				parametrogeneralusuarioAux.setid_moneda(this.parametrogeneralusuario.getid_moneda());	
				parametrogeneralusuarioAux.setfecha_sistema(this.parametrogeneralusuario.getfecha_sistema());	
				parametrogeneralusuarioAux.setid_anio(this.parametrogeneralusuario.getid_anio());	
				parametrogeneralusuarioAux.setid_mes(this.parametrogeneralusuario.getid_mes());	
				parametrogeneralusuarioAux.setdia(this.parametrogeneralusuario.getdia());	
				parametrogeneralusuarioAux.setid_tipo_visual(this.parametrogeneralusuario.getid_tipo_visual());	
				parametrogeneralusuarioAux.setid_tipo_fondo(this.parametrogeneralusuario.getid_tipo_fondo());	
				parametrogeneralusuarioAux.setid_tipo_fondo_borde(this.parametrogeneralusuario.getid_tipo_fondo_borde());	
				parametrogeneralusuarioAux.setid_tipo_fondo_control(this.parametrogeneralusuario.getid_tipo_fondo_control());	
				parametrogeneralusuarioAux.setid_tipo_fuente(this.parametrogeneralusuario.getid_tipo_fuente());	
				parametrogeneralusuarioAux.setid_tipo_tamanio_control_normal(this.parametrogeneralusuario.getid_tipo_tamanio_control_normal());	
				parametrogeneralusuarioAux.setid_tipo_tamanio_control_relacion(this.parametrogeneralusuario.getid_tipo_tamanio_control_relacion());	
				parametrogeneralusuarioAux.setcon_tamanio_control_manual(this.parametrogeneralusuario.getcon_tamanio_control_manual());	
				parametrogeneralusuarioAux.setcon_tamanio_control_todo_relacion(this.parametrogeneralusuario.getcon_tamanio_control_todo_relacion());	
				parametrogeneralusuarioAux.setcon_guardar_relaciones(this.parametrogeneralusuario.getcon_guardar_relaciones());	
				parametrogeneralusuarioAux.setcon_mensaje_confirmacion(this.parametrogeneralusuario.getcon_mensaje_confirmacion());	
				parametrogeneralusuarioAux.setcon_botones_tool_bar(this.parametrogeneralusuario.getcon_botones_tool_bar());	
				parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_general(this.parametrogeneralusuario.getcon_mostrar_acciones_campo_general());	
				parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_relaciones(this.parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones());	
				parametrogeneralusuarioAux.setid_tipo_exportar(this.parametrogeneralusuario.getid_tipo_exportar());	
				parametrogeneralusuarioAux.setid_tipo_delimiter(this.parametrogeneralusuario.getid_tipo_delimiter());	
				parametrogeneralusuarioAux.setcon_exportar_cabecera(this.parametrogeneralusuario.getcon_exportar_cabecera());	
				parametrogeneralusuarioAux.setcon_exportar_campo_version(this.parametrogeneralusuario.getcon_exportar_campo_version());	
				parametrogeneralusuarioAux.setpath_exportar(this.parametrogeneralusuario.getpath_exportar());	
				parametrogeneralusuarioAux.setcon_precargar_ventanas(this.parametrogeneralusuario.getcon_precargar_ventanas());	
				parametrogeneralusuarioAux.setcon_precargar_por_usuario(this.parametrogeneralusuario.getcon_precargar_por_usuario());	
				parametrogeneralusuarioAux.setcon_cargar_por_parte(this.parametrogeneralusuario.getcon_cargar_por_parte());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrogeneralusuarioAux,parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrogeneralusuarioAux,parametrogeneralusuarios);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.parametrogeneralusuarioSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.saveParametroGeneralUsuarios();//WithConnection
						//parametrogeneralusuarioLogic.getSetVersionRowParametroGeneralUsuarios();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrogeneralusuario,parametrogeneralusuarioAux);
					
					this.refrescarForeignKeysDescripcionesParametroGeneralUsuario();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				parametrogeneralusuarioAux=new  ParametroGeneralUsuario();
				
				parametrogeneralusuarioAux.setIsNew(false);
				parametrogeneralusuarioAux.setIsChanged(false);
				
				parametrogeneralusuarioAux.setIsDeleted(true);
				
				parametrogeneralusuarioAux.setId(this.parametrogeneralusuario.getId());	
				parametrogeneralusuarioAux.setVersionRow(this.parametrogeneralusuario.getVersionRow());	
				parametrogeneralusuarioAux.setid_empresa(this.parametrogeneralusuario.getid_empresa());	
				parametrogeneralusuarioAux.setid_sucursal(this.parametrogeneralusuario.getid_sucursal());	
				parametrogeneralusuarioAux.setid_ejercicio(this.parametrogeneralusuario.getid_ejercicio());	
				parametrogeneralusuarioAux.setid_periodo(this.parametrogeneralusuario.getid_periodo());	
				parametrogeneralusuarioAux.setid_moneda(this.parametrogeneralusuario.getid_moneda());	
				parametrogeneralusuarioAux.setfecha_sistema(this.parametrogeneralusuario.getfecha_sistema());	
				parametrogeneralusuarioAux.setid_anio(this.parametrogeneralusuario.getid_anio());	
				parametrogeneralusuarioAux.setid_mes(this.parametrogeneralusuario.getid_mes());	
				parametrogeneralusuarioAux.setdia(this.parametrogeneralusuario.getdia());	
				parametrogeneralusuarioAux.setid_tipo_visual(this.parametrogeneralusuario.getid_tipo_visual());	
				parametrogeneralusuarioAux.setid_tipo_fondo(this.parametrogeneralusuario.getid_tipo_fondo());	
				parametrogeneralusuarioAux.setid_tipo_fondo_borde(this.parametrogeneralusuario.getid_tipo_fondo_borde());	
				parametrogeneralusuarioAux.setid_tipo_fondo_control(this.parametrogeneralusuario.getid_tipo_fondo_control());	
				parametrogeneralusuarioAux.setid_tipo_fuente(this.parametrogeneralusuario.getid_tipo_fuente());	
				parametrogeneralusuarioAux.setid_tipo_tamanio_control_normal(this.parametrogeneralusuario.getid_tipo_tamanio_control_normal());	
				parametrogeneralusuarioAux.setid_tipo_tamanio_control_relacion(this.parametrogeneralusuario.getid_tipo_tamanio_control_relacion());	
				parametrogeneralusuarioAux.setcon_tamanio_control_manual(this.parametrogeneralusuario.getcon_tamanio_control_manual());	
				parametrogeneralusuarioAux.setcon_tamanio_control_todo_relacion(this.parametrogeneralusuario.getcon_tamanio_control_todo_relacion());	
				parametrogeneralusuarioAux.setcon_guardar_relaciones(this.parametrogeneralusuario.getcon_guardar_relaciones());	
				parametrogeneralusuarioAux.setcon_mensaje_confirmacion(this.parametrogeneralusuario.getcon_mensaje_confirmacion());	
				parametrogeneralusuarioAux.setcon_botones_tool_bar(this.parametrogeneralusuario.getcon_botones_tool_bar());	
				parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_general(this.parametrogeneralusuario.getcon_mostrar_acciones_campo_general());	
				parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_relaciones(this.parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones());	
				parametrogeneralusuarioAux.setid_tipo_exportar(this.parametrogeneralusuario.getid_tipo_exportar());	
				parametrogeneralusuarioAux.setid_tipo_delimiter(this.parametrogeneralusuario.getid_tipo_delimiter());	
				parametrogeneralusuarioAux.setcon_exportar_cabecera(this.parametrogeneralusuario.getcon_exportar_cabecera());	
				parametrogeneralusuarioAux.setcon_exportar_campo_version(this.parametrogeneralusuario.getcon_exportar_campo_version());	
				parametrogeneralusuarioAux.setpath_exportar(this.parametrogeneralusuario.getpath_exportar());	
				parametrogeneralusuarioAux.setcon_precargar_ventanas(this.parametrogeneralusuario.getcon_precargar_ventanas());	
				parametrogeneralusuarioAux.setcon_precargar_por_usuario(this.parametrogeneralusuario.getcon_precargar_por_usuario());	
				parametrogeneralusuarioAux.setcon_cargar_por_parte(this.parametrogeneralusuario.getcon_cargar_por_parte());	
				
				if(this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.parametrogeneralusuarioAux.getId()>=0) {	
						this.parametrogeneralusuariosEliminados.add(parametrogeneralusuarioAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(parametrogeneralusuarioAux,parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrogeneralusuarioAux,parametrogeneralusuarios);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.parametrogeneralusuarioSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.saveParametroGeneralUsuarios();//WithConnection
						//parametrogeneralusuarioLogic.getSetVersionRowParametroGeneralUsuarios();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(this.parametrogeneralusuariosEliminados);
					
					parametrogeneralusuarioLogic.saveParametroGeneralUsuarios();//WithConnection
					//parametrogeneralusuarioLogic.getSetVersionRowParametroGeneralUsuarios();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesParametroGeneralUsuario();
				
				this.parametrogeneralusuariosEliminados= new ArrayList<ParametroGeneralUsuario>();		
			}
			
			if(this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Parametro General GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.parametrogeneralusuario=parametrogeneralusuarioAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessParametroGeneralUsuario();
      	}
		
	}	
	
	public void actualizarRelaciones(ParametroGeneralUsuario parametrogeneralusuarioLocal) throws Exception {
		
		if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ParametroGeneralUsuario parametrogeneralusuarioLocal) throws Exception {	
		if(this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				parametrogeneralusuarioLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				parametrogeneralusuarioLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				parametrogeneralusuarioLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				parametrogeneralusuarioLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				parametrogeneralusuarioLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				parametrogeneralusuarioLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				parametrogeneralusuarioLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				parametrogeneralusuarioLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoVisualDetalleFormJInternalFrame.class)) {
				TipoVisualBeanSwingJInternalFrame tipovisualBeanSwingJInternalFrameLocal=(TipoVisualBeanSwingJInternalFrame) ((TipoVisualDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipovisualBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoVisual(tipovisualBeanSwingJInternalFrameLocal.gettipovisual(),true);
				tipovisualBeanSwingJInternalFrameLocal.actualizarLista(tipovisualBeanSwingJInternalFrameLocal.tipovisual,this.tipovisualsForeignKey);

				tipovisualBeanSwingJInternalFrameLocal.actualizarRelaciones(tipovisualBeanSwingJInternalFrameLocal.tipovisual);

				parametrogeneralusuarioLocal.setTipoVisual(tipovisualBeanSwingJInternalFrameLocal.tipovisual);

				this.addItemDefectoCombosForeignKeyTipoVisual();
				this.cargarCombosFrameTipoVisualsForeignKey("Formulario");
				this.setActualTipoVisualForeignKey(tipovisualBeanSwingJInternalFrameLocal.tipovisual.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoFondoDetalleFormJInternalFrame.class)) {
				TipoFondoBeanSwingJInternalFrame tipofondoBeanSwingJInternalFrameLocal=(TipoFondoBeanSwingJInternalFrame) ((TipoFondoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipofondoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoFondo(tipofondoBeanSwingJInternalFrameLocal.gettipofondo(),true);
				tipofondoBeanSwingJInternalFrameLocal.actualizarLista(tipofondoBeanSwingJInternalFrameLocal.tipofondo,this.tipofondosForeignKey);

				tipofondoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipofondoBeanSwingJInternalFrameLocal.tipofondo);

				parametrogeneralusuarioLocal.setTipoFondo(tipofondoBeanSwingJInternalFrameLocal.tipofondo);

				this.addItemDefectoCombosForeignKeyTipoFondo();
				this.cargarCombosFrameTipoFondosForeignKey("Formulario");
				this.setActualTipoFondoForeignKey(tipofondoBeanSwingJInternalFrameLocal.tipofondo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoFondoDetalleFormJInternalFrame.class)) {
				TipoFondoBeanSwingJInternalFrame tipofondobordeBeanSwingJInternalFrameLocal=(TipoFondoBeanSwingJInternalFrame) ((TipoFondoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipofondobordeBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoFondo(tipofondobordeBeanSwingJInternalFrameLocal.gettipofondo(),true);
				tipofondobordeBeanSwingJInternalFrameLocal.actualizarLista(tipofondobordeBeanSwingJInternalFrameLocal.tipofondo,this.tipofondobordesForeignKey);

				tipofondobordeBeanSwingJInternalFrameLocal.actualizarRelaciones(tipofondobordeBeanSwingJInternalFrameLocal.tipofondo);

				parametrogeneralusuarioLocal.setTipoFondoBorde(tipofondobordeBeanSwingJInternalFrameLocal.tipofondo);

				this.addItemDefectoCombosForeignKeyTipoFondoBorde();
				this.cargarCombosFrameTipoFondoBordesForeignKey("Formulario");
				this.setActualTipoFondoBordeForeignKey(tipofondobordeBeanSwingJInternalFrameLocal.tipofondo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoFondoControlDetalleFormJInternalFrame.class)) {
				TipoFondoControlBeanSwingJInternalFrame tipofondocontrolBeanSwingJInternalFrameLocal=(TipoFondoControlBeanSwingJInternalFrame) ((TipoFondoControlDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipofondocontrolBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoFondoControl(tipofondocontrolBeanSwingJInternalFrameLocal.gettipofondocontrol(),true);
				tipofondocontrolBeanSwingJInternalFrameLocal.actualizarLista(tipofondocontrolBeanSwingJInternalFrameLocal.tipofondocontrol,this.tipofondocontrolsForeignKey);

				tipofondocontrolBeanSwingJInternalFrameLocal.actualizarRelaciones(tipofondocontrolBeanSwingJInternalFrameLocal.tipofondocontrol);

				parametrogeneralusuarioLocal.setTipoFondoControl(tipofondocontrolBeanSwingJInternalFrameLocal.tipofondocontrol);

				this.addItemDefectoCombosForeignKeyTipoFondoControl();
				this.cargarCombosFrameTipoFondoControlsForeignKey("Formulario");
				this.setActualTipoFondoControlForeignKey(tipofondocontrolBeanSwingJInternalFrameLocal.tipofondocontrol.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoFuenteDetalleFormJInternalFrame.class)) {
				TipoFuenteBeanSwingJInternalFrame tipofuenteBeanSwingJInternalFrameLocal=(TipoFuenteBeanSwingJInternalFrame) ((TipoFuenteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipofuenteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoFuente(tipofuenteBeanSwingJInternalFrameLocal.gettipofuente(),true);
				tipofuenteBeanSwingJInternalFrameLocal.actualizarLista(tipofuenteBeanSwingJInternalFrameLocal.tipofuente,this.tipofuentesForeignKey);

				tipofuenteBeanSwingJInternalFrameLocal.actualizarRelaciones(tipofuenteBeanSwingJInternalFrameLocal.tipofuente);

				parametrogeneralusuarioLocal.setTipoFuente(tipofuenteBeanSwingJInternalFrameLocal.tipofuente);

				this.addItemDefectoCombosForeignKeyTipoFuente();
				this.cargarCombosFrameTipoFuentesForeignKey("Formulario");
				this.setActualTipoFuenteForeignKey(tipofuenteBeanSwingJInternalFrameLocal.tipofuente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTamanioControlDetalleFormJInternalFrame.class)) {
				TipoTamanioControlBeanSwingJInternalFrame tipotamaniocontrolnormalBeanSwingJInternalFrameLocal=(TipoTamanioControlBeanSwingJInternalFrame) ((TipoTamanioControlDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotamaniocontrolnormalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTamanioControl(tipotamaniocontrolnormalBeanSwingJInternalFrameLocal.gettipotamaniocontrol(),true);
				tipotamaniocontrolnormalBeanSwingJInternalFrameLocal.actualizarLista(tipotamaniocontrolnormalBeanSwingJInternalFrameLocal.tipotamaniocontrol,this.tipotamaniocontrolnormalsForeignKey);

				tipotamaniocontrolnormalBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotamaniocontrolnormalBeanSwingJInternalFrameLocal.tipotamaniocontrol);

				parametrogeneralusuarioLocal.setTipoTamanioControlNormal(tipotamaniocontrolnormalBeanSwingJInternalFrameLocal.tipotamaniocontrol);

				this.addItemDefectoCombosForeignKeyTipoTamanioControlNormal();
				this.cargarCombosFrameTipoTamanioControlNormalsForeignKey("Formulario");
				this.setActualTipoTamanioControlNormalForeignKey(tipotamaniocontrolnormalBeanSwingJInternalFrameLocal.tipotamaniocontrol.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTamanioControlDetalleFormJInternalFrame.class)) {
				TipoTamanioControlBeanSwingJInternalFrame tipotamaniocontrolrelacionBeanSwingJInternalFrameLocal=(TipoTamanioControlBeanSwingJInternalFrame) ((TipoTamanioControlDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotamaniocontrolrelacionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTamanioControl(tipotamaniocontrolrelacionBeanSwingJInternalFrameLocal.gettipotamaniocontrol(),true);
				tipotamaniocontrolrelacionBeanSwingJInternalFrameLocal.actualizarLista(tipotamaniocontrolrelacionBeanSwingJInternalFrameLocal.tipotamaniocontrol,this.tipotamaniocontrolrelacionsForeignKey);

				tipotamaniocontrolrelacionBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotamaniocontrolrelacionBeanSwingJInternalFrameLocal.tipotamaniocontrol);

				parametrogeneralusuarioLocal.setTipoTamanioControlRelacion(tipotamaniocontrolrelacionBeanSwingJInternalFrameLocal.tipotamaniocontrol);

				this.addItemDefectoCombosForeignKeyTipoTamanioControlRelacion();
				this.cargarCombosFrameTipoTamanioControlRelacionsForeignKey("Formulario");
				this.setActualTipoTamanioControlRelacionForeignKey(tipotamaniocontrolrelacionBeanSwingJInternalFrameLocal.tipotamaniocontrol.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoExportarDetalleFormJInternalFrame.class)) {
				TipoExportarBeanSwingJInternalFrame tipoexportarBeanSwingJInternalFrameLocal=(TipoExportarBeanSwingJInternalFrame) ((TipoExportarDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoexportarBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoExportar(tipoexportarBeanSwingJInternalFrameLocal.gettipoexportar(),true);
				tipoexportarBeanSwingJInternalFrameLocal.actualizarLista(tipoexportarBeanSwingJInternalFrameLocal.tipoexportar,this.tipoexportarsForeignKey);

				tipoexportarBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoexportarBeanSwingJInternalFrameLocal.tipoexportar);

				parametrogeneralusuarioLocal.setTipoExportar(tipoexportarBeanSwingJInternalFrameLocal.tipoexportar);

				this.addItemDefectoCombosForeignKeyTipoExportar();
				this.cargarCombosFrameTipoExportarsForeignKey("Formulario");
				this.setActualTipoExportarForeignKey(tipoexportarBeanSwingJInternalFrameLocal.tipoexportar.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDelimiterDetalleFormJInternalFrame.class)) {
				TipoDelimiterBeanSwingJInternalFrame tipodelimiterBeanSwingJInternalFrameLocal=(TipoDelimiterBeanSwingJInternalFrame) ((TipoDelimiterDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodelimiterBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDelimiter(tipodelimiterBeanSwingJInternalFrameLocal.gettipodelimiter(),true);
				tipodelimiterBeanSwingJInternalFrameLocal.actualizarLista(tipodelimiterBeanSwingJInternalFrameLocal.tipodelimiter,this.tipodelimitersForeignKey);

				tipodelimiterBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodelimiterBeanSwingJInternalFrameLocal.tipodelimiter);

				parametrogeneralusuarioLocal.setTipoDelimiter(tipodelimiterBeanSwingJInternalFrameLocal.tipodelimiter);

				this.addItemDefectoCombosForeignKeyTipoDelimiter();
				this.cargarCombosFrameTipoDelimitersForeignKey("Formulario");
				this.setActualTipoDelimiterForeignKey(tipodelimiterBeanSwingJInternalFrameLocal.tipodelimiter.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarParametroGeneralUsuarioActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = parametrogeneralusuarioValidator.getInvalidValues(this.parametrogeneralusuario);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ParametroGeneralUsuario parametrogeneralusuario,List<ParametroGeneralUsuario> parametrogeneralusuarios) throws Exception {
		try	{		
			ParametroGeneralUsuarioConstantesFunciones.actualizarLista(parametrogeneralusuario,parametrogeneralusuarios,this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ParametroGeneralUsuario parametrogeneralusuario,List<ParametroGeneralUsuario> parametrogeneralusuarios) throws Exception {
		try	{			
			ParametroGeneralUsuarioConstantesFunciones.actualizarSelectedLista(parametrogeneralusuario,parametrogeneralusuarios);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ParametroGeneralUsuario> parametrogeneralusuariosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				parametrogeneralusuariosLocal=this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				parametrogeneralusuariosLocal=this.parametrogeneralusuarios;
			}
			//ARCHITECTURE
		
			for(ParametroGeneralUsuario parametrogeneralusuarioLocal:parametrogeneralusuariosLocal) {
				if(this.permiteMantenimiento(parametrogeneralusuarioLocal) && parametrogeneralusuarioLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.getParametroGeneralUsuarioLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_empresaParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_sucursalParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_ejercicioParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_periodoParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_monedaParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.FECHASISTEMA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelfecha_sistemaParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_anioParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_mesParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.DIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabeldiaParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDTIPOVISUAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_visualParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDTIPOFONDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_fondoParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDTIPOFONDOBORDE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_fondo_bordeParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDTIPOFONDOCONTROL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_fondo_controlParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDTIPOFUENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_fuenteParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDTIPOTAMANIOCONTROLNORMAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_tamanio_control_normalParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDTIPOTAMANIOCONTROLRELACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_tamanio_control_relacionParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONTAMANIOCONTROLMANUAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_tamanio_control_manualParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONTAMANIOCONTROLTODORELACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_tamanio_control_todo_relacionParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONGUARDARRELACIONES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_guardar_relacionesParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONMENSAJECONFIRMACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_mensaje_confirmacionParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONBOTONESTOOLBAR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_botones_tool_barParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONMOSTRARACCIONESCAMPOGENERAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_mostrar_acciones_campo_generalParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONMOSTRARACCIONESCAMPORELACIONES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDTIPOEXPORTAR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_exportarParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.IDTIPODELIMITER)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_delimiterParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONEXPORTARCABECERA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_exportar_cabeceraParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONEXPORTARCAMPOVERSION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_exportar_campo_versionParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.PATHEXPORTAR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelpath_exportarParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONPRECARGARVENTANAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_precargar_ventanasParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONPRECARGARPORUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_precargar_por_usuarioParametroGeneralUsuario,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroGeneralUsuarioConstantesFunciones.CONCARGARPORPARTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_cargar_por_parteParametroGeneralUsuario,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_empresaParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_sucursalParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_ejercicioParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_periodoParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_monedaParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelfecha_sistemaParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_anioParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_mesParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabeldiaParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_visualParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_fondoParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_fondo_bordeParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_fondo_controlParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_fuenteParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_tamanio_control_normalParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_tamanio_control_relacionParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_tamanio_control_manualParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_tamanio_control_todo_relacionParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_guardar_relacionesParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_mensaje_confirmacionParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_botones_tool_barParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_mostrar_acciones_campo_generalParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_exportarParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_tipo_delimiterParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_exportar_cabeceraParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_exportar_campo_versionParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelpath_exportarParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_precargar_ventanasParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_precargar_por_usuarioParametroGeneralUsuario,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_cargar_por_parteParametroGeneralUsuario,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoParametroGeneralUsuario--;	
		
		
		this.parametrogeneralusuarioAux=new ParametroGeneralUsuario();
		
		this.parametrogeneralusuarioAux.setId(this.iIdNuevoParametroGeneralUsuario);
		this.parametrogeneralusuarioAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().add(this.parametrogeneralusuarioAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.parametrogeneralusuarios.add(this.parametrogeneralusuarioAux);
		}
		//ARCHITECTURE
		
		this.parametrogeneralusuario=this.parametrogeneralusuarioAux;
		
		if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioParametroGeneralUsuario(this.parametrogeneralusuario);
			this.setVariablesObjetoActualToFormularioForeignKeyParametroGeneralUsuario(this.parametrogeneralusuario);
		}
				
		//this.setDefaultControlesParametroGeneralUsuario();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyParametroGeneralUsuario();
		
		//PARA RELACION DE UNO A UNO
		this.parametrogeneralusuario.setId(this.id_usuarioFK_IdUsuario);
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyParametroGeneralUsuario();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroGeneralUsuario();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuarioBean,this.parametrogeneralusuario,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
			classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.parametrogeneralusuarioReturnGeneral=parametrogeneralusuarioLogic.procesarEventosParametroGeneralUsuariosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios(),this.parametrogeneralusuario,this.parametrogeneralusuarioParameterGeneral,this.isEsNuevoParametroGeneralUsuario,classes);//this.parametrogeneralusuarioLogic.getParametroGeneralUsuario()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanParametroGeneralUsuario(this.parametrogeneralusuarioReturnGeneral,this.parametrogeneralusuarioBean,false);
		
		if(this.parametrogeneralusuarioReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyParametroGeneralUsuario(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioParametroGeneralUsuario(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario());
		}
		
		if(this.parametrogeneralusuarioReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioParametroGeneralUsuario(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario(),classes);//this.parametrogeneralusuarioBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyParametroGeneralUsuario();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyParametroGeneralUsuario();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.RecargarFormParametroGeneralUsuario(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingParametroGeneralUsuario(false);
						
			if(parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroGeneralUsuario();
			}
			
			this.actualizarVisualTableDatosParametroGeneralUsuario();
			
			this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(this.getIndiceNuevoParametroGeneralUsuario(), this.getIndiceNuevoParametroGeneralUsuario());
			
			this.seleccionarFilaTablaParametroGeneralUsuarioActual();
						
			this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesParametroGeneralUsuario(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jDateChooserfecha_sistemaParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarfecha_sistemaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextFielddiaParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activardiaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_manualParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_tamanio_control_manualParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_todo_relacionParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_tamanio_control_todo_relacionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_guardar_relacionesParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_guardar_relacionesParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mensaje_confirmacionParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_mensaje_confirmacionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_botones_tool_barParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_botones_tool_barParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_generalParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_mostrar_acciones_campo_generalParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_cabeceraParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_exportar_cabeceraParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_campo_versionParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_exportar_campo_versionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextAreapath_exportarParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarpath_exportarParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_ventanasParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_precargar_ventanasParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_por_usuarioParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_precargar_por_usuarioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_cargar_por_parteParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarcon_cargar_por_parteParametroGeneralUsuario);	
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_empresaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_sucursalParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_ejercicioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_periodoParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_monedaParametroGeneralUsuario);//
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_anioParametroGeneralUsuario);//
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_mesParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_visualParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondoParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondo_bordeParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondo_controlParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fuenteParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_tamanio_control_normalParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_tamanio_control_relacionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_exportarParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.setEnabled(isHabilitar && this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_delimiterParametroGeneralUsuario);
	};
	
	public void setDefaultControlesParametroGeneralUsuario() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoParametroGeneralUsuario(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.parametrogeneralusuarioSessionBean.setConGuardarRelaciones(true);			
			this.parametrogeneralusuarioSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jTabbedPaneRelacionesParametroGeneralUsuario.setVisible(true);
			
					
		} else {
			//this.parametrogeneralusuarioSessionBean.setConGuardarRelaciones(false);			
			this.parametrogeneralusuarioSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jTabbedPaneRelacionesParametroGeneralUsuario.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoParametroGeneralUsuario() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
				if(parametrogeneralusuarioAux.getId().equals(this.iIdNuevoParametroGeneralUsuario)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarios) {
				if(parametrogeneralusuarioAux.getId().equals(this.iIdNuevoParametroGeneralUsuario)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
				if(parametrogeneralusuarioAux.getId().equals(parametrogeneralusuario.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarios) {
				if(parametrogeneralusuarioAux.getId().equals(parametrogeneralusuario.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuarioOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
				if(parametrogeneralusuarioAux.getParametroGeneralUsuarioOriginal().getId().equals(parametrogeneralusuarioOriginal.getId())) {
					existe=true;
					parametrogeneralusuarioOriginal.setId(parametrogeneralusuarioAux.getId());
					parametrogeneralusuarioOriginal.setVersionRow(parametrogeneralusuarioAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarios) {
				if(parametrogeneralusuarioAux.getParametroGeneralUsuarioOriginal().getId().equals(parametrogeneralusuarioOriginal.getId())) {
					existe=true;
					parametrogeneralusuarioOriginal.setId(parametrogeneralusuarioAux.getId());
					parametrogeneralusuarioOriginal.setVersionRow(parametrogeneralusuarioAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosParametroGeneralUsuario(Boolean esParaCancelar) throws Exception {
		parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
		parametrogeneralusuarioAux=new ParametroGeneralUsuario();
		
		if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
					if(parametrogeneralusuarioAux.getId()<0) {
						parametrogeneralusuariosAux.add(parametrogeneralusuarioAux);
					}		
				}
				this.iIdNuevoParametroGeneralUsuario=0L;
				this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().removeAll(parametrogeneralusuariosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarios) {
					if(parametrogeneralusuarioAux.getId()<0) {
						parametrogeneralusuariosAux.add(parametrogeneralusuarioAux);
					}		
				}
				this.iIdNuevoParametroGeneralUsuario=0L;
				this.parametrogeneralusuarios.removeAll(parametrogeneralusuariosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoParametroGeneralUsuario 
					&& this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()>0
					) {
					parametrogeneralusuarioAux=this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().get(this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size() - 1);
				
					if(parametrogeneralusuarioAux.getId()<0) {
						this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().remove(parametrogeneralusuarioAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoParametroGeneralUsuario && this.parametrogeneralusuarios.size()>0) {
					parametrogeneralusuarioAux=this.parametrogeneralusuarios.get(this.parametrogeneralusuarios.size() - 1);
				
					if(parametrogeneralusuarioAux.getId()<0) {
						this.parametrogeneralusuarios.remove(parametrogeneralusuarioAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoParametroGeneralUsuario(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(parametrogeneralusuario.getId()<0) {
				this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().remove(this.parametrogeneralusuario);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(parametrogeneralusuario.getId()<0) {
				this.parametrogeneralusuarios.remove(this.parametrogeneralusuario);
			}
		}			
	}
	
	public void setEstadosInicialesParametroGeneralUsuario(List<ParametroGeneralUsuario> parametrogeneralusuariosAux) throws Exception {
		ParametroGeneralUsuarioConstantesFunciones.setEstadosInicialesParametroGeneralUsuario(parametrogeneralusuariosAux);
	}
	
	public void setEstadosInicialesParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuarioAux) throws Exception {
		ParametroGeneralUsuarioConstantesFunciones.setEstadosInicialesParametroGeneralUsuario(parametrogeneralusuarioAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarParametroGeneralUsuarioActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarParametroGeneralUsuarioActual()) {
				if(!this.isEsNuevoParametroGeneralUsuario) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoParametroGeneralUsuario=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarParametroGeneralUsuarioActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Parametro General ?", "MANTENIMIENTO DE Parametro General", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ParametroGeneralUsuario parametrogeneralusuario) throws Exception {
		ParametroGeneralUsuarioConstantesFunciones.seleccionarAsignar(this.parametrogeneralusuario,parametrogeneralusuario);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarParametroGeneralUsuario=this.isPermisoActualizarOriginalParametroGeneralUsuario;
			
			
			this.seleccionarAsignar(parametrogeneralusuario);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroGeneralUsuarioConstantesFunciones.quitarEspaciosParametroGeneralUsuario(this.parametrogeneralusuario,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.parametrogeneralusuarioSessionBean.setsFuncionBusquedaRapida(this.parametrogeneralusuarioSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoParametroGeneralUsuario) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosParametroGeneralUsuario(esParaCancelar);				
				this.cancelarNuevoParametroGeneralUsuario(esParaCancelar);								
			}
			
			this.parametrogeneralusuario=new ParametroGeneralUsuario();
			
			this.inicializarParametroGeneralUsuario();
			
			this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarParametroGeneralUsuario() throws Exception {
		try {
			ParametroGeneralUsuarioConstantesFunciones.inicializarParametroGeneralUsuario(this.parametrogeneralusuario);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteParametroGeneralUsuarios(String sAccionBusqueda,List<ParametroGeneralUsuario> parametrogeneralusuariosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ParametroGeneralUsuario"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ParametroGeneralUsuarioMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ParametroGeneralUsuarioMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ParametroGeneralUsuario"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Parametro Generales");		
		parameters.put("busquedapor", ParametroGeneralUsuarioConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceParametroGeneralUsuario=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ParametroGeneralUsuarioConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ParametroGeneralUsuarioConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceParametroGeneralUsuario=new JRBeanArrayDataSource(ParametroGeneralUsuarioJInternalFrame.TraerParametroGeneralUsuarioBeans(parametrogeneralusuariosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceParametroGeneralUsuario);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ParametroGeneralUsuarioConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ParametroGeneralUsuarioConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ParametroGeneralUsuarioBean.TraerParametroGeneralUsuarioBeans(parametrogeneralusuariosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteParametroGeneralUsuarios(sAccionBusqueda,sTipoArchivoReporte,parametrogeneralusuariosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalParametroGeneralUsuarios(sAccionBusqueda,sTipoArchivoReporte,parametrogeneralusuariosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoParametroGeneralUsuarioActionPerformed(null);
					//this.generarExcelReporteParametroGeneralUsuarios(sAccionBusqueda,sTipoArchivoReporte,parametrogeneralusuariosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalParametroGeneralUsuarios(sAccionBusqueda,sTipoArchivoReporte,parametrogeneralusuariosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesParametroGeneralUsuarios(sAccionBusqueda,sTipoArchivoReporte,parametrogeneralusuariosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesParametroGeneralUsuarios(sAccionBusqueda,sTipoArchivoReporte,parametrogeneralusuariosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteParametroGeneralUsuarios(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroGeneralUsuario> parametrogeneralusuariosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrogeneralusuario";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroGeneralUsuarios");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroGeneralUsuario("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ParametroGeneralUsuario parametrogeneralusuario : parametrogeneralusuariosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ParametroGeneralUsuarioConstantesFunciones.generarExcelReporteDataParametroGeneralUsuario("NORMAL",row,workbook,parametrogeneralusuario,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderParametroGeneralUsuario(String sTipo,Row row,Workbook workbook) {
		
		ParametroGeneralUsuarioConstantesFunciones.generarExcelReporteHeaderParametroGeneralUsuario(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalParametroGeneralUsuarios(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroGeneralUsuario> parametrogeneralusuariosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrogeneralusuario_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroGeneralUsuarios");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ParametroGeneralUsuario parametrogeneralusuario : parametrogeneralusuariosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.getParametroGeneralUsuarioDescripcion(parametrogeneralusuario));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getfecha_sistema());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getdia());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.gettipovisual_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.gettipofondo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.gettipofondoborde_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.gettipofondocontrol_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.gettipofuente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.gettipotamaniocontrolnormal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.gettipotamaniocontrolrelacion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_tamanio_control_manual()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_tamanio_control_todo_relacion()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_guardar_relaciones()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_mensaje_confirmacion()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_botones_tool_bar()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_mostrar_acciones_campo_general()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.gettipoexportar_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.gettipodelimiter_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_exportar_cabecera()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_exportar_campo_version()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrogeneralusuario.getpath_exportar());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_precargar_ventanas()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_precargar_por_usuario()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrogeneralusuario.getcon_cargar_por_parte()));


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesParametroGeneralUsuarios(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroGeneralUsuario> parametrogeneralusuariosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ParametroGeneralUsuario> parametrogeneralusuariosRespaldo=null;
		
		classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.parametrogeneralusuarioLogic.setDatosCliente(this.datosCliente);
		this.parametrogeneralusuarioLogic.setDatosDeep(this.datosDeep);
		this.parametrogeneralusuarioLogic.setIsConDeep(true);
		
		parametrogeneralusuariosRespaldo=this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios();
		
		this.parametrogeneralusuarioLogic.setParametroGeneralUsuarios(parametrogeneralusuariosParaReportes);	
		this.parametrogeneralusuarioLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		parametrogeneralusuariosParaReportes=this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios();
		this.parametrogeneralusuarioLogic.setParametroGeneralUsuarios(parametrogeneralusuariosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrogeneralusuario_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroGeneralUsuarios");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroGeneralUsuario("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ParametroGeneralUsuario parametrogeneralusuario : parametrogeneralusuariosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderParametroGeneralUsuario("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ParametroGeneralUsuarioConstantesFunciones.generarExcelReporteDataParametroGeneralUsuario("NORMAL",row,workbook,parametrogeneralusuario,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.getParametroGeneralUsuarioDescripcion(parametrogeneralusuario));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessParametroGeneralUsuario() throws Exception {		
		this.startProcessParametroGeneralUsuario(true);
	}
	
	public void startProcessParametroGeneralUsuario(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasParametroGeneralUsuario ,this.jPanelParametrosReportesParametroGeneralUsuario, this.jScrollPanelDatosParametroGeneralUsuario,this.jPanelPaginacionParametroGeneralUsuario, this.jScrollPanelDatosEdicionParametroGeneralUsuario, this.jPanelAccionesParametroGeneralUsuario,this.jPanelAccionesFormularioParametroGeneralUsuario,this.jmenuBarParametroGeneralUsuario,this.jmenuBarDetalleParametroGeneralUsuario,this.jTtoolBarParametroGeneralUsuario,this.jTtoolBarDetalleParametroGeneralUsuario);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroGeneralUsuario=this.jTabbedPaneBusquedasParametroGeneralUsuario; 
		
		final JPanel jPanelParametrosReportesParametroGeneralUsuario=this.jPanelParametrosReportesParametroGeneralUsuario;
		//final JScrollPane jScrollPanelDatosParametroGeneralUsuario=this.jScrollPanelDatosParametroGeneralUsuario;
		final JTable jTableDatosParametroGeneralUsuario=this.jTableDatosParametroGeneralUsuario;		
		final JPanel jPanelPaginacionParametroGeneralUsuario=this.jPanelPaginacionParametroGeneralUsuario;
		//final JScrollPane jScrollPanelDatosEdicionParametroGeneralUsuario=this.jScrollPanelDatosEdicionParametroGeneralUsuario;
		final JPanel jPanelAccionesParametroGeneralUsuario=this.jPanelAccionesParametroGeneralUsuario;
		
		JPanel jPanelCamposAuxiliarParametroGeneralUsuario=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarParametroGeneralUsuario=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			jPanelCamposAuxiliarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelCamposParametroGeneralUsuario;
			jPanelAccionesFormularioAuxiliarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelAccionesFormularioParametroGeneralUsuario;
		}
		
		final JPanel jPanelCamposParametroGeneralUsuario=jPanelCamposAuxiliarParametroGeneralUsuario;
		final JPanel jPanelAccionesFormularioParametroGeneralUsuario=jPanelAccionesFormularioAuxiliarParametroGeneralUsuario;
		
		
		final JMenuBar jmenuBarParametroGeneralUsuario=this.jmenuBarParametroGeneralUsuario;
		final JToolBar jTtoolBarParametroGeneralUsuario=this.jTtoolBarParametroGeneralUsuario;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarParametroGeneralUsuario=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroGeneralUsuario=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			jmenuBarDetalleAuxiliarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jmenuBarDetalleParametroGeneralUsuario;
			jTtoolBarDetalleAuxiliarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jTtoolBarDetalleParametroGeneralUsuario;
		}
		
		final JMenuBar jmenuBarDetalleParametroGeneralUsuario=jmenuBarDetalleAuxiliarParametroGeneralUsuario;
		final JToolBar jTtoolBarDetalleParametroGeneralUsuario=jTtoolBarDetalleAuxiliarParametroGeneralUsuario;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroGeneralUsuario;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroGeneralUsuario;
			processRunnable.jTableDatos=jTableDatosParametroGeneralUsuario;
			processRunnable.jPanelCampos=jPanelCamposParametroGeneralUsuario;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroGeneralUsuario;
			processRunnable.jPanelAcciones=jPanelAccionesParametroGeneralUsuario;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroGeneralUsuario;
			
			
			processRunnable.jmenuBar=jmenuBarParametroGeneralUsuario;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroGeneralUsuario;
			processRunnable.jTtoolBar=jTtoolBarParametroGeneralUsuario;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroGeneralUsuario;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroGeneralUsuario ,jPanelParametrosReportesParametroGeneralUsuario,jTableDatosParametroGeneralUsuario, /*jScrollPanelDatosParametroGeneralUsuario,*/jPanelCamposParametroGeneralUsuario,jPanelPaginacionParametroGeneralUsuario, /*jScrollPanelDatosEdicionParametroGeneralUsuario,*/ jPanelAccionesParametroGeneralUsuario,jPanelAccionesFormularioParametroGeneralUsuario,jmenuBarParametroGeneralUsuario,jmenuBarDetalleParametroGeneralUsuario,jTtoolBarParametroGeneralUsuario,jTtoolBarDetalleParametroGeneralUsuario);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroGeneralUsuario ,jPanelParametrosReportesParametroGeneralUsuario, jScrollPanelDatosParametroGeneralUsuario,jPanelPaginacionParametroGeneralUsuario, jScrollPanelDatosEdicionParametroGeneralUsuario, jPanelAccionesParametroGeneralUsuario,jPanelAccionesFormularioParametroGeneralUsuario,jmenuBarParametroGeneralUsuario,jmenuBarDetalleParametroGeneralUsuario,jTtoolBarParametroGeneralUsuario,jTtoolBarDetalleParametroGeneralUsuario);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessParametroGeneralUsuario() {// throws Exception 
		this.finishProcessParametroGeneralUsuario(true);
	}
	
	public void finishProcessParametroGeneralUsuario(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasParametroGeneralUsuario ,this.jPanelParametrosReportesParametroGeneralUsuario, this.jScrollPanelDatosParametroGeneralUsuario,this.jPanelPaginacionParametroGeneralUsuario, this.jScrollPanelDatosEdicionParametroGeneralUsuario, this.jPanelAccionesParametroGeneralUsuario,this.jPanelAccionesFormularioParametroGeneralUsuario,this.jmenuBarParametroGeneralUsuario,this.jmenuBarDetalleParametroGeneralUsuario,this.jTtoolBarParametroGeneralUsuario,this.jTtoolBarDetalleParametroGeneralUsuario);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroGeneralUsuario=this.jTabbedPaneBusquedasParametroGeneralUsuario; 
		
		final JPanel jPanelParametrosReportesParametroGeneralUsuario=this.jPanelParametrosReportesParametroGeneralUsuario;
		//final JScrollPane jScrollPanelDatosParametroGeneralUsuario=this.jScrollPanelDatosParametroGeneralUsuario;
		final JTable jTableDatosParametroGeneralUsuario=this.jTableDatosParametroGeneralUsuario;		
		final JPanel jPanelPaginacionParametroGeneralUsuario=this.jPanelPaginacionParametroGeneralUsuario;
		//final JScrollPane jScrollPanelDatosEdicionParametroGeneralUsuario=this.jScrollPanelDatosEdicionParametroGeneralUsuario;
		final JPanel jPanelAccionesParametroGeneralUsuario=this.jPanelAccionesParametroGeneralUsuario;
		
		JPanel jPanelCamposAuxiliarParametroGeneralUsuario=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarParametroGeneralUsuario=new JPanel();
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			jPanelCamposAuxiliarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelCamposParametroGeneralUsuario;
			jPanelAccionesFormularioAuxiliarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelAccionesFormularioParametroGeneralUsuario;
		}
		
		final JPanel jPanelCamposParametroGeneralUsuario=jPanelCamposAuxiliarParametroGeneralUsuario;
		final JPanel jPanelAccionesFormularioParametroGeneralUsuario=jPanelAccionesFormularioAuxiliarParametroGeneralUsuario;
		
		
		final JMenuBar jmenuBarParametroGeneralUsuario=this.jmenuBarParametroGeneralUsuario;		
		final JToolBar jTtoolBarParametroGeneralUsuario=this.jTtoolBarParametroGeneralUsuario;
				
		JMenuBar jmenuBarDetalleAuxiliarParametroGeneralUsuario=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroGeneralUsuario=new JToolBar();
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			jmenuBarDetalleAuxiliarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jmenuBarDetalleParametroGeneralUsuario;
			jTtoolBarDetalleAuxiliarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jTtoolBarDetalleParametroGeneralUsuario;		
		}
		
		final JMenuBar jmenuBarDetalleParametroGeneralUsuario=jmenuBarDetalleAuxiliarParametroGeneralUsuario;
		final JToolBar jTtoolBarDetalleParametroGeneralUsuario=jTtoolBarDetalleAuxiliarParametroGeneralUsuario;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroGeneralUsuario;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroGeneralUsuario;
			processRunnable.jTableDatos=jTableDatosParametroGeneralUsuario;
			processRunnable.jPanelCampos=jPanelCamposParametroGeneralUsuario;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroGeneralUsuario;
			processRunnable.jPanelAcciones=jPanelAccionesParametroGeneralUsuario;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroGeneralUsuario;
			
			
			processRunnable.jmenuBar=jmenuBarParametroGeneralUsuario;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroGeneralUsuario;
			processRunnable.jTtoolBar=jTtoolBarParametroGeneralUsuario;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroGeneralUsuario;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasParametroGeneralUsuario ,jPanelParametrosReportesParametroGeneralUsuario, jTableDatosParametroGeneralUsuario,/*jScrollPanelDatosParametroGeneralUsuario,*/jPanelCamposParametroGeneralUsuario,jPanelPaginacionParametroGeneralUsuario, /*jScrollPanelDatosEdicionParametroGeneralUsuario,*/ jPanelAccionesParametroGeneralUsuario,jPanelAccionesFormularioParametroGeneralUsuario,jmenuBarParametroGeneralUsuario,jmenuBarDetalleParametroGeneralUsuario,jTtoolBarParametroGeneralUsuario,jTtoolBarDetalleParametroGeneralUsuario));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesParametroGeneralUsuario(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarParametroGeneralUsuario(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuParametroGeneralUsuario(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarParametroGeneralUsuario(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarParametroGeneralUsuario,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleParametroGeneralUsuario,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuParametroGeneralUsuario(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarParametroGeneralUsuario,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleParametroGeneralUsuario,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.parametrogeneralusuarioConstantesFunciones.getsFinalQueryParametroGeneralUsuario();
		String  finalQueryPaginacionTodos=this.parametrogeneralusuarioConstantesFunciones.getsFinalQueryParametroGeneralUsuario();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ParametroGeneralUsuarioConstantesFunciones.getArrayColumnasGlobalesNoParametroGeneralUsuario(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ParametroGeneralUsuarioConstantesFunciones.getArrayColumnasGlobalesParametroGeneralUsuario(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ParametroGeneralUsuarioConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.parametrogeneralusuariosEliminados= new ArrayList<ParametroGeneralUsuario>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessParametroGeneralUsuario();
		
				///*ParametroGeneralUsuarioSessionBean*/this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			
			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ParametroGeneralUsuarioConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ParametroGeneralUsuarioConstantesFunciones.getClassesForeignKeysOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/parametrogeneralusuario."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			parametrogeneralusuariosAux= new ArrayList<ParametroGeneralUsuario>();
			
				
			parametrogeneralusuarioLogic.setDatosCliente(this.datosCliente);
			parametrogeneralusuarioLogic.setDatosDeep(this.datosDeep);
			parametrogeneralusuarioLogic.setIsConDeep(true);
			
			
			parametrogeneralusuarioLogic.getParametroGeneralUsuarioDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					parametrogeneralusuarioLogic.getTodosParametroGeneralUsuarios(finalQueryGlobal,pagination);
					
					//parametrogeneralusuarioLogic.getTodosParametroGeneralUsuariosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null|| parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrogeneralusuariosAux= new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux= new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrogeneralusuarioLogic.getTodosParametroGeneralUsuarios(finalQueryGlobal+"",this.pagination);												
							
							//parametrogeneralusuarioLogic.getTodosParametroGeneralUsuariosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteParametroGeneralUsuarios("Todos",parametrogeneralusuarioLogic.getParametroGeneralUsuarios() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());					
							parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idParametroGeneralUsuario=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idParametroGeneralUsuario=this.idActual;
				
				} else if(this.idParametroGeneralUsuarioActual!=null && this.idParametroGeneralUsuarioActual!=0L) {
					idParametroGeneralUsuario=idParametroGeneralUsuarioActual;
				}
				
					
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndicePorId(idParametroGeneralUsuario);
				
				this.parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					parametrogeneralusuarioLogic.getEntity(idParametroGeneralUsuario);
					
					//parametrogeneralusuarioLogic.getEntityWithConnection(idParametroGeneralUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
					parametrogeneralusuarioLogic.getParametroGeneralUsuarios().add(parametrogeneralusuarioLogic.getParametroGeneralUsuario());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
					this.parametrogeneralusuarios.add(parametrogeneralusuario);
				}
				
				if(parametrogeneralusuarioLogic.getParametroGeneralUsuario()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdEmpresa",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdEmpresa",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdMoneda",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdMoneda",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDelimiter")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoDelimiter(id_tipo_delimiterFK_IdTipoDelimiter);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoDelimiter(finalQueryGlobal,pagination,id_tipo_delimiterFK_IdTipoDelimiter);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoDelimiter(id_tipo_delimiterFK_IdTipoDelimiter);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoDelimiter(id_tipo_delimiterFK_IdTipoDelimiter);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoDelimiter(finalQueryGlobal,pagination,id_tipo_delimiterFK_IdTipoDelimiter);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoDelimiter(id_tipo_delimiterFK_IdTipoDelimiter);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoDelimiter(id_tipo_delimiterFK_IdTipoDelimiter);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoDelimiter",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoDelimiter",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoExportar")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoExportar(id_tipo_exportarFK_IdTipoExportar);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoExportar(finalQueryGlobal,pagination,id_tipo_exportarFK_IdTipoExportar);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoExportar(id_tipo_exportarFK_IdTipoExportar);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoExportar(id_tipo_exportarFK_IdTipoExportar);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoExportar(finalQueryGlobal,pagination,id_tipo_exportarFK_IdTipoExportar);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoExportar(id_tipo_exportarFK_IdTipoExportar);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoExportar(id_tipo_exportarFK_IdTipoExportar);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoExportar",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoExportar",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoFondo")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondo(id_tipo_fondoFK_IdTipoFondo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFondo(finalQueryGlobal,pagination,id_tipo_fondoFK_IdTipoFondo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondo(id_tipo_fondoFK_IdTipoFondo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondo(id_tipo_fondoFK_IdTipoFondo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFondo(finalQueryGlobal,pagination,id_tipo_fondoFK_IdTipoFondo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondo(id_tipo_fondoFK_IdTipoFondo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondo(id_tipo_fondoFK_IdTipoFondo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoFondo",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoFondo",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoFondoBorde")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoBorde(id_tipo_fondo_bordeFK_IdTipoFondoBorde);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFondoBorde(finalQueryGlobal,pagination,id_tipo_fondo_bordeFK_IdTipoFondoBorde);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoBorde(id_tipo_fondo_bordeFK_IdTipoFondoBorde);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoBorde(id_tipo_fondo_bordeFK_IdTipoFondoBorde);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFondoBorde(finalQueryGlobal,pagination,id_tipo_fondo_bordeFK_IdTipoFondoBorde);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoBorde(id_tipo_fondo_bordeFK_IdTipoFondoBorde);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoBorde(id_tipo_fondo_bordeFK_IdTipoFondoBorde);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoFondoBorde",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoFondoBorde",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoFondoControl")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoControl(id_tipo_fondo_controlFK_IdTipoFondoControl);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFondoControl(finalQueryGlobal,pagination,id_tipo_fondo_controlFK_IdTipoFondoControl);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoControl(id_tipo_fondo_controlFK_IdTipoFondoControl);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoControl(id_tipo_fondo_controlFK_IdTipoFondoControl);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFondoControl(finalQueryGlobal,pagination,id_tipo_fondo_controlFK_IdTipoFondoControl);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoControl(id_tipo_fondo_controlFK_IdTipoFondoControl);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFondoControl(id_tipo_fondo_controlFK_IdTipoFondoControl);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoFondoControl",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoFondoControl",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoFuente")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFuente(id_tipo_fuenteFK_IdTipoFuente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFuente(finalQueryGlobal,pagination,id_tipo_fuenteFK_IdTipoFuente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFuente(id_tipo_fuenteFK_IdTipoFuente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFuente(id_tipo_fuenteFK_IdTipoFuente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFuente(finalQueryGlobal,pagination,id_tipo_fuenteFK_IdTipoFuente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFuente(id_tipo_fuenteFK_IdTipoFuente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoFuente(id_tipo_fuenteFK_IdTipoFuente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoFuente",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoFuente",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTamanioControlNormal")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlNormal(id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoTamanioControlNormal(finalQueryGlobal,pagination,id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlNormal(id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlNormal(id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoTamanioControlNormal(finalQueryGlobal,pagination,id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlNormal(id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlNormal(id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoTamanioControlNormal",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoTamanioControlNormal",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTamanioControlRelacion")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlRelacion(id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoTamanioControlRelacion(finalQueryGlobal,pagination,id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlRelacion(id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlRelacion(id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoTamanioControlRelacion(finalQueryGlobal,pagination,id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlRelacion(id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdTipoTamanioControlRelacion(id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoTamanioControlRelacion",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdTipoTamanioControlRelacion",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()==null||parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrogeneralusuarios==null|| parametrogeneralusuarios.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
						parametrogeneralusuariosAux.addAll(parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuariosAux=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuariosAux.addAll(parametrogeneralusuarios);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroGeneralUsuarioConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroGeneralUsuarios("FK_IdUsuario",parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroGeneralUsuarios("FK_IdUsuario",parametrogeneralusuarios);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioLogic.setParametroGeneralUsuarios(new ArrayList<ParametroGeneralUsuario>());
						parametrogeneralusuarioLogic.getParametroGeneralUsuarios().addAll(parametrogeneralusuariosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarios=new ArrayList<ParametroGeneralUsuario>();
							parametrogeneralusuarios.addAll(parametrogeneralusuariosAux);
						}
						//ARCHITECTURE
					}
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					Boolean isTieneDatosParametroGeneralUsuario=true;
					isTieneDatosParametroGeneralUsuario=parametrogeneralusuarioLogic.getParametroGeneralUsuarios()!=null && parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()>0;

					if(isTieneDatosParametroGeneralUsuario) {
					}
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					if(parametrogeneralusuarios!=null && parametrogeneralusuarios.size()>0) {
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesParametroGeneralUsuario();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessParametroGeneralUsuario();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrogeneralusuarios.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrogeneralusuarios.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ParametroGeneralUsuario parametrogeneralusuario) {
		Boolean permite=true;
		
		if(this.parametrogeneralusuario.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ParametroGeneralUsuarioConstantesFunciones.getOrderByListaParametroGeneralUsuario();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ParametroGeneralUsuarioConstantesFunciones.getOrderByListaParametroGeneralUsuario();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
				if(parametrogeneralusuario.getsType().equals(Constantes2.S_TOTALES)) {
					parametrogeneralusuarioTotales=parametrogeneralusuario;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroGeneralUsuario parametrogeneralusuario:this.parametrogeneralusuarios) {
				if(parametrogeneralusuario.getsType().equals(Constantes2.S_TOTALES)) {
					parametrogeneralusuarioTotales=parametrogeneralusuario;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		parametrogeneralusuarioTotales=new ParametroGeneralUsuario();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().remove(parametrogeneralusuarioTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrogeneralusuarios.remove(parametrogeneralusuarioTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		parametrogeneralusuarioTotales=new ParametroGeneralUsuario();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
				if(parametrogeneralusuario.getsType().equals(Constantes2.S_TOTALES)) {
					parametrogeneralusuarioTotales=parametrogeneralusuario;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroGeneralUsuarioConstantesFunciones.TotalizarValoresFilaParametroGeneralUsuario(this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios(),parametrogeneralusuarioTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroGeneralUsuario parametrogeneralusuario:this.parametrogeneralusuarios) {
				if(parametrogeneralusuario.getsType().equals(Constantes2.S_TOTALES)) {
					parametrogeneralusuarioTotales=parametrogeneralusuario;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroGeneralUsuarioConstantesFunciones.TotalizarValoresFilaParametroGeneralUsuario(this.parametrogeneralusuarios,parametrogeneralusuarioTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getParametroGeneralUsuariosFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoDelimiter()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDelimiter";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoExportar()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoExportar";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoFondo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoFondo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoFondoBorde()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoFondoBorde";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoFondoControl()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoFondoControl";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoFuente()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoFuente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoTamanioControlNormal()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTamanioControlNormal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoTamanioControlRelacion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTamanioControlRelacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoVisual()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoVisual";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroGeneralUsuariosFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getParametroGeneralUsuariosFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoDelimiter(String sFinalQuery,Long id_tipo_delimiter)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoDelimiter(sFinalQuery,this.pagination,id_tipo_delimiter);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoExportar(String sFinalQuery,Long id_tipo_exportar)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoExportar(sFinalQuery,this.pagination,id_tipo_exportar);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoFondo(String sFinalQuery,Long id_tipo_fondo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFondo(sFinalQuery,this.pagination,id_tipo_fondo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoFondoBorde(String sFinalQuery,Long id_tipo_fondo_borde)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFondoBorde(sFinalQuery,this.pagination,id_tipo_fondo_borde);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoFondoControl(String sFinalQuery,Long id_tipo_fondo_control)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFondoControl(sFinalQuery,this.pagination,id_tipo_fondo_control);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoFuente(String sFinalQuery,Long id_tipo_fuente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoFuente(sFinalQuery,this.pagination,id_tipo_fuente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoTamanioControlNormal(String sFinalQuery,Long id_tipo_tamanio_control_normal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoTamanioControlNormal(sFinalQuery,this.pagination,id_tipo_tamanio_control_normal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoTamanioControlRelacion(String sFinalQuery,Long id_tipo_tamanio_control_relacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoTamanioControlRelacion(sFinalQuery,this.pagination,id_tipo_tamanio_control_relacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdTipoVisual(String sFinalQuery,Long id_tipo_visual)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdTipoVisual(sFinalQuery,this.pagination,id_tipo_visual);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroGeneralUsuariosFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLogic.getParametroGeneralUsuariosFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosParametroGeneralUsuario() {
		this.isPermisoTodoParametroGeneralUsuario=false;
		this.isPermisoNuevoParametroGeneralUsuario=false;
		this.isPermisoActualizarParametroGeneralUsuario=false;
		this.isPermisoActualizarOriginalParametroGeneralUsuario=false;
		this.isPermisoEliminarParametroGeneralUsuario=false;
		this.isPermisoGuardarCambiosParametroGeneralUsuario=false;
		this.isPermisoConsultaParametroGeneralUsuario=false;
		this.isPermisoBusquedaParametroGeneralUsuario=false;
		this.isPermisoReporteParametroGeneralUsuario=false;		
		this.isPermisoOrdenParametroGeneralUsuario=false;		
		this.isPermisoPaginacionMedioParametroGeneralUsuario=false;		
		this.isPermisoPaginacionAltoParametroGeneralUsuario=false;
		this.isPermisoPaginacionTodoParametroGeneralUsuario=false;
		this.isPermisoCopiarParametroGeneralUsuario=false;		
		this.isPermisoVerFormParametroGeneralUsuario=false;		
		this.isPermisoDuplicarParametroGeneralUsuario=false;		
		this.isPermisoOrdenParametroGeneralUsuario=false;		
	}
	
	public void setPermisosUsuarioParametroGeneralUsuario(Boolean isPermiso) {
		this.isPermisoTodoParametroGeneralUsuario=isPermiso;
		this.isPermisoNuevoParametroGeneralUsuario=isPermiso;
		this.isPermisoActualizarParametroGeneralUsuario=isPermiso;
		this.isPermisoActualizarOriginalParametroGeneralUsuario=isPermiso;
		this.isPermisoEliminarParametroGeneralUsuario=isPermiso;
		this.isPermisoGuardarCambiosParametroGeneralUsuario=isPermiso;
		this.isPermisoConsultaParametroGeneralUsuario=isPermiso;
		this.isPermisoBusquedaParametroGeneralUsuario=isPermiso;
		this.isPermisoReporteParametroGeneralUsuario=isPermiso;
		this.isPermisoOrdenParametroGeneralUsuario=isPermiso;		
		this.isPermisoPaginacionMedioParametroGeneralUsuario=isPermiso;		
		this.isPermisoPaginacionAltoParametroGeneralUsuario=isPermiso;		
		this.isPermisoPaginacionTodoParametroGeneralUsuario=isPermiso;		
		this.isPermisoCopiarParametroGeneralUsuario=isPermiso;		
		this.isPermisoVerFormParametroGeneralUsuario=isPermiso;		
		this.isPermisoDuplicarParametroGeneralUsuario=isPermiso;
		this.isPermisoOrdenParametroGeneralUsuario=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioParametroGeneralUsuario(Boolean isPermiso) {
		//this.isPermisoTodoParametroGeneralUsuario=isPermiso;
		this.isPermisoNuevoParametroGeneralUsuario=isPermiso;
		this.isPermisoActualizarParametroGeneralUsuario=isPermiso;
		this.isPermisoActualizarOriginalParametroGeneralUsuario=isPermiso;
		this.isPermisoEliminarParametroGeneralUsuario=isPermiso;
		this.isPermisoGuardarCambiosParametroGeneralUsuario=isPermiso;
		//this.isPermisoConsultaParametroGeneralUsuario=isPermiso;
		//this.isPermisoBusquedaParametroGeneralUsuario=isPermiso;
		//this.isPermisoReporteParametroGeneralUsuario=isPermiso;
		//this.isPermisoOrdenParametroGeneralUsuario=isPermiso;		
		//this.isPermisoPaginacionMedioParametroGeneralUsuario=isPermiso;		
		//this.isPermisoPaginacionAltoParametroGeneralUsuario=isPermiso;		
		//this.isPermisoPaginacionTodoParametroGeneralUsuario=isPermiso;		
		//this.isPermisoCopiarParametroGeneralUsuario=isPermiso;		
		//this.isPermisoDuplicarParametroGeneralUsuario=isPermiso;
		//this.isPermisoOrdenParametroGeneralUsuario=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioParametroGeneralUsuarioClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ParametroGeneralUsuarioJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioParametroGeneralUsuarioClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioParametroGeneralUsuarioClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionParametroGeneralUsuarioClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioParametroGeneralUsuarioClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioParametroGeneralUsuario() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ParametroGeneralUsuarioJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ParametroGeneralUsuarioConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoParametroGeneralUsuario=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarParametroGeneralUsuario=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalParametroGeneralUsuario=this.isPermisoActualizarParametroGeneralUsuario;
			this.isPermisoEliminarParametroGeneralUsuario=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosParametroGeneralUsuario=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaParametroGeneralUsuario=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaParametroGeneralUsuario=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoParametroGeneralUsuario=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteParametroGeneralUsuario=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroGeneralUsuario=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioParametroGeneralUsuario=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoParametroGeneralUsuario=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoParametroGeneralUsuario=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarParametroGeneralUsuario=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormParametroGeneralUsuario=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarParametroGeneralUsuario=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroGeneralUsuario=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosParametroGeneralUsuario.setToolTipText(this.jTableDatosParametroGeneralUsuario.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioParametroGeneralUsuario(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioParametroGeneralUsuario(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ParametroGeneralUsuarioJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ParametroGeneralUsuarioJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioParametroGeneralUsuario() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyParametroGeneralUsuarioListas()throws Exception {
		try	{						
			
				this.usuariosForeignKey=new ArrayList();
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.tipovisualsForeignKey=new ArrayList();
				this.tipofondosForeignKey=new ArrayList();
				this.tipofondobordesForeignKey=new ArrayList();
				this.tipofondocontrolsForeignKey=new ArrayList();
				this.tipofuentesForeignKey=new ArrayList();
				this.tipotamaniocontrolnormalsForeignKey=new ArrayList();
				this.tipotamaniocontrolrelacionsForeignKey=new ArrayList();
				this.tipoexportarsForeignKey=new ArrayList();
				this.tipodelimitersForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyParametroGeneralUsuarioListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ParametroGeneralUsuarioJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyParametroGeneralUsuarioListas(false);
			} else {
			
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoVisualListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoFondoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoFondoBordeListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoFondoControlListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoFuenteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTamanioControlNormalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTamanioControlRelacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoExportarListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDelimiterListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoVisualListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipovisualsForeignKey==null||this.tipovisualsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoVisualConstantesFunciones.getArrayColumnasGlobalesTipoVisual(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoVisualConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoVisualConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoVisualsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFondoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipofondosForeignKey==null||this.tipofondosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoFondoConstantesFunciones.getArrayColumnasGlobalesTipoFondo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFondoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoFondoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoFondosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFondoBordeListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipofondobordesForeignKey==null||this.tipofondobordesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoFondoConstantesFunciones.getArrayColumnasGlobalesTipoFondo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFondoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoFondoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoFondoBordesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFondoControlListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipofondocontrolsForeignKey==null||this.tipofondocontrolsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoFondoControlConstantesFunciones.getArrayColumnasGlobalesTipoFondoControl(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFondoControlConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoFondoControlConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoFondoControlsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFuenteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipofuentesForeignKey==null||this.tipofuentesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoFuenteConstantesFunciones.getArrayColumnasGlobalesTipoFuente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFuenteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoFuenteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoFuentesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTamanioControlNormalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotamaniocontrolnormalsForeignKey==null||this.tipotamaniocontrolnormalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTamanioControlConstantesFunciones.getArrayColumnasGlobalesTipoTamanioControl(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTamanioControlConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTamanioControlConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTamanioControlNormalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTamanioControlRelacionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotamaniocontrolrelacionsForeignKey==null||this.tipotamaniocontrolrelacionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTamanioControlConstantesFunciones.getArrayColumnasGlobalesTipoTamanioControl(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTamanioControlConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTamanioControlConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTamanioControlRelacionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoExportarListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoexportarsForeignKey==null||this.tipoexportarsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoExportarConstantesFunciones.getArrayColumnasGlobalesTipoExportar(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoExportarConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoExportarConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoExportarsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDelimiterListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodelimitersForeignKey==null||this.tipodelimitersForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDelimiterConstantesFunciones.getArrayColumnasGlobalesTipoDelimiter(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDelimiterConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDelimiterConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDelimitersForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyParametroGeneralUsuarioListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ParametroGeneralUsuarioParameterReturnGeneral parametrogeneralusuarioReturnGeneral=new ParametroGeneralUsuarioParameterReturnGeneral();
						
			


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_usuarioParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_usuarioParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_empresaParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_empresaParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(cargarCombosDependencia && ((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_sucursalParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_sucursalParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(cargarCombosDependencia && ((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_ejercicioParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_ejercicioParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(cargarCombosDependencia && ((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_periodoParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_periodoParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_monedaParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_monedaParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_anioParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_anioParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_mesParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_mesParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalTipoVisual="";

				if(((this.tipovisualsForeignKey==null||this.tipovisualsForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_visualParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_visualParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoVisual()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoVisualConstantesFunciones.getArrayColumnasGlobalesTipoVisual(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoVisual=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoVisualConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoVisual=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoVisual, "");
						finalQueryGlobalTipoVisual+=TipoVisualConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoVisualsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoVisual=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidTipoVisualActual();
					}
				} else {
					finalQueryGlobalTipoVisual="NONE";
				}


				String finalQueryGlobalTipoFondo="";

				if(((this.tipofondosForeignKey==null||this.tipofondosForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fondoParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fondoParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFondo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoFondoConstantesFunciones.getArrayColumnasGlobalesTipoFondo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoFondo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFondoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoFondo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoFondo, "");
						finalQueryGlobalTipoFondo+=TipoFondoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoFondosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoFondo=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidTipoFondoActual();
					}
				} else {
					finalQueryGlobalTipoFondo="NONE";
				}


				String finalQueryGlobalTipoFondoBorde="";

				if(((this.tipofondobordesForeignKey==null||this.tipofondobordesForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fondo_bordeParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fondo_bordeParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFondoBorde()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoFondoConstantesFunciones.getArrayColumnasGlobalesTipoFondo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoFondoBorde=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFondoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoFondoBorde=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoFondoBorde, "");
						finalQueryGlobalTipoFondoBorde+=TipoFondoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoFondoBordesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoFondoBorde=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidTipoFondoBordeActual();
					}
				} else {
					finalQueryGlobalTipoFondoBorde="NONE";
				}


				String finalQueryGlobalTipoFondoControl="";

				if(((this.tipofondocontrolsForeignKey==null||this.tipofondocontrolsForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fondo_controlParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fondo_controlParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFondoControl()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoFondoControlConstantesFunciones.getArrayColumnasGlobalesTipoFondoControl(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoFondoControl=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFondoControlConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoFondoControl=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoFondoControl, "");
						finalQueryGlobalTipoFondoControl+=TipoFondoControlConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoFondoControlsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoFondoControl=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidTipoFondoControlActual();
					}
				} else {
					finalQueryGlobalTipoFondoControl="NONE";
				}


				String finalQueryGlobalTipoFuente="";

				if(((this.tipofuentesForeignKey==null||this.tipofuentesForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fuenteParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fuenteParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFuente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoFuenteConstantesFunciones.getArrayColumnasGlobalesTipoFuente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoFuente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFuenteConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoFuente=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoFuente, "");
						finalQueryGlobalTipoFuente+=TipoFuenteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoFuentesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoFuente=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidTipoFuenteActual();
					}
				} else {
					finalQueryGlobalTipoFuente="NONE";
				}


				String finalQueryGlobalTipoTamanioControlNormal="";

				if(((this.tipotamaniocontrolnormalsForeignKey==null||this.tipotamaniocontrolnormalsForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_tamanio_control_normalParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_tamanio_control_normalParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoTamanioControlNormal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTamanioControlConstantesFunciones.getArrayColumnasGlobalesTipoTamanioControl(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoTamanioControlNormal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTamanioControlConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTamanioControlNormal=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTamanioControlNormal, "");
						finalQueryGlobalTipoTamanioControlNormal+=TipoTamanioControlConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTamanioControlNormalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTamanioControlNormal=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidTipoTamanioControlNormalActual();
					}
				} else {
					finalQueryGlobalTipoTamanioControlNormal="NONE";
				}


				String finalQueryGlobalTipoTamanioControlRelacion="";

				if(((this.tipotamaniocontrolrelacionsForeignKey==null||this.tipotamaniocontrolrelacionsForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_tamanio_control_relacionParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_tamanio_control_relacionParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoTamanioControlRelacion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTamanioControlConstantesFunciones.getArrayColumnasGlobalesTipoTamanioControl(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoTamanioControlRelacion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTamanioControlConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTamanioControlRelacion=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTamanioControlRelacion, "");
						finalQueryGlobalTipoTamanioControlRelacion+=TipoTamanioControlConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTamanioControlRelacionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTamanioControlRelacion=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidTipoTamanioControlRelacionActual();
					}
				} else {
					finalQueryGlobalTipoTamanioControlRelacion="NONE";
				}


				String finalQueryGlobalTipoExportar="";

				if(((this.tipoexportarsForeignKey==null||this.tipoexportarsForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_exportarParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_exportarParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoExportar()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoExportarConstantesFunciones.getArrayColumnasGlobalesTipoExportar(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoExportar=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoExportarConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoExportar=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoExportar, "");
						finalQueryGlobalTipoExportar+=TipoExportarConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoExportarsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoExportar=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidTipoExportarActual();
					}
				} else {
					finalQueryGlobalTipoExportar="NONE";
				}


				String finalQueryGlobalTipoDelimiter="";

				if(((this.tipodelimitersForeignKey==null||this.tipodelimitersForeignKey.size()<=0) && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_delimiterParametroGeneralUsuario)
					 || (this.esRecargarFks && this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_delimiterParametroGeneralUsuario)) {

					if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoDelimiter()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDelimiterConstantesFunciones.getArrayColumnasGlobalesTipoDelimiter(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDelimiter=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDelimiterConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDelimiter=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDelimiter, "");
						finalQueryGlobalTipoDelimiter+=TipoDelimiterConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDelimitersForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDelimiter=" WHERE " + ConstantesSql.ID + "="+parametrogeneralusuarioSessionBean.getlidTipoDelimiterActual();
					}
				} else {
					finalQueryGlobalTipoDelimiter="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				parametrogeneralusuarioReturnGeneral=parametrogeneralusuarioLogic.cargarCombosLoteForeignKeyParametroGeneralUsuario(finalQueryGlobalUsuario,finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalMoneda,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalTipoVisual,finalQueryGlobalTipoFondo,finalQueryGlobalTipoFondoBorde,finalQueryGlobalTipoFondoControl,finalQueryGlobalTipoFuente,finalQueryGlobalTipoTamanioControlNormal,finalQueryGlobalTipoTamanioControlRelacion,finalQueryGlobalTipoExportar,finalQueryGlobalTipoDelimiter);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=parametrogeneralusuarioReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=parametrogeneralusuarioReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=parametrogeneralusuarioReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=parametrogeneralusuarioReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=parametrogeneralusuarioReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=parametrogeneralusuarioReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=parametrogeneralusuarioReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=parametrogeneralusuarioReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalTipoVisual.equals("NONE")) {
				this.tipovisualsForeignKey=parametrogeneralusuarioReturnGeneral.gettipovisualsForeignKey();
			}

			if(!finalQueryGlobalTipoFondo.equals("NONE")) {
				this.tipofondosForeignKey=parametrogeneralusuarioReturnGeneral.gettipofondosForeignKey();
			}

			if(!finalQueryGlobalTipoFondoBorde.equals("NONE")) {
				this.tipofondobordesForeignKey=parametrogeneralusuarioReturnGeneral.gettipofondobordesForeignKey();
			}

			if(!finalQueryGlobalTipoFondoControl.equals("NONE")) {
				this.tipofondocontrolsForeignKey=parametrogeneralusuarioReturnGeneral.gettipofondocontrolsForeignKey();
			}

			if(!finalQueryGlobalTipoFuente.equals("NONE")) {
				this.tipofuentesForeignKey=parametrogeneralusuarioReturnGeneral.gettipofuentesForeignKey();
			}

			if(!finalQueryGlobalTipoTamanioControlNormal.equals("NONE")) {
				this.tipotamaniocontrolnormalsForeignKey=parametrogeneralusuarioReturnGeneral.gettipotamaniocontrolnormalsForeignKey();
			}

			if(!finalQueryGlobalTipoTamanioControlRelacion.equals("NONE")) {
				this.tipotamaniocontrolrelacionsForeignKey=parametrogeneralusuarioReturnGeneral.gettipotamaniocontrolrelacionsForeignKey();
			}

			if(!finalQueryGlobalTipoExportar.equals("NONE")) {
				this.tipoexportarsForeignKey=parametrogeneralusuarioReturnGeneral.gettipoexportarsForeignKey();
			}

			if(!finalQueryGlobalTipoDelimiter.equals("NONE")) {
				this.tipodelimitersForeignKey=parametrogeneralusuarioReturnGeneral.gettipodelimitersForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyParametroGeneralUsuario()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyTipoVisual();
			this.addItemDefectoCombosForeignKeyTipoFondo();
			this.addItemDefectoCombosForeignKeyTipoFondoBorde();
			this.addItemDefectoCombosForeignKeyTipoFondoControl();
			this.addItemDefectoCombosForeignKeyTipoFuente();
			this.addItemDefectoCombosForeignKeyTipoTamanioControlNormal();
			this.addItemDefectoCombosForeignKeyTipoTamanioControlRelacion();
			this.addItemDefectoCombosForeignKeyTipoExportar();
			this.addItemDefectoCombosForeignKeyTipoDelimiter();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {
			if(this.parametrogeneralusuarioSessionBean==null) {
				this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
			}

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoVisual()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoVisual()) {
				TipoVisual tipovisual=new TipoVisual();
				TipoVisualConstantesFunciones.setTipoVisualDescripcion(tipovisual,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipovisual.setId(null);

				if(!TipoVisualConstantesFunciones.ExisteEnLista(this.tipovisualsForeignKey,tipovisual,true)) {

					this.tipovisualsForeignKey.add(0,tipovisual);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoFondo()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFondo()) {
				TipoFondo tipofondo=new TipoFondo();
				TipoFondoConstantesFunciones.setTipoFondoDescripcion(tipofondo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipofondo.setId(null);

				if(!TipoFondoConstantesFunciones.ExisteEnLista(this.tipofondosForeignKey,tipofondo,true)) {

					this.tipofondosForeignKey.add(0,tipofondo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoFondoBorde()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFondoBorde()) {
				TipoFondo tipofondoborde=new TipoFondo();
				TipoFondoConstantesFunciones.setTipoFondoDescripcion(tipofondoborde,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipofondoborde.setId(null);

				if(!TipoFondoConstantesFunciones.ExisteEnLista(this.tipofondobordesForeignKey,tipofondoborde,true)) {

					this.tipofondobordesForeignKey.add(0,tipofondoborde);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoFondoControl()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFondoControl()) {
				TipoFondoControl tipofondocontrol=new TipoFondoControl();
				TipoFondoControlConstantesFunciones.setTipoFondoControlDescripcion(tipofondocontrol,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipofondocontrol.setId(null);

				if(!TipoFondoControlConstantesFunciones.ExisteEnLista(this.tipofondocontrolsForeignKey,tipofondocontrol,true)) {

					this.tipofondocontrolsForeignKey.add(0,tipofondocontrol);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoFuente()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoFuente()) {
				TipoFuente tipofuente=new TipoFuente();
				TipoFuenteConstantesFunciones.setTipoFuenteDescripcion(tipofuente,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipofuente.setId(null);

				if(!TipoFuenteConstantesFunciones.ExisteEnLista(this.tipofuentesForeignKey,tipofuente,true)) {

					this.tipofuentesForeignKey.add(0,tipofuente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTamanioControlNormal()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoTamanioControlNormal()) {
				TipoTamanioControl tipotamaniocontrolnormal=new TipoTamanioControl();
				TipoTamanioControlConstantesFunciones.setTipoTamanioControlDescripcion(tipotamaniocontrolnormal,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotamaniocontrolnormal.setId(null);

				if(!TipoTamanioControlConstantesFunciones.ExisteEnLista(this.tipotamaniocontrolnormalsForeignKey,tipotamaniocontrolnormal,true)) {

					this.tipotamaniocontrolnormalsForeignKey.add(0,tipotamaniocontrolnormal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTamanioControlRelacion()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoTamanioControlRelacion()) {
				TipoTamanioControl tipotamaniocontrolrelacion=new TipoTamanioControl();
				TipoTamanioControlConstantesFunciones.setTipoTamanioControlDescripcion(tipotamaniocontrolrelacion,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotamaniocontrolrelacion.setId(null);

				if(!TipoTamanioControlConstantesFunciones.ExisteEnLista(this.tipotamaniocontrolrelacionsForeignKey,tipotamaniocontrolrelacion,true)) {

					this.tipotamaniocontrolrelacionsForeignKey.add(0,tipotamaniocontrolrelacion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoExportar()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoExportar()) {
				TipoExportar tipoexportar=new TipoExportar();
				TipoExportarConstantesFunciones.setTipoExportarDescripcion(tipoexportar,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoexportar.setId(null);

				if(!TipoExportarConstantesFunciones.ExisteEnLista(this.tipoexportarsForeignKey,tipoexportar,true)) {

					this.tipoexportarsForeignKey.add(0,tipoexportar);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDelimiter()throws Exception {
		try {

			if(!this.parametrogeneralusuarioSessionBean.getisBusquedaDesdeForeignKeySesionTipoDelimiter()) {
				TipoDelimiter tipodelimiter=new TipoDelimiter();
				TipoDelimiterConstantesFunciones.setTipoDelimiterDescripcion(tipodelimiter,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodelimiter.setId(null);

				if(!TipoDelimiterConstantesFunciones.ExisteEnLista(this.tipodelimitersForeignKey,tipodelimiter,true)) {

					this.tipodelimitersForeignKey.add(0,tipodelimiter);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyParametroGeneralUsuario()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyEmpresa("Todos");
			this.initActionsCombosForeignKeyEjercicio("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyParametroGeneralUsuario(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyEmpresa(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyEjercicio(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyEmpresa(JComboBox jComboBoxEmpresaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Empresa empresaLocal=(Empresa)jComboBoxEmpresaGenerico.getSelectedItem();

			if(empresaLocal!=null  && empresaLocal.getId()!=null  && empresaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_empresa="+empresaLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboSucursal=sFinalQueryCombo;

			this.sucursalsForeignKey=new ArrayList<Sucursal>();
			this.cargarCombosForeignKeySucursal(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboEjercicio=sFinalQueryCombo;

			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();
			this.cargarCombosForeignKeyEjercicio(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyEjercicio(JComboBox jComboBoxEjercicioGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Ejercicio ejercicioLocal=(Ejercicio)jComboBoxEjercicioGenerico.getSelectedItem();

			if(ejercicioLocal!=null  && ejercicioLocal.getId()!=null  && ejercicioLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_ejercicio="+ejercicioLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboPeriodo=sFinalQueryCombo;

			this.periodosForeignKey=new ArrayList<Periodo>();
			this.cargarCombosForeignKeyPeriodo(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyEmpresa(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.addItemListener(new ComboBoxItemListener(this,"id_empresaParametroGeneralUsuario"));
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.addFocusListener(new ComboBoxFocusListener(this,"id_empresaParametroGeneralUsuario"));
					}
				} else {
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.addActionListener(new ComboBoxActionListener(this,"id_empresaParametroGeneralUsuario"));
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.addFocusListener(new ComboBoxFocusListener(this,"id_empresaParametroGeneralUsuario"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario"));

						this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario"));

					} else {
						this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario"));

						this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyEjercicio(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.addItemListener(new ComboBoxItemListener(this,"id_ejercicioParametroGeneralUsuario"));
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.addFocusListener(new ComboBoxFocusListener(this,"id_ejercicioParametroGeneralUsuario"));
					}
				} else {
					if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.addActionListener(new ComboBoxActionListener(this,"id_ejercicioParametroGeneralUsuario"));
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.addFocusListener(new ComboBoxFocusListener(this,"id_ejercicioParametroGeneralUsuario"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyParametroGeneralUsuario()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
			
			
				this.parametrogeneralusuario.setfecha_sistema(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroGeneralUsuario();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario)throws Exception {	
		try {
			
			this.setActualUsuarioForeignKey(parametrogeneralusuario.getid_usuario(),false,"Formulario");
			this.setActualEmpresaForeignKey(parametrogeneralusuario.getid_empresa(),false,"Formulario");
			this.setActualSucursalForeignKey(parametrogeneralusuario.getid_sucursal(),false,"Formulario");
			this.setActualEjercicioForeignKey(parametrogeneralusuario.getid_ejercicio(),false,"Formulario");
			this.setActualPeriodoForeignKey(parametrogeneralusuario.getid_periodo(),false,"Formulario");
			this.setActualMonedaForeignKey(parametrogeneralusuario.getid_moneda(),false,"Formulario");
			this.setActualTipoVisualForeignKey(parametrogeneralusuario.getid_tipo_visual(),false,"Formulario");
			this.setActualTipoFondoForeignKey(parametrogeneralusuario.getid_tipo_fondo(),false,"Formulario");
			this.setActualTipoFondoBordeForeignKey(parametrogeneralusuario.getid_tipo_fondo_borde(),false,"Formulario");
			this.setActualTipoFondoControlForeignKey(parametrogeneralusuario.getid_tipo_fondo_control(),false,"Formulario");
			this.setActualTipoFuenteForeignKey(parametrogeneralusuario.getid_tipo_fuente(),false,"Formulario");
			this.setActualTipoTamanioControlNormalForeignKey(parametrogeneralusuario.getid_tipo_tamanio_control_normal(),false,"Formulario");
			this.setActualTipoTamanioControlRelacionForeignKey(parametrogeneralusuario.getid_tipo_tamanio_control_relacion(),false,"Formulario");
			this.setActualTipoExportarForeignKey(parametrogeneralusuario.getid_tipo_exportar(),false,"Formulario");
			this.setActualTipoDelimiterForeignKey(parametrogeneralusuario.getid_tipo_delimiter(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyParametroGeneralUsuario()throws Exception {	
		try {
			
			this.setActualUsuarioForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_usuario(),false,"Formulario");
			this.setActualEmpresaForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_empresa(),false,"Formulario");
			this.setActualSucursalForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_sucursal(),false,"Formulario");
			this.setActualEjercicioForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_ejercicio(),false,"Formulario");
			this.setActualPeriodoForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_periodo(),false,"Formulario");
			this.setActualMonedaForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_moneda(),false,"Formulario");
			this.setActualTipoVisualForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_tipo_visual(),false,"Formulario");
			this.setActualTipoFondoForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_tipo_fondo(),false,"Formulario");
			this.setActualTipoFondoBordeForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_tipo_fondo_borde(),false,"Formulario");
			this.setActualTipoFondoControlForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_tipo_fondo_control(),false,"Formulario");
			this.setActualTipoFuenteForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_tipo_fuente(),false,"Formulario");
			this.setActualTipoTamanioControlNormalForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_tipo_tamanio_control_normal(),false,"Formulario");
			this.setActualTipoTamanioControlRelacionForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_tipo_tamanio_control_relacion(),false,"Formulario");
			this.setActualTipoExportarForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_tipo_exportar(),false,"Formulario");
			this.setActualTipoDelimiterForeignKey(this.parametrogeneralusuarioConstantesFunciones.getid_tipo_delimiter(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyParametroGeneralUsuario()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyParametroGeneralUsuario()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyParametroGeneralUsuario()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroParametroGeneralUsuario()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyParametroGeneralUsuario()throws Exception {
		try {
			

			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameTipoVisualsForeignKey("Todos");
			this.cargarCombosFrameTipoFondosForeignKey("Todos");
			this.cargarCombosFrameTipoFondoBordesForeignKey("Todos");
			this.cargarCombosFrameTipoFondoControlsForeignKey("Todos");
			this.cargarCombosFrameTipoFuentesForeignKey("Todos");
			this.cargarCombosFrameTipoTamanioControlNormalsForeignKey("Todos");
			this.cargarCombosFrameTipoTamanioControlRelacionsForeignKey("Todos");
			this.cargarCombosFrameTipoExportarsForeignKey("Todos");
			this.cargarCombosFrameTipoDelimitersForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyParametroGeneralUsuario(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoVisualsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoFondosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoFondoBordesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoFondoControlsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoFuentesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTamanioControlNormalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTamanioControlRelacionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoExportarsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDelimitersForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyParametroGeneralUsuario()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_usuarioParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	



	public void recargarFormParametroGeneralUsuarioEmpresa(JComboBox<?> jComboBoxGenericoEmpresa,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormParametroGeneralUsuarioid_sucursal(jComboBoxGenericoEmpresa,sFormularioTipoBusqueda,"Empresa",false);
		this.recargarFormParametroGeneralUsuarioid_ejercicio(jComboBoxGenericoEmpresa,sFormularioTipoBusqueda,"Empresa",false);
		this.recargarFormParametroGeneralUsuarioid_periodo(jComboBoxGenericoEmpresa,sFormularioTipoBusqueda,"Empresa",false);
	}



	public void recargarFormParametroGeneralUsuarioEjercicio(JComboBox<?> jComboBoxGenericoEjercicio,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormParametroGeneralUsuarioid_periodo(jComboBoxGenericoEjercicio,sFormularioTipoBusqueda,"Ejercicio",false);
	}


























	
	



	public void recargarFormParametroGeneralUsuarioid_sucursal(JComboBox<?> jComboBoxGenericoSucursal,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Empresa")){
				this.setActualParaGuardarEmpresaForeignKey(this.parametrogeneralusuario,jComboBoxGenericoSucursal);
			}

			if(this.parametrogeneralusuario.getid_empresa()!=null && this.parametrogeneralusuario.getid_empresa()!=0L) {
				sFinalQuery+="  WHERE  id_empresa="+this.parametrogeneralusuario.getid_empresa();
			} else {
				sFinalQuery+="  WHERE  id_empresa=-1";
			}



			//BUCLE RECURSIVO
			this.setActualSucursalForeignKey(this.parametrogeneralusuario.getid_empresa(),true,sFormularioTipoBusqueda);

			this.cargarCombosSucursalsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormParametroGeneralUsuarioid_ejercicio(JComboBox<?> jComboBoxGenericoEjercicio,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Empresa")){
				this.setActualParaGuardarEmpresaForeignKey(this.parametrogeneralusuario,jComboBoxGenericoEjercicio);
			}

			if(this.parametrogeneralusuario.getid_empresa()!=null && this.parametrogeneralusuario.getid_empresa()!=0L) {
				sFinalQuery+="  WHERE  id_empresa="+this.parametrogeneralusuario.getid_empresa();
			} else {
				sFinalQuery+="  WHERE  id_empresa=-1";
			}



			//BUCLE RECURSIVO
			this.setActualEjercicioForeignKey(this.parametrogeneralusuario.getid_empresa(),true,sFormularioTipoBusqueda);

			this.cargarCombosEjerciciosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormParametroGeneralUsuarioid_periodo(JComboBox<?> jComboBoxGenericoPeriodo,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Empresa")){
				this.setActualParaGuardarEmpresaForeignKey(this.parametrogeneralusuario,jComboBoxGenericoPeriodo);
			}

			if(this.parametrogeneralusuario.getid_empresa()!=null && this.parametrogeneralusuario.getid_empresa()!=0L) {
				sFinalQuery+="  WHERE  id_empresa="+this.parametrogeneralusuario.getid_empresa();
			} else {
				sFinalQuery+="  WHERE  id_empresa=-1";
			}



			if(sTipoComboOrigen.equals("Ejercicio")){
				this.setActualParaGuardarEjercicioForeignKey(this.parametrogeneralusuario,jComboBoxGenericoPeriodo);
			}

			if(this.parametrogeneralusuario.getid_ejercicio()!=null && this.parametrogeneralusuario.getid_ejercicio()!=0L) {
				sFinalQuery+="  AND  id_ejercicio="+this.parametrogeneralusuario.getid_ejercicio();
			} else {
				sFinalQuery+="  AND  id_ejercicio=-1";
			}



			//BUCLE RECURSIVO
			this.setActualPeriodoForeignKey(this.parametrogeneralusuario.getid_ejercicio(),true,sFormularioTipoBusqueda);

			this.cargarCombosPeriodosForeignKeyLista(sFinalQuery);

			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public ParametroGeneralUsuarioBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ParametroGeneralUsuarioBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ParametroGeneralUsuarioBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean(); 
		this.parametrogeneralusuarioConstantesFunciones=new ParametroGeneralUsuarioConstantesFunciones(); 
		this.parametrogeneralusuarioBean=new ParametroGeneralUsuario();//(this.parametrogeneralusuarioConstantesFunciones); 		
		this.parametrogeneralusuarioReturnGeneral=new ParametroGeneralUsuarioParameterReturnGeneral(); 
		
		this.parametrogeneralusuarioSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.parametrogeneralusuarioSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ParametroGeneralUsuarioBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ParametroGeneralUsuarioBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ParametroGeneralUsuarioBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessParametroGeneralUsuario(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.parametrogeneralusuarioConstantesFunciones=new ParametroGeneralUsuarioConstantesFunciones(); 
			this.parametrogeneralusuarioBean=new ParametroGeneralUsuario();//this.parametrogeneralusuarioConstantesFunciones); 			
			this.parametrogeneralusuarioReturnGeneral=new ParametroGeneralUsuarioParameterReturnGeneral(); 
		
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Parametro General Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.parametrogeneralusuario=new ParametroGeneralUsuario();
			this.parametrogeneralusuarios = new ArrayList<ParametroGeneralUsuario>();
			this.parametrogeneralusuariosAux = new ArrayList<ParametroGeneralUsuario>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic=new ParametroGeneralUsuarioLogic();
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}
			
			//this.parametrogeneralusuarioSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.parametrogeneralusuarioSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormParametroGeneralUsuario);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroGeneralUsuario);	
					}
					
					if(this.jInternalFrameImportacionParametroGeneralUsuario!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroGeneralUsuario);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByParametroGeneralUsuario!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByParametroGeneralUsuario);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroGeneralUsuario);
				this.jInternalFrameDetalleFormParametroGeneralUsuario.setVisible(false);
				this.jInternalFrameDetalleFormParametroGeneralUsuario.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroGeneralUsuario);
					this.jInternalFrameReporteDinamicoParametroGeneralUsuario.setVisible(false);
					this.jInternalFrameReporteDinamicoParametroGeneralUsuario.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionParametroGeneralUsuario!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionParametroGeneralUsuario);
					this.jInternalFrameImportacionParametroGeneralUsuario.setVisible(false);
					this.jInternalFrameImportacionParametroGeneralUsuario.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByParametroGeneralUsuario!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByParametroGeneralUsuario);
					this.jInternalFrameOrderByParametroGeneralUsuario.setVisible(false);
					this.jInternalFrameOrderByParametroGeneralUsuario.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idParametroGeneralUsuarioActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ParametroGeneralUsuarioConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.parametrogeneralusuarioReturnGeneral=new ParametroGeneralUsuarioParameterReturnGeneral();
			
			this.parametrogeneralusuarioParameterGeneral=new ParametroGeneralUsuarioParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.parametrogeneralusuarioLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ParametroGeneralUsuarioJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroGeneralUsuarioConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado(),this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroGeneralUsuarioConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado(),this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=false;
			this.isVisibilidadCeldaDuplicarParametroGeneralUsuario=true;
			this.isVisibilidadCeldaCopiarParametroGeneralUsuario=true;
			this.isVisibilidadCeldaVerFormParametroGeneralUsuario=true;
			this.isVisibilidadCeldaOrdenParametroGeneralUsuario=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoDelimiter=true;
			this.isVisibilidadFK_IdTipoExportar=true;
			this.isVisibilidadFK_IdTipoFondo=true;
			this.isVisibilidadFK_IdTipoFondoBorde=true;
			this.isVisibilidadFK_IdTipoFondoControl=true;
			this.isVisibilidadFK_IdTipoFuente=true;
			this.isVisibilidadFK_IdTipoTamanioControlNormal=true;
			this.isVisibilidadFK_IdTipoTamanioControlRelacion=true;
			this.isVisibilidadFK_IdTipoVisual=true;
			this.isVisibilidadFK_IdUsuario=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosParametroGeneralUsuario();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioParametroGeneralUsuario(false);
			
			this.setPermisosUsuarioParametroGeneralUsuario();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado() 
				|| (this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado() && this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioParametroGeneralUsuarioClasesRelacionadas();
			}
			
			if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioParametroGeneralUsuarioClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosParametroGeneralUsuario();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualParametroGeneralUsuario();
			}
			
			if(!this.isPermisoBusquedaParametroGeneralUsuario) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioParametroGeneralUsuario,this.isPermisoPaginacionMedioParametroGeneralUsuario,this.isPermisoPaginacionTodoParametroGeneralUsuario);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ParametroGeneralUsuarioConstantesFunciones.getTiposSeleccionarParametroGeneralUsuario());
				
				this.tiposColumnasSelect=ParametroGeneralUsuarioConstantesFunciones.getTiposSeleccionarParametroGeneralUsuario(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioParametroGeneralUsuario();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioParametroGeneralUsuario(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioParametroGeneralUsuario(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroGeneralUsuario() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.usuarioLogic=new UsuarioLogic();
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.monedaLogic=new MonedaLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.tipovisualLogic=new TipoVisualLogic();
			this.tipofondoLogic=new TipoFondoLogic();
			this.tipofondobordeLogic=new TipoFondoLogic();
			this.tipofondocontrolLogic=new TipoFondoControlLogic();
			this.tipofuenteLogic=new TipoFuenteLogic();
			this.tipotamaniocontrolnormalLogic=new TipoTamanioControlLogic();
			this.tipotamaniocontrolrelacionLogic=new TipoTamanioControlLogic();
			this.tipoexportarLogic=new TipoExportarLogic();
			this.tipodelimiterLogic=new TipoDelimiterLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				parametrogeneralusuarioImplementable= (ParametroGeneralUsuarioImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroGeneralUsuarioConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				parametrogeneralusuarioImplementableHome= (ParametroGeneralUsuarioImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroGeneralUsuarioConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.parametrogeneralusuarios= new ArrayList<ParametroGeneralUsuario>();
			this.parametrogeneralusuariosEliminados= new ArrayList<ParametroGeneralUsuario>();
						
			this.isEsNuevoParametroGeneralUsuario=false;
			this.esParaAccionDesdeFormularioParametroGeneralUsuario=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.tipovisualsForeignKey=new ArrayList<TipoVisual>() ;
			this.tipofondosForeignKey=new ArrayList<TipoFondo>() ;
			this.tipofondobordesForeignKey=new ArrayList<TipoFondo>() ;
			this.tipofondocontrolsForeignKey=new ArrayList<TipoFondoControl>() ;
			this.tipofuentesForeignKey=new ArrayList<TipoFuente>() ;
			this.tipotamaniocontrolnormalsForeignKey=new ArrayList<TipoTamanioControl>() ;
			this.tipotamaniocontrolrelacionsForeignKey=new ArrayList<TipoTamanioControl>() ;
			this.tipoexportarsForeignKey=new ArrayList<TipoExportar>() ;
			this.tipodelimitersForeignKey=new ArrayList<TipoDelimiter>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyParametroGeneralUsuario(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroParametroGeneralUsuario();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ParametroGeneralUsuarioConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingParametroGeneralUsuario(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioParametroGeneralUsuario();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioParametroGeneralUsuario();
			}
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasParametroGeneralUsuario.getTabCount(); i++) {
					this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessParametroGeneralUsuario(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ParametroGeneralUsuario: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectParametroGeneralUsuario() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesParametroGeneralUsuario")) {
				iIndex=this.jInternalFrameDetalleFormParametroGeneralUsuario.jTabbedPaneRelacionesParametroGeneralUsuario.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormParametroGeneralUsuario.jTabbedPaneRelacionesParametroGeneralUsuario.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessParametroGeneralUsuario();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyParametroGeneralUsuario(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyParametroGeneralUsuario(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyParametroGeneralUsuario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyParametroGeneralUsuarioListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyParametroGeneralUsuario();
		
		this.cargarCombosFrameForeignKeyParametroGeneralUsuario();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyParametroGeneralUsuario();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyParametroGeneralUsuario();
		}
	}
	
	

	public void cargarCombosForeignKeyUsuario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaUsuario(this.usuariosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresa(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEmpresa("Todos");
				}

			this.recargarComboTablaEmpresa(this.empresasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEmpresa("Todos");
				}

			this.recargarComboTablaSucursal(this.sucursalsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaEjercicio(this.ejerciciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaPeriodo(this.periodosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMoneda(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaMoneda(this.monedasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoVisual(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoVisualListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoVisual();
				this.cargarCombosFrameTipoVisualsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaTipoVisual(this.tipovisualsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFondo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoFondoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoFondo();
				this.cargarCombosFrameTipoFondosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaTipoFondo(this.tipofondosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFondoBorde(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoFondoBordeListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoFondoBorde();
				this.cargarCombosFrameTipoFondoBordesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaTipoFondoBorde(this.tipofondobordesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFondoControl(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoFondoControlListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoFondoControl();
				this.cargarCombosFrameTipoFondoControlsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaTipoFondoControl(this.tipofondocontrolsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFuente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoFuenteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoFuente();
				this.cargarCombosFrameTipoFuentesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaTipoFuente(this.tipofuentesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTamanioControlNormal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTamanioControlNormalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTamanioControlNormal();
				this.cargarCombosFrameTipoTamanioControlNormalsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaTipoTamanioControlNormal(this.tipotamaniocontrolnormalsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTamanioControlRelacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTamanioControlRelacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTamanioControlRelacion();
				this.cargarCombosFrameTipoTamanioControlRelacionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaTipoTamanioControlRelacion(this.tipotamaniocontrolrelacionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoExportar(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoExportarListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoExportar();
				this.cargarCombosFrameTipoExportarsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaTipoExportar(this.tipoexportarsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDelimiter(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDelimiterListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDelimiter();
				this.cargarCombosFrameTipoDelimitersForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyEjercicio("Todos");
				}

			this.recargarComboTablaTipoDelimiter(this.tipodelimitersForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoParametroGeneralUsuarioActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
			
			if(jTableDatosParametroGeneralUsuario.getRowCount()>=1) {
				jTableDatosParametroGeneralUsuario.removeRowSelectionInterval(0, jTableDatosParametroGeneralUsuario.getRowCount()-1);						
			}
			
			this.isEsNuevoParametroGeneralUsuario=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoParametroGeneralUsuario(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesParametroGeneralUsuario(true);			
			//this.parametrogeneralusuario=new ParametroGeneralUsuario();
			//this.parametrogeneralusuario.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroGeneralUsuario(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroGeneralUsuario() ;
			
			if(ParametroGeneralUsuarioJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroGeneralUsuario(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.parametrogeneralusuario);	
			this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);				
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
			if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ParametroGeneralUsuario: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarParametroGeneralUsuarioActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosParametroGeneralUsuario.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosParametroGeneralUsuario.getSelectedRows().length;			
			}
			
			parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoParametroGeneralUsuario--;			
				//ParametroGeneralUsuario parametrogeneralusuarioAux= new ParametroGeneralUsuario();			
				//parametrogeneralusuarioAux.setId(this.iIdNuevoParametroGeneralUsuario);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ParametroGeneralUsuario parametrogeneralusuarioOrigen=new ParametroGeneralUsuario();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ParametroGeneralUsuario parametrogeneralusuarioOrigen : parametrogeneralusuariosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							parametrogeneralusuarioOrigen =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrogeneralusuarioOrigen =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaParametroGeneralUsuario();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.parametrogeneralusuario.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosParametroGeneralUsuario(parametrogeneralusuarioOrigen,this.parametrogeneralusuario,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().add(this.parametrogeneralusuarioAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuarios.add(this.parametrogeneralusuarioAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
				
				this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(this.getIndiceNuevoParametroGeneralUsuario(), this.getIndiceNuevoParametroGeneralUsuario());
				
				int iLastRow =  this.jTableDatosParametroGeneralUsuario.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroGeneralUsuario.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroGeneralUsuario.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();									
		
			ParametroGeneralUsuario parametrogeneralusuarioOrigen=new ParametroGeneralUsuario();
			ParametroGeneralUsuario parametrogeneralusuarioDestino=new ParametroGeneralUsuario();
				
			parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosParametroGeneralUsuario.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || parametrogeneralusuariosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosParametroGeneralUsuario.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioOrigen =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrogeneralusuarioOrigen =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrogeneralusuarioDestino =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrogeneralusuarioDestino =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				parametrogeneralusuarioOrigen =parametrogeneralusuariosSeleccionados.get(0);
				parametrogeneralusuarioDestino =parametrogeneralusuariosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosParametroGeneralUsuario(parametrogeneralusuarioOrigen,parametrogeneralusuarioDestino,true,false);
				
				parametrogeneralusuarioDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrogeneralusuarioDestino,parametrogeneralusuarioLogic.getParametroGeneralUsuarios());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrogeneralusuarioDestino,parametrogeneralusuarios);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
				
				//this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(this.getIndiceNuevoParametroGeneralUsuario(), this.getIndiceNuevoParametroGeneralUsuario());
				
				int iLastRow =  this.jTableDatosParametroGeneralUsuario.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroGeneralUsuario.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroGeneralUsuario.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormParametroGeneralUsuario.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesParametroGeneralUsuario.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(!isVisible);
			this.jPanelPaginacionParametroGeneralUsuario.setVisible(!isVisible);
			this.jPanelAccionesParametroGeneralUsuario.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameParametroGeneralUsuario();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoParametroGeneralUsuario();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionParametroGeneralUsuario();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByParametroGeneralUsuario();
			
			this.abrirFrameOrderByParametroGeneralUsuario();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByParametroGeneralUsuario();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleParametroGeneralUsuario(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroGeneralUsuario);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormParametroGeneralUsuario.isMaximum()) {
					this.jInternalFrameDetalleFormParametroGeneralUsuario.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormParametroGeneralUsuario.setSize(this.jInternalFrameDetalleFormParametroGeneralUsuario.iWidthFormulario,this.jInternalFrameDetalleFormParametroGeneralUsuario.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormParametroGeneralUsuario.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormParametroGeneralUsuario.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormParametroGeneralUsuario.isMaximum()) {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jContentPaneDetalleParametroGeneralUsuario.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormParametroGeneralUsuario.jTabbedPaneRelacionesParametroGeneralUsuario.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormParametroGeneralUsuario.jContentPaneDetalleParametroGeneralUsuario.getWidth(),ParametroGeneralUsuarioConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroGeneralUsuario.jTabbedPaneRelacionesParametroGeneralUsuario.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormParametroGeneralUsuario.jContentPaneDetalleParametroGeneralUsuario.getWidth(),ParametroGeneralUsuarioConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroGeneralUsuario.jTabbedPaneRelacionesParametroGeneralUsuario.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormParametroGeneralUsuario.jContentPaneDetalleParametroGeneralUsuario.getWidth(),ParametroGeneralUsuarioConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormParametroGeneralUsuario.setVisible(true);
	        this.jInternalFrameDetalleFormParametroGeneralUsuario.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByParametroGeneralUsuario() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByParametroGeneralUsuario==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByParametroGeneralUsuario=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroGeneralUsuario,false,this);
				} else {
					this.jInternalFrameOrderByParametroGeneralUsuario=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroGeneralUsuario,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByParametroGeneralUsuario);
				this.jInternalFrameOrderByParametroGeneralUsuario.setVisible(false);
				this.jInternalFrameOrderByParametroGeneralUsuario.setSelected(false);
				
				this.jInternalFrameOrderByParametroGeneralUsuario.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroGeneralUsuario"));
				
				this.inicializarActualizarBindingTablaOrderByParametroGeneralUsuario();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionParametroGeneralUsuario() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionParametroGeneralUsuario==null) {
				
				this.jInternalFrameImportacionParametroGeneralUsuario=new ImportacionJInternalFrame(ParametroGeneralUsuarioConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroGeneralUsuario);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionParametroGeneralUsuario);
				this.jInternalFrameImportacionParametroGeneralUsuario.setVisible(false);
				this.jInternalFrameImportacionParametroGeneralUsuario.setSelected(false);


				this.jInternalFrameImportacionParametroGeneralUsuario.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroGeneralUsuario"));
				this.jInternalFrameImportacionParametroGeneralUsuario.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroGeneralUsuario"));
				this.jInternalFrameImportacionParametroGeneralUsuario.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroGeneralUsuario"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoParametroGeneralUsuario() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario==null) {
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario=new ReporteDinamicoJInternalFrame(ParametroGeneralUsuarioConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroGeneralUsuario);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroGeneralUsuario);
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.setVisible(false);
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroGeneralUsuario"));
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroGeneralUsuario"));
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroGeneralUsuario"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroGeneralUsuario();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
					
	public void cerrarFrameDetalleParametroGeneralUsuario() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroGeneralUsuario);
			
	       	this.jInternalFrameDetalleFormParametroGeneralUsuario.setVisible(false);
	        this.jInternalFrameDetalleFormParametroGeneralUsuario.setSelected(false);
			
			//this.jInternalFrameDetalleFormParametroGeneralUsuario.dispose();
			//this.jInternalFrameDetalleFormParametroGeneralUsuario=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoParametroGeneralUsuario() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoParametroGeneralUsuario.setVisible(true);
	        this.jInternalFrameReporteDinamicoParametroGeneralUsuario.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionParametroGeneralUsuario() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionParametroGeneralUsuario.setVisible(true);
	        this.jInternalFrameImportacionParametroGeneralUsuario.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByParametroGeneralUsuario() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByParametroGeneralUsuario.setVisible(true);
	        this.jInternalFrameOrderByParametroGeneralUsuario.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByParametroGeneralUsuario() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByParametroGeneralUsuario.setVisible(false);
	        this.jInternalFrameOrderByParametroGeneralUsuario.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoParametroGeneralUsuario() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoParametroGeneralUsuario.setVisible(false);
	        this.jInternalFrameReporteDinamicoParametroGeneralUsuario.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionParametroGeneralUsuario() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionParametroGeneralUsuario.setVisible(false);
	        this.jInternalFrameImportacionParametroGeneralUsuario.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarParametroGeneralUsuario(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarParametroGeneralUsuario(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesParametroGeneralUsuario(true);
			//this.isEsNuevoParametroGeneralUsuario=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroGeneralUsuario(false) ;
			
			if(parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ParametroGeneralUsuarioJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroGeneralUsuario(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroGeneralUsuario(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaParametroGeneralUsuarioActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarParametroGeneralUsuario(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesParametroGeneralUsuario(true);
			//this.isEsNuevoParametroGeneralUsuario=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.parametrogeneralusuario.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesParametroGeneralUsuario(false) ;
			
			if(ParametroGeneralUsuarioJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroGeneralUsuario(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroGeneralUsuario(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
	
	
	public void recargarComboTablaUsuario(List<Usuario> usuariosForeignKey)throws Exception{
		TableColumn tableColumnUsuario=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_ID));
		TableCellEditor tableCellEditorUsuario =tableColumnUsuario.getCellEditor();

		UsuarioTableCell usuarioTableCellFk=(UsuarioTableCell)tableCellEditorUsuario;

		if(usuarioTableCellFk!=null) {
			usuarioTableCellFk.setusuariosForeignKey(usuariosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//usuarioTableCellFk.setRowActual(intSelectedRow);
			//usuarioTableCellFk.setusuariosForeignKeyActual(usuariosForeignKey);
		//}


		if(usuarioTableCellFk!=null) {
			usuarioTableCellFk.RecargarUsuariosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpresa(List<Empresa> empresasForeignKey)throws Exception{
		TableColumn tableColumnEmpresa=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA));
		TableCellEditor tableCellEditorEmpresa =tableColumnEmpresa.getCellEditor();

		EmpresaTableCell empresaTableCellFk=(EmpresaTableCell)tableCellEditorEmpresa;

		if(empresaTableCellFk!=null) {
			empresaTableCellFk.setempresasForeignKey(empresasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empresaTableCellFk.setRowActual(intSelectedRow);
			//empresaTableCellFk.setempresasForeignKeyActual(empresasForeignKey);
		//}


		if(empresaTableCellFk!=null) {
			empresaTableCellFk.RecargarEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSucursal(List<Sucursal> sucursalsForeignKey)throws Exception{
		TableColumn tableColumnSucursal=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL));
		TableCellEditor tableCellEditorSucursal =tableColumnSucursal.getCellEditor();

		SucursalTableCell sucursalTableCellFk=(SucursalTableCell)tableCellEditorSucursal;

		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.setsucursalsForeignKey(sucursalsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//sucursalTableCellFk.setRowActual(intSelectedRow);
			//sucursalTableCellFk.setsucursalsForeignKeyActual(sucursalsForeignKey);
		//}


		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.RecargarSucursalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEjercicio(List<Ejercicio> ejerciciosForeignKey)throws Exception{
		TableColumn tableColumnEjercicio=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO));
		TableCellEditor tableCellEditorEjercicio =tableColumnEjercicio.getCellEditor();

		EjercicioTableCell ejercicioTableCellFk=(EjercicioTableCell)tableCellEditorEjercicio;

		if(ejercicioTableCellFk!=null) {
			ejercicioTableCellFk.setejerciciosForeignKey(ejerciciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ejercicioTableCellFk.setRowActual(intSelectedRow);
			//ejercicioTableCellFk.setejerciciosForeignKeyActual(ejerciciosForeignKey);
		//}


		if(ejercicioTableCellFk!=null) {
			ejercicioTableCellFk.RecargarEjerciciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPeriodo(List<Periodo> periodosForeignKey)throws Exception{
		TableColumn tableColumnPeriodo=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO));
		TableCellEditor tableCellEditorPeriodo =tableColumnPeriodo.getCellEditor();

		PeriodoTableCell periodoTableCellFk=(PeriodoTableCell)tableCellEditorPeriodo;

		if(periodoTableCellFk!=null) {
			periodoTableCellFk.setperiodosForeignKey(periodosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//periodoTableCellFk.setRowActual(intSelectedRow);
			//periodoTableCellFk.setperiodosForeignKeyActual(periodosForeignKey);
		//}


		if(periodoTableCellFk!=null) {
			periodoTableCellFk.RecargarPeriodosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMoneda(List<Moneda> monedasForeignKey)throws Exception{
		TableColumn tableColumnMoneda=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA));
		TableCellEditor tableCellEditorMoneda =tableColumnMoneda.getCellEditor();

		MonedaTableCell monedaTableCellFk=(MonedaTableCell)tableCellEditorMoneda;

		if(monedaTableCellFk!=null) {
			monedaTableCellFk.setmonedasForeignKey(monedasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//monedaTableCellFk.setRowActual(intSelectedRow);
			//monedaTableCellFk.setmonedasForeignKeyActual(monedasForeignKey);
		//}


		if(monedaTableCellFk!=null) {
			monedaTableCellFk.RecargarMonedasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoVisual(List<TipoVisual> tipovisualsForeignKey)throws Exception{
		TableColumn tableColumnTipoVisual=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL));
		TableCellEditor tableCellEditorTipoVisual =tableColumnTipoVisual.getCellEditor();

		TipoVisualTableCell tipovisualTableCellFk=(TipoVisualTableCell)tableCellEditorTipoVisual;

		if(tipovisualTableCellFk!=null) {
			tipovisualTableCellFk.settipovisualsForeignKey(tipovisualsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipovisualTableCellFk.setRowActual(intSelectedRow);
			//tipovisualTableCellFk.settipovisualsForeignKeyActual(tipovisualsForeignKey);
		//}


		if(tipovisualTableCellFk!=null) {
			tipovisualTableCellFk.RecargarTipoVisualsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoFondo(List<TipoFondo> tipofondosForeignKey)throws Exception{
		TableColumn tableColumnTipoFondo=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO));
		TableCellEditor tableCellEditorTipoFondo =tableColumnTipoFondo.getCellEditor();

		TipoFondoTableCell tipofondoTableCellFk=(TipoFondoTableCell)tableCellEditorTipoFondo;

		if(tipofondoTableCellFk!=null) {
			tipofondoTableCellFk.settipofondosForeignKey(tipofondosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipofondoTableCellFk.setRowActual(intSelectedRow);
			//tipofondoTableCellFk.settipofondosForeignKeyActual(tipofondosForeignKey);
		//}


		if(tipofondoTableCellFk!=null) {
			tipofondoTableCellFk.RecargarTipoFondosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoFondoBorde(List<TipoFondo> tipofondobordesForeignKey)throws Exception{
		TableColumn tableColumnTipoFondoBorde=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE));
		TableCellEditor tableCellEditorTipoFondoBorde =tableColumnTipoFondoBorde.getCellEditor();

		TipoFondoTableCell tipofondoTableCellFk=(TipoFondoTableCell)tableCellEditorTipoFondoBorde;

		if(tipofondoTableCellFk!=null) {
			tipofondoTableCellFk.settipofondosForeignKey(tipofondobordesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipofondoTableCellFk.setRowActual(intSelectedRow);
			//tipofondoTableCellFk.settipofondosForeignKeyActual(tipofondobordesForeignKey);
		//}


		if(tipofondoTableCellFk!=null) {
			tipofondoTableCellFk.RecargarTipoFondosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoFondoControl(List<TipoFondoControl> tipofondocontrolsForeignKey)throws Exception{
		TableColumn tableColumnTipoFondoControl=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL));
		TableCellEditor tableCellEditorTipoFondoControl =tableColumnTipoFondoControl.getCellEditor();

		TipoFondoControlTableCell tipofondocontrolTableCellFk=(TipoFondoControlTableCell)tableCellEditorTipoFondoControl;

		if(tipofondocontrolTableCellFk!=null) {
			tipofondocontrolTableCellFk.settipofondocontrolsForeignKey(tipofondocontrolsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipofondocontrolTableCellFk.setRowActual(intSelectedRow);
			//tipofondocontrolTableCellFk.settipofondocontrolsForeignKeyActual(tipofondocontrolsForeignKey);
		//}


		if(tipofondocontrolTableCellFk!=null) {
			tipofondocontrolTableCellFk.RecargarTipoFondoControlsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoFuente(List<TipoFuente> tipofuentesForeignKey)throws Exception{
		TableColumn tableColumnTipoFuente=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE));
		TableCellEditor tableCellEditorTipoFuente =tableColumnTipoFuente.getCellEditor();

		TipoFuenteTableCell tipofuenteTableCellFk=(TipoFuenteTableCell)tableCellEditorTipoFuente;

		if(tipofuenteTableCellFk!=null) {
			tipofuenteTableCellFk.settipofuentesForeignKey(tipofuentesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipofuenteTableCellFk.setRowActual(intSelectedRow);
			//tipofuenteTableCellFk.settipofuentesForeignKeyActual(tipofuentesForeignKey);
		//}


		if(tipofuenteTableCellFk!=null) {
			tipofuenteTableCellFk.RecargarTipoFuentesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTamanioControlNormal(List<TipoTamanioControl> tipotamaniocontrolnormalsForeignKey)throws Exception{
		TableColumn tableColumnTipoTamanioControlNormal=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL));
		TableCellEditor tableCellEditorTipoTamanioControlNormal =tableColumnTipoTamanioControlNormal.getCellEditor();

		TipoTamanioControlTableCell tipotamaniocontrolTableCellFk=(TipoTamanioControlTableCell)tableCellEditorTipoTamanioControlNormal;

		if(tipotamaniocontrolTableCellFk!=null) {
			tipotamaniocontrolTableCellFk.settipotamaniocontrolsForeignKey(tipotamaniocontrolnormalsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotamaniocontrolTableCellFk.setRowActual(intSelectedRow);
			//tipotamaniocontrolTableCellFk.settipotamaniocontrolsForeignKeyActual(tipotamaniocontrolnormalsForeignKey);
		//}


		if(tipotamaniocontrolTableCellFk!=null) {
			tipotamaniocontrolTableCellFk.RecargarTipoTamanioControlsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTamanioControlRelacion(List<TipoTamanioControl> tipotamaniocontrolrelacionsForeignKey)throws Exception{
		TableColumn tableColumnTipoTamanioControlRelacion=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION));
		TableCellEditor tableCellEditorTipoTamanioControlRelacion =tableColumnTipoTamanioControlRelacion.getCellEditor();

		TipoTamanioControlTableCell tipotamaniocontrolTableCellFk=(TipoTamanioControlTableCell)tableCellEditorTipoTamanioControlRelacion;

		if(tipotamaniocontrolTableCellFk!=null) {
			tipotamaniocontrolTableCellFk.settipotamaniocontrolsForeignKey(tipotamaniocontrolrelacionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotamaniocontrolTableCellFk.setRowActual(intSelectedRow);
			//tipotamaniocontrolTableCellFk.settipotamaniocontrolsForeignKeyActual(tipotamaniocontrolrelacionsForeignKey);
		//}


		if(tipotamaniocontrolTableCellFk!=null) {
			tipotamaniocontrolTableCellFk.RecargarTipoTamanioControlsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoExportar(List<TipoExportar> tipoexportarsForeignKey)throws Exception{
		TableColumn tableColumnTipoExportar=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR));
		TableCellEditor tableCellEditorTipoExportar =tableColumnTipoExportar.getCellEditor();

		TipoExportarTableCell tipoexportarTableCellFk=(TipoExportarTableCell)tableCellEditorTipoExportar;

		if(tipoexportarTableCellFk!=null) {
			tipoexportarTableCellFk.settipoexportarsForeignKey(tipoexportarsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoexportarTableCellFk.setRowActual(intSelectedRow);
			//tipoexportarTableCellFk.settipoexportarsForeignKeyActual(tipoexportarsForeignKey);
		//}


		if(tipoexportarTableCellFk!=null) {
			tipoexportarTableCellFk.RecargarTipoExportarsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDelimiter(List<TipoDelimiter> tipodelimitersForeignKey)throws Exception{
		TableColumn tableColumnTipoDelimiter=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER));
		TableCellEditor tableCellEditorTipoDelimiter =tableColumnTipoDelimiter.getCellEditor();

		TipoDelimiterTableCell tipodelimiterTableCellFk=(TipoDelimiterTableCell)tableCellEditorTipoDelimiter;

		if(tipodelimiterTableCellFk!=null) {
			tipodelimiterTableCellFk.settipodelimitersForeignKey(tipodelimitersForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodelimiterTableCellFk.setRowActual(intSelectedRow);
			//tipodelimiterTableCellFk.settipodelimitersForeignKeyActual(tipodelimitersForeignKey);
		//}


		if(tipodelimiterTableCellFk!=null) {
			tipodelimiterTableCellFk.RecargarTipoDelimitersForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesParametroGeneralUsuario(false);
			
			//if(!this.isEsNuevoParametroGeneralUsuario) {								
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				
				//OTRA VEZ SE EJECUTA ESTO
				//PARA RELACION DE UNO A UNO
				if(this.isEsNuevoParametroGeneralUsuario) {
					this.parametrogeneralusuario.setId(this.id_usuarioFK_IdUsuario);
				}
			}
			
			if(this.permiteMantenimiento(this.parametrogeneralusuario)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoParametroGeneralUsuario=true;
					this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
					this.isEsNuevoParametroGeneralUsuario=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoParametroGeneralUsuario=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoParametroGeneralUsuario=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroGeneralUsuario(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroGeneralUsuario(false);
				
				this.habilitarDeshabilitarControlesParametroGeneralUsuario(false);
			
												
				
				if(ParametroGeneralUsuarioJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleParametroGeneralUsuario();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,parametrogeneralusuarioSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualParametroGeneralUsuario(this.parametrogeneralusuario,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,parametrogeneralusuarioSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.parametrogeneralusuario.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				this.parametrogeneralusuario.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				this.parametrogeneralusuario.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.parametrogeneralusuario)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ParametroGeneralUsuarioModel) this.jTableDatosParametroGeneralUsuario.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoParametroGeneralUsuario=true;
				this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
				this.isEsNuevoParametroGeneralUsuario=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroGeneralUsuario(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroGeneralUsuario(false);
				
				this.habilitarDeshabilitarControlesParametroGeneralUsuario(false);
				
				
				
				if(ParametroGeneralUsuarioJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleParametroGeneralUsuario();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosParametroGeneralUsuario.getRowCount()>=1) {
				jTableDatosParametroGeneralUsuario.removeRowSelectionInterval(0, jTableDatosParametroGeneralUsuario.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesParametroGeneralUsuario(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroGeneralUsuario(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroGeneralUsuario(false) ;
			
			this.isEsNuevoParametroGeneralUsuario=false;
			
			if(ParametroGeneralUsuarioJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleParametroGeneralUsuario();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingParametroGeneralUsuario(false);
				
				//SI ES MANUAL
				if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualParametroGeneralUsuario();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoParametroGeneralUsuario--;			
			//ParametroGeneralUsuario parametrogeneralusuarioAux= new ParametroGeneralUsuario();			
			//parametrogeneralusuarioAux.setId(this.iIdNuevoParametroGeneralUsuario);
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaParametroGeneralUsuario();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
			
			this.parametrogeneralusuario.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().add(this.parametrogeneralusuarioAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.parametrogeneralusuarios.add(this.parametrogeneralusuarioAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
			
			this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(this.getIndiceNuevoParametroGeneralUsuario(), this.getIndiceNuevoParametroGeneralUsuario());
			
			int iLastRow =  this.jTableDatosParametroGeneralUsuario.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosParametroGeneralUsuario.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosParametroGeneralUsuario.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroGeneralUsuario(false);
			
			//SI ES MANUAL
			if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroGeneralUsuario();
			}
			
			//this.abrirFrameTreeParametroGeneralUsuario();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Parametro GeneralES ?", "MANTENIMIENTO DE Parametro General", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionParametroGeneralUsuario.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralParametroGeneralUsuario();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.parametrogeneralusuarioReturnGeneral=parametrogeneralusuarioLogic.procesarImportacionParametroGeneralUsuariosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.parametrogeneralusuarioParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarParametroGeneralUsuarioReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionParametroGeneralUsuario.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionParametroGeneralUsuario.setFileImportacion(this.jInternalFrameImportacionParametroGeneralUsuario.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionParametroGeneralUsuario.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionParametroGeneralUsuario.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionParametroGeneralUsuario.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionParametroGeneralUsuario.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();		

		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ParametroGeneralUsuarioBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ParametroGeneralUsuarioBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteParametroGeneralUsuarios("Todos",parametrogeneralusuariosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaSistema_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaSistema_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaSistema_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaSistema_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoVisual_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoVisual_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoVisual_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoVisual_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoFondo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoFondo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoFondo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoFondo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoFondoBorde_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoFondoBorde_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoFondoBorde_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoFondoBorde_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoFondoControl_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoFondoControl_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoFondoControl_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoFondoControl_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoFuente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoFuente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoFuente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoFuente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTamanioControlNormal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTamanioControlNormal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTamanioControlNormal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTamanioControlNormal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTamanioControlRelacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTamanioControlRelacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTamanioControlRelacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTamanioControlRelacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nTamanioControlManual_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nTamanioControlManual_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nTamanioControlManual_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nTamanioControlManual_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nTamanioControlTodoRelacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nTamanioControlTodoRelacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nTamanioControlTodoRelacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nTamanioControlTodoRelacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nGuardarRelaciones_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nGuardarRelaciones_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nGuardarRelaciones_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nGuardarRelaciones_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nMensajeConfirmacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nMensajeConfirmacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nMensajeConfirmacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nMensajeConfirmacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nBotonesToolBar_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nBotonesToolBar_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nBotonesToolBar_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nBotonesToolBar_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nMostrarAccionesCampoGeneral_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nMostrarAccionesCampoGeneral_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nMostrarAccionesCampoGeneral_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nMostrarAccionesCampoGeneral_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nMostrarAccionesCampoRelaciones_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nMostrarAccionesCampoRelaciones_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nMostrarAccionesCampoRelaciones_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nMostrarAccionesCampoRelaciones_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoExportar_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoExportar_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoExportar_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoExportar_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDelimiter_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDelimiter_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDelimiter_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDelimiter_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nExportarCabecera_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nExportarCabecera_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nExportarCabecera_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nExportarCabecera_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nExportarCampoVersion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nExportarCampoVersion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nExportarCampoVersion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nExportarCampoVersion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_thExportar_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_thExportar_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_thExportar_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_thExportar_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nPrecargarVentanas_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nPrecargarVentanas_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nPrecargarVentanas_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nPrecargarVentanas_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nPrecargarPorUsuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nPrecargarPorUsuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nPrecargarPorUsuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nPrecargarPorUsuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCargarPorParte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCargarPorParte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCargarPorParte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCargarPorParte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA:
					sNombreCampoCategoria="fecha_sistema";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA:
					sNombreCampoCategoria="dia";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL:
					sNombreCampoCategoria="id_tipo_visual";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO:
					sNombreCampoCategoria="id_tipo_fondo";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE:
					sNombreCampoCategoria="id_tipo_fondo_borde";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL:
					sNombreCampoCategoria="id_tipo_fondo_control";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE:
					sNombreCampoCategoria="id_tipo_fuente";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL:
					sNombreCampoCategoria="id_tipo_tamanio_control_normal";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION:
					sNombreCampoCategoria="id_tipo_tamanio_control_relacion";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL:
					sNombreCampoCategoria="con_tamanio_control_manual";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION:
					sNombreCampoCategoria="con_tamanio_control_todo_relacion";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES:
					sNombreCampoCategoria="con_guardar_relaciones";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION:
					sNombreCampoCategoria="con_mensaje_confirmacion";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR:
					sNombreCampoCategoria="con_botones_tool_bar";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL:
					sNombreCampoCategoria="con_mostrar_acciones_campo_general";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES:
					sNombreCampoCategoria="con_mostrar_acciones_campo_relaciones";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR:
					sNombreCampoCategoria="id_tipo_exportar";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER:
					sNombreCampoCategoria="id_tipo_delimiter";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA:
					sNombreCampoCategoria="con_exportar_cabecera";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION:
					sNombreCampoCategoria="con_exportar_campo_version";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR:
					sNombreCampoCategoria="path_exportar";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS:
					sNombreCampoCategoria="con_precargar_ventanas";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO:
					sNombreCampoCategoria="con_precargar_por_usuario";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE:
					sNombreCampoCategoria="con_cargar_por_parte";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA:
					sNombreCampoCategoriaValor="fecha_sistema";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA:
					sNombreCampoCategoriaValor="dia";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL:
					sNombreCampoCategoriaValor="id_tipo_visual";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO:
					sNombreCampoCategoriaValor="id_tipo_fondo";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE:
					sNombreCampoCategoriaValor="id_tipo_fondo_borde";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL:
					sNombreCampoCategoriaValor="id_tipo_fondo_control";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE:
					sNombreCampoCategoriaValor="id_tipo_fuente";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL:
					sNombreCampoCategoriaValor="id_tipo_tamanio_control_normal";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION:
					sNombreCampoCategoriaValor="id_tipo_tamanio_control_relacion";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL:
					sNombreCampoCategoriaValor="con_tamanio_control_manual";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION:
					sNombreCampoCategoriaValor="con_tamanio_control_todo_relacion";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES:
					sNombreCampoCategoriaValor="con_guardar_relaciones";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION:
					sNombreCampoCategoriaValor="con_mensaje_confirmacion";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR:
					sNombreCampoCategoriaValor="con_botones_tool_bar";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL:
					sNombreCampoCategoriaValor="con_mostrar_acciones_campo_general";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES:
					sNombreCampoCategoriaValor="con_mostrar_acciones_campo_relaciones";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR:
					sNombreCampoCategoriaValor="id_tipo_exportar";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER:
					sNombreCampoCategoriaValor="id_tipo_delimiter";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA:
					sNombreCampoCategoriaValor="con_exportar_cabecera";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION:
					sNombreCampoCategoriaValor="con_exportar_campo_version";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR:
					sNombreCampoCategoriaValor="path_exportar";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS:
					sNombreCampoCategoriaValor="con_precargar_ventanas";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO:
					sNombreCampoCategoriaValor="con_precargar_por_usuario";
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE:
					sNombreCampoCategoriaValor="con_cargar_por_parte";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F Sistema",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_sistema");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"dia");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Visual",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_visual");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Fondo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_fondo");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Fondo Borde",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_fondo_borde");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Fondo Control",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_fondo_control");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Fuente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_fuente");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tam. Control Normal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_tamanio_control_normal");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tam. Control Relacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_tamanio_control_relacion");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tam. Control Manual",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_tamanio_control_manual");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tam.Todo Relacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_tamanio_control_todo_relacion");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Guardar Relaciones",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_guardar_relaciones");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mensaje Confirmacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_mensaje_confirmacion");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Botones Tool Bar",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_botones_tool_bar");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mostrar Acciones Campo General",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_mostrar_acciones_campo_general");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mostrar Acciones Campo Relaciones",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_mostrar_acciones_campo_relaciones");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T. Exportar",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_exportar");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T. Delimiter",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_delimiter");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Exportar Cabecera",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_exportar_cabecera");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Exportar Campo Version",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_exportar_campo_version");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Path Exportar",sNombreCampoCategoria,sNombreCampoCategoriaValor,"path_exportar");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precargar Ventanas",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_precargar_ventanas");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precargar Por Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_precargar_por_usuario");
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Cargar Por Parte",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_cargar_por_parte");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();		
		
		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrogeneralusuario";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ParametroGeneralUsuarios");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getfecha_sistema());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getdia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.gettipovisual_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.gettipofondo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.gettipofondoborde_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.gettipofondocontrol_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.gettipofuente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.gettipotamaniocontrolnormal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.gettipotamaniocontrolrelacion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_tamanio_control_manual());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_tamanio_control_todo_relacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_guardar_relaciones());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_mensaje_confirmacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_botones_tool_bar());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_mostrar_acciones_campo_general());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.gettipoexportar_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.gettipodelimiter_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_exportar_cabecera());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_exportar_campo_version());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getpath_exportar());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_precargar_ventanas());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_precargar_por_usuario());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE);
					iRow++;

					for(ParametroGeneralUsuario parametrogeneralusuario:parametrogeneralusuariosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrogeneralusuario.getcon_cargar_por_parte());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelParametroGeneralUsuario(row);				
			//	iRow++;
			//}				
			
			//for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuariosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelParametroGeneralUsuario(parametrogeneralusuarioAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroGeneralUsuario(false);
			
			//SI ES MANUAL
			if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroGeneralUsuario();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroGeneralUsuario(false);
			
			//SI ES MANUAL
			if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroGeneralUsuario();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroGeneralUsuario(false);
			
			//SI ES MANUAL
			if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroGeneralUsuario();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaParametroGeneralUsuario() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosParametroGeneralUsuario.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosParametroGeneralUsuario.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosParametroGeneralUsuario.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosParametroGeneralUsuario.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosParametroGeneralUsuario.setMinimumSize(dimensionMinimum);
		this.jTableDatosParametroGeneralUsuario.setMaximumSize(dimensionMaximum);
		this.jTableDatosParametroGeneralUsuario.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingParametroGeneralUsuario(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingParametroGeneralUsuario(esInicializar,true);
	}
	
	public void inicializarActualizarBindingParametroGeneralUsuario(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaParametroGeneralUsuario(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesParametroGeneralUsuario(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasParametroGeneralUsuario(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroGeneralUsuario(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesParametroGeneralUsuario(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualParametroGeneralUsuario() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaParametroGeneralUsuario();
		
		this.inicializarActualizarBindingBotonesManualParametroGeneralUsuario(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualParametroGeneralUsuario();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroGeneralUsuario() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualParametroGeneralUsuario(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualParametroGeneralUsuario(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosParametroGeneralUsuario.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosParametroGeneralUsuario.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteParametroGeneralUsuario.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxPostAccionNuevoParametroGeneralUsuario.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxPostAccionSinCerrarParametroGeneralUsuario.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxPostAccionSinMensajeParametroGeneralUsuario.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosParametroGeneralUsuario.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosParametroGeneralUsuario.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteParametroGeneralUsuario.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxPostAccionNuevoParametroGeneralUsuario.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxPostAccionSinCerrarParametroGeneralUsuario.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxPostAccionSinMensajeParametroGeneralUsuario.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionParametroGeneralUsuario.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionParametroGeneralUsuario.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesParametroGeneralUsuario.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesParametroGeneralUsuario.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesParametroGeneralUsuario.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarParametroGeneralUsuario.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesParametroGeneralUsuario.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesParametroGeneralUsuario.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralParametroGeneralUsuario.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesParametroGeneralUsuario(Boolean esInicializar) throws Exception {
		try	{	
			if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualParametroGeneralUsuario(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesParametroGeneralUsuario() throws Exception {
		try	{
			if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroGeneralUsuario();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroGeneralUsuario() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroGeneralUsuario() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesParametroGeneralUsuario.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesParametroGeneralUsuario.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesParametroGeneralUsuario.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesParametroGeneralUsuario.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesParametroGeneralUsuario.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesParametroGeneralUsuario.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionParametroGeneralUsuario.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionParametroGeneralUsuario.addItem(reporte);
			}
			
			
			if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionParametroGeneralUsuario.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionParametroGeneralUsuario.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesParametroGeneralUsuario.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesParametroGeneralUsuario.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesParametroGeneralUsuario.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesParametroGeneralUsuario.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarParametroGeneralUsuario.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarParametroGeneralUsuario.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarParametroGeneralUsuario.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroGeneralUsuario();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroGeneralUsuario() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario!=null) {
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario!=null) {
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario!=null) {
				
				if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualParametroGeneralUsuario()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.getSelectedItem()!=null){this.id_empresaFK_IdEmpresa=((Empresa)this.jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.getSelectedItem()!=null){this.id_monedaFK_IdMoneda=((Moneda)this.jComboBoxid_monedaFK_IdMonedaParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.getSelectedItem()!=null){this.id_tipo_delimiterFK_IdTipoDelimiter=((TipoDelimiter)this.jComboBoxid_tipo_delimiterFK_IdTipoDelimiterParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.getSelectedItem()!=null){this.id_tipo_exportarFK_IdTipoExportar=((TipoExportar)this.jComboBoxid_tipo_exportarFK_IdTipoExportarParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.getSelectedItem()!=null){this.id_tipo_fondoFK_IdTipoFondo=((TipoFondo)this.jComboBoxid_tipo_fondoFK_IdTipoFondoParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.getSelectedItem()!=null){this.id_tipo_fondo_bordeFK_IdTipoFondoBorde=((TipoFondo)this.jComboBoxid_tipo_fondo_bordeFK_IdTipoFondoBordeParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.getSelectedItem()!=null){this.id_tipo_fondo_controlFK_IdTipoFondoControl=((TipoFondoControl)this.jComboBoxid_tipo_fondo_controlFK_IdTipoFondoControlParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.getSelectedItem()!=null){this.id_tipo_fuenteFK_IdTipoFuente=((TipoFuente)this.jComboBoxid_tipo_fuenteFK_IdTipoFuenteParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.getSelectedItem()!=null){this.id_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal=((TipoTamanioControl)this.jComboBoxid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormalParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.getSelectedItem()!=null){this.id_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion=((TipoTamanioControl)this.jComboBoxid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.getSelectedItem()).getId();}
		if(this.jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.getSelectedItem()!=null){this.id_usuarioFK_IdUsuario=((Usuario)this.jComboBoxid_usuarioFK_IdUsuarioParametroGeneralUsuario.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasParametroGeneralUsuario(Boolean esInicializar) throws Exception {				
		if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualParametroGeneralUsuario();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaParametroGeneralUsuario() throws Exception {
		this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByParametroGeneralUsuario() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByParametroGeneralUsuario.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByParametroGeneralUsuario.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroGeneralUsuario.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByParametroGeneralUsuario.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroGeneralUsuario.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosParametroGeneralUsuarioOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuarioOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByParametroGeneralUsuario.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroGeneralUsuario.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByParametroGeneralUsuario.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaParametroGeneralUsuario(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=parametrogeneralusuarios.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosParametroGeneralUsuario.setModel(new ParametroGeneralUsuarioModel(this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosParametroGeneralUsuario.setModel(new ParametroGeneralUsuarioModel(this.parametrogeneralusuarios,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByParametroGeneralUsuario!=null && this.jInternalFrameOrderByParametroGeneralUsuario.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByParametroGeneralUsuario();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ParametroGeneralUsuarioConstantesFunciones.SCLASSWEBTITULO,parametrogeneralusuarioConstantesFunciones.resaltarSeleccionarParametroGeneralUsuario,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ParametroGeneralUsuarioConstantesFunciones.SCLASSWEBTITULO,parametrogeneralusuarioConstantesFunciones.resaltarSeleccionarParametroGeneralUsuario,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_ID));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_usuarioParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_ID,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarid_usuarioParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarid_usuarioParametroGeneralUsuario,this,true,"id_usuarioParametroGeneralUsuario","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarid_usuarioParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarid_usuarioParametroGeneralUsuario,this,true,"id_usuarioParametroGeneralUsuario","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_empresaParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_empresaParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_empresaParametroGeneralUsuario));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_empresaParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_empresaParametroGeneralUsuario,true,"id_empresaParametroGeneralUsuario","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_sucursalParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_sucursalParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_sucursalParametroGeneralUsuario));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_sucursalParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_sucursalParametroGeneralUsuario,true,"id_sucursalParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_ejercicioParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_ejercicioParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_ejercicioParametroGeneralUsuario));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_ejercicioParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_ejercicioParametroGeneralUsuario,true,"id_ejercicioParametroGeneralUsuario","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_periodoParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_periodoParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_periodoParametroGeneralUsuario));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_periodoParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_periodoParametroGeneralUsuario,true,"id_periodoParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_monedaParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_monedaParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_monedaParametroGeneralUsuario));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_monedaParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_monedaParametroGeneralUsuario,true,"id_monedaParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarfecha_sistemaParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarfecha_sistemaParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarfecha_sistemaParametroGeneralUsuario,this,true,"fecha_sistemaParametroGeneralUsuario","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarfecha_sistemaParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarfecha_sistemaParametroGeneralUsuario,this,true,"fecha_sistemaParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_anioParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_anioParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_anioParametroGeneralUsuario));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_anioParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_anioParametroGeneralUsuario,true,"id_anioParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_mesParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_mesParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_mesParametroGeneralUsuario));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_mesParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_mesParametroGeneralUsuario,true,"id_mesParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrardiaParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltardiaParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activardiaParametroGeneralUsuario,this,true,"diaParametroGeneralUsuario","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltardiaParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activardiaParametroGeneralUsuario,this,true,"diaParametroGeneralUsuario","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_visualParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoVisualTableCell(this.tipovisualsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_visualParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_visualParametroGeneralUsuario));
			tableColumn.setCellEditor(new TipoVisualTableCell(this.tipovisualsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_visualParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_visualParametroGeneralUsuario,true,"id_tipo_visualParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fondoParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoFondoTableCell(this.tipofondosForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondoParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondoParametroGeneralUsuario));
			tableColumn.setCellEditor(new TipoFondoTableCell(this.tipofondosForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondoParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondoParametroGeneralUsuario,true,"id_tipo_fondoParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fondo_bordeParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoFondoTableCell(this.tipofondobordesForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondo_bordeParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondo_bordeParametroGeneralUsuario));
			tableColumn.setCellEditor(new TipoFondoTableCell(this.tipofondobordesForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondo_bordeParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondo_bordeParametroGeneralUsuario,true,"id_tipo_fondo_bordeParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fondo_controlParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoFondoControlTableCell(this.tipofondocontrolsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondo_controlParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondo_controlParametroGeneralUsuario));
			tableColumn.setCellEditor(new TipoFondoControlTableCell(this.tipofondocontrolsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondo_controlParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondo_controlParametroGeneralUsuario,true,"id_tipo_fondo_controlParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fuenteParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoFuenteTableCell(this.tipofuentesForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fuenteParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fuenteParametroGeneralUsuario));
			tableColumn.setCellEditor(new TipoFuenteTableCell(this.tipofuentesForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fuenteParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fuenteParametroGeneralUsuario,true,"id_tipo_fuenteParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_tamanio_control_normalParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoTamanioControlTableCell(this.tipotamaniocontrolnormalsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_tamanio_control_normalParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_tamanio_control_normalParametroGeneralUsuario));
			tableColumn.setCellEditor(new TipoTamanioControlTableCell(this.tipotamaniocontrolnormalsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_tamanio_control_normalParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_tamanio_control_normalParametroGeneralUsuario,true,"id_tipo_tamanio_control_normalParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_tamanio_control_relacionParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoTamanioControlTableCell(this.tipotamaniocontrolrelacionsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_tamanio_control_relacionParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_tamanio_control_relacionParametroGeneralUsuario));
			tableColumn.setCellEditor(new TipoTamanioControlTableCell(this.tipotamaniocontrolrelacionsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_tamanio_control_relacionParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_tamanio_control_relacionParametroGeneralUsuario,true,"id_tipo_tamanio_control_relacionParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_tamanio_control_manualParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_tamanio_control_manualParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_tamanio_control_manualParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_tamanio_control_manualParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_tamanio_control_manualParametroGeneralUsuario,this,true,"con_tamanio_control_manualParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_tamanio_control_todo_relacionParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_tamanio_control_todo_relacionParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_tamanio_control_todo_relacionParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_tamanio_control_todo_relacionParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_tamanio_control_todo_relacionParametroGeneralUsuario,this,true,"con_tamanio_control_todo_relacionParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_guardar_relacionesParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_guardar_relacionesParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_guardar_relacionesParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_guardar_relacionesParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_guardar_relacionesParametroGeneralUsuario,this,true,"con_guardar_relacionesParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_mensaje_confirmacionParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mensaje_confirmacionParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_mensaje_confirmacionParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mensaje_confirmacionParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_mensaje_confirmacionParametroGeneralUsuario,this,true,"con_mensaje_confirmacionParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_botones_tool_barParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_botones_tool_barParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_botones_tool_barParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_botones_tool_barParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_botones_tool_barParametroGeneralUsuario,this,true,"con_botones_tool_barParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_mostrar_acciones_campo_generalParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mostrar_acciones_campo_generalParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_mostrar_acciones_campo_generalParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mostrar_acciones_campo_generalParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_mostrar_acciones_campo_generalParametroGeneralUsuario,this,true,"con_mostrar_acciones_campo_generalParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario,this,true,"con_mostrar_acciones_campo_relacionesParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_exportarParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoExportarTableCell(this.tipoexportarsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_exportarParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_exportarParametroGeneralUsuario));
			tableColumn.setCellEditor(new TipoExportarTableCell(this.tipoexportarsForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_exportarParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_exportarParametroGeneralUsuario,true,"id_tipo_exportarParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_delimiterParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDelimiterTableCell(this.tipodelimitersForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_delimiterParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_delimiterParametroGeneralUsuario));
			tableColumn.setCellEditor(new TipoDelimiterTableCell(this.tipodelimitersForeignKey,this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_delimiterParametroGeneralUsuario,this,this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_delimiterParametroGeneralUsuario,true,"id_tipo_delimiterParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_exportar_cabeceraParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_exportar_cabeceraParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_exportar_cabeceraParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_exportar_cabeceraParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_exportar_cabeceraParametroGeneralUsuario,this,true,"con_exportar_cabeceraParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_exportar_campo_versionParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_exportar_campo_versionParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_exportar_campo_versionParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_exportar_campo_versionParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_exportar_campo_versionParametroGeneralUsuario,this,true,"con_exportar_campo_versionParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarpath_exportarParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarpath_exportarParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarpath_exportarParametroGeneralUsuario,this,true,"path_exportarParametroGeneralUsuario","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarpath_exportarParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarpath_exportarParametroGeneralUsuario,this,true,"path_exportarParametroGeneralUsuario","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_precargar_ventanasParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_precargar_ventanasParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_precargar_ventanasParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_precargar_ventanasParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_precargar_ventanasParametroGeneralUsuario,this,true,"con_precargar_ventanasParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_precargar_por_usuarioParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_precargar_por_usuarioParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_precargar_por_usuarioParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_precargar_por_usuarioParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_precargar_por_usuarioParametroGeneralUsuario,this,true,"con_precargar_por_usuarioParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE));

		if(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_cargar_por_parteParametroGeneralUsuario && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_cargar_por_parteParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_cargar_por_parteParametroGeneralUsuario));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_cargar_por_parteParametroGeneralUsuario,this.parametrogeneralusuarioConstantesFunciones.activarcon_cargar_por_parteParametroGeneralUsuario,this,true,"con_cargar_por_parteParametroGeneralUsuario","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroGeneralUsuarioPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroGeneralUsuario.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroGeneralUsuario.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosParametroGeneralUsuario.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosParametroGeneralUsuario.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosParametroGeneralUsuario.moveColumn(this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosParametroGeneralUsuario.moveColumn(this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosParametroGeneralUsuario.moveColumn(this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosParametroGeneralUsuario.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosParametroGeneralUsuario.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosParametroGeneralUsuario,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosParametroGeneralUsuario.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosParametroGeneralUsuario.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosParametroGeneralUsuario.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosParametroGeneralUsuario.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosParametroGeneralUsuario.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosParametroGeneralUsuario();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoParametroGeneralUsuario=false;
					
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
				if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroGeneralUsuario.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.parametrogeneralusuario.getsType().equals("DUPLICADO")
				   || this.parametrogeneralusuario.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoParametroGeneralUsuario=true;
				
				} else {
					this.isEsNuevoParametroGeneralUsuario=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
					if(this.parametrogeneralusuario.getId()>=0 && !this.parametrogeneralusuario.getIsNew()) {						
						this.isEsNuevoParametroGeneralUsuario=false;
						
					} else {
						this.isEsNuevoParametroGeneralUsuario=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoParametroGeneralUsuario(esRelaciones);						
				
				this.seleccionarParametroGeneralUsuario(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.parametrogeneralusuario.getId()<0) {
					this.isEsNuevoParametroGeneralUsuario=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarParametroGeneralUsuario(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarParametroGeneralUsuario(evt,rowIndex);
				}	
				
				if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ParametroGeneralUsuario: " + this.dDif); 
					}
				}								
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarParametroGeneralUsuario(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.parametrogeneralusuario)) {
					if(this.parametrogeneralusuario.getId()>0) {
						this.parametrogeneralusuario.setIsDeleted(true);
						
						this.parametrogeneralusuariosEliminados.add(this.parametrogeneralusuario);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().remove(this.parametrogeneralusuario);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuarios.remove(this.parametrogeneralusuario);				
					}
					
					
					((ParametroGeneralUsuarioModel) this.jTableDatosParametroGeneralUsuario.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarParametroGeneralUsuario(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoParametroGeneralUsuario) {
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroGeneralUsuario.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroGeneralUsuario.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioParametroGeneralUsuario(this.parametrogeneralusuario);
				}
				
				//ARCHITECTURE
				try {
					

					//Usuario
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_usuarioParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_usuarioParametroGeneralUsuario) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_usuario());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(parametrogeneralusuario.getUsuario()!=null) {
							this.usuariosForeignKey.add(parametrogeneralusuario.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.parametrogeneralusuario.getid_usuario(),false,"Formulario");

					//Empresa
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_empresaParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_empresaParametroGeneralUsuario) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_empresa());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(parametrogeneralusuario.getEmpresa()!=null) {
							this.empresasForeignKey.add(parametrogeneralusuario.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.parametrogeneralusuario.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_sucursalParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_sucursalParametroGeneralUsuario) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_sucursal());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(parametrogeneralusuario.getSucursal()!=null) {
							this.sucursalsForeignKey.add(parametrogeneralusuario.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.parametrogeneralusuario.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_ejercicioParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_ejercicioParametroGeneralUsuario) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_ejercicio());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(parametrogeneralusuario.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(parametrogeneralusuario.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.parametrogeneralusuario.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_periodoParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_periodoParametroGeneralUsuario) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_periodo());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(parametrogeneralusuario.getPeriodo()!=null) {
							this.periodosForeignKey.add(parametrogeneralusuario.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.parametrogeneralusuario.getid_periodo(),false,"Formulario");

					//Moneda
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_monedaParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_monedaParametroGeneralUsuario) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_moneda());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(parametrogeneralusuario.getMoneda()!=null) {
							this.monedasForeignKey.add(parametrogeneralusuario.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.parametrogeneralusuario.getid_moneda(),false,"Formulario");

					//Anio
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_anioParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_anioParametroGeneralUsuario) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_anio());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(parametrogeneralusuario.getAnio()!=null) {
							this.aniosForeignKey.add(parametrogeneralusuario.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.parametrogeneralusuario.getid_anio(),false,"Formulario");

					//Mes
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_mesParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_mesParametroGeneralUsuario) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_mes());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(parametrogeneralusuario.getMes()!=null) {
							this.messForeignKey.add(parametrogeneralusuario.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.parametrogeneralusuario.getid_mes(),false,"Formulario");

					//TipoVisual
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_visualParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_tipo_visualParametroGeneralUsuario) {
						//this.cargarCombosTipoVisualsForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_tipo_visual());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.tipovisualsForeignKey=new ArrayList<TipoVisual>();

						if(parametrogeneralusuario.getTipoVisual()!=null) {
							this.tipovisualsForeignKey.add(parametrogeneralusuario.getTipoVisual());
						}

						this.addItemDefectoCombosForeignKeyTipoVisual();
						this.cargarCombosFrameTipoVisualsForeignKey("Todos");
					}
					this.setActualTipoVisualForeignKey(this.parametrogeneralusuario.getid_tipo_visual(),false,"Formulario");

					//TipoFondo
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fondoParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_tipo_fondoParametroGeneralUsuario) {
						//this.cargarCombosTipoFondosForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_tipo_fondo());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.tipofondosForeignKey=new ArrayList<TipoFondo>();

						if(parametrogeneralusuario.getTipoFondo()!=null) {
							this.tipofondosForeignKey.add(parametrogeneralusuario.getTipoFondo());
						}

						this.addItemDefectoCombosForeignKeyTipoFondo();
						this.cargarCombosFrameTipoFondosForeignKey("Todos");
					}
					this.setActualTipoFondoForeignKey(this.parametrogeneralusuario.getid_tipo_fondo(),false,"Formulario");

					//TipoFondoBorde
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fondo_bordeParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_tipo_fondo_bordeParametroGeneralUsuario) {
						//this.cargarCombosTipoFondoBordesForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_tipo_fondo_borde());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.tipofondobordesForeignKey=new ArrayList<TipoFondo>();

						if(parametrogeneralusuario.getTipoFondoBorde()!=null) {
							this.tipofondobordesForeignKey.add(parametrogeneralusuario.getTipoFondoBorde());
						}

						this.addItemDefectoCombosForeignKeyTipoFondoBorde();
						this.cargarCombosFrameTipoFondoBordesForeignKey("Todos");
					}
					this.setActualTipoFondoBordeForeignKey(this.parametrogeneralusuario.getid_tipo_fondo_borde(),false,"Formulario");

					//TipoFondoControl
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fondo_controlParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_tipo_fondo_controlParametroGeneralUsuario) {
						//this.cargarCombosTipoFondoControlsForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_tipo_fondo_control());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.tipofondocontrolsForeignKey=new ArrayList<TipoFondoControl>();

						if(parametrogeneralusuario.getTipoFondoControl()!=null) {
							this.tipofondocontrolsForeignKey.add(parametrogeneralusuario.getTipoFondoControl());
						}

						this.addItemDefectoCombosForeignKeyTipoFondoControl();
						this.cargarCombosFrameTipoFondoControlsForeignKey("Todos");
					}
					this.setActualTipoFondoControlForeignKey(this.parametrogeneralusuario.getid_tipo_fondo_control(),false,"Formulario");

					//TipoFuente
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_fuenteParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_tipo_fuenteParametroGeneralUsuario) {
						//this.cargarCombosTipoFuentesForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_tipo_fuente());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.tipofuentesForeignKey=new ArrayList<TipoFuente>();

						if(parametrogeneralusuario.getTipoFuente()!=null) {
							this.tipofuentesForeignKey.add(parametrogeneralusuario.getTipoFuente());
						}

						this.addItemDefectoCombosForeignKeyTipoFuente();
						this.cargarCombosFrameTipoFuentesForeignKey("Todos");
					}
					this.setActualTipoFuenteForeignKey(this.parametrogeneralusuario.getid_tipo_fuente(),false,"Formulario");

					//TipoTamanioControlNormal
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_tamanio_control_normalParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_tipo_tamanio_control_normalParametroGeneralUsuario) {
						//this.cargarCombosTipoTamanioControlNormalsForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_tipo_tamanio_control_normal());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.tipotamaniocontrolnormalsForeignKey=new ArrayList<TipoTamanioControl>();

						if(parametrogeneralusuario.getTipoTamanioControlNormal()!=null) {
							this.tipotamaniocontrolnormalsForeignKey.add(parametrogeneralusuario.getTipoTamanioControlNormal());
						}

						this.addItemDefectoCombosForeignKeyTipoTamanioControlNormal();
						this.cargarCombosFrameTipoTamanioControlNormalsForeignKey("Todos");
					}
					this.setActualTipoTamanioControlNormalForeignKey(this.parametrogeneralusuario.getid_tipo_tamanio_control_normal(),false,"Formulario");

					//TipoTamanioControlRelacion
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_tamanio_control_relacionParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_tipo_tamanio_control_relacionParametroGeneralUsuario) {
						//this.cargarCombosTipoTamanioControlRelacionsForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_tipo_tamanio_control_relacion());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.tipotamaniocontrolrelacionsForeignKey=new ArrayList<TipoTamanioControl>();

						if(parametrogeneralusuario.getTipoTamanioControlRelacion()!=null) {
							this.tipotamaniocontrolrelacionsForeignKey.add(parametrogeneralusuario.getTipoTamanioControlRelacion());
						}

						this.addItemDefectoCombosForeignKeyTipoTamanioControlRelacion();
						this.cargarCombosFrameTipoTamanioControlRelacionsForeignKey("Todos");
					}
					this.setActualTipoTamanioControlRelacionForeignKey(this.parametrogeneralusuario.getid_tipo_tamanio_control_relacion(),false,"Formulario");

					//TipoExportar
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_exportarParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_tipo_exportarParametroGeneralUsuario) {
						//this.cargarCombosTipoExportarsForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_tipo_exportar());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.tipoexportarsForeignKey=new ArrayList<TipoExportar>();

						if(parametrogeneralusuario.getTipoExportar()!=null) {
							this.tipoexportarsForeignKey.add(parametrogeneralusuario.getTipoExportar());
						}

						this.addItemDefectoCombosForeignKeyTipoExportar();
						this.cargarCombosFrameTipoExportarsForeignKey("Todos");
					}
					this.setActualTipoExportarForeignKey(this.parametrogeneralusuario.getid_tipo_exportar(),false,"Formulario");

					//TipoDelimiter
					if(!this.parametrogeneralusuarioConstantesFunciones.cargarid_tipo_delimiterParametroGeneralUsuario || this.parametrogeneralusuarioConstantesFunciones.event_dependid_tipo_delimiterParametroGeneralUsuario) {
						//this.cargarCombosTipoDelimitersForeignKeyLista(" where id="+this.parametrogeneralusuario.getid_tipo_delimiter());
									//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
						this.tipodelimitersForeignKey=new ArrayList<TipoDelimiter>();

						if(parametrogeneralusuario.getTipoDelimiter()!=null) {
							this.tipodelimitersForeignKey.add(parametrogeneralusuario.getTipoDelimiter());
						}

						this.addItemDefectoCombosForeignKeyTipoDelimiter();
						this.cargarCombosFrameTipoDelimitersForeignKey("Todos");
					}
					this.setActualTipoDelimiterForeignKey(this.parametrogeneralusuario.getid_tipo_delimiter(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesParametroGeneralUsuario("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesParametroGeneralUsuario(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroGeneralUsuario() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoParametroGeneralUsuario(parametrogeneralusuario,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioParametroGeneralUsuario(parametrogeneralusuario);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyParametroGeneralUsuario(parametrogeneralusuario,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyParametroGeneralUsuario(parametrogeneralusuario);
	}
	
	public void setVariablesObjetoActualToFormularioParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.setText(parametrogeneralusuario.getId().toString());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jDateChooserfecha_sistemaParametroGeneralUsuario.setDate(parametrogeneralusuario.getfecha_sistema());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextFielddiaParametroGeneralUsuario.setText(parametrogeneralusuario.getdia().toString());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_manualParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_tamanio_control_manual());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_todo_relacionParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_tamanio_control_todo_relacion());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_guardar_relacionesParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_guardar_relaciones());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mensaje_confirmacionParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_mensaje_confirmacion());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_botones_tool_barParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_botones_tool_bar());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_generalParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_mostrar_acciones_campo_general());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_cabeceraParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_exportar_cabecera());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_campo_versionParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_exportar_campo_version());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextAreapath_exportarParametroGeneralUsuario.setText(parametrogeneralusuario.getpath_exportar());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_ventanasParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_precargar_ventanas());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_por_usuarioParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_precargar_por_usuario());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_cargar_por_parteParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_cargar_por_parte());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ParametroGeneralUsuario parametrogeneralusuarioLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,parametrogeneralusuarioLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ParametroGeneralUsuario parametrogeneralusuarioLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				parametrogeneralusuarioLocal=this.parametrogeneralusuario;
			} else {
				parametrogeneralusuarioLocal=this.parametrogeneralusuarioAnterior;
			}
		}
		
		if(this.permiteMantenimiento(parametrogeneralusuarioLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoParametroGeneralUsuario(parametrogeneralusuarioLocal,true);
					
					if(parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(parametrogeneralusuarioLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(parametrogeneralusuarioLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(parametrogeneralusuario,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(parametrogeneralusuario);
	}
	
	public void setVariablesFormularioToObjetoActualParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(parametrogeneralusuario,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.getText()==null || this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.getText()=="" || this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.getText()=="Id") {
				this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.setText("0");
			}

			if(conColumnasBase) {parametrogeneralusuario.setId(Long.parseLong(this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.getText()));}

		try {
			parametrogeneralusuario.setfecha_sistema(this.jInternalFrameDetalleFormParametroGeneralUsuario.jDateChooserfecha_sistemaParametroGeneralUsuario.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelfecha_sistemaParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setdia(Integer.parseInt(this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextFielddiaParametroGeneralUsuario.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabeldiaParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_tamanio_control_manual(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_manualParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_tamanio_control_manualParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_tamanio_control_todo_relacion(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_todo_relacionParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_tamanio_control_todo_relacionParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_guardar_relaciones(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_guardar_relacionesParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_guardar_relacionesParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_mensaje_confirmacion(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mensaje_confirmacionParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_mensaje_confirmacionParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_botones_tool_bar(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_botones_tool_barParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_botones_tool_barParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_mostrar_acciones_campo_general(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_generalParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_mostrar_acciones_campo_generalParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_mostrar_acciones_campo_relaciones(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_exportar_cabecera(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_cabeceraParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_exportar_cabeceraParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_exportar_campo_version(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_campo_versionParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_exportar_campo_versionParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setpath_exportar(this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextAreapath_exportarParametroGeneralUsuario.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelpath_exportarParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_precargar_ventanas(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_ventanasParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_precargar_ventanasParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_precargar_por_usuario(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_por_usuarioParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_precargar_por_usuarioParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrogeneralusuario.setcon_cargar_por_parte(this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_cargar_por_parteParametroGeneralUsuario.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelcon_cargar_por_parteParametroGeneralUsuario,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuarioBean,ParametroGeneralUsuario parametrogeneralusuario,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrogeneralusuarioBean.getId()!=null && !parametrogeneralusuarioBean.getId().equals(-1L))) {parametrogeneralusuario.setId(parametrogeneralusuarioBean.getId());}}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuarioOrigen,ParametroGeneralUsuario parametrogeneralusuario,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getId()!=null && !parametrogeneralusuarioOrigen.getId().equals(-1L))) {parametrogeneralusuario.setId(parametrogeneralusuarioOrigen.getId());}}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getfecha_sistema()!=null && !parametrogeneralusuarioOrigen.getfecha_sistema().equals(new Date()))) {parametrogeneralusuario.setfecha_sistema(parametrogeneralusuarioOrigen.getfecha_sistema());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getdia()!=null && !parametrogeneralusuarioOrigen.getdia().equals(0))) {parametrogeneralusuario.setdia(parametrogeneralusuarioOrigen.getdia());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_tamanio_control_manual()!=null && !parametrogeneralusuarioOrigen.getcon_tamanio_control_manual().equals(false))) {parametrogeneralusuario.setcon_tamanio_control_manual(parametrogeneralusuarioOrigen.getcon_tamanio_control_manual());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_tamanio_control_todo_relacion()!=null && !parametrogeneralusuarioOrigen.getcon_tamanio_control_todo_relacion().equals(false))) {parametrogeneralusuario.setcon_tamanio_control_todo_relacion(parametrogeneralusuarioOrigen.getcon_tamanio_control_todo_relacion());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_guardar_relaciones()!=null && !parametrogeneralusuarioOrigen.getcon_guardar_relaciones().equals(false))) {parametrogeneralusuario.setcon_guardar_relaciones(parametrogeneralusuarioOrigen.getcon_guardar_relaciones());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_mensaje_confirmacion()!=null && !parametrogeneralusuarioOrigen.getcon_mensaje_confirmacion().equals(false))) {parametrogeneralusuario.setcon_mensaje_confirmacion(parametrogeneralusuarioOrigen.getcon_mensaje_confirmacion());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_botones_tool_bar()!=null && !parametrogeneralusuarioOrigen.getcon_botones_tool_bar().equals(false))) {parametrogeneralusuario.setcon_botones_tool_bar(parametrogeneralusuarioOrigen.getcon_botones_tool_bar());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_mostrar_acciones_campo_general()!=null && !parametrogeneralusuarioOrigen.getcon_mostrar_acciones_campo_general().equals(false))) {parametrogeneralusuario.setcon_mostrar_acciones_campo_general(parametrogeneralusuarioOrigen.getcon_mostrar_acciones_campo_general());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_mostrar_acciones_campo_relaciones()!=null && !parametrogeneralusuarioOrigen.getcon_mostrar_acciones_campo_relaciones().equals(false))) {parametrogeneralusuario.setcon_mostrar_acciones_campo_relaciones(parametrogeneralusuarioOrigen.getcon_mostrar_acciones_campo_relaciones());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_exportar_cabecera()!=null && !parametrogeneralusuarioOrigen.getcon_exportar_cabecera().equals(false))) {parametrogeneralusuario.setcon_exportar_cabecera(parametrogeneralusuarioOrigen.getcon_exportar_cabecera());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_exportar_campo_version()!=null && !parametrogeneralusuarioOrigen.getcon_exportar_campo_version().equals(false))) {parametrogeneralusuario.setcon_exportar_campo_version(parametrogeneralusuarioOrigen.getcon_exportar_campo_version());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getpath_exportar()!=null && !parametrogeneralusuarioOrigen.getpath_exportar().equals(""))) {parametrogeneralusuario.setpath_exportar(parametrogeneralusuarioOrigen.getpath_exportar());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_precargar_ventanas()!=null && !parametrogeneralusuarioOrigen.getcon_precargar_ventanas().equals(false))) {parametrogeneralusuario.setcon_precargar_ventanas(parametrogeneralusuarioOrigen.getcon_precargar_ventanas());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_precargar_por_usuario()!=null && !parametrogeneralusuarioOrigen.getcon_precargar_por_usuario().equals(false))) {parametrogeneralusuario.setcon_precargar_por_usuario(parametrogeneralusuarioOrigen.getcon_precargar_por_usuario());}
			if(conDefault || (!conDefault && parametrogeneralusuarioOrigen.getcon_cargar_por_parte()!=null && !parametrogeneralusuarioOrigen.getcon_cargar_por_parte().equals(false))) {parametrogeneralusuario.setcon_cargar_por_parte(parametrogeneralusuarioOrigen.getcon_cargar_por_parte());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.setText(parametrogeneralusuario.getId().toString());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jDateChooserfecha_sistemaParametroGeneralUsuario.setDate(parametrogeneralusuario.getfecha_sistema());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextFielddiaParametroGeneralUsuario.setText(parametrogeneralusuario.getdia().toString());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_manualParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_tamanio_control_manual());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_todo_relacionParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_tamanio_control_todo_relacion());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_guardar_relacionesParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_guardar_relaciones());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mensaje_confirmacionParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_mensaje_confirmacion());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_botones_tool_barParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_botones_tool_bar());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_generalParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_mostrar_acciones_campo_general());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_cabeceraParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_exportar_cabecera());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_campo_versionParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_exportar_campo_version());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextAreapath_exportarParametroGeneralUsuario.setText(parametrogeneralusuario.getpath_exportar());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_ventanasParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_precargar_ventanas());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_por_usuarioParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_precargar_por_usuario());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_cargar_por_parteParametroGeneralUsuario.setSelected(parametrogeneralusuario.getcon_cargar_por_parte());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroGeneralUsuario(ParametroGeneralUsuarioBean parametrogeneralusuarioBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.setText(parametrogeneralusuarioBean.getId().toString());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jDateChooserfecha_sistemaParametroGeneralUsuario.setDate(parametrogeneralusuarioBean.getfecha_sistema());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextFielddiaParametroGeneralUsuario.setText(parametrogeneralusuarioBean.getdia().toString());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_manualParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_tamanio_control_manual());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_todo_relacionParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_tamanio_control_todo_relacion());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_guardar_relacionesParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_guardar_relaciones());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mensaje_confirmacionParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_mensaje_confirmacion());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_botones_tool_barParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_botones_tool_bar());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_generalParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_mostrar_acciones_campo_general());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_mostrar_acciones_campo_relaciones());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_cabeceraParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_exportar_cabecera());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_campo_versionParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_exportar_campo_version());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextAreapath_exportarParametroGeneralUsuario.setText(parametrogeneralusuarioBean.getpath_exportar());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_ventanasParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_precargar_ventanas());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_por_usuarioParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_precargar_por_usuario());
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_cargar_por_parteParametroGeneralUsuario.setSelected(parametrogeneralusuarioBean.getcon_cargar_por_parte());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanParametroGeneralUsuario(ParametroGeneralUsuarioParameterReturnGeneral parametrogeneralusuarioReturnGeneral,ParametroGeneralUsuarioBean parametrogeneralusuarioBean,Boolean conDefault) throws Exception { 
		try {
			ParametroGeneralUsuario parametrogeneralusuarioLocal=new ParametroGeneralUsuario();
			
			parametrogeneralusuarioLocal=parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getId()!=null && !parametrogeneralusuarioLocal.getId().equals(-1L))) {parametrogeneralusuarioBean.setId(parametrogeneralusuarioLocal.getId());}}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getfecha_sistema()!=null && !parametrogeneralusuarioLocal.getfecha_sistema().equals(new Date()))) {parametrogeneralusuarioBean.setfecha_sistema(parametrogeneralusuarioLocal.getfecha_sistema());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getdia()!=null && !parametrogeneralusuarioLocal.getdia().equals(0))) {parametrogeneralusuarioBean.setdia(parametrogeneralusuarioLocal.getdia());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_tamanio_control_manual()!=null && !parametrogeneralusuarioLocal.getcon_tamanio_control_manual().equals(false))) {parametrogeneralusuarioBean.setcon_tamanio_control_manual(parametrogeneralusuarioLocal.getcon_tamanio_control_manual());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_tamanio_control_todo_relacion()!=null && !parametrogeneralusuarioLocal.getcon_tamanio_control_todo_relacion().equals(false))) {parametrogeneralusuarioBean.setcon_tamanio_control_todo_relacion(parametrogeneralusuarioLocal.getcon_tamanio_control_todo_relacion());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_guardar_relaciones()!=null && !parametrogeneralusuarioLocal.getcon_guardar_relaciones().equals(false))) {parametrogeneralusuarioBean.setcon_guardar_relaciones(parametrogeneralusuarioLocal.getcon_guardar_relaciones());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_mensaje_confirmacion()!=null && !parametrogeneralusuarioLocal.getcon_mensaje_confirmacion().equals(false))) {parametrogeneralusuarioBean.setcon_mensaje_confirmacion(parametrogeneralusuarioLocal.getcon_mensaje_confirmacion());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_botones_tool_bar()!=null && !parametrogeneralusuarioLocal.getcon_botones_tool_bar().equals(false))) {parametrogeneralusuarioBean.setcon_botones_tool_bar(parametrogeneralusuarioLocal.getcon_botones_tool_bar());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_mostrar_acciones_campo_general()!=null && !parametrogeneralusuarioLocal.getcon_mostrar_acciones_campo_general().equals(false))) {parametrogeneralusuarioBean.setcon_mostrar_acciones_campo_general(parametrogeneralusuarioLocal.getcon_mostrar_acciones_campo_general());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_mostrar_acciones_campo_relaciones()!=null && !parametrogeneralusuarioLocal.getcon_mostrar_acciones_campo_relaciones().equals(false))) {parametrogeneralusuarioBean.setcon_mostrar_acciones_campo_relaciones(parametrogeneralusuarioLocal.getcon_mostrar_acciones_campo_relaciones());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_exportar_cabecera()!=null && !parametrogeneralusuarioLocal.getcon_exportar_cabecera().equals(false))) {parametrogeneralusuarioBean.setcon_exportar_cabecera(parametrogeneralusuarioLocal.getcon_exportar_cabecera());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_exportar_campo_version()!=null && !parametrogeneralusuarioLocal.getcon_exportar_campo_version().equals(false))) {parametrogeneralusuarioBean.setcon_exportar_campo_version(parametrogeneralusuarioLocal.getcon_exportar_campo_version());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getpath_exportar()!=null && !parametrogeneralusuarioLocal.getpath_exportar().equals(""))) {parametrogeneralusuarioBean.setpath_exportar(parametrogeneralusuarioLocal.getpath_exportar());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_precargar_ventanas()!=null && !parametrogeneralusuarioLocal.getcon_precargar_ventanas().equals(false))) {parametrogeneralusuarioBean.setcon_precargar_ventanas(parametrogeneralusuarioLocal.getcon_precargar_ventanas());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_precargar_por_usuario()!=null && !parametrogeneralusuarioLocal.getcon_precargar_por_usuario().equals(false))) {parametrogeneralusuarioBean.setcon_precargar_por_usuario(parametrogeneralusuarioLocal.getcon_precargar_por_usuario());}
			if(conDefault || (!conDefault && parametrogeneralusuarioLocal.getcon_cargar_por_parte()!=null && !parametrogeneralusuarioLocal.getcon_cargar_por_parte().equals(false))) {parametrogeneralusuarioBean.setcon_cargar_por_parte(parametrogeneralusuarioLocal.getcon_cargar_por_parte());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxParametroGeneralUsuarioGenerico(Long idParametroGeneralUsuarioSeleccionado,JComboBox jComboBoxParametroGeneralUsuario,List<ParametroGeneralUsuario> parametrogeneralusuariosLocal)throws Exception {
		try {
			ParametroGeneralUsuario  parametrogeneralusuarioTemp=null;

			for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuariosLocal) {
				if(parametrogeneralusuarioAux.getId()!=null && parametrogeneralusuarioAux.getId().equals(idParametroGeneralUsuarioSeleccionado)) {
					parametrogeneralusuarioTemp=parametrogeneralusuarioAux;
					break;
				}
			}

			jComboBoxParametroGeneralUsuario.setSelectedItem(parametrogeneralusuarioTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxParametroGeneralUsuarioGenerico(JComboBox jComboBoxParametroGeneralUsuario,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxParametroGeneralUsuario.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroGeneralUsuario.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxParametroGeneralUsuario.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroGeneralUsuario.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroGeneralUsuario.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxParametroGeneralUsuario.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroGeneralUsuario.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxParametroGeneralUsuario.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxParametroGeneralUsuario.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxParametroGeneralUsuario.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrogeneralusuario=(ParametroGeneralUsuario) parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrogeneralusuario =(ParametroGeneralUsuario) parametrogeneralusuarios.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.getsucursal_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=parametrogeneralusuario.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.getejercicio_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=parametrogeneralusuario.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.getperiodo_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=parametrogeneralusuario.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.getmes_descripcion();
			}
		}

		if(sTipo.equals("TipoVisual")) {
			//sDescripcion=this.getActualTipoVisualForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.gettipovisual_descripcion();
			} else {
				//sDescripcion=this.getActualTipoVisualForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.gettipovisual_descripcion();
			}
		}

		if(sTipo.equals("TipoFondo")) {
			//sDescripcion=this.getActualTipoFondoForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.gettipofondo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoFondoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.gettipofondo_descripcion();
			}
		}

		if(sTipo.equals("TipoFondoBorde")) {
			//sDescripcion=this.getActualTipoFondoBordeForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.gettipofondoborde_descripcion();
			} else {
				//sDescripcion=this.getActualTipoFondoBordeForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.gettipofondoborde_descripcion();
			}
		}

		if(sTipo.equals("TipoFondoControl")) {
			//sDescripcion=this.getActualTipoFondoControlForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.gettipofondocontrol_descripcion();
			} else {
				//sDescripcion=this.getActualTipoFondoControlForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.gettipofondocontrol_descripcion();
			}
		}

		if(sTipo.equals("TipoFuente")) {
			//sDescripcion=this.getActualTipoFuenteForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.gettipofuente_descripcion();
			} else {
				//sDescripcion=this.getActualTipoFuenteForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.gettipofuente_descripcion();
			}
		}

		if(sTipo.equals("TipoTamanioControlNormal")) {
			//sDescripcion=this.getActualTipoTamanioControlNormalForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.gettipotamaniocontrolnormal_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTamanioControlNormalForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.gettipotamaniocontrolnormal_descripcion();
			}
		}

		if(sTipo.equals("TipoTamanioControlRelacion")) {
			//sDescripcion=this.getActualTipoTamanioControlRelacionForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.gettipotamaniocontrolrelacion_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTamanioControlRelacionForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.gettipotamaniocontrolrelacion_descripcion();
			}
		}

		if(sTipo.equals("TipoExportar")) {
			//sDescripcion=this.getActualTipoExportarForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.gettipoexportar_descripcion();
			} else {
				//sDescripcion=this.getActualTipoExportarForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.gettipoexportar_descripcion();
			}
		}

		if(sTipo.equals("TipoDelimiter")) {
			//sDescripcion=this.getActualTipoDelimiterForeignKeyDescripcion((Long)value);
			if(!parametrogeneralusuario.getIsNew() && !parametrogeneralusuario.getIsChanged() && !parametrogeneralusuario.getIsDeleted()) {
				sDescripcion=parametrogeneralusuario.gettipodelimiter_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDelimiterForeignKeyDescripcion((Long)value);
				sDescripcion=parametrogeneralusuario.gettipodelimiter_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ParametroGeneralUsuario parametrogeneralusuarioRow=new ParametroGeneralUsuario();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrogeneralusuarioRow=(ParametroGeneralUsuario) parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrogeneralusuarioRow=(ParametroGeneralUsuario) parametrogeneralusuarios.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualParametroGeneralUsuario(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaNuevoParametroGeneralUsuario && this.isPermisoNuevoParametroGeneralUsuario));			
			this.jButtonDuplicarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaDuplicarParametroGeneralUsuario && this.isPermisoDuplicarParametroGeneralUsuario));			
			this.jButtonCopiarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaCopiarParametroGeneralUsuario && this.isPermisoCopiarParametroGeneralUsuario));
			this.jButtonVerFormParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaVerFormParametroGeneralUsuario && this.isPermisoVerFormParametroGeneralUsuario));
			
			this.jButtonAbrirOrderByParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaOrdenParametroGeneralUsuario && this.isPermisoOrdenParametroGeneralUsuario));			
			
			this.jButtonNuevoRelacionesParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario && this.isPermisoNuevoParametroGeneralUsuario));			
			this.jButtonNuevoGuardarCambiosParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaNuevoParametroGeneralUsuario && this.isPermisoNuevoParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonModificarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaModificarParametroGeneralUsuario && this.isPermisoActualizarParametroGeneralUsuario));	
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaActualizarParametroGeneralUsuario && this.isPermisoActualizarParametroGeneralUsuario));	
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaEliminarParametroGeneralUsuario && this.isPermisoEliminarParametroGeneralUsuario));
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarParametroGeneralUsuario.setVisible(this.isVisibilidadCeldaCancelarParametroGeneralUsuario);							
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaGuardarParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));			
			
			}
						
			this.jButtonGuardarCambiosTablaParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaNuevoParametroGeneralUsuario && this.isPermisoNuevoParametroGeneralUsuario));						
			this.jButtonDuplicarToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaDuplicarParametroGeneralUsuario && this.isPermisoDuplicarParametroGeneralUsuario));						
			this.jButtonCopiarToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaCopiarParametroGeneralUsuario && this.isPermisoCopiarParametroGeneralUsuario));			
			this.jButtonVerFormToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaVerFormParametroGeneralUsuario && this.isPermisoVerFormParametroGeneralUsuario));			
			this.jButtonAbrirOrderByToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaOrdenParametroGeneralUsuario && this.isPermisoOrdenParametroGeneralUsuario));
			this.jButtonNuevoRelacionesToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario && this.isPermisoNuevoParametroGeneralUsuario));			
			this.jButtonNuevoGuardarCambiosToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaNuevoParametroGeneralUsuario && this.isPermisoNuevoParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));			
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonModificarToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaModificarParametroGeneralUsuario && this.isPermisoActualizarParametroGeneralUsuario));	
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaActualizarParametroGeneralUsuario  && this.isPermisoActualizarParametroGeneralUsuario));	
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaEliminarParametroGeneralUsuario && this.isPermisoEliminarParametroGeneralUsuario));
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarToolBarParametroGeneralUsuario.setVisible(this.isVisibilidadCeldaCancelarParametroGeneralUsuario);				
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaGuardarParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaNuevoParametroGeneralUsuario && this.isPermisoNuevoParametroGeneralUsuario));			
			this.jMenuItemDuplicarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaDuplicarParametroGeneralUsuario && this.isPermisoDuplicarParametroGeneralUsuario));			
			this.jMenuItemCopiarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaCopiarParametroGeneralUsuario && this.isPermisoCopiarParametroGeneralUsuario));			
			this.jMenuItemVerFormParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaVerFormParametroGeneralUsuario && this.isPermisoVerFormParametroGeneralUsuario));			
			this.jMenuItemAbrirOrderByParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaOrdenParametroGeneralUsuario && this.isPermisoOrdenParametroGeneralUsuario));			
			//this.jMenuItemMostrarOcultarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaOrdenParametroGeneralUsuario && this.isPermisoOrdenParametroGeneralUsuario));
			this.jMenuItemDetalleAbrirOrderByParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaOrdenParametroGeneralUsuario && this.isPermisoOrdenParametroGeneralUsuario));			
			//this.jMenuItemDetalleMostrarOcultarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaOrdenParametroGeneralUsuario && this.isPermisoOrdenParametroGeneralUsuario));			
			this.jMenuItemNuevoRelacionesParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario && this.isPermisoNuevoParametroGeneralUsuario));			
			this.jMenuItemNuevoGuardarCambiosParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaNuevoParametroGeneralUsuario && this.isPermisoNuevoParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));									
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemModificarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaModificarParametroGeneralUsuario && this.isPermisoActualizarParametroGeneralUsuario));	
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemActualizarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaActualizarParametroGeneralUsuario && this.isPermisoActualizarParametroGeneralUsuario));	
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemEliminarParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaEliminarParametroGeneralUsuario && this.isPermisoEliminarParametroGeneralUsuario));
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemCancelarParametroGeneralUsuario.setVisible(this.isVisibilidadCeldaCancelarParametroGeneralUsuario);				
			}
			
			this.jMenuItemGuardarCambiosParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaGuardarParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));						
			this.jMenuItemGuardarCambiosTablaParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=this.jButtonNuevoParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaDuplicarParametroGeneralUsuario=this.jButtonDuplicarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaCopiarParametroGeneralUsuario=this.jButtonCopiarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaVerFormParametroGeneralUsuario=this.jButtonVerFormParametroGeneralUsuario.isVisible();
			
			this.isVisibilidadCeldaOrdenParametroGeneralUsuario=this.jButtonAbrirOrderByParametroGeneralUsuario.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=this.jButtonNuevoRelacionesParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=this.jButtonModificarParametroGeneralUsuario.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaGuardarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosParametroGeneralUsuario.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=this.jButtonGuardarCambiosTablaParametroGeneralUsuario.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=this.jButtonNuevoToolBarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=this.jButtonNuevoRelacionesToolBarParametroGeneralUsuario.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonModificarToolBarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarToolBarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarToolBarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarToolBarParametroGeneralUsuario.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroGeneralUsuario=this.jButtonGuardarCambiosToolBarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=this.jButtonGuardarCambiosTablaToolBarParametroGeneralUsuario.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=this.jMenuItemNuevoParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=this.jMenuItemNuevoRelacionesParametroGeneralUsuario.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemModificarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemActualizarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemEliminarParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemCancelarParametroGeneralUsuario.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroGeneralUsuario=this.jMenuItemGuardarCambiosParametroGeneralUsuario.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=this.jMenuItemGuardarCambiosTablaParametroGeneralUsuario.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesParametroGeneralUsuario(Boolean esInicializar) {
		if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {			
			if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
				//if(this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesParametroGeneralUsuario();
			}
			
			this.inicializarActualizarBindingBotonesManualParametroGeneralUsuario(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualParametroGeneralUsuario() {
		this.jButtonNuevoParametroGeneralUsuario.setVisible(this.isPermisoNuevoParametroGeneralUsuario);			
		this.jButtonDuplicarParametroGeneralUsuario.setVisible(this.isPermisoDuplicarParametroGeneralUsuario);			
		this.jButtonCopiarParametroGeneralUsuario.setVisible(this.isPermisoCopiarParametroGeneralUsuario);			
		this.jButtonVerFormParametroGeneralUsuario.setVisible(this.isPermisoVerFormParametroGeneralUsuario);			
		
		this.jButtonAbrirOrderByParametroGeneralUsuario.setVisible(this.isPermisoOrdenParametroGeneralUsuario);					
		
		this.jButtonNuevoRelacionesParametroGeneralUsuario.setVisible(this.isPermisoNuevoParametroGeneralUsuario);			
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonModificarParametroGeneralUsuario.setVisible(this.isPermisoActualizarParametroGeneralUsuario);	
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarParametroGeneralUsuario.setVisible(this.isPermisoActualizarParametroGeneralUsuario);	
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarParametroGeneralUsuario.setVisible(this.isPermisoEliminarParametroGeneralUsuario);
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarParametroGeneralUsuario.setVisible(this.isVisibilidadCeldaCancelarParametroGeneralUsuario);						
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosParametroGeneralUsuario.setVisible(this.isPermisoGuardarCambiosParametroGeneralUsuario);							
		}
		
		this.jButtonGuardarCambiosTablaParametroGeneralUsuario.setVisible(this.isPermisoActualizarParametroGeneralUsuario);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroGeneralUsuario() {
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonModificarParametroGeneralUsuario.setVisible(this.isPermisoActualizarParametroGeneralUsuario);	
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarParametroGeneralUsuario.setVisible(this.isPermisoActualizarParametroGeneralUsuario);	
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarParametroGeneralUsuario.setVisible(this.isPermisoEliminarParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarParametroGeneralUsuario.setVisible(this.isVisibilidadCeldaCancelarParametroGeneralUsuario);							
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosParametroGeneralUsuario.setVisible((this.isVisibilidadCeldaGuardarParametroGeneralUsuario && this.isPermisoGuardarCambiosParametroGeneralUsuario));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosParametroGeneralUsuario() {
		if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualParametroGeneralUsuario();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesParametroGeneralUsuario() {
	}
	
	public void jTableDatosParametroGeneralUsuarioListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarParametroGeneralUsuario(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonid_usuarioParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getId()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getId());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.parametrogeneralusuario.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.parametrogeneralusuario.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.parametrogeneralusuario.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.parametrogeneralusuario.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.parametrogeneralusuario.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.parametrogeneralusuario.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_sistemaParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getfecha_sistema()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_sistema = '"+Funciones2.getStringPostgresDate(this.parametrogeneralusuario.getfecha_sistema())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.parametrogeneralusuario.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.parametrogeneralusuario.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondiaParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getdia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where dia = "+this.parametrogeneralusuario.getdia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_visualParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipovisual=true;

			idTienePermisotipovisual=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(TipoVisualConstantesFunciones.CLASSNAME);

			if(idTienePermisotipovisual) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.tipovisualBeanSwingJInternalFrame=new TipoVisualBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipovisualBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipovisualBeanSwingJInternalFrame.getTipoVisualLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_tipo_visual()!=null) {
					this.tipovisualBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipovisualBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_tipo_visual());
					this.tipovisualBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipovisualBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipovisualBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoVisual();
				}

				JInternalFrameBase jinternalFrame =this.tipovisualBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordertipovisual=(TitledBorder)this.tipovisualBeanSwingJInternalFrame.jScrollPanelDatosTipoVisual.getBorder();

				titledBordertipovisual.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Tipo Visual");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_visualParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_tipo_visual()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_visual = "+this.parametrogeneralusuario.getid_tipo_visual().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_fondoParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipofondo=true;

			idTienePermisotipofondo=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(TipoFondoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipofondo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.tipofondoBeanSwingJInternalFrame=new TipoFondoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipofondoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipofondoBeanSwingJInternalFrame.getTipoFondoLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_tipo_fondo()!=null) {
					this.tipofondoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipofondoBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_tipo_fondo());
					this.tipofondoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipofondoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipofondoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoFondo();
				}

				JInternalFrameBase jinternalFrame =this.tipofondoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordertipofondo=(TitledBorder)this.tipofondoBeanSwingJInternalFrame.jScrollPanelDatosTipoFondo.getBorder();

				titledBordertipofondo.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Tipo Fondo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_fondoParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_tipo_fondo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_fondo = "+this.parametrogeneralusuario.getid_tipo_fondo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_fondo_bordeParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipofondoborde=true;

			idTienePermisotipofondoborde=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(TipoFondoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipofondoborde) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.tipofondobordeBeanSwingJInternalFrame=new TipoFondoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipofondobordeBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipofondobordeBeanSwingJInternalFrame.getTipoFondoLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_tipo_fondo_borde()!=null) {
					this.tipofondobordeBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipofondobordeBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_tipo_fondo_borde());
					this.tipofondobordeBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipofondobordeBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipofondobordeBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoFondo();
				}

				JInternalFrameBase jinternalFrame =this.tipofondobordeBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordertipofondoborde=(TitledBorder)this.tipofondobordeBeanSwingJInternalFrame.jScrollPanelDatosTipoFondo.getBorder();

				titledBordertipofondoborde.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Tipo Fondo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_fondo_bordeParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_tipo_fondo_borde()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_fondo_borde = "+this.parametrogeneralusuario.getid_tipo_fondo_borde().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_fondo_controlParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipofondocontrol=true;

			idTienePermisotipofondocontrol=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(TipoFondoControlConstantesFunciones.CLASSNAME);

			if(idTienePermisotipofondocontrol) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.tipofondocontrolBeanSwingJInternalFrame=new TipoFondoControlBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipofondocontrolBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipofondocontrolBeanSwingJInternalFrame.getTipoFondoControlLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_tipo_fondo_control()!=null) {
					this.tipofondocontrolBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipofondocontrolBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_tipo_fondo_control());
					this.tipofondocontrolBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipofondocontrolBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipofondocontrolBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoFondoControl();
				}

				JInternalFrameBase jinternalFrame =this.tipofondocontrolBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordertipofondocontrol=(TitledBorder)this.tipofondocontrolBeanSwingJInternalFrame.jScrollPanelDatosTipoFondoControl.getBorder();

				titledBordertipofondocontrol.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Tipo Fondo Control");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_fondo_controlParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_tipo_fondo_control()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_fondo_control = "+this.parametrogeneralusuario.getid_tipo_fondo_control().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_fuenteParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipofuente=true;

			idTienePermisotipofuente=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(TipoFuenteConstantesFunciones.CLASSNAME);

			if(idTienePermisotipofuente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.tipofuenteBeanSwingJInternalFrame=new TipoFuenteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipofuenteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipofuenteBeanSwingJInternalFrame.getTipoFuenteLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_tipo_fuente()!=null) {
					this.tipofuenteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipofuenteBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_tipo_fuente());
					this.tipofuenteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipofuenteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipofuenteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoFuente();
				}

				JInternalFrameBase jinternalFrame =this.tipofuenteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordertipofuente=(TitledBorder)this.tipofuenteBeanSwingJInternalFrame.jScrollPanelDatosTipoFuente.getBorder();

				titledBordertipofuente.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Tipo Fuente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_fuenteParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_tipo_fuente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_fuente = "+this.parametrogeneralusuario.getid_tipo_fuente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotamaniocontrolnormal=true;

			idTienePermisotipotamaniocontrolnormal=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(TipoTamanioControlConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotamaniocontrolnormal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.tipotamaniocontrolnormalBeanSwingJInternalFrame=new TipoTamanioControlBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotamaniocontrolnormalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotamaniocontrolnormalBeanSwingJInternalFrame.getTipoTamanioControlLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_tipo_tamanio_control_normal()!=null) {
					this.tipotamaniocontrolnormalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotamaniocontrolnormalBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_tipo_tamanio_control_normal());
					this.tipotamaniocontrolnormalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotamaniocontrolnormalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotamaniocontrolnormalBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTamanioControl();
				}

				JInternalFrameBase jinternalFrame =this.tipotamaniocontrolnormalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordertipotamaniocontrolnormal=(TitledBorder)this.tipotamaniocontrolnormalBeanSwingJInternalFrame.jScrollPanelDatosTipoTamanioControl.getBorder();

				titledBordertipotamaniocontrolnormal.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Tipo Tamanio Control");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_tipo_tamanio_control_normal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_tamanio_control_normal = "+this.parametrogeneralusuario.getid_tipo_tamanio_control_normal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotamaniocontrolrelacion=true;

			idTienePermisotipotamaniocontrolrelacion=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(TipoTamanioControlConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotamaniocontrolrelacion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.tipotamaniocontrolrelacionBeanSwingJInternalFrame=new TipoTamanioControlBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotamaniocontrolrelacionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotamaniocontrolrelacionBeanSwingJInternalFrame.getTipoTamanioControlLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_tipo_tamanio_control_relacion()!=null) {
					this.tipotamaniocontrolrelacionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotamaniocontrolrelacionBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_tipo_tamanio_control_relacion());
					this.tipotamaniocontrolrelacionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotamaniocontrolrelacionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotamaniocontrolrelacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTamanioControl();
				}

				JInternalFrameBase jinternalFrame =this.tipotamaniocontrolrelacionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordertipotamaniocontrolrelacion=(TitledBorder)this.tipotamaniocontrolrelacionBeanSwingJInternalFrame.jScrollPanelDatosTipoTamanioControl.getBorder();

				titledBordertipotamaniocontrolrelacion.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Tipo Tamanio Control");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_tipo_tamanio_control_relacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_tamanio_control_relacion = "+this.parametrogeneralusuario.getid_tipo_tamanio_control_relacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_tamanio_control_manualParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_tamanio_control_manual()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_tamanio_control_manual = "+this.parametrogeneralusuario.getcon_tamanio_control_manual().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_tamanio_control_todo_relacionParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_tamanio_control_todo_relacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_tamanio_control_todo_relacion = "+this.parametrogeneralusuario.getcon_tamanio_control_todo_relacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_guardar_relacionesParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_guardar_relaciones()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_guardar_relaciones = "+this.parametrogeneralusuario.getcon_guardar_relaciones().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_mensaje_confirmacionParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_mensaje_confirmacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_mensaje_confirmacion = "+this.parametrogeneralusuario.getcon_mensaje_confirmacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_botones_tool_barParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_botones_tool_bar()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_botones_tool_bar = "+this.parametrogeneralusuario.getcon_botones_tool_bar().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_mostrar_acciones_campo_generalParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_mostrar_acciones_campo_general()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_mostrar_acciones_campo_general = "+this.parametrogeneralusuario.getcon_mostrar_acciones_campo_general().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_mostrar_acciones_campo_relaciones = "+this.parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_exportarParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoexportar=true;

			idTienePermisotipoexportar=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(TipoExportarConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoexportar) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.tipoexportarBeanSwingJInternalFrame=new TipoExportarBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoexportarBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoexportarBeanSwingJInternalFrame.getTipoExportarLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_tipo_exportar()!=null) {
					this.tipoexportarBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoexportarBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_tipo_exportar());
					this.tipoexportarBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoexportarBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoexportarBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoExportar();
				}

				JInternalFrameBase jinternalFrame =this.tipoexportarBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordertipoexportar=(TitledBorder)this.tipoexportarBeanSwingJInternalFrame.jScrollPanelDatosTipoExportar.getBorder();

				titledBordertipoexportar.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Tipo Exportar");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_exportarParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_tipo_exportar()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_exportar = "+this.parametrogeneralusuario.getid_tipo_exportar().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_delimiterParametroGeneralUsuarioUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodelimiter=true;

			idTienePermisotipodelimiter=this.tienePermisosUsuarioEnPaginaWebParametroGeneralUsuario(TipoDelimiterConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodelimiter) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroGeneralUsuario.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroGeneralUsuario.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);

				this.tipodelimiterBeanSwingJInternalFrame=new TipoDelimiterBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodelimiterBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodelimiterBeanSwingJInternalFrame.getTipoDelimiterLogic().setConnexion(this.parametrogeneralusuarioLogic.getConnexion());

				if(this.parametrogeneralusuario.getid_tipo_delimiter()!=null) {
					this.tipodelimiterBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodelimiterBeanSwingJInternalFrame.setIdActual(this.parametrogeneralusuario.getid_tipo_delimiter());
					this.tipodelimiterBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodelimiterBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodelimiterBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDelimiter();
				}

				JInternalFrameBase jinternalFrame =this.tipodelimiterBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroGeneralUsuario=(TitledBorder)this.jScrollPanelDatosParametroGeneralUsuario.getBorder();
				TitledBorder titledBordertipodelimiter=(TitledBorder)this.tipodelimiterBeanSwingJInternalFrame.jScrollPanelDatosTipoDelimiter.getBorder();

				titledBordertipodelimiter.setTitle(titledBorderParametroGeneralUsuario.getTitle() + " -> Tipo Delimiter");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_delimiterParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getid_tipo_delimiter()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_delimiter = "+this.parametrogeneralusuario.getid_tipo_delimiter().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_exportar_cabeceraParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_exportar_cabecera()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_exportar_cabecera = "+this.parametrogeneralusuario.getcon_exportar_cabecera().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_exportar_campo_versionParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_exportar_campo_version()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_exportar_campo_version = "+this.parametrogeneralusuario.getcon_exportar_campo_version().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpath_exportarParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getpath_exportar()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where path_exportar like '%"+this.parametrogeneralusuario.getpath_exportar()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_precargar_ventanasParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_precargar_ventanas()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_precargar_ventanas = "+this.parametrogeneralusuario.getcon_precargar_ventanas().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_precargar_por_usuarioParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_precargar_por_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_precargar_por_usuario = "+this.parametrogeneralusuario.getcon_precargar_por_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_cargar_por_parteParametroGeneralUsuarioBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.getparametrogeneralusuario(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrogeneralusuario==null) {
						this.parametrogeneralusuario = new ParametroGeneralUsuario();
					}

					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);
				}

				if(this.parametrogeneralusuario.getcon_cargar_por_parte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_cargar_por_parte = "+this.parametrogeneralusuario.getcon_cargar_por_parte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroGeneralUsuario(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdAnio();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdEjercicio();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdEmpresa();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdMes();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdMoneda();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdPeriodo();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdSucursal();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDelimiterParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdTipoDelimiter();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoExportarParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdTipoExportar();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoFondoParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdTipoFondo();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoFondoBordeParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdTipoFondoBorde();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoFondoControlParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdTipoFondoControl();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoFuenteParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdTipoFuente();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTamanioControlNormalParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdTipoTamanioControlNormal();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTamanioControlRelacionParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdTipoTamanioControlRelacion();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoVisualParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdTipoVisual();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioParametroGeneralUsuarioActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);

			this.getParametroGeneralUsuariosFK_IdUsuario();

			this.inicializarActualizarBindingParametroGeneralUsuario(false);

			//if(ParametroGeneralUsuarioBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrogeneralusuarioLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameParametroGeneralUsuario() {
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.setVisible(false);	    			
			this.jInternalFrameDetalleFormParametroGeneralUsuario.dispose();
			this.jInternalFrameDetalleFormParametroGeneralUsuario=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario!=null) {
			this.jInternalFrameReporteDinamicoParametroGeneralUsuario.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoParametroGeneralUsuario.dispose();
			this.jInternalFrameReporteDinamicoParametroGeneralUsuario=null;
		}
		
		if(this.jInternalFrameImportacionParametroGeneralUsuario!=null) {
			this.jInternalFrameImportacionParametroGeneralUsuario.setVisible(false);	    			
			this.jInternalFrameImportacionParametroGeneralUsuario.dispose();
			this.jInternalFrameImportacionParametroGeneralUsuario=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessParametroGeneralUsuario();
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
			
			if(sTipo.equals("NuevoParametroGeneralUsuario")) {
				jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarParametroGeneralUsuario")) {
				jButtonDuplicarParametroGeneralUsuarioActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarParametroGeneralUsuario")) {
				jButtonCopiarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("VerFormParametroGeneralUsuario")) {
				jButtonVerFormParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarParametroGeneralUsuario")) {
				jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarParametroGeneralUsuario")) {
				jButtonDuplicarParametroGeneralUsuarioActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoParametroGeneralUsuario")) {
				jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarParametroGeneralUsuario")) {
				jButtonDuplicarParametroGeneralUsuarioActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesParametroGeneralUsuario")) {
				jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarParametroGeneralUsuario")) {
				jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesParametroGeneralUsuario")) {
				jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarParametroGeneralUsuario")) {
				jButtonModificarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarParametroGeneralUsuario")) {
				jButtonModificarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarParametroGeneralUsuario")) {
				jButtonModificarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("ActualizarParametroGeneralUsuario")) {
				jButtonActualizarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarParametroGeneralUsuario")) {
				jButtonActualizarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarParametroGeneralUsuario")) {
				jButtonActualizarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("EliminarParametroGeneralUsuario")) {
				jButtonEliminarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarParametroGeneralUsuario")) {
				jButtonEliminarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarParametroGeneralUsuario")) {
				jButtonEliminarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("CancelarParametroGeneralUsuario")) {
				jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarParametroGeneralUsuario")) {
				jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarParametroGeneralUsuario")) {
				jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("CerrarParametroGeneralUsuario")) {
				jButtonCerrarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarParametroGeneralUsuario")) {
				jButtonCerrarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarParametroGeneralUsuario")) {
				jButtonCerrarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarParametroGeneralUsuario")) {
				jButtonMostrarOcultarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarParametroGeneralUsuario")) {
				jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosParametroGeneralUsuario")) {
				jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarParametroGeneralUsuario")) {
				jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarParametroGeneralUsuario")) {
				jButtonCopiarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarParametroGeneralUsuario")) {
				jButtonVerFormParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosParametroGeneralUsuario")) {
				jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarParametroGeneralUsuario")) {
				jButtonCopiarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormParametroGeneralUsuario")) {
				jButtonVerFormParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaParametroGeneralUsuario")) {
				jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarParametroGeneralUsuario")) {
				jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaParametroGeneralUsuario")) {
				jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionParametroGeneralUsuario")) {
				jButtonRecargarInformacionParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarParametroGeneralUsuario")) {
				jButtonRecargarInformacionParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionParametroGeneralUsuario")) {
				jButtonRecargarInformacionParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresParametroGeneralUsuario")) {
				jButtonAnterioresParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarParametroGeneralUsuario")) {
				jButtonAnterioresParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreParametroGeneralUsuario")) {
				jButtonAnterioresParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("SiguientesParametroGeneralUsuario")) {
				jButtonSiguientesParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarParametroGeneralUsuario")) {
				jButtonSiguientesParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesParametroGeneralUsuario")) {
				jButtonSiguientesParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByParametroGeneralUsuario") || sTipo.equals("MenuItemDetalleAbrirOrderByParametroGeneralUsuario")) {
				jButtonAbrirOrderByParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarParametroGeneralUsuario") || sTipo.equals("MenuItemDetalleMostrarOcultarParametroGeneralUsuario")) {
				jButtonMostrarOcultarParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosParametroGeneralUsuario")) {
				jButtonNuevoGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarParametroGeneralUsuario")) {
				jButtonNuevoGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosParametroGeneralUsuario")) {
				jButtonNuevoGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoParametroGeneralUsuario")) {
				jButtonCerrarReporteDinamicoParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoParametroGeneralUsuario")) {
				jButtonGenerarReporteDinamicoParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoParametroGeneralUsuario")) {
				
				jButtonGenerarExcelReporteDinamicoParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionParametroGeneralUsuario")) {
				jButtonCerrarImportacionParametroGeneralUsuarioActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionParametroGeneralUsuario")) {
				
				jButtonGenerarImportacionParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionParametroGeneralUsuario")) {
				
				jButtonAbrirImportacionParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesParametroGeneralUsuario")) {
				jComboBoxTiposAccionesParametroGeneralUsuarioActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesParametroGeneralUsuario")) {
				jComboBoxTiposRelacionesParametroGeneralUsuarioActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioParametroGeneralUsuario")) {
				jComboBoxTiposAccionesParametroGeneralUsuarioActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarParametroGeneralUsuario")) {
				
				jComboBoxTiposSeleccionarParametroGeneralUsuarioActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralParametroGeneralUsuario")) {
				jTextFieldValorCampoGeneralParametroGeneralUsuarioActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByParametroGeneralUsuario")) {
				jButtonAbrirOrderByParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarParametroGeneralUsuario")) {
				jButtonAbrirOrderByParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByParametroGeneralUsuario")) {
				jButtonCerrarOrderByParametroGeneralUsuarioActionPerformed(evt);
			} 
						
			
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioParametroGeneralUsuarioUpdate")) {
				this.jButtonid_usuarioParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_usuarioParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroGeneralUsuarioUpdate")) {
				this.jButtonid_empresaParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_empresaParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroGeneralUsuarioUpdate")) {
				this.jButtonid_sucursalParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_sucursalParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioParametroGeneralUsuarioUpdate")) {
				this.jButtonid_ejercicioParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_ejercicioParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoParametroGeneralUsuarioUpdate")) {
				this.jButtonid_periodoParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_periodoParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaParametroGeneralUsuarioUpdate")) {
				this.jButtonid_monedaParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_monedaParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_sistemaParametroGeneralUsuarioBusqueda")) {
				this.jButtonfecha_sistemaParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioParametroGeneralUsuarioUpdate")) {
				this.jButtonid_anioParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_anioParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesParametroGeneralUsuarioUpdate")) {
				this.jButtonid_mesParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_mesParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("diaParametroGeneralUsuarioBusqueda")) {
				this.jButtondiaParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_visualParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_visualParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_visualParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_visualParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_fondoParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_fondoParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_fondoParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_fondoParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_fondo_bordeParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_fondo_bordeParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_fondo_controlParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_fondo_controlParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_fondo_controlParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_fondo_controlParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_fuenteParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_fuenteParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_fuenteParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_fuenteParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_tamanio_control_normalParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_tamanio_control_normalParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_tamanio_control_relacionParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_tamanio_control_manualParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_tamanio_control_manualParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_tamanio_control_todo_relacionParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_tamanio_control_todo_relacionParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_guardar_relacionesParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_guardar_relacionesParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_mensaje_confirmacionParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_mensaje_confirmacionParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_botones_tool_barParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_botones_tool_barParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_mostrar_acciones_campo_generalParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_mostrar_acciones_campo_generalParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_exportarParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_exportarParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_exportarParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_exportarParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_delimiterParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_delimiterParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_delimiterParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_delimiterParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_exportar_cabeceraParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_exportar_cabeceraParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_exportar_campo_versionParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_exportar_campo_versionParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_exportarParametroGeneralUsuarioBusqueda")) {
				this.jButtonpath_exportarParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_precargar_ventanasParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_precargar_ventanasParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_precargar_por_usuarioParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_precargar_por_usuarioParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cargar_por_parteParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_cargar_por_parteParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("FK_IdEmpresaParametroGeneralUsuario")) {
				this.jButtonFK_IdEmpresaParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdMonedaParametroGeneralUsuario")) {
				this.jButtonFK_IdMonedaParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDelimiterParametroGeneralUsuario")) {
				this.jButtonFK_IdTipoDelimiterParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoExportarParametroGeneralUsuario")) {
				this.jButtonFK_IdTipoExportarParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoFondoParametroGeneralUsuario")) {
				this.jButtonFK_IdTipoFondoParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoFondoBordeParametroGeneralUsuario")) {
				this.jButtonFK_IdTipoFondoBordeParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoFondoControlParametroGeneralUsuario")) {
				this.jButtonFK_IdTipoFondoControlParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoFuenteParametroGeneralUsuario")) {
				this.jButtonFK_IdTipoFuenteParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTamanioControlNormalParametroGeneralUsuario")) {
				this.jButtonFK_IdTipoTamanioControlNormalParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTamanioControlRelacionParametroGeneralUsuario")) {
				this.jButtonFK_IdTipoTamanioControlRelacionParametroGeneralUsuarioActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdUsuarioParametroGeneralUsuario")) {
				this.jButtonFK_IdUsuarioParametroGeneralUsuarioActionPerformed(evt);
			}
			
			;
			
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessParametroGeneralUsuario();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				


				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ParametroGeneralUsuario parametrogeneralusuarioLocal=null;
			
			if(!this.getEsControlTabla()) {
				parametrogeneralusuarioLocal=this.parametrogeneralusuario;
			} else {
				parametrogeneralusuarioLocal=this.parametrogeneralusuarioAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
							
				
				


				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroGeneralUsuarioActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
								
						
				


				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
								
				
				


				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroGeneralUsuarioActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
							
				
				


				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
								
				
				


				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroGeneralUsuarioActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroGeneralUsuarioActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosParametroGeneralUsuario")) {
					jCheckBoxSeleccionarTodosParametroGeneralUsuarioItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosParametroGeneralUsuario")) {
					jCheckBoxSeleccionadosParametroGeneralUsuarioItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarParametroGeneralUsuario")) {
					
				}
				
				


				
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
												
				
				


				
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroGeneralUsuarioActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_empresaParametroGeneralUsuario")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario;
				}

				if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
					//classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyEmpresa(jComboBoxGenerico,"Formulario");

				this.recargarFormParametroGeneralUsuario(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario")) {
				this.procesarActionsCombosForeignKeyEmpresa(jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario,"FK_IdEmpresa");
				//recargarFormParametroGeneralUsuarioEmpresa(jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario,"FK_IdEmpresa");
			}
			 else if(sTipo.equals("id_ejercicioParametroGeneralUsuario")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario;
				}

				if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
					//classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyEjercicio(jComboBoxGenerico,"Formulario");

				this.recargarFormParametroGeneralUsuario(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_empresaParametroGeneralUsuario")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario;
				}

				if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
					//classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyEmpresa(jComboBoxGenerico,"Formulario");

				this.recargarFormParametroGeneralUsuario(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario")) {
				this.procesarActionsCombosForeignKeyEmpresa(jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario,"FK_IdEmpresa");
				//recargarFormParametroGeneralUsuarioEmpresa(jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario,"FK_IdEmpresa");
			}
			 else if(sTipo.equals("id_ejercicioParametroGeneralUsuario")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario;
				}

				if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
					//classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyEjercicio(jComboBoxGenerico,"Formulario");

				this.recargarFormParametroGeneralUsuario(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrogeneralusuario);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrogeneralusuario);
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_empresaParametroGeneralUsuario")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario;
				}

				if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
					//classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyEmpresa(jComboBoxGenerico,"Formulario");

				this.recargarFormParametroGeneralUsuario(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario")) {
				this.procesarActionsCombosForeignKeyEmpresa(jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario,"FK_IdEmpresa");
				//recargarFormParametroGeneralUsuarioEmpresa(jComboBoxid_empresaFK_IdEmpresaParametroGeneralUsuario,"FK_IdEmpresa");
			}
			 else if(sTipo.equals("id_ejercicioParametroGeneralUsuario")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario;
				}

				if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
					//classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyEjercicio(jComboBoxGenerico,"Formulario");

				this.recargarFormParametroGeneralUsuario(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroGeneralUsuario.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroGeneralUsuario.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroGeneralUsuarioActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrogeneralusuarioAnterior =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarParametroGeneralUsuario")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosParametroGeneralUsuarioListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosParametroGeneralUsuario.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.parametrogeneralusuario =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.parametrogeneralusuario);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarParametroGeneralUsuario")) {
				
				}
				
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarParametroGeneralUsuario")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosParametroGeneralUsuario.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarParametroGeneralUsuario")) {
			
			}
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessParametroGeneralUsuario();
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
			if(sTipo.equals("NuevoParametroGeneralUsuario")) {
				jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarParametroGeneralUsuario")) {
				jButtonDuplicarParametroGeneralUsuarioActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarParametroGeneralUsuario")) {
				jButtonCopiarParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormParametroGeneralUsuario")) {
				jButtonVerFormParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesParametroGeneralUsuario")) {
				jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarParametroGeneralUsuario")) {
				jButtonModificarParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarParametroGeneralUsuario")) {
				jButtonActualizarParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarParametroGeneralUsuario")) {
				jButtonEliminarParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaParametroGeneralUsuario")) {
				jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarParametroGeneralUsuario")) {
				jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarParametroGeneralUsuario")) {
				jButtonCerrarParametroGeneralUsuarioActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosParametroGeneralUsuario")) {
				jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosParametroGeneralUsuario")) {
				jButtonNuevoGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByParametroGeneralUsuario")) {
				jButtonAbrirOrderByParametroGeneralUsuarioActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionParametroGeneralUsuario")) {
				jButtonRecargarInformacionParametroGeneralUsuarioActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresParametroGeneralUsuario")) {
				jButtonAnterioresParametroGeneralUsuarioActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesParametroGeneralUsuario")) {
				jButtonSiguientesParametroGeneralUsuarioActionPerformed(evt);			
			} 
			
			
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioParametroGeneralUsuarioUpdate")) {
				this.jButtonid_usuarioParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_usuarioParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroGeneralUsuarioUpdate")) {
				this.jButtonid_empresaParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_empresaParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroGeneralUsuarioUpdate")) {
				this.jButtonid_sucursalParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_sucursalParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioParametroGeneralUsuarioUpdate")) {
				this.jButtonid_ejercicioParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_ejercicioParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoParametroGeneralUsuarioUpdate")) {
				this.jButtonid_periodoParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_periodoParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaParametroGeneralUsuarioUpdate")) {
				this.jButtonid_monedaParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_monedaParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_sistemaParametroGeneralUsuarioBusqueda")) {
				this.jButtonfecha_sistemaParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioParametroGeneralUsuarioUpdate")) {
				this.jButtonid_anioParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_anioParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesParametroGeneralUsuarioUpdate")) {
				this.jButtonid_mesParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_mesParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("diaParametroGeneralUsuarioBusqueda")) {
				this.jButtondiaParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_visualParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_visualParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_visualParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_visualParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_fondoParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_fondoParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_fondoParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_fondoParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_fondo_bordeParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_fondo_bordeParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_fondo_controlParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_fondo_controlParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_fondo_controlParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_fondo_controlParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_fuenteParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_fuenteParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_fuenteParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_fuenteParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_tamanio_control_normalParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_tamanio_control_normalParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_tamanio_control_relacionParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_tamanio_control_manualParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_tamanio_control_manualParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_tamanio_control_todo_relacionParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_tamanio_control_todo_relacionParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_guardar_relacionesParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_guardar_relacionesParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_mensaje_confirmacionParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_mensaje_confirmacionParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_botones_tool_barParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_botones_tool_barParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_mostrar_acciones_campo_generalParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_mostrar_acciones_campo_generalParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_exportarParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_exportarParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_exportarParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_exportarParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_delimiterParametroGeneralUsuarioUpdate")) {
				this.jButtonid_tipo_delimiterParametroGeneralUsuarioUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_delimiterParametroGeneralUsuarioBusqueda")) {
				this.jButtonid_tipo_delimiterParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_exportar_cabeceraParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_exportar_cabeceraParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_exportar_campo_versionParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_exportar_campo_versionParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_exportarParametroGeneralUsuarioBusqueda")) {
				this.jButtonpath_exportarParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_precargar_ventanasParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_precargar_ventanasParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_precargar_por_usuarioParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_precargar_por_usuarioParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cargar_por_parteParametroGeneralUsuarioBusqueda")) {
				this.jButtoncon_cargar_por_parteParametroGeneralUsuarioBusquedaActionPerformed(evt);
			}
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessParametroGeneralUsuario();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameParametroGeneralUsuario")) {
				closingInternalFrameParametroGeneralUsuario();
				
			} else if(sTipo.equals("jButtonCancelarParametroGeneralUsuario")) {
				JInternalFrameBase jInternalFrameDetalleFormParametroGeneralUsuario = (JInternalFrameBase)evt.getSource();
	            	
	            ParametroGeneralUsuarioBeanSwingJInternalFrame jInternalFrameParent=(ParametroGeneralUsuarioBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroGeneralUsuario.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarParametroGeneralUsuarioActionPerformed(null);
			}
			
			ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrogeneralusuario,new Object(),this.parametrogeneralusuarioParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormParametroGeneralUsuario(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormParametroGeneralUsuario(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormParametroGeneralUsuario(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.parametrogeneralusuario)) {
			if(!esControlTabla) {
				if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);			
				}
				
				if(this.parametrogeneralusuarioSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrogeneralusuarioReturnGeneral=parametrogeneralusuarioLogic.procesarEventosParametroGeneralUsuariosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios(),this.parametrogeneralusuario,this.parametrogeneralusuarioParameterGeneral,this.isEsNuevoParametroGeneralUsuario,classes);//this.parametrogeneralusuarioLogic.getParametroGeneralUsuario()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanParametroGeneralUsuario(this.parametrogeneralusuarioReturnGeneral,this.parametrogeneralusuarioBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.parametrogeneralusuarioSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanParametroGeneralUsuario(classes,this.parametrogeneralusuarioReturnGeneral,this.parametrogeneralusuarioBean,false);
					}
						
					if(this.parametrogeneralusuarioReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyParametroGeneralUsuario(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioParametroGeneralUsuario(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario());	
					}
						
					if(this.parametrogeneralusuarioReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioParametroGeneralUsuario(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario(),classes);//this.parametrogeneralusuarioBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioParametroGeneralUsuario(this.parametrogeneralusuario,classes);//this.parametrogeneralusuarioBean);									
				}
			
				if(ParametroGeneralUsuarioJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualParametroGeneralUsuario(this.parametrogeneralusuario,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroGeneralUsuario(this.parametrogeneralusuario);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.parametrogeneralusuarioAnterior!=null) {
						this.parametrogeneralusuario=this.parametrogeneralusuarioAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrogeneralusuarioReturnGeneral=parametrogeneralusuarioLogic.procesarEventosParametroGeneralUsuariosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios(),this.parametrogeneralusuario,this.parametrogeneralusuarioParameterGeneral,this.isEsNuevoParametroGeneralUsuario,classes);//this.parametrogeneralusuarioLogic.getParametroGeneralUsuario()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrogeneralusuarioSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario(),parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario(),this.parametrogeneralusuarios);
				}
				//ARCHITECTURE
				
				//this.jTableDatosParametroGeneralUsuario.repaint();
				
				//((AbstractTableModel) this.jTableDatosParametroGeneralUsuario.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosParametroGeneralUsuario();
			}
		}
	}
	
	public void actualizarVisualTableDatosParametroGeneralUsuario() throws Exception {
		
		ParametroGeneralUsuarioModel parametrogeneralusuarioModel=(ParametroGeneralUsuarioModel)this.jTableDatosParametroGeneralUsuario.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrogeneralusuarioModel.parametrogeneralusuarios=this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			parametrogeneralusuarioModel.parametrogeneralusuarios=this.parametrogeneralusuarios;
		}
		
		
		((ParametroGeneralUsuarioModel) this.jTableDatosParametroGeneralUsuario.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaParametroGeneralUsuario() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getparametrogeneralusuarioAnterior(),this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getparametrogeneralusuarioAnterior(),this.parametrogeneralusuarios);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosParametroGeneralUsuario();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrogeneralusuario,new Object(),generalEntityParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsOfParametroGeneralUsuario(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ParametroGeneralUsuarioConstantesFunciones.getClassesRelationshipsFromStringsOfParametroGeneralUsuario(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormParametroGeneralUsuario(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrogeneralusuario,new Object(),generalEntityParameterGeneral,this.parametrogeneralusuarioReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioParametroGeneralUsuario(ParametroGeneralUsuarioBean parametrogeneralusuarioBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanParametroGeneralUsuario(ArrayList<Classe> classes,ParametroGeneralUsuarioReturnGeneral parametrogeneralusuarioReturnGeneral,ParametroGeneralUsuarioBean parametrogeneralusuarioBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.parametrogeneralusuario)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario = new ParametroGeneralUsuarioDetalleFormJInternalFrame(jDesktopPane,this.parametrogeneralusuarioSessionBean.getConGuardarRelaciones(),this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.setVisible(false);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.setSelected(false);						
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.parametrogeneralusuarioLogic=this.parametrogeneralusuarioLogic;
		
		this.cargarCombosFrameForeignKeyParametroGeneralUsuario("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroGeneralUsuario();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroGeneralUsuario();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyParametroGeneralUsuario("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyParametroGeneralUsuario();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroGeneralUsuario"));
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonModificarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"ModificarParametroGeneralUsuario"));

		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonModificarToolBarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroGeneralUsuario"));
					
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemModificarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroGeneralUsuario"));		
		
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"ActualizarParametroGeneralUsuario"));
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarToolBarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroGeneralUsuario"));
						
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemActualizarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroGeneralUsuario"));		
		
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"EliminarParametroGeneralUsuario"));
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroGeneralUsuario"));
								
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemEliminarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroGeneralUsuario"));		
		
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"CancelarParametroGeneralUsuario"));
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroGeneralUsuario"));
					
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemCancelarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroGeneralUsuario"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemDetalleCerrarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroGeneralUsuario"));		
		
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroGeneralUsuario"));
		
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroGeneralUsuario"));
		
		
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroGeneralUsuario"));
		
		
				
		
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_usuarioParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_usuarioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_empresaParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_empresaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_sucursalParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_sucursalParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_ejercicioParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_ejercicioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_periodoParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_periodoParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_periodoParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_monedaParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_monedaParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_monedaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonfecha_sistemaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"fecha_sistemaParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_anioParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_anioParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_anioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_anioParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_mesParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_mesParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_mesParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_mesParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtondiaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"diaParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_visualParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_visualParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_visualParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_visualParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondoParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fondoParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondoParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fondoParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_bordeParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_bordeParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_controlParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_controlParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_controlParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_controlParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fuenteParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fuenteParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fuenteParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fuenteParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_normalParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_normalParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_relacionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_tamanio_control_manualParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_tamanio_control_manualParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_tamanio_control_todo_relacionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_tamanio_control_todo_relacionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_guardar_relacionesParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_guardar_relacionesParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_mensaje_confirmacionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_mensaje_confirmacionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_botones_tool_barParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_botones_tool_barParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_mostrar_acciones_campo_generalParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_mostrar_acciones_campo_generalParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_exportarParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_exportarParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_exportarParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_exportarParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_delimiterParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_delimiterParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_delimiterParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_delimiterParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_exportar_cabeceraParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_exportar_cabeceraParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_exportar_campo_versionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_exportar_campo_versionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonpath_exportarParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"path_exportarParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_precargar_ventanasParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_precargar_ventanasParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_precargar_por_usuarioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_precargar_por_usuarioParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_cargar_por_parteParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_cargar_por_parteParametroGeneralUsuarioBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jTabbedPaneRelacionesParametroGeneralUsuario.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroGeneralUsuario"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameParametroGeneralUsuario"));
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroGeneralUsuario"));
		}
		
		this.jTableDatosParametroGeneralUsuario.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarParametroGeneralUsuario"));
		
		this.jTableDatosParametroGeneralUsuario.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarParametroGeneralUsuario"));
		
		this.jButtonNuevoParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"NuevoParametroGeneralUsuario"));
		
		this.jButtonDuplicarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"DuplicarParametroGeneralUsuario"));
		
		this.jButtonCopiarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"CopiarParametroGeneralUsuario"));
		
		this.jButtonVerFormParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"VerFormParametroGeneralUsuario"));
		
		
		this.jButtonNuevoToolBarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"NuevoToolBarParametroGeneralUsuario"));
			
		this.jButtonDuplicarToolBarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"DuplicarToolBarParametroGeneralUsuario"));
			
		this.jMenuItemNuevoParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemNuevoParametroGeneralUsuario"));
			
		this.jMenuItemDuplicarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarParametroGeneralUsuario"));		
		
		
		this.jButtonNuevoRelacionesParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"NuevoRelacionesParametroGeneralUsuario"));
		
		
		this.jButtonNuevoRelacionesToolBarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarParametroGeneralUsuario"));
			
		this.jMenuItemNuevoRelacionesParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesParametroGeneralUsuario"));		
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonModificarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"ModificarParametroGeneralUsuario"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonModificarToolBarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroGeneralUsuario"));
			
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemModificarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroGeneralUsuario"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"ActualizarParametroGeneralUsuario"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonActualizarToolBarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroGeneralUsuario"));
				
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemActualizarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroGeneralUsuario"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"EliminarParametroGeneralUsuario"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonEliminarToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroGeneralUsuario"));
						
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemEliminarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroGeneralUsuario"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"CancelarParametroGeneralUsuario"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonCancelarToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroGeneralUsuario"));
			
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemCancelarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroGeneralUsuario"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarParametroGeneralUsuario"));		
		
		
		this.jButtonCerrarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"CerrarParametroGeneralUsuario"));
		
		
		this.jButtonCerrarToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"CerrarToolBarParametroGeneralUsuario"));
			
		this.jMenuItemCerrarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemCerrarParametroGeneralUsuario"));
			
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jMenuItemDetalleCerrarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroGeneralUsuario"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"GuardarCambiosParametroGeneralUsuario"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroGeneralUsuario"));
		}
		
		this.jButtonCopiarToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"CopiarToolBarParametroGeneralUsuario"));
			
		this.jButtonVerFormToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"VerFormToolBarParametroGeneralUsuario"));
		
		this.jMenuItemGuardarCambiosParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosParametroGeneralUsuario"));
			
		this.jMenuItemCopiarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemCopiarParametroGeneralUsuario"));		
		
		this.jMenuItemVerFormParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemVerFormParametroGeneralUsuario"));		
		
		
		this.jButtonGuardarCambiosTablaParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroGeneralUsuario"));
		
		
		this.jButtonGuardarCambiosTablaToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarParametroGeneralUsuario"));
			
		this.jMenuItemGuardarCambiosTablaParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroGeneralUsuario"));		
		
		
		
		this.jButtonRecargarInformacionParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"RecargarInformacionParametroGeneralUsuario"));
					
		this.jButtonRecargarInformacionToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarParametroGeneralUsuario"));
		
		this.jMenuItemRecargarInformacionParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionParametroGeneralUsuario"));		
		
		
		
		this.jButtonAnterioresParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"AnterioresParametroGeneralUsuario"));
		
		
		this.jButtonAnterioresToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"AnterioresToolBarParametroGeneralUsuario"));
		
		this.jMenuItemAnterioresParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresParametroGeneralUsuario"));		
		
		
		this.jButtonSiguientesParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"SiguientesParametroGeneralUsuario"));
		
		
		this.jButtonSiguientesToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"SiguientesToolBarParametroGeneralUsuario"));
			
		this.jMenuItemSiguientesParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesParametroGeneralUsuario"));
			
		this.jMenuItemAbrirOrderByParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByParametroGeneralUsuario"));
			
		this.jMenuItemMostrarOcultarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarParametroGeneralUsuario"));
			
		this.jMenuItemDetalleAbrirOrderByParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByParametroGeneralUsuario"));
			
		this.jMenuItemDetalleMostarOcultarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarParametroGeneralUsuario"));		
		
		
		this.jButtonNuevoGuardarCambiosParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosParametroGeneralUsuario"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarParametroGeneralUsuario"));
			
		this.jMenuItemNuevoGuardarCambiosParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosParametroGeneralUsuario"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosParametroGeneralUsuario.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosParametroGeneralUsuario"));

		this.jCheckBoxSeleccionadosParametroGeneralUsuario.addItemListener(new CheckBoxItemListener(this,"SeleccionadosParametroGeneralUsuario"));
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroGeneralUsuario"));
		}
		
		
		this.jComboBoxTiposRelacionesParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"TiposRelacionesParametroGeneralUsuario"));
			
		this.jComboBoxTiposAccionesParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"TiposAccionesParametroGeneralUsuario"));
					
		this.jComboBoxTiposSeleccionarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"TiposSeleccionarParametroGeneralUsuario"));
			
		this.jTextFieldValorCampoGeneralParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralParametroGeneralUsuario"));		
		
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_usuarioParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_usuarioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_empresaParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_empresaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_sucursalParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_sucursalParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_ejercicioParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_ejercicioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_periodoParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_periodoParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_periodoParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_monedaParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_monedaParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_monedaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonfecha_sistemaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"fecha_sistemaParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_anioParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_anioParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_anioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_anioParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_mesParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_mesParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_mesParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_mesParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtondiaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"diaParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_visualParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_visualParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_visualParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_visualParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondoParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fondoParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondoParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fondoParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_bordeParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_bordeParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_controlParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_controlParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_controlParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_controlParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fuenteParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fuenteParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fuenteParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fuenteParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_normalParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_normalParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_relacionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_tamanio_control_manualParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_tamanio_control_manualParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_tamanio_control_todo_relacionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_tamanio_control_todo_relacionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_guardar_relacionesParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_guardar_relacionesParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_mensaje_confirmacionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_mensaje_confirmacionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_botones_tool_barParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_botones_tool_barParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_mostrar_acciones_campo_generalParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_mostrar_acciones_campo_generalParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_exportarParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_exportarParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_exportarParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_exportarParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_delimiterParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_delimiterParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_delimiterParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_delimiterParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_exportar_cabeceraParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_exportar_cabeceraParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_exportar_campo_versionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_exportar_campo_versionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonpath_exportarParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"path_exportarParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_precargar_ventanasParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_precargar_ventanasParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_precargar_por_usuarioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_precargar_por_usuarioParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_cargar_por_parteParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_cargar_por_parteParametroGeneralUsuarioBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdEmpresaParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdEmpresaParametroGeneralUsuario"));

			this.jButtonFK_IdMonedaParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdMonedaParametroGeneralUsuario"));

			this.jButtonFK_IdTipoDelimiterParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoDelimiterParametroGeneralUsuario"));

			this.jButtonFK_IdTipoExportarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoExportarParametroGeneralUsuario"));

			this.jButtonFK_IdTipoFondoParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoFondoParametroGeneralUsuario"));

			this.jButtonFK_IdTipoFondoBordeParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoFondoBordeParametroGeneralUsuario"));

			this.jButtonFK_IdTipoFondoControlParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoFondoControlParametroGeneralUsuario"));

			this.jButtonFK_IdTipoFuenteParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoFuenteParametroGeneralUsuario"));

			this.jButtonFK_IdTipoTamanioControlNormalParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoTamanioControlNormalParametroGeneralUsuario"));

			this.jButtonFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoTamanioControlRelacionParametroGeneralUsuario"));

			this.jButtonFK_IdUsuarioParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdUsuarioParametroGeneralUsuario"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoParametroGeneralUsuario!=null) {
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroGeneralUsuario"));
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroGeneralUsuario"));
				this.jInternalFrameReporteDinamicoParametroGeneralUsuario.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroGeneralUsuario"));
			}
			
			//this.jButtonCerrarReporteDinamicoParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroGeneralUsuario"));				
			//this.jButtonGenerarReporteDinamicoParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroGeneralUsuario"));
			//this.jButtonGenerarExcelReporteDinamicoParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroGeneralUsuario"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionParametroGeneralUsuario!=null) {
				this.jInternalFrameImportacionParametroGeneralUsuario.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroGeneralUsuario"));
				this.jInternalFrameImportacionParametroGeneralUsuario.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroGeneralUsuario"));
				this.jInternalFrameImportacionParametroGeneralUsuario.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroGeneralUsuario"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"AbrirOrderByParametroGeneralUsuario"));
			
			this.jButtonAbrirOrderByToolBarParametroGeneralUsuario.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarParametroGeneralUsuario"));			
			
			if(this.jInternalFrameOrderByParametroGeneralUsuario!=null) {
				this.jInternalFrameOrderByParametroGeneralUsuario.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroGeneralUsuario"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroGeneralUsuario.jTabbedPaneRelacionesParametroGeneralUsuario.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroGeneralUsuario"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameParametroGeneralUsuario();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormParametroGeneralUsuario = (JInternalFrameBase)event.getSource();
	            	
	            ParametroGeneralUsuarioBeanSwingJInternalFrame jInternalFrameParent=(ParametroGeneralUsuarioBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroGeneralUsuario.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarParametroGeneralUsuarioActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosParametroGeneralUsuario.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosParametroGeneralUsuarioListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosParametroGeneralUsuario.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosParametroGeneralUsuario.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoParametroGeneralUsuario";
		inputMap = this.jButtonNuevoParametroGeneralUsuario.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoParametroGeneralUsuario.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesParametroGeneralUsuario";
		inputMap = this.jButtonNuevoRelacionesParametroGeneralUsuario.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesParametroGeneralUsuario.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroGeneralUsuarioActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarParametroGeneralUsuario";
		inputMap = this.jButtonModificarParametroGeneralUsuario.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarParametroGeneralUsuario.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarParametroGeneralUsuarioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarParametroGeneralUsuario";
		inputMap = this.jButtonActualizarParametroGeneralUsuario.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarParametroGeneralUsuario.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarParametroGeneralUsuarioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarParametroGeneralUsuario";
		inputMap = this.jButtonEliminarParametroGeneralUsuario.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarParametroGeneralUsuario.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarParametroGeneralUsuarioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarParametroGeneralUsuario";
		inputMap = this.jButtonCancelarParametroGeneralUsuario.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarParametroGeneralUsuario.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarParametroGeneralUsuario";
		inputMap = this.jButtonCerrarParametroGeneralUsuario.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarParametroGeneralUsuario.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarParametroGeneralUsuarioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosParametroGeneralUsuario";
		inputMap = this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosParametroGeneralUsuario.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonGuardarCambiosParametroGeneralUsuario.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosParametroGeneralUsuario.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosParametroGeneralUsuarioItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesParametroGeneralUsuario.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesParametroGeneralUsuarioActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarParametroGeneralUsuario.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarParametroGeneralUsuarioActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralParametroGeneralUsuario.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralParametroGeneralUsuarioActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_usuarioParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_usuarioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_empresaParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_empresaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_sucursalParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_sucursalParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_ejercicioParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_ejercicioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_periodoParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_periodoParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_periodoParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_monedaParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_monedaParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_monedaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonfecha_sistemaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"fecha_sistemaParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_anioParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_anioParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_anioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_anioParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_mesParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_mesParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_mesParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_mesParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtondiaParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"diaParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_visualParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_visualParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_visualParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_visualParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondoParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fondoParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondoParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fondoParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_bordeParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_bordeParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_bordeParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_controlParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_controlParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fondo_controlParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fondo_controlParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fuenteParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_fuenteParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_fuenteParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_fuenteParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_normalParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_normalParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_normalParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_relacionParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_tamanio_control_relacionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_tamanio_control_relacionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_tamanio_control_manualParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_tamanio_control_manualParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_tamanio_control_todo_relacionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_tamanio_control_todo_relacionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_guardar_relacionesParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_guardar_relacionesParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_mensaje_confirmacionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_mensaje_confirmacionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_botones_tool_barParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_botones_tool_barParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_mostrar_acciones_campo_generalParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_mostrar_acciones_campo_generalParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_mostrar_acciones_campo_relacionesParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_exportarParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_exportarParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_exportarParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_exportarParametroGeneralUsuarioBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_delimiterParametroGeneralUsuarioUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_delimiterParametroGeneralUsuarioUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonid_tipo_delimiterParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_delimiterParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_exportar_cabeceraParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_exportar_cabeceraParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_exportar_campo_versionParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_exportar_campo_versionParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtonpath_exportarParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"path_exportarParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_precargar_ventanasParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_precargar_ventanasParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_precargar_por_usuarioParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_precargar_por_usuarioParametroGeneralUsuarioBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jButtoncon_cargar_por_parteParametroGeneralUsuarioBusqueda.addActionListener(new ButtonActionListener(this,"con_cargar_por_parteParametroGeneralUsuarioBusqueda"));
		
		
		this.jButtonFK_IdEmpresaParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdEmpresaParametroGeneralUsuario"));

		this.jButtonFK_IdMonedaParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdMonedaParametroGeneralUsuario"));

		this.jButtonFK_IdTipoDelimiterParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoDelimiterParametroGeneralUsuario"));

		this.jButtonFK_IdTipoExportarParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoExportarParametroGeneralUsuario"));

		this.jButtonFK_IdTipoFondoParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoFondoParametroGeneralUsuario"));

		this.jButtonFK_IdTipoFondoBordeParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoFondoBordeParametroGeneralUsuario"));

		this.jButtonFK_IdTipoFondoControlParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoFondoControlParametroGeneralUsuario"));

		this.jButtonFK_IdTipoFuenteParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoFuenteParametroGeneralUsuario"));

		this.jButtonFK_IdTipoTamanioControlNormalParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoTamanioControlNormalParametroGeneralUsuario"));

		this.jButtonFK_IdTipoTamanioControlRelacionParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdTipoTamanioControlRelacionParametroGeneralUsuario"));

		this.jButtonFK_IdUsuarioParametroGeneralUsuario.addActionListener(new ButtonActionListener(this,"FK_IdUsuarioParametroGeneralUsuario"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionParametroGeneralUsuario.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionParametroGeneralUsuarioActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarParametroGeneralUsuarioActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarParametroGeneralUsuario.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosParametroGeneralUsuario(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
					parametrogeneralusuarioAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuarios) {
					parametrogeneralusuarioAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosParametroGeneralUsuarioItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
						parametrogeneralusuarioAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuarios) {
						parametrogeneralusuarioAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
					
						if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_tamanio_control_manual(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_tamanio_control_todo_relacion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_guardar_relaciones(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_mensaje_confirmacion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_botones_tool_bar(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_general(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_relaciones(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_exportar_cabecera(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_exportar_campo_version(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_precargar_ventanas(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_precargar_por_usuario(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_cargar_por_parte(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuarios) {
						
						if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_tamanio_control_manual(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_tamanio_control_todo_relacion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_guardar_relaciones(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_mensaje_confirmacion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_botones_tool_bar(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_general(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_mostrar_acciones_campo_relaciones(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_exportar_cabecera(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_exportar_campo_version(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_precargar_ventanas(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_precargar_por_usuario(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE)) {
							existe=true;
							parametrogeneralusuarioAux.setcon_cargar_por_parte(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroGeneralUsuario.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroGeneralUsuario.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosParametroGeneralUsuarioItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosParametroGeneralUsuario.getSelectedRows();
			
			ParametroGeneralUsuario parametrogeneralusuarioLocal=new ParametroGeneralUsuario();
			
			//this.seleccionarTodosParametroGeneralUsuario(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrogeneralusuarioLocal =(ParametroGeneralUsuario) this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios().toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					parametrogeneralusuarioLocal =(ParametroGeneralUsuario) this.parametrogeneralusuarios.toArray()[this.jTableDatosParametroGeneralUsuario.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				parametrogeneralusuarioLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
						parametrogeneralusuarioAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuarios) {
						parametrogeneralusuarioAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroGeneralUsuario.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroGeneralUsuario.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroGeneralUsuario,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualParametroGeneralUsuarioItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarParametroGeneralUsuarioParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralParametroGeneralUsuarioActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralParametroGeneralUsuario.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
				
						if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA)) {
							existe=true;
							parametrogeneralusuarioAux.setfecha_sistema(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA)) {
							existe=true;
							parametrogeneralusuarioAux.setdia(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR)) {
							existe=true;
							parametrogeneralusuarioAux.setpath_exportar(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuarios) {
					
						if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA)) {
							existe=true;
							parametrogeneralusuarioAux.setfecha_sistema(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA)) {
							existe=true;
							parametrogeneralusuarioAux.setdia(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR)) {
							existe=true;
							parametrogeneralusuarioAux.setpath_exportar(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesParametroGeneralUsuarioActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioParametroGeneralUsuario=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesParametroGeneralUsuario.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteParametroGeneralUsuario) {				
					conSplash=true;//false;										
					
					//this.startProcessParametroGeneralUsuario(conSplash);
				
					this.generarReporteParametroGeneralUsuariosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoParametroGeneralUsuariosSeleccionados();
				//this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroGeneralUsuariosSeleccionados(false);
				//this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroGeneralUsuariosSeleccionados(true);
				//this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroGeneralUsuario();
				
				this.exportarParametroGeneralUsuariosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionParametroGeneralUsuarios();
				//this.importarParametroGeneralUsuarios();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroGeneralUsuario();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelParametroGeneralUsuariosSeleccionados();
				//this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Parametro General", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessParametroGeneralUsuario();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoParametroGeneralUsuario)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyParametroGeneralUsuario(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.setSelectedIndex(0);					
				}	
			} 			
			else if(ParametroGeneralUsuarioBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteParametroGeneralUsuario) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessParametroGeneralUsuario(conSplash);
					
						//this.actualizarParametrosGeneralParametroGeneralUsuario();
						
						this.generarReporteProcesoAccionParametroGeneralUsuariosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Parametro GeneralES SELECCIONADOS?", "MANTENIMIENTO DE Parametro General", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessParametroGeneralUsuario();
				
						this.actualizarParametrosGeneralParametroGeneralUsuario();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.parametrogeneralusuarioReturnGeneral=parametrogeneralusuarioLogic.procesarAccionParametroGeneralUsuariosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios(),this.parametrogeneralusuarioParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarParametroGeneralUsuarioReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralParametroGeneralUsuario();
					
					ParametroGeneralUsuarioBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarParametroGeneralUsuarioReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroGeneralUsuario.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxTiposAccionesFormularioParametroGeneralUsuario.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessParametroGeneralUsuario(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesParametroGeneralUsuarioActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessParametroGeneralUsuario();
			
			if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();		
			ParametroGeneralUsuario parametrogeneralusuario=new ParametroGeneralUsuario();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingParametroGeneralUsuario(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesParametroGeneralUsuario.getSelectedItem();
			
			
			
			
			parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
			//this.sTipoAccion;
			
			if(parametrogeneralusuariosSeleccionados.size()==1) {
				for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuariosSeleccionados) {
					parametrogeneralusuario=parametrogeneralusuarioAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessParametroGeneralUsuario();
			
      		//this.finishProcessParametroGeneralUsuario(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarParametroGeneralUsuarioReturnGeneral() throws Exception {
		if(this.parametrogeneralusuarioReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.parametrogeneralusuarioReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.parametrogeneralusuarioReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.parametrogeneralusuarioReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.parametrogeneralusuarioReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.parametrogeneralusuarioReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingParametroGeneralUsuario(false);
		}
		
		if(this.parametrogeneralusuarioReturnGeneral.getConRetornoLista() || this.parametrogeneralusuarioReturnGeneral.getConRetornoObjeto()) {
			if(this.parametrogeneralusuarioReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrogeneralusuarioLogic.setParametroGeneralUsuarios(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuarios());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.parametrogeneralusuarioReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrogeneralusuarioLogic.setParametroGeneralUsuario(this.parametrogeneralusuarioReturnGeneral.getParametroGeneralUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingParametroGeneralUsuario(false);
		}
	}
	
	public void actualizarParametrosGeneralParametroGeneralUsuario() throws Exception {
		
		
	}
	
	public ArrayList<ParametroGeneralUsuario> getParametroGeneralUsuariosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioParametroGeneralUsuario) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuarioLogic.getParametroGeneralUsuarios()) {
					if(parametrogeneralusuarioAux.getIsSelected()) {
						parametrogeneralusuariosSeleccionados.add(parametrogeneralusuarioAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroGeneralUsuario parametrogeneralusuarioAux:this.parametrogeneralusuarios) {
					if(parametrogeneralusuarioAux.getIsSelected()) {
						parametrogeneralusuariosSeleccionados.add(parametrogeneralusuarioAux);				
					}
				}
			}
			
			if(parametrogeneralusuariosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						parametrogeneralusuariosSeleccionados.addAll(this.parametrogeneralusuarioLogic.getParametroGeneralUsuarios());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						parametrogeneralusuariosSeleccionados.addAll(this.parametrogeneralusuarios);				
					}
				}
			}
		} else {
			parametrogeneralusuariosSeleccionados.add(this.parametrogeneralusuario);
		}
		
		return parametrogeneralusuariosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteParametroGeneralUsuariosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalParametroGeneralUsuariosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoParametroGeneralUsuariosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroGeneralUsuariosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroGeneralUsuariosSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Parametro General",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesParametroGeneralUsuariosSeleccionados() throws Exception {
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();		
		
		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteParametroGeneralUsuarios("Todos",parametrogeneralusuariosSeleccionados);
		
	}	
	
	public void generarReporteNormalParametroGeneralUsuariosSeleccionados() throws Exception {
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();		
		
		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteParametroGeneralUsuarios("Todos",parametrogeneralusuariosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionParametroGeneralUsuariosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();
		
		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteParametroGeneralUsuarios("Todos",parametrogeneralusuariosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoParametroGeneralUsuariosSeleccionados() throws Exception {
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();		
		
		
		this.abrirInicializarFrameReporteDinamicoParametroGeneralUsuario();
		
		
		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoParametroGeneralUsuario();
		
		
		//this.generarReporteParametroGeneralUsuarios("Todos",parametrogeneralusuariosSeleccionados ,parametrogeneralusuarioImplementable,parametrogeneralusuarioImplementableHome);
	}
	
	public void mostrarImportacionParametroGeneralUsuarios() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionParametroGeneralUsuario();
		
		this.abrirFrameImportacionParametroGeneralUsuario();		
		
			
		//this.generarReporteParametroGeneralUsuarios("Todos",parametrogeneralusuariosSeleccionados ,parametrogeneralusuarioImplementable,parametrogeneralusuarioImplementableHome);
	}
	
	public void importarParametroGeneralUsuarios() throws Exception {		
	
	}
	
	public void exportarParametroGeneralUsuariosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelParametroGeneralUsuariosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoParametroGeneralUsuariosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlParametroGeneralUsuariosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Parametro General",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoParametroGeneralUsuariosSeleccionados() throws Exception {
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();		
		
		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrogeneralusuario."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarParametroGeneralUsuario(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuariosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarParametroGeneralUsuario(parametrogeneralusuarioAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//parametrogeneralusuarioAux.setsDetalleGeneralEntityReporte(parametrogeneralusuarioAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarParametroGeneralUsuario(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=parametrogeneralusuario.getusuario_descripcion();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getfecha_sistema().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getdia().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.gettipovisual_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.gettipofondo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.gettipofondoborde_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.gettipofondocontrol_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.gettipofuente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.gettipotamaniocontrolnormal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.gettipotamaniocontrolrelacion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_tamanio_control_manual().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_tamanio_control_todo_relacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_guardar_relaciones().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_mensaje_confirmacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_botones_tool_bar().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_mostrar_acciones_campo_general().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.gettipoexportar_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.gettipodelimiter_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_exportar_cabecera().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_exportar_campo_version().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getpath_exportar();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_precargar_ventanas().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_precargar_por_usuario().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrogeneralusuario.getcon_cargar_por_parte().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelParametroGeneralUsuariosSeleccionados() throws Exception {
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();		
		
		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrogeneralusuario.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ParametroGeneralUsuarios");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelParametroGeneralUsuario(row);				
				iRow++;
			}				
			
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuariosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelParametroGeneralUsuario(parametrogeneralusuarioAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlParametroGeneralUsuariosSeleccionados() throws Exception {
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();		
		
		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrogeneralusuario.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("parametrogeneralusuarios");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("parametrogeneralusuario");
			//elementRoot.appendChild(element);
		
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuariosSeleccionados) {
				element = document.createElement("parametrogeneralusuario");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlParametroGeneralUsuario(parametrogeneralusuarioAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro General",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelParametroGeneralUsuario(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getfecha_sistema());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getdia());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.gettipovisual_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.gettipofondo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.gettipofondoborde_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.gettipofondocontrol_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.gettipofuente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.gettipotamaniocontrolnormal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.gettipotamaniocontrolrelacion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_tamanio_control_manual());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_tamanio_control_todo_relacion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_guardar_relaciones());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_mensaje_confirmacion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_botones_tool_bar());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_mostrar_acciones_campo_general());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.gettipoexportar_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.gettipodelimiter_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_exportar_cabecera());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_exportar_campo_version());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getpath_exportar());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_precargar_ventanas());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_precargar_por_usuario());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrogeneralusuario.getcon_cargar_por_parte());				
	}
	
	public void setFilaDatosExportarXmlParametroGeneralUsuario(ParametroGeneralUsuario parametrogeneralusuario,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementusuario_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.ID);
		elementusuario_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ParametroGeneralUsuarioConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(parametrogeneralusuario.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementmoneda_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementfecha_sistema = document.createElement(ParametroGeneralUsuarioConstantesFunciones.FECHASISTEMA);
		elementfecha_sistema.appendChild(document.createTextNode(parametrogeneralusuario.getfecha_sistema().toString().trim()));
		element.appendChild(elementfecha_sistema);

		Element elementanio_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementdia = document.createElement(ParametroGeneralUsuarioConstantesFunciones.DIA);
		elementdia.appendChild(document.createTextNode(parametrogeneralusuario.getdia().toString().trim()));
		element.appendChild(elementdia);

		Element elementtipovisual_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDTIPOVISUAL);
		elementtipovisual_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.gettipovisual_descripcion()));
		element.appendChild(elementtipovisual_descripcion);

		Element elementtipofondo_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDTIPOFONDO);
		elementtipofondo_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.gettipofondo_descripcion()));
		element.appendChild(elementtipofondo_descripcion);

		Element elementtipofondoborde_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDTIPOFONDOBORDE);
		elementtipofondoborde_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.gettipofondoborde_descripcion()));
		element.appendChild(elementtipofondoborde_descripcion);

		Element elementtipofondocontrol_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDTIPOFONDOCONTROL);
		elementtipofondocontrol_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.gettipofondocontrol_descripcion()));
		element.appendChild(elementtipofondocontrol_descripcion);

		Element elementtipofuente_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDTIPOFUENTE);
		elementtipofuente_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.gettipofuente_descripcion()));
		element.appendChild(elementtipofuente_descripcion);

		Element elementtipotamaniocontrolnormal_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDTIPOTAMANIOCONTROLNORMAL);
		elementtipotamaniocontrolnormal_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.gettipotamaniocontrolnormal_descripcion()));
		element.appendChild(elementtipotamaniocontrolnormal_descripcion);

		Element elementtipotamaniocontrolrelacion_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDTIPOTAMANIOCONTROLRELACION);
		elementtipotamaniocontrolrelacion_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.gettipotamaniocontrolrelacion_descripcion()));
		element.appendChild(elementtipotamaniocontrolrelacion_descripcion);

		Element elementcon_tamanio_control_manual = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONTAMANIOCONTROLMANUAL);
		elementcon_tamanio_control_manual.appendChild(document.createTextNode(parametrogeneralusuario.getcon_tamanio_control_manual().toString().trim()));
		element.appendChild(elementcon_tamanio_control_manual);

		Element elementcon_tamanio_control_todo_relacion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONTAMANIOCONTROLTODORELACION);
		elementcon_tamanio_control_todo_relacion.appendChild(document.createTextNode(parametrogeneralusuario.getcon_tamanio_control_todo_relacion().toString().trim()));
		element.appendChild(elementcon_tamanio_control_todo_relacion);

		Element elementcon_guardar_relaciones = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONGUARDARRELACIONES);
		elementcon_guardar_relaciones.appendChild(document.createTextNode(parametrogeneralusuario.getcon_guardar_relaciones().toString().trim()));
		element.appendChild(elementcon_guardar_relaciones);

		Element elementcon_mensaje_confirmacion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONMENSAJECONFIRMACION);
		elementcon_mensaje_confirmacion.appendChild(document.createTextNode(parametrogeneralusuario.getcon_mensaje_confirmacion().toString().trim()));
		element.appendChild(elementcon_mensaje_confirmacion);

		Element elementcon_botones_tool_bar = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONBOTONESTOOLBAR);
		elementcon_botones_tool_bar.appendChild(document.createTextNode(parametrogeneralusuario.getcon_botones_tool_bar().toString().trim()));
		element.appendChild(elementcon_botones_tool_bar);

		Element elementcon_mostrar_acciones_campo_general = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONMOSTRARACCIONESCAMPOGENERAL);
		elementcon_mostrar_acciones_campo_general.appendChild(document.createTextNode(parametrogeneralusuario.getcon_mostrar_acciones_campo_general().toString().trim()));
		element.appendChild(elementcon_mostrar_acciones_campo_general);

		Element elementcon_mostrar_acciones_campo_relaciones = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONMOSTRARACCIONESCAMPORELACIONES);
		elementcon_mostrar_acciones_campo_relaciones.appendChild(document.createTextNode(parametrogeneralusuario.getcon_mostrar_acciones_campo_relaciones().toString().trim()));
		element.appendChild(elementcon_mostrar_acciones_campo_relaciones);

		Element elementtipoexportar_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDTIPOEXPORTAR);
		elementtipoexportar_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.gettipoexportar_descripcion()));
		element.appendChild(elementtipoexportar_descripcion);

		Element elementtipodelimiter_descripcion = document.createElement(ParametroGeneralUsuarioConstantesFunciones.IDTIPODELIMITER);
		elementtipodelimiter_descripcion.appendChild(document.createTextNode(parametrogeneralusuario.gettipodelimiter_descripcion()));
		element.appendChild(elementtipodelimiter_descripcion);

		Element elementcon_exportar_cabecera = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONEXPORTARCABECERA);
		elementcon_exportar_cabecera.appendChild(document.createTextNode(parametrogeneralusuario.getcon_exportar_cabecera().toString().trim()));
		element.appendChild(elementcon_exportar_cabecera);

		Element elementcon_exportar_campo_version = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONEXPORTARCAMPOVERSION);
		elementcon_exportar_campo_version.appendChild(document.createTextNode(parametrogeneralusuario.getcon_exportar_campo_version().toString().trim()));
		element.appendChild(elementcon_exportar_campo_version);

		Element elementpath_exportar = document.createElement(ParametroGeneralUsuarioConstantesFunciones.PATHEXPORTAR);
		elementpath_exportar.appendChild(document.createTextNode(parametrogeneralusuario.getpath_exportar().trim()));
		element.appendChild(elementpath_exportar);

		Element elementcon_precargar_ventanas = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONPRECARGARVENTANAS);
		elementcon_precargar_ventanas.appendChild(document.createTextNode(parametrogeneralusuario.getcon_precargar_ventanas().toString().trim()));
		element.appendChild(elementcon_precargar_ventanas);

		Element elementcon_precargar_por_usuario = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONPRECARGARPORUSUARIO);
		elementcon_precargar_por_usuario.appendChild(document.createTextNode(parametrogeneralusuario.getcon_precargar_por_usuario().toString().trim()));
		element.appendChild(elementcon_precargar_por_usuario);

		Element elementcon_cargar_por_parte = document.createElement(ParametroGeneralUsuarioConstantesFunciones.CONCARGARPORPARTE);
		elementcon_cargar_por_parte.appendChild(document.createTextNode(parametrogeneralusuario.getcon_cargar_por_parte().toString().trim()));
		element.appendChild(elementcon_cargar_por_parte);
	}
	
	public void generarReporteGroupGenericoParametroGeneralUsuariosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados=new ArrayList<ParametroGeneralUsuario>();
		
		parametrogeneralusuariosSeleccionados=this.getParametroGeneralUsuariosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoParametroGeneralUsuario(parametrogeneralusuariosSeleccionados);
		
		this.generarReporteParametroGeneralUsuarios("Todos",parametrogeneralusuariosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoParametroGeneralUsuario(ArrayList<ParametroGeneralUsuario> parametrogeneralusuariosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ParametroGeneralUsuario parametrogeneralusuarioAux:parametrogeneralusuariosSeleccionados) {
				parametrogeneralusuarioAux.setsDetalleGeneralEntityReporte(parametrogeneralusuarioAux.toString());
			
				if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_FECHASISTEMA)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(parametrogeneralusuarioAux.getfecha_sistema()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_DIA)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.getdia().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOVISUAL)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.gettipovisual_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDO)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.gettipofondo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOBORDE)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.gettipofondoborde_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFONDOCONTROL)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.gettipofondocontrol_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOFUENTE)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.gettipofuente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLNORMAL)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.gettipotamaniocontrolnormal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOTAMANIOCONTROLRELACION)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.gettipotamaniocontrolrelacion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLMANUAL)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_tamanio_control_manual()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONTAMANIOCONTROLTODORELACION)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_tamanio_control_todo_relacion()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONGUARDARRELACIONES)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_guardar_relaciones()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMENSAJECONFIRMACION)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_mensaje_confirmacion()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONBOTONESTOOLBAR)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_botones_tool_bar()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPOGENERAL)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_mostrar_acciones_campo_general()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONMOSTRARACCIONESCAMPORELACIONES)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_mostrar_acciones_campo_relaciones()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPOEXPORTAR)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.gettipoexportar_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_IDTIPODELIMITER)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.gettipodelimiter_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCABECERA)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_exportar_cabecera()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONEXPORTARCAMPOVERSION)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_exportar_campo_version()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_PATHEXPORTAR)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(parametrogeneralusuarioAux.getpath_exportar());
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARVENTANAS)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_precargar_ventanas()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONPRECARGARPORUSUARIO)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_precargar_por_usuario()));
				}
				 else if(sTipoSeleccionar.equals(ParametroGeneralUsuarioConstantesFunciones.LABEL_CONCARGARPORPARTE)) {
					existe=true;
					parametrogeneralusuarioAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrogeneralusuarioAux.getcon_cargar_por_parte()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroGeneralUsuarioConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesParametroGeneralUsuario(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoParametroGeneralUsuario=true;
				this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=true;
				this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=true;
			}
			
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=true;
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=true;
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=true;
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=true;
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=true;
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=true;
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;
			this.isVisibilidadCeldaModificarParametroGeneralUsuario=true;
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaCancelarParametroGeneralUsuario=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroGeneralUsuario=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ParametroGeneralUsuarioJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=true;
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=true;
		} else {
			this.actualizarEstadoPanelsParametroGeneralUsuario(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarParametroGeneralUsuario=false;
			//this.isVisibilidadCeldaVerFormParametroGeneralUsuario=false;
			this.isVisibilidadCeldaDuplicarParametroGeneralUsuario=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
		} else {
			this.isVisibilidadCeldaNuevoParametroGeneralUsuario=false;
			this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
			if(!parametrogeneralusuarioSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;												
			}
			
			this.jButtonCerrarParametroGeneralUsuario.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
		}
		
		if(!this.permiteMantenimiento(this.parametrogeneralusuario)) {
			this.isVisibilidadCeldaActualizarParametroGeneralUsuario=false;
			this.isVisibilidadCeldaEliminarParametroGeneralUsuario=false;
		}
		
		//SI ES UNO A UNO FK
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			
			if(parametrogeneralusuarioLogic.getParametroGeneralUsuarios().size()>0) {
									this.isVisibilidadCeldaNuevoParametroGeneralUsuario=false;	
									this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
									this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;
			}
			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			if(parametrogeneralusuarios.size()>0) {
				this.isVisibilidadCeldaNuevoParametroGeneralUsuario=false;	
				this.isVisibilidadCeldaNuevoRelacionesParametroGeneralUsuario=false;
				this.isVisibilidadCeldaGuardarCambiosParametroGeneralUsuario=false;
			}
		}
		//ARCHITECTURE
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesParametroGeneralUsuario() {
	}
	
	public void actualizarEstadoPanelsParametroGeneralUsuario(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosEdicionParametroGeneralUsuario.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroGeneralUsuario!=null) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosParametroGeneralUsuario.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroGeneralUsuario!=null) {
				this.jPanelPaginacionParametroGeneralUsuario.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroGeneralUsuario!=null) {
				this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosEdicionParametroGeneralUsuario.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroGeneralUsuario!=null) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosParametroGeneralUsuario.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroGeneralUsuario!=null) {
				this.jPanelPaginacionParametroGeneralUsuario.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroGeneralUsuario!=null) {
				this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosEdicionParametroGeneralUsuario.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroGeneralUsuario!=null) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosParametroGeneralUsuario.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroGeneralUsuario!=null) {
				this.jPanelPaginacionParametroGeneralUsuario.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroGeneralUsuario!=null) {
				this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosEdicionParametroGeneralUsuario.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroGeneralUsuario!=null) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosParametroGeneralUsuario.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroGeneralUsuario!=null) {
				this.jPanelPaginacionParametroGeneralUsuario.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroGeneralUsuario!=null) {
				this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosEdicionParametroGeneralUsuario.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroGeneralUsuario!=null) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosParametroGeneralUsuario.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroGeneralUsuario!=null) {
				this.jPanelPaginacionParametroGeneralUsuario.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroGeneralUsuario!=null) {
				this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosEdicionParametroGeneralUsuario.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroGeneralUsuario!=null) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosParametroGeneralUsuario.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroGeneralUsuario!=null) {
				this.jPanelPaginacionParametroGeneralUsuario.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroGeneralUsuario!=null) {
				this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosEdicionParametroGeneralUsuario.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroGeneralUsuario!=null) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroGeneralUsuario!=null) {
				this.jScrollPanelDatosParametroGeneralUsuario.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroGeneralUsuario!=null) {
				this.jPanelPaginacionParametroGeneralUsuario.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroGeneralUsuario!=null) {
				this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasParametroGeneralUsuario!=null) {
					this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesParametroGeneralUsuario!=null) {
				this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.parametrogeneralusuarioSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroGeneralUsuario!=null) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesParametroGeneralUsuario!=null) {
				this.jPanelParametrosReportesParametroGeneralUsuario.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdEmpresa=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaUsuario;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdEmpresa=isParaEmpresa;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdEmpresa=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdEmpresa=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdEmpresa=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdEmpresa=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaMoneda;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdEmpresa=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdEmpresa=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaMesNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaMesNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoVisual(Boolean isParaTipoVisual){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoVisualNegation=!isParaTipoVisual;

			this.isVisibilidadFK_IdEmpresa=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaTipoVisualNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoFondo(Boolean isParaTipoFondo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoFondoNegation=!isParaTipoFondo;

			this.isVisibilidadFK_IdEmpresa=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaTipoFondo;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaTipoFondoNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoFondoBorde(Boolean isParaTipoFondoBorde){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoFondoBordeNegation=!isParaTipoFondoBorde;

			this.isVisibilidadFK_IdEmpresa=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaTipoFondoBorde;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaTipoFondoBordeNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoFondoControl(Boolean isParaTipoFondoControl){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoFondoControlNegation=!isParaTipoFondoControl;

			this.isVisibilidadFK_IdEmpresa=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaTipoFondoControl;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaTipoFondoControlNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoFuente(Boolean isParaTipoFuente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoFuenteNegation=!isParaTipoFuente;

			this.isVisibilidadFK_IdEmpresa=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaTipoFuente;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaTipoFuenteNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTamanioControlNormal(Boolean isParaTipoTamanioControlNormal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTamanioControlNormalNegation=!isParaTipoTamanioControlNormal;

			this.isVisibilidadFK_IdEmpresa=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaTipoTamanioControlNormal;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaTipoTamanioControlNormalNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTamanioControlRelacion(Boolean isParaTipoTamanioControlRelacion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTamanioControlRelacionNegation=!isParaTipoTamanioControlRelacion;

			this.isVisibilidadFK_IdEmpresa=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaTipoTamanioControlRelacion;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaTipoTamanioControlRelacionNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoExportar(Boolean isParaTipoExportar){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoExportarNegation=!isParaTipoExportar;

			this.isVisibilidadFK_IdEmpresa=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaTipoExportar;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaTipoExportarNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDelimiter(Boolean isParaTipoDelimiter){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDelimiterNegation=!isParaTipoDelimiter;

			this.isVisibilidadFK_IdEmpresa=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdEmpresa) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdEmpresaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdMoneda=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdMoneda) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdMonedaParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoDelimiter=isParaTipoDelimiter;
			if(!this.isVisibilidadFK_IdTipoDelimiter) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoDelimiterParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoExportar=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdTipoExportar) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoExportarParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondo=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdTipoFondo) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoBorde=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdTipoFondoBorde) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFondoControl=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdTipoFondoControl) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFondoControlParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoFuente=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdTipoFuente) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoFuenteParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlNormal=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlNormal) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);}

			this.isVisibilidadFK_IdTipoTamanioControlRelacion=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdTipoTamanioControlRelacion) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);}

			this.isVisibilidadFK_IdUsuario=isParaTipoDelimiterNegation;
			if(!this.isVisibilidadFK_IdUsuario) {this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(jPanelFK_IdUsuarioParametroGeneralUsuario);}
		}
		
	}
	
	
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ParametroGeneralUsuarioSessionBean parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
		
		if(this.parametrogeneralusuarioSessionBean==null) {
			this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
		}
		
		this.parametrogeneralusuarioSessionBean.setsUltimaBusquedaParametroGeneralUsuario(this.getsAccionBusqueda());
		this.parametrogeneralusuarioSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.parametrogeneralusuarioSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			parametrogeneralusuarioSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			parametrogeneralusuarioSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDelimiter")) {
			parametrogeneralusuarioSessionBean.setid_tipo_delimiter(this.getid_tipo_delimiterFK_IdTipoDelimiter());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoExportar")) {
			parametrogeneralusuarioSessionBean.setid_tipo_exportar(this.getid_tipo_exportarFK_IdTipoExportar());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoFondo")) {
			parametrogeneralusuarioSessionBean.setid_tipo_fondo(this.getid_tipo_fondoFK_IdTipoFondo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoFondoBorde")) {
			parametrogeneralusuarioSessionBean.setid_tipo_fondo_borde(this.getid_tipo_fondo_bordeFK_IdTipoFondoBorde());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoFondoControl")) {
			parametrogeneralusuarioSessionBean.setid_tipo_fondo_control(this.getid_tipo_fondo_controlFK_IdTipoFondoControl());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoFuente")) {
			parametrogeneralusuarioSessionBean.setid_tipo_fuente(this.getid_tipo_fuenteFK_IdTipoFuente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTamanioControlNormal")) {
			parametrogeneralusuarioSessionBean.setid_tipo_tamanio_control_normal(this.getid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTamanioControlRelacion")) {
			parametrogeneralusuarioSessionBean.setid_tipo_tamanio_control_relacion(this.getid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			parametrogeneralusuarioSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ParametroGeneralUsuarioSessionBean parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
		
		if(this.parametrogeneralusuarioSessionBean==null) {
			this.parametrogeneralusuarioSessionBean=new ParametroGeneralUsuarioSessionBean();
		}
		
		if(this.parametrogeneralusuarioSessionBean.getsUltimaBusquedaParametroGeneralUsuario()!=null&&!this.parametrogeneralusuarioSessionBean.getsUltimaBusquedaParametroGeneralUsuario().equals("")) {
			this.setsAccionBusqueda(parametrogeneralusuarioSessionBean.getsUltimaBusquedaParametroGeneralUsuario());
			this.setiNumeroPaginacion(parametrogeneralusuarioSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(parametrogeneralusuarioSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(parametrogeneralusuarioSessionBean.getid_empresa());
				parametrogeneralusuarioSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(parametrogeneralusuarioSessionBean.getid_moneda());
				parametrogeneralusuarioSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDelimiter")) {
				this.setid_tipo_delimiterFK_IdTipoDelimiter(parametrogeneralusuarioSessionBean.getid_tipo_delimiter());
				parametrogeneralusuarioSessionBean.setid_tipo_delimiter(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoExportar")) {
				this.setid_tipo_exportarFK_IdTipoExportar(parametrogeneralusuarioSessionBean.getid_tipo_exportar());
				parametrogeneralusuarioSessionBean.setid_tipo_exportar(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoFondo")) {
				this.setid_tipo_fondoFK_IdTipoFondo(parametrogeneralusuarioSessionBean.getid_tipo_fondo());
				parametrogeneralusuarioSessionBean.setid_tipo_fondo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoFondoBorde")) {
				this.setid_tipo_fondo_bordeFK_IdTipoFondoBorde(parametrogeneralusuarioSessionBean.getid_tipo_fondo_borde());
				parametrogeneralusuarioSessionBean.setid_tipo_fondo_borde(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoFondoControl")) {
				this.setid_tipo_fondo_controlFK_IdTipoFondoControl(parametrogeneralusuarioSessionBean.getid_tipo_fondo_control());
				parametrogeneralusuarioSessionBean.setid_tipo_fondo_control(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoFuente")) {
				this.setid_tipo_fuenteFK_IdTipoFuente(parametrogeneralusuarioSessionBean.getid_tipo_fuente());
				parametrogeneralusuarioSessionBean.setid_tipo_fuente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTamanioControlNormal")) {
				this.setid_tipo_tamanio_control_normalFK_IdTipoTamanioControlNormal(parametrogeneralusuarioSessionBean.getid_tipo_tamanio_control_normal());
				parametrogeneralusuarioSessionBean.setid_tipo_tamanio_control_normal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTamanioControlRelacion")) {
				this.setid_tipo_tamanio_control_relacionFK_IdTipoTamanioControlRelacion(parametrogeneralusuarioSessionBean.getid_tipo_tamanio_control_relacion());
				parametrogeneralusuarioSessionBean.setid_tipo_tamanio_control_relacion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(parametrogeneralusuarioSessionBean.getid_usuario());
				parametrogeneralusuarioSessionBean.setid_usuario(-1L);
			}
		}
		
		this.parametrogeneralusuarioSessionBean.setsUltimaBusquedaParametroGeneralUsuario("");
		this.parametrogeneralusuarioSessionBean.setiNumeroPaginacion(ParametroGeneralUsuarioConstantesFunciones.INUMEROPAGINACION);
		this.parametrogeneralusuarioSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaParametroGeneralUsuario(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioParametroGeneralUsuario() {
		this.updateBorderResaltarBusquedasFormularioParametroGeneralUsuario();
		this.updateVisibilidadBusquedasFormularioParametroGeneralUsuario();
		this.updateHabilitarBusquedasFormularioParametroGeneralUsuario();
	}
	
	public void updateBorderResaltarBusquedasFormularioParametroGeneralUsuario() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponents().length>0) {
	

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdEmpresaParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdEmpresaParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdEmpresaParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdMonedaParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdMonedaParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdMonedaParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoDelimiterParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoDelimiterParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoDelimiterParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoExportarParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoExportarParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoExportarParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFondoParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFondoParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFondoBordeParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFondoBordeParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFondoControlParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoControlParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFondoControlParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFuenteParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFuenteParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFuenteParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoTamanioControlNormalParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoTamanioControlNormalParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoTamanioControlRelacionParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);
			}
		}

		if(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdUsuarioParametroGeneralUsuario!=null) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdUsuarioParametroGeneralUsuario);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdUsuarioParametroGeneralUsuario);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioParametroGeneralUsuario() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdEmpresaParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdEmpresaParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdEmpresaParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdMonedaParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdMonedaParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdMonedaParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoDelimiterParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoDelimiterParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoDelimiterParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoExportarParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoExportarParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoExportarParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoFondoParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoFondoParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoFondoBordeParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoFondoBordeParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoControlParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoFondoControlParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoFondoControlParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFuenteParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoFuenteParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoFuenteParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoTamanioControlNormalParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoTamanioControlNormalParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdTipoTamanioControlRelacionParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdUsuarioParametroGeneralUsuario);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdUsuarioParametroGeneralUsuario);
			if(!this.parametrogeneralusuarioConstantesFunciones.mostrarFK_IdUsuarioParametroGeneralUsuario && index>-1) {
				this.jTabbedPaneBusquedasParametroGeneralUsuario.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioParametroGeneralUsuario() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdEmpresaParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdEmpresaParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdEmpresaParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdMonedaParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdMonedaParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdMonedaParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoDelimiterParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoDelimiterParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoDelimiterParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoExportarParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoExportarParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoExportarParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoFondoParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoFondoParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoFondoBordeParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoFondoBordeParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoControlParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoFondoControlParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoFondoControlParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFuenteParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoFuenteParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoFuenteParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoTamanioControlNormalParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoTamanioControlNormalParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);
			}

			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdUsuarioParametroGeneralUsuario);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarFK_IdUsuarioParametroGeneralUsuario);
				this.jTabbedPaneBusquedasParametroGeneralUsuario.setEnabledAt(index,this.parametrogeneralusuarioConstantesFunciones.activarFK_IdUsuarioParametroGeneralUsuario);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaParametroGeneralUsuario(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdEmpresa")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdEmpresaParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdEmpresaParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdEmpresaParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdMoneda")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdMonedaParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdMonedaParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdMonedaParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDelimiter")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoDelimiterParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdTipoDelimiterParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoDelimiterParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoExportar")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoExportarParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdTipoExportarParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoExportarParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoFondo")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdTipoFondoParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFondoParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoFondoBorde")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoBordeParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdTipoFondoBordeParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFondoBordeParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoFondoControl")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFondoControlParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdTipoFondoControlParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFondoControlParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoFuente")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoFuenteParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdTipoFuenteParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoFuenteParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTamanioControlNormal")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoTamanioControlNormalParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdTipoTamanioControlNormalParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoTamanioControlNormalParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTamanioControlRelacion")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdTipoTamanioControlRelacionParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdTipoTamanioControlRelacionParametroGeneralUsuario);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUsuario")) {
			index= this.jTabbedPaneBusquedasParametroGeneralUsuario.indexOfComponent(this.jPanelFK_IdUsuarioParametroGeneralUsuario);

			this.jTabbedPaneBusquedasParametroGeneralUsuario.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroGeneralUsuario.getComponent(index);

			this.parametrogeneralusuarioConstantesFunciones.setResaltarFK_IdUsuarioParametroGeneralUsuario(resaltar);

			jPanel.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarFK_IdUsuarioParametroGeneralUsuario);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarParametroGeneralUsuario.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioParametroGeneralUsuario() throws Exception {

		if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioParametroGeneralUsuario();
		this.updateVisibilidadResaltarControlesFormularioParametroGeneralUsuario();
		this.updateHabilitarResaltarControlesFormularioParametroGeneralUsuario();
		
	}
	
	public void updateBorderResaltarControlesFormularioParametroGeneralUsuario() throws Exception {
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_usuarioParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_usuarioParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_empresaParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_empresaParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_sucursalParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_sucursalParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_ejercicioParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_ejercicioParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_periodoParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_periodoParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_monedaParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_monedaParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarfecha_sistemaParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jDateChooserfecha_sistemaParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarfecha_sistemaParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_anioParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_anioParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_mesParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_mesParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltardiaParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextFielddiaParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltardiaParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_visualParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_visualParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondoParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondoParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondo_bordeParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondo_bordeParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondo_controlParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fondo_controlParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fuenteParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_fuenteParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_tamanio_control_normalParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_tamanio_control_normalParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_tamanio_control_relacionParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_tamanio_control_relacionParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_tamanio_control_manualParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_manualParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_manualParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_tamanio_control_manualParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_tamanio_control_todo_relacionParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_todo_relacionParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_todo_relacionParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_tamanio_control_todo_relacionParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_guardar_relacionesParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_guardar_relacionesParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_guardar_relacionesParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_guardar_relacionesParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mensaje_confirmacionParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mensaje_confirmacionParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mensaje_confirmacionParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mensaje_confirmacionParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_botones_tool_barParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_botones_tool_barParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_botones_tool_barParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_botones_tool_barParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mostrar_acciones_campo_generalParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_generalParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_generalParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mostrar_acciones_campo_generalParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_exportarParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_exportarParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_delimiterParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarid_tipo_delimiterParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_exportar_cabeceraParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_cabeceraParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_cabeceraParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_exportar_cabeceraParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_exportar_campo_versionParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_campo_versionParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_campo_versionParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_exportar_campo_versionParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarpath_exportarParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextAreapath_exportarParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarpath_exportarParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_precargar_ventanasParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_ventanasParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_ventanasParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_precargar_ventanasParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_precargar_por_usuarioParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_por_usuarioParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_por_usuarioParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_precargar_por_usuarioParametroGeneralUsuario);}
		if(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_cargar_por_parteParametroGeneralUsuario!=null && this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_cargar_por_parteParametroGeneralUsuario.setBorderPainted(true);this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_cargar_por_parteParametroGeneralUsuario.setBorder(this.parametrogeneralusuarioConstantesFunciones.resaltarcon_cargar_por_parteParametroGeneralUsuario);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioParametroGeneralUsuario() throws Exception {		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
	
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_usuarioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_usuarioParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_usuarioParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_empresaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_empresaParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_empresaParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_sucursalParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_sucursalParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_sucursalParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_ejercicioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_ejercicioParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_ejercicioParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_periodoParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_periodoParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_periodoParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_monedaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_monedaParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_monedaParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jDateChooserfecha_sistemaParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarfecha_sistemaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelfecha_sistemaParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarfecha_sistemaParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_anioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_anioParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_anioParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_mesParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_mesParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_mesParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextFielddiaParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrardiaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPaneldiaParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrardiaParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_visualParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_tipo_visualParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_visualParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fondoParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_tipo_fondoParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fondoParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fondo_bordeParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_tipo_fondo_bordeParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fondo_bordeParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fondo_controlParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_tipo_fondo_controlParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fondo_controlParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fuenteParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_tipo_fuenteParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_fuenteParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_tamanio_control_normalParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_tipo_tamanio_control_normalParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_tamanio_control_normalParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_tamanio_control_relacionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_tipo_tamanio_control_relacionParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_tamanio_control_relacionParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_manualParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_tamanio_control_manualParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_tamanio_control_manualParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_tamanio_control_manualParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_todo_relacionParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_tamanio_control_todo_relacionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_tamanio_control_todo_relacionParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_tamanio_control_todo_relacionParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_guardar_relacionesParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_guardar_relacionesParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_guardar_relacionesParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_guardar_relacionesParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mensaje_confirmacionParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_mensaje_confirmacionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_mensaje_confirmacionParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_mensaje_confirmacionParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_botones_tool_barParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_botones_tool_barParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_botones_tool_barParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_botones_tool_barParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_generalParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_mostrar_acciones_campo_generalParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_mostrar_acciones_campo_generalParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_mostrar_acciones_campo_generalParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_exportarParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_tipo_exportarParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_exportarParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_delimiterParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelid_tipo_delimiterParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarid_tipo_delimiterParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_cabeceraParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_exportar_cabeceraParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_exportar_cabeceraParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_exportar_cabeceraParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_campo_versionParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_exportar_campo_versionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_exportar_campo_versionParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_exportar_campo_versionParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextAreapath_exportarParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarpath_exportarParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelpath_exportarParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarpath_exportarParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_ventanasParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_precargar_ventanasParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_precargar_ventanasParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_precargar_ventanasParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_por_usuarioParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_precargar_por_usuarioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_precargar_por_usuarioParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_precargar_por_usuarioParametroGeneralUsuario);
		//this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_cargar_por_parteParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_cargar_por_parteParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jPanelcon_cargar_por_parteParametroGeneralUsuario.setVisible(this.parametrogeneralusuarioConstantesFunciones.mostrarcon_cargar_por_parteParametroGeneralUsuario);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioParametroGeneralUsuario() throws Exception {
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroGeneralUsuario!=null) {
	
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jLabelid_usuarioParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_usuarioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_empresaParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_empresaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_sucursalParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_sucursalParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_ejercicioParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_ejercicioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_periodoParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_periodoParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_monedaParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_monedaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jDateChooserfecha_sistemaParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarfecha_sistemaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_anioParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_anioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_mesParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_mesParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextFielddiaParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activardiaParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_visualParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_visualParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondoParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondoParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_bordeParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondo_bordeParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fondo_controlParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fondo_controlParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_fuenteParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_fuenteParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_normalParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_tamanio_control_normalParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_tamanio_control_relacionParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_tamanio_control_relacionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_manualParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_tamanio_control_manualParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_tamanio_control_todo_relacionParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_tamanio_control_todo_relacionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_guardar_relacionesParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_guardar_relacionesParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mensaje_confirmacionParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_mensaje_confirmacionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_botones_tool_barParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_botones_tool_barParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_generalParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_mostrar_acciones_campo_generalParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_mostrar_acciones_campo_relacionesParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_exportarParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_exportarParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jComboBoxid_tipo_delimiterParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarid_tipo_delimiterParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_cabeceraParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_exportar_cabeceraParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_exportar_campo_versionParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_exportar_campo_versionParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jTextAreapath_exportarParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarpath_exportarParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_ventanasParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_precargar_ventanasParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_precargar_por_usuarioParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_precargar_por_usuarioParametroGeneralUsuario);
		this.jInternalFrameDetalleFormParametroGeneralUsuario.jCheckBoxcon_cargar_por_parteParametroGeneralUsuario.setEnabled(this.parametrogeneralusuarioConstantesFunciones.activarcon_cargar_por_parteParametroGeneralUsuario);
		}
	}
	
		
}