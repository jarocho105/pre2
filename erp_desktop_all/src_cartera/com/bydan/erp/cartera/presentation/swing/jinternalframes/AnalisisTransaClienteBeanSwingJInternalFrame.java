/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.cartera.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.cartera.util.AnalisisTransaClienteConstantesFunciones;
import com.bydan.erp.cartera.util.AnalisisTransaClienteParameterReturnGeneral;
//import com.bydan.erp.cartera.util.AnalisisTransaClienteParameterGeneral;
//import com.bydan.erp.cartera.presentation.report.source.AnalisisTransaClienteBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.cartera.resources.reportes.AuxiliarReportes;


import com.bydan.erp.cartera.util.*;
import com.bydan.erp.cartera.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.cartera.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class AnalisisTransaClienteBeanSwingJInternalFrame extends AnalisisTransaClienteJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(AnalisisTransaClienteBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<AnalisisTransaCliente> analisistransaclienteValidator = new ClassValidator<AnalisisTransaCliente>(AnalisisTransaCliente.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public AnalisisTransaCliente analisistransacliente;	
	public AnalisisTransaCliente analisistransaclienteAux;
	public AnalisisTransaCliente analisistransaclienteAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public AnalisisTransaCliente analisistransaclienteTotales;
	public Long idAnalisisTransaClienteActual;
	public Long iIdNuevoAnalisisTransaCliente=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboTransaccion="";

	public List<Transaccion> transaccionsForeignKey;

	public List<Transaccion> gettransaccionsForeignKey() {
		return transaccionsForeignKey;
	}

	public void settransaccionsForeignKey(List<Transaccion> transaccionsForeignKey) {
		this.transaccionsForeignKey = transaccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionForeignKey;

	public Transaccion gettransaccionForeignKey() {
		return transaccionForeignKey;
	}

	public void settransaccionForeignKey(Transaccion transaccionForeignKey) {
		this.transaccionForeignKey = transaccionForeignKey;
	}

	public String sFinalQueryComboTransaccion1="";

	public List<Transaccion> transaccion1sForeignKey;

	public List<Transaccion> gettransaccion1sForeignKey() {
		return transaccion1sForeignKey;
	}

	public void settransaccion1sForeignKey(List<Transaccion> transaccion1sForeignKey) {
		this.transaccion1sForeignKey = transaccion1sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion1ForeignKey;

	public Transaccion gettransaccion1ForeignKey() {
		return transaccion1ForeignKey;
	}

	public void settransaccion1ForeignKey(Transaccion transaccion1ForeignKey) {
		this.transaccion1ForeignKey = transaccion1ForeignKey;
	}

	public String sFinalQueryComboTransaccion2="";

	public List<Transaccion> transaccion2sForeignKey;

	public List<Transaccion> gettransaccion2sForeignKey() {
		return transaccion2sForeignKey;
	}

	public void settransaccion2sForeignKey(List<Transaccion> transaccion2sForeignKey) {
		this.transaccion2sForeignKey = transaccion2sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion2ForeignKey;

	public Transaccion gettransaccion2ForeignKey() {
		return transaccion2ForeignKey;
	}

	public void settransaccion2ForeignKey(Transaccion transaccion2ForeignKey) {
		this.transaccion2ForeignKey = transaccion2ForeignKey;
	}

	public String sFinalQueryComboTransaccion3="";

	public List<Transaccion> transaccion3sForeignKey;

	public List<Transaccion> gettransaccion3sForeignKey() {
		return transaccion3sForeignKey;
	}

	public void settransaccion3sForeignKey(List<Transaccion> transaccion3sForeignKey) {
		this.transaccion3sForeignKey = transaccion3sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion3ForeignKey;

	public Transaccion gettransaccion3ForeignKey() {
		return transaccion3ForeignKey;
	}

	public void settransaccion3ForeignKey(Transaccion transaccion3ForeignKey) {
		this.transaccion3ForeignKey = transaccion3ForeignKey;
	}

	public String sFinalQueryComboTransaccion4="";

	public List<Transaccion> transaccion4sForeignKey;

	public List<Transaccion> gettransaccion4sForeignKey() {
		return transaccion4sForeignKey;
	}

	public void settransaccion4sForeignKey(List<Transaccion> transaccion4sForeignKey) {
		this.transaccion4sForeignKey = transaccion4sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion4ForeignKey;

	public Transaccion gettransaccion4ForeignKey() {
		return transaccion4ForeignKey;
	}

	public void settransaccion4ForeignKey(Transaccion transaccion4ForeignKey) {
		this.transaccion4ForeignKey = transaccion4ForeignKey;
	}

	public String sFinalQueryComboTransaccion5="";

	public List<Transaccion> transaccion5sForeignKey;

	public List<Transaccion> gettransaccion5sForeignKey() {
		return transaccion5sForeignKey;
	}

	public void settransaccion5sForeignKey(List<Transaccion> transaccion5sForeignKey) {
		this.transaccion5sForeignKey = transaccion5sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion5ForeignKey;

	public Transaccion gettransaccion5ForeignKey() {
		return transaccion5ForeignKey;
	}

	public void settransaccion5ForeignKey(Transaccion transaccion5ForeignKey) {
		this.transaccion5ForeignKey = transaccion5ForeignKey;
	}

	public String sFinalQueryComboTransaccion6="";

	public List<Transaccion> transaccion6sForeignKey;

	public List<Transaccion> gettransaccion6sForeignKey() {
		return transaccion6sForeignKey;
	}

	public void settransaccion6sForeignKey(List<Transaccion> transaccion6sForeignKey) {
		this.transaccion6sForeignKey = transaccion6sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion6ForeignKey;

	public Transaccion gettransaccion6ForeignKey() {
		return transaccion6ForeignKey;
	}

	public void settransaccion6ForeignKey(Transaccion transaccion6ForeignKey) {
		this.transaccion6ForeignKey = transaccion6ForeignKey;
	}

	public String sFinalQueryComboTransaccion7="";

	public List<Transaccion> transaccion7sForeignKey;

	public List<Transaccion> gettransaccion7sForeignKey() {
		return transaccion7sForeignKey;
	}

	public void settransaccion7sForeignKey(List<Transaccion> transaccion7sForeignKey) {
		this.transaccion7sForeignKey = transaccion7sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion7ForeignKey;

	public Transaccion gettransaccion7ForeignKey() {
		return transaccion7ForeignKey;
	}

	public void settransaccion7ForeignKey(Transaccion transaccion7ForeignKey) {
		this.transaccion7ForeignKey = transaccion7ForeignKey;
	}

	public String sFinalQueryComboTransaccion8="";

	public List<Transaccion> transaccion8sForeignKey;

	public List<Transaccion> gettransaccion8sForeignKey() {
		return transaccion8sForeignKey;
	}

	public void settransaccion8sForeignKey(List<Transaccion> transaccion8sForeignKey) {
		this.transaccion8sForeignKey = transaccion8sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion8ForeignKey;

	public Transaccion gettransaccion8ForeignKey() {
		return transaccion8ForeignKey;
	}

	public void settransaccion8ForeignKey(Transaccion transaccion8ForeignKey) {
		this.transaccion8ForeignKey = transaccion8ForeignKey;
	}

	public String sFinalQueryComboTransaccion9="";

	public List<Transaccion> transaccion9sForeignKey;

	public List<Transaccion> gettransaccion9sForeignKey() {
		return transaccion9sForeignKey;
	}

	public void settransaccion9sForeignKey(List<Transaccion> transaccion9sForeignKey) {
		this.transaccion9sForeignKey = transaccion9sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion9ForeignKey;

	public Transaccion gettransaccion9ForeignKey() {
		return transaccion9ForeignKey;
	}

	public void settransaccion9ForeignKey(Transaccion transaccion9ForeignKey) {
		this.transaccion9ForeignKey = transaccion9ForeignKey;
	}

	public String sFinalQueryComboTransaccion10="";

	public List<Transaccion> transaccion10sForeignKey;

	public List<Transaccion> gettransaccion10sForeignKey() {
		return transaccion10sForeignKey;
	}

	public void settransaccion10sForeignKey(List<Transaccion> transaccion10sForeignKey) {
		this.transaccion10sForeignKey = transaccion10sForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccion10ForeignKey;

	public Transaccion gettransaccion10ForeignKey() {
		return transaccion10ForeignKey;
	}

	public void settransaccion10ForeignKey(Transaccion transaccion10ForeignKey) {
		this.transaccion10ForeignKey = transaccion10ForeignKey;
	}

		
	
	
	
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoAnalisisTransaCliente;
	public Boolean isPermisoNuevoAnalisisTransaCliente;
	public Boolean isPermisoActualizarAnalisisTransaCliente;
	public Boolean isPermisoActualizarOriginalAnalisisTransaCliente;
	public Boolean isPermisoEliminarAnalisisTransaCliente;
	public Boolean isPermisoGuardarCambiosAnalisisTransaCliente;
	public Boolean isPermisoConsultaAnalisisTransaCliente;
	public Boolean isPermisoBusquedaAnalisisTransaCliente;
	public Boolean isPermisoReporteAnalisisTransaCliente;
	public Boolean isPermisoPaginacionMedioAnalisisTransaCliente;
	public Boolean isPermisoPaginacionAltoAnalisisTransaCliente;
	public Boolean isPermisoPaginacionTodoAnalisisTransaCliente;
	public Boolean isPermisoCopiarAnalisisTransaCliente;
	public Boolean isPermisoVerFormAnalisisTransaCliente;
	public Boolean isPermisoDuplicarAnalisisTransaCliente;
	public Boolean isPermisoOrdenAnalisisTransaCliente;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public AnalisisTransaClienteParameterReturnGeneral analisistransaclienteReturnGeneral;
	public AnalisisTransaClienteParameterReturnGeneral analisistransaclienteParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoAnalisisTransaCliente=false;
	public Boolean esParaAccionDesdeFormularioAnalisisTransaCliente=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected AnalisisTransaClienteSessionBeanAdditional analisistransaclienteSessionBeanAdditional=null;
	
	public AnalisisTransaClienteSessionBeanAdditional getAnalisisTransaClienteSessionBeanAdditional() {
		return this.analisistransaclienteSessionBeanAdditional;
	}
	
	public void setAnalisisTransaClienteSessionBeanAdditional(AnalisisTransaClienteSessionBeanAdditional analisistransaclienteSessionBeanAdditional) {
		try {
			this.analisistransaclienteSessionBeanAdditional=analisistransaclienteSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected AnalisisTransaClienteBeanSwingJInternalFrameAdditional analisistransaclienteBeanSwingJInternalFrameAdditional=null;
	//public class AnalisisTransaClienteBeanSwingJInternalFrame
	
	public AnalisisTransaClienteBeanSwingJInternalFrameAdditional getAnalisisTransaClienteBeanSwingJInternalFrameAdditional() {
		return this.analisistransaclienteBeanSwingJInternalFrameAdditional;
	}
	
	public void setAnalisisTransaClienteBeanSwingJInternalFrameAdditional(AnalisisTransaClienteBeanSwingJInternalFrameAdditional analisistransaclienteBeanSwingJInternalFrameAdditional) {
		try {
			this.analisistransaclienteBeanSwingJInternalFrameAdditional=analisistransaclienteBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public AnalisisTransaClienteLogic analisistransaclienteLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public AnalisisTransaCliente analisistransaclienteBean;
	public AnalisisTransaClienteConstantesFunciones analisistransaclienteConstantesFunciones;
	//public AnalisisTransaClienteParameterReturnGeneral analisistransaclienteReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public ModuloLogic moduloLogic;
	public TransaccionLogic transaccionLogic;
	public TransaccionLogic transaccion1Logic;
	public TransaccionLogic transaccion2Logic;
	public TransaccionLogic transaccion3Logic;
	public TransaccionLogic transaccion4Logic;
	public TransaccionLogic transaccion5Logic;
	public TransaccionLogic transaccion6Logic;
	public TransaccionLogic transaccion7Logic;
	public TransaccionLogic transaccion8Logic;
	public TransaccionLogic transaccion9Logic;
	public TransaccionLogic transaccion10Logic;
	
	//PARAMETROS
	
	
	//public List<AnalisisTransaCliente> analisistransaclientes;	
	//public List<AnalisisTransaCliente> analisistransaclientesEliminados;
	//public List<AnalisisTransaCliente> analisistransaclientesAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoAnalisisTransaCliente=false;
	public Boolean isVisibilidadCeldaDuplicarAnalisisTransaCliente=true;
	public Boolean isVisibilidadCeldaCopiarAnalisisTransaCliente=true;
	public Boolean isVisibilidadCeldaVerFormAnalisisTransaCliente=true;
	public Boolean isVisibilidadCeldaOrdenAnalisisTransaCliente=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;
	public Boolean isVisibilidadCeldaModificarAnalisisTransaCliente=false;
	public Boolean isVisibilidadCeldaActualizarAnalisisTransaCliente=false;
	public Boolean isVisibilidadCeldaEliminarAnalisisTransaCliente=false;
	public Boolean isVisibilidadCeldaCancelarAnalisisTransaCliente=false;
	public Boolean isVisibilidadCeldaGuardarAnalisisTransaCliente=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=false;	
	
	
	public Boolean isVisibilidadBusquedaPorNombre=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdTransaccion=false;
	public Boolean isVisibilidadFK_IdTransaccion1=false;
	public Boolean isVisibilidadFK_IdTransaccion10=false;
	public Boolean isVisibilidadFK_IdTransaccion2=false;
	public Boolean isVisibilidadFK_IdTransaccion4=false;
	public Boolean isVisibilidadFK_IdTransaccion5=false;
	public Boolean isVisibilidadFK_IdTransaccion6=false;
	public Boolean isVisibilidadFK_IdTransaccion7=false;
	public Boolean isVisibilidadFK_IdTransaccion8=false;
	public Boolean isVisibilidadFK_IdTransaccion9=false;
	public Boolean isVisibilidadFK_IdTransaccionTransaccio3=false;
	
	public Long getiIdNuevoAnalisisTransaCliente() {
		return this.iIdNuevoAnalisisTransaCliente;
	}

	public void setiIdNuevoAnalisisTransaCliente(Long iIdNuevoAnalisisTransaCliente) {
		this.iIdNuevoAnalisisTransaCliente = iIdNuevoAnalisisTransaCliente;
	}
	
	public Long getidAnalisisTransaClienteActual() {
		return this.idAnalisisTransaClienteActual;
	}

	public void setidAnalisisTransaClienteActual(Long idAnalisisTransaClienteActual) {
		this.idAnalisisTransaClienteActual = idAnalisisTransaClienteActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public AnalisisTransaCliente getanalisistransacliente() {
		return this.analisistransacliente;
	}

	public void setanalisistransacliente(AnalisisTransaCliente analisistransacliente) {
		this.analisistransacliente = analisistransacliente;
	}
	
	public AnalisisTransaCliente getanalisistransaclienteAux() {
		return this.analisistransaclienteAux;
	}

	public void setanalisistransaclienteAux(AnalisisTransaCliente analisistransaclienteAux) {
		this.analisistransaclienteAux = analisistransaclienteAux;
	}				
	
	public AnalisisTransaCliente getanalisistransaclienteAnterior() {
		return this.analisistransaclienteAnterior;
	}

	public void setanalisistransaclienteAnterior(AnalisisTransaCliente analisistransaclienteAnterior) {
		this.analisistransaclienteAnterior = analisistransaclienteAnterior;
	}	
	
	public AnalisisTransaCliente getanalisistransaclienteTotales() {
		return this.analisistransaclienteTotales;
	}

	public void setanalisistransaclienteTotales(AnalisisTransaCliente analisistransaclienteTotales) {
		this.analisistransaclienteTotales = analisistransaclienteTotales;
	}	
	
	public AnalisisTransaCliente getanalisistransaclienteBean() {
		return this.analisistransaclienteBean;
	}

	public void setanalisistransaclienteBean(AnalisisTransaCliente analisistransaclienteBean) {
		this.analisistransaclienteBean = analisistransaclienteBean;
	}	
	
	public AnalisisTransaClienteParameterReturnGeneral getanalisistransaclienteReturnGeneral() {
		return this.analisistransaclienteReturnGeneral;
	}

	public void setanalisistransaclienteReturnGeneral(AnalisisTransaClienteParameterReturnGeneral analisistransaclienteReturnGeneral) {
		this.analisistransaclienteReturnGeneral = analisistransaclienteReturnGeneral;
	}	
	
	
	public String nombreBusquedaPorNombre="";

	public String getnombreBusquedaPorNombre() {
		return this.nombreBusquedaPorNombre;
	}

	public void setnombreBusquedaPorNombre(String nombreBusquedaPorNombre) {
		this.nombreBusquedaPorNombre = nombreBusquedaPorNombre;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_transaccionFK_IdTransaccion=-1L;

	public Long getid_transaccionFK_IdTransaccion() {
		return this.id_transaccionFK_IdTransaccion;
	}

	public void setid_transaccionFK_IdTransaccion(Long id_transaccionFK_IdTransaccion) {
		this.id_transaccionFK_IdTransaccion = id_transaccionFK_IdTransaccion;
	}

	public Long id_transaccion1FK_IdTransaccion1=null;

	public Long getid_transaccion1FK_IdTransaccion1() {
		return this.id_transaccion1FK_IdTransaccion1;
	}

	public void setid_transaccion1FK_IdTransaccion1(Long id_transaccion1FK_IdTransaccion1) {
		this.id_transaccion1FK_IdTransaccion1 = id_transaccion1FK_IdTransaccion1;
	}

	public Long id_transaccion10FK_IdTransaccion10=null;

	public Long getid_transaccion10FK_IdTransaccion10() {
		return this.id_transaccion10FK_IdTransaccion10;
	}

	public void setid_transaccion10FK_IdTransaccion10(Long id_transaccion10FK_IdTransaccion10) {
		this.id_transaccion10FK_IdTransaccion10 = id_transaccion10FK_IdTransaccion10;
	}

	public Long id_transaccion2FK_IdTransaccion2=null;

	public Long getid_transaccion2FK_IdTransaccion2() {
		return this.id_transaccion2FK_IdTransaccion2;
	}

	public void setid_transaccion2FK_IdTransaccion2(Long id_transaccion2FK_IdTransaccion2) {
		this.id_transaccion2FK_IdTransaccion2 = id_transaccion2FK_IdTransaccion2;
	}

	public Long id_transaccion4FK_IdTransaccion4=null;

	public Long getid_transaccion4FK_IdTransaccion4() {
		return this.id_transaccion4FK_IdTransaccion4;
	}

	public void setid_transaccion4FK_IdTransaccion4(Long id_transaccion4FK_IdTransaccion4) {
		this.id_transaccion4FK_IdTransaccion4 = id_transaccion4FK_IdTransaccion4;
	}

	public Long id_transaccion5FK_IdTransaccion5=null;

	public Long getid_transaccion5FK_IdTransaccion5() {
		return this.id_transaccion5FK_IdTransaccion5;
	}

	public void setid_transaccion5FK_IdTransaccion5(Long id_transaccion5FK_IdTransaccion5) {
		this.id_transaccion5FK_IdTransaccion5 = id_transaccion5FK_IdTransaccion5;
	}

	public Long id_transaccion6FK_IdTransaccion6=null;

	public Long getid_transaccion6FK_IdTransaccion6() {
		return this.id_transaccion6FK_IdTransaccion6;
	}

	public void setid_transaccion6FK_IdTransaccion6(Long id_transaccion6FK_IdTransaccion6) {
		this.id_transaccion6FK_IdTransaccion6 = id_transaccion6FK_IdTransaccion6;
	}

	public Long id_transaccion7FK_IdTransaccion7=null;

	public Long getid_transaccion7FK_IdTransaccion7() {
		return this.id_transaccion7FK_IdTransaccion7;
	}

	public void setid_transaccion7FK_IdTransaccion7(Long id_transaccion7FK_IdTransaccion7) {
		this.id_transaccion7FK_IdTransaccion7 = id_transaccion7FK_IdTransaccion7;
	}

	public Long id_transaccion8FK_IdTransaccion8=null;

	public Long getid_transaccion8FK_IdTransaccion8() {
		return this.id_transaccion8FK_IdTransaccion8;
	}

	public void setid_transaccion8FK_IdTransaccion8(Long id_transaccion8FK_IdTransaccion8) {
		this.id_transaccion8FK_IdTransaccion8 = id_transaccion8FK_IdTransaccion8;
	}

	public Long id_transaccion9FK_IdTransaccion9=null;

	public Long getid_transaccion9FK_IdTransaccion9() {
		return this.id_transaccion9FK_IdTransaccion9;
	}

	public void setid_transaccion9FK_IdTransaccion9(Long id_transaccion9FK_IdTransaccion9) {
		this.id_transaccion9FK_IdTransaccion9 = id_transaccion9FK_IdTransaccion9;
	}

	public Long id_transaccion3FK_IdTransaccionTransaccio3=null;

	public Long getid_transaccion3FK_IdTransaccionTransaccio3() {
		return this.id_transaccion3FK_IdTransaccionTransaccio3;
	}

	public void setid_transaccion3FK_IdTransaccionTransaccio3(Long id_transaccion3FK_IdTransaccionTransaccio3) {
		this.id_transaccion3FK_IdTransaccionTransaccio3 = id_transaccion3FK_IdTransaccionTransaccio3;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public AnalisisTransaClienteLogic getAnalisisTransaClienteLogic()	{		
		return analisistransaclienteLogic;
	}

	public void setAnalisisTransaClienteLogic(AnalisisTransaClienteLogic analisistransaclienteLogic) {
		this.analisistransaclienteLogic = analisistransaclienteLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoAnalisisTransaCliente() {
		return isEsNuevoAnalisisTransaCliente;
	}

	public void setIsEsNuevoAnalisisTransaCliente(Boolean isEsNuevoAnalisisTransaCliente) {
		this.isEsNuevoAnalisisTransaCliente = isEsNuevoAnalisisTransaCliente;
	}

	public Boolean getEsParaAccionDesdeFormularioAnalisisTransaCliente() {
		return esParaAccionDesdeFormularioAnalisisTransaCliente;
	}
	
	public void setEsParaAccionDesdeFormularioAnalisisTransaCliente(Boolean esParaAccionDesdeFormularioAnalisisTransaCliente) {
		this.esParaAccionDesdeFormularioAnalisisTransaCliente = esParaAccionDesdeFormularioAnalisisTransaCliente;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionsForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionsForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccionActual());
					this.transaccionsForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion1sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion1sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion1Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion1()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion1Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion1sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion1sForeignKey.add(0, transaccion1Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion1(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion1Actual());
					this.transaccion1sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion2sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion2sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion2Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion2()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion2Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion2sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion2sForeignKey.add(0, transaccion2Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion2(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion2Actual());
					this.transaccion2sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion3sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion3sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion3Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion3()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion3Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion3sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion3sForeignKey.add(0, transaccion3Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion3(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion3Actual());
					this.transaccion3sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion4sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion4sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion4Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion4()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion4Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion4sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion4sForeignKey.add(0, transaccion4Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion4(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion4Actual());
					this.transaccion4sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion5sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion5sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion5Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion5()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion5Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion5sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion5sForeignKey.add(0, transaccion5Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion5(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion5Actual());
					this.transaccion5sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion6sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion6sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion6Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion6()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion6Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion6sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion6sForeignKey.add(0, transaccion6Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion6(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion6Actual());
					this.transaccion6sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion7sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion7sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion7Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion7()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion7Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion7sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion7sForeignKey.add(0, transaccion7Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion7(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion7Actual());
					this.transaccion7sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion8sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion8sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion8Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion8()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion8Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion8sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion8sForeignKey.add(0, transaccion8Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion8(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion8Actual());
					this.transaccion8sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion9sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion9sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion9Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion9()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion9Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion9sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion9sForeignKey.add(0, transaccion9Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion9(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion9Actual());
					this.transaccion9sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccion10sForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccion10sForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transaccion transaccion10Nulo = new Transaccion();

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion10()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccion10Logic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccion10sForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transaccion10sForeignKey.add(0, transaccion10Nulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion10(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(analisistransaclienteSessionBean.getlidTransaccion10Actual());
					this.transaccion10sForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaAnalisisTransaCliente.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaAnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaAnalisisTransaClienteGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaAnalisisTransaClienteGenerico!=null && jComboBoxid_empresaAnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_empresaAnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloAnalisisTransaCliente.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloAnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloAnalisisTransaClienteGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloAnalisisTransaClienteGenerico!=null && jComboBoxid_moduloAnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_moduloAnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionForeignKey(Long idTransaccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionTemp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion(transaccionTemp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.setSelectedItem(transaccionTemp);
					}
				} else {
					//jComboBoxid_transaccionAnalisisTransaCliente.setSelectedItem(transaccionTemp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionForeignKeyDescripcion(Long idTransaccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionForeignKeyGenerico(Long idTransaccionSeleccionado,JComboBox jComboBoxid_transaccionAnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(transaccionTemp!=null) {
				jComboBoxid_transaccionAnalisisTransaClienteGenerico.setSelectedItem(transaccionTemp);
			} else {
				if(jComboBoxid_transaccionAnalisisTransaClienteGenerico!=null && jComboBoxid_transaccionAnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccionAnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion1ForeignKey(Long idTransaccion1Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion1Temp=null;

			for(Transaccion transaccion1Aux:transaccion1sForeignKey) {
				if(transaccion1Aux.getId()!=null && transaccion1Aux.getId().equals(idTransaccion1Seleccionado)) {
					transaccion1Temp=transaccion1Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion1Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion1(transaccion1Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.setSelectedItem(transaccion1Temp);
					}
				} else {
					//jComboBoxid_transaccion1AnalisisTransaCliente.setSelectedItem(transaccion1Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion1ForeignKeyDescripcion(Long idTransaccion1Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion1Temp=null;

			for(Transaccion transaccion1Aux:transaccion1sForeignKey) {
				if(transaccion1Aux.getId()!=null && transaccion1Aux.getId().equals(idTransaccion1Seleccionado)) {
					transaccion1Temp=transaccion1Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion1Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion1ForeignKeyGenerico(Long idTransaccion1Seleccionado,JComboBox jComboBoxid_transaccion1AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion1Temp=null;

			for(Transaccion transaccion1Aux:transaccion1sForeignKey) {
				if(transaccion1Aux.getId()!=null && transaccion1Aux.getId().equals(idTransaccion1Seleccionado)) {
					transaccion1Temp=transaccion1Aux;
					break;
				}
			}

			if(transaccion1Temp!=null) {
				jComboBoxid_transaccion1AnalisisTransaClienteGenerico.setSelectedItem(transaccion1Temp);
			} else {
				if(jComboBoxid_transaccion1AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion1AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion1AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion2ForeignKey(Long idTransaccion2Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion2Temp=null;

			for(Transaccion transaccion2Aux:transaccion2sForeignKey) {
				if(transaccion2Aux.getId()!=null && transaccion2Aux.getId().equals(idTransaccion2Seleccionado)) {
					transaccion2Temp=transaccion2Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion2Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion2(transaccion2Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.setSelectedItem(transaccion2Temp);
					}
				} else {
					//jComboBoxid_transaccion2AnalisisTransaCliente.setSelectedItem(transaccion2Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion2ForeignKeyDescripcion(Long idTransaccion2Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion2Temp=null;

			for(Transaccion transaccion2Aux:transaccion2sForeignKey) {
				if(transaccion2Aux.getId()!=null && transaccion2Aux.getId().equals(idTransaccion2Seleccionado)) {
					transaccion2Temp=transaccion2Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion2Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion2ForeignKeyGenerico(Long idTransaccion2Seleccionado,JComboBox jComboBoxid_transaccion2AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion2Temp=null;

			for(Transaccion transaccion2Aux:transaccion2sForeignKey) {
				if(transaccion2Aux.getId()!=null && transaccion2Aux.getId().equals(idTransaccion2Seleccionado)) {
					transaccion2Temp=transaccion2Aux;
					break;
				}
			}

			if(transaccion2Temp!=null) {
				jComboBoxid_transaccion2AnalisisTransaClienteGenerico.setSelectedItem(transaccion2Temp);
			} else {
				if(jComboBoxid_transaccion2AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion2AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion2AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion3ForeignKey(Long idTransaccion3Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion3Temp=null;

			for(Transaccion transaccion3Aux:transaccion3sForeignKey) {
				if(transaccion3Aux.getId()!=null && transaccion3Aux.getId().equals(idTransaccion3Seleccionado)) {
					transaccion3Temp=transaccion3Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion3Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion3(transaccion3Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.setSelectedItem(transaccion3Temp);
					}
				} else {
					//jComboBoxid_transaccion3AnalisisTransaCliente.setSelectedItem(transaccion3Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion3ForeignKeyDescripcion(Long idTransaccion3Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion3Temp=null;

			for(Transaccion transaccion3Aux:transaccion3sForeignKey) {
				if(transaccion3Aux.getId()!=null && transaccion3Aux.getId().equals(idTransaccion3Seleccionado)) {
					transaccion3Temp=transaccion3Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion3Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion3ForeignKeyGenerico(Long idTransaccion3Seleccionado,JComboBox jComboBoxid_transaccion3AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion3Temp=null;

			for(Transaccion transaccion3Aux:transaccion3sForeignKey) {
				if(transaccion3Aux.getId()!=null && transaccion3Aux.getId().equals(idTransaccion3Seleccionado)) {
					transaccion3Temp=transaccion3Aux;
					break;
				}
			}

			if(transaccion3Temp!=null) {
				jComboBoxid_transaccion3AnalisisTransaClienteGenerico.setSelectedItem(transaccion3Temp);
			} else {
				if(jComboBoxid_transaccion3AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion3AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion3AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion4ForeignKey(Long idTransaccion4Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion4Temp=null;

			for(Transaccion transaccion4Aux:transaccion4sForeignKey) {
				if(transaccion4Aux.getId()!=null && transaccion4Aux.getId().equals(idTransaccion4Seleccionado)) {
					transaccion4Temp=transaccion4Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion4Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion4(transaccion4Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.setSelectedItem(transaccion4Temp);
					}
				} else {
					//jComboBoxid_transaccion4AnalisisTransaCliente.setSelectedItem(transaccion4Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion4ForeignKeyDescripcion(Long idTransaccion4Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion4Temp=null;

			for(Transaccion transaccion4Aux:transaccion4sForeignKey) {
				if(transaccion4Aux.getId()!=null && transaccion4Aux.getId().equals(idTransaccion4Seleccionado)) {
					transaccion4Temp=transaccion4Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion4Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion4ForeignKeyGenerico(Long idTransaccion4Seleccionado,JComboBox jComboBoxid_transaccion4AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion4Temp=null;

			for(Transaccion transaccion4Aux:transaccion4sForeignKey) {
				if(transaccion4Aux.getId()!=null && transaccion4Aux.getId().equals(idTransaccion4Seleccionado)) {
					transaccion4Temp=transaccion4Aux;
					break;
				}
			}

			if(transaccion4Temp!=null) {
				jComboBoxid_transaccion4AnalisisTransaClienteGenerico.setSelectedItem(transaccion4Temp);
			} else {
				if(jComboBoxid_transaccion4AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion4AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion4AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion5ForeignKey(Long idTransaccion5Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion5Temp=null;

			for(Transaccion transaccion5Aux:transaccion5sForeignKey) {
				if(transaccion5Aux.getId()!=null && transaccion5Aux.getId().equals(idTransaccion5Seleccionado)) {
					transaccion5Temp=transaccion5Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion5Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion5(transaccion5Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.setSelectedItem(transaccion5Temp);
					}
				} else {
					//jComboBoxid_transaccion5AnalisisTransaCliente.setSelectedItem(transaccion5Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion5ForeignKeyDescripcion(Long idTransaccion5Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion5Temp=null;

			for(Transaccion transaccion5Aux:transaccion5sForeignKey) {
				if(transaccion5Aux.getId()!=null && transaccion5Aux.getId().equals(idTransaccion5Seleccionado)) {
					transaccion5Temp=transaccion5Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion5Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion5ForeignKeyGenerico(Long idTransaccion5Seleccionado,JComboBox jComboBoxid_transaccion5AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion5Temp=null;

			for(Transaccion transaccion5Aux:transaccion5sForeignKey) {
				if(transaccion5Aux.getId()!=null && transaccion5Aux.getId().equals(idTransaccion5Seleccionado)) {
					transaccion5Temp=transaccion5Aux;
					break;
				}
			}

			if(transaccion5Temp!=null) {
				jComboBoxid_transaccion5AnalisisTransaClienteGenerico.setSelectedItem(transaccion5Temp);
			} else {
				if(jComboBoxid_transaccion5AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion5AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion5AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion6ForeignKey(Long idTransaccion6Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion6Temp=null;

			for(Transaccion transaccion6Aux:transaccion6sForeignKey) {
				if(transaccion6Aux.getId()!=null && transaccion6Aux.getId().equals(idTransaccion6Seleccionado)) {
					transaccion6Temp=transaccion6Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion6Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion6(transaccion6Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.setSelectedItem(transaccion6Temp);
					}
				} else {
					//jComboBoxid_transaccion6AnalisisTransaCliente.setSelectedItem(transaccion6Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion6ForeignKeyDescripcion(Long idTransaccion6Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion6Temp=null;

			for(Transaccion transaccion6Aux:transaccion6sForeignKey) {
				if(transaccion6Aux.getId()!=null && transaccion6Aux.getId().equals(idTransaccion6Seleccionado)) {
					transaccion6Temp=transaccion6Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion6Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion6ForeignKeyGenerico(Long idTransaccion6Seleccionado,JComboBox jComboBoxid_transaccion6AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion6Temp=null;

			for(Transaccion transaccion6Aux:transaccion6sForeignKey) {
				if(transaccion6Aux.getId()!=null && transaccion6Aux.getId().equals(idTransaccion6Seleccionado)) {
					transaccion6Temp=transaccion6Aux;
					break;
				}
			}

			if(transaccion6Temp!=null) {
				jComboBoxid_transaccion6AnalisisTransaClienteGenerico.setSelectedItem(transaccion6Temp);
			} else {
				if(jComboBoxid_transaccion6AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion6AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion6AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion7ForeignKey(Long idTransaccion7Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion7Temp=null;

			for(Transaccion transaccion7Aux:transaccion7sForeignKey) {
				if(transaccion7Aux.getId()!=null && transaccion7Aux.getId().equals(idTransaccion7Seleccionado)) {
					transaccion7Temp=transaccion7Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion7Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion7(transaccion7Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.setSelectedItem(transaccion7Temp);
					}
				} else {
					//jComboBoxid_transaccion7AnalisisTransaCliente.setSelectedItem(transaccion7Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion7ForeignKeyDescripcion(Long idTransaccion7Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion7Temp=null;

			for(Transaccion transaccion7Aux:transaccion7sForeignKey) {
				if(transaccion7Aux.getId()!=null && transaccion7Aux.getId().equals(idTransaccion7Seleccionado)) {
					transaccion7Temp=transaccion7Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion7Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion7ForeignKeyGenerico(Long idTransaccion7Seleccionado,JComboBox jComboBoxid_transaccion7AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion7Temp=null;

			for(Transaccion transaccion7Aux:transaccion7sForeignKey) {
				if(transaccion7Aux.getId()!=null && transaccion7Aux.getId().equals(idTransaccion7Seleccionado)) {
					transaccion7Temp=transaccion7Aux;
					break;
				}
			}

			if(transaccion7Temp!=null) {
				jComboBoxid_transaccion7AnalisisTransaClienteGenerico.setSelectedItem(transaccion7Temp);
			} else {
				if(jComboBoxid_transaccion7AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion7AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion7AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion8ForeignKey(Long idTransaccion8Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion8Temp=null;

			for(Transaccion transaccion8Aux:transaccion8sForeignKey) {
				if(transaccion8Aux.getId()!=null && transaccion8Aux.getId().equals(idTransaccion8Seleccionado)) {
					transaccion8Temp=transaccion8Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion8Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion8(transaccion8Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.setSelectedItem(transaccion8Temp);
					}
				} else {
					//jComboBoxid_transaccion8AnalisisTransaCliente.setSelectedItem(transaccion8Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion8ForeignKeyDescripcion(Long idTransaccion8Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion8Temp=null;

			for(Transaccion transaccion8Aux:transaccion8sForeignKey) {
				if(transaccion8Aux.getId()!=null && transaccion8Aux.getId().equals(idTransaccion8Seleccionado)) {
					transaccion8Temp=transaccion8Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion8Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion8ForeignKeyGenerico(Long idTransaccion8Seleccionado,JComboBox jComboBoxid_transaccion8AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion8Temp=null;

			for(Transaccion transaccion8Aux:transaccion8sForeignKey) {
				if(transaccion8Aux.getId()!=null && transaccion8Aux.getId().equals(idTransaccion8Seleccionado)) {
					transaccion8Temp=transaccion8Aux;
					break;
				}
			}

			if(transaccion8Temp!=null) {
				jComboBoxid_transaccion8AnalisisTransaClienteGenerico.setSelectedItem(transaccion8Temp);
			} else {
				if(jComboBoxid_transaccion8AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion8AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion8AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion9ForeignKey(Long idTransaccion9Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion9Temp=null;

			for(Transaccion transaccion9Aux:transaccion9sForeignKey) {
				if(transaccion9Aux.getId()!=null && transaccion9Aux.getId().equals(idTransaccion9Seleccionado)) {
					transaccion9Temp=transaccion9Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion9Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion9(transaccion9Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.setSelectedItem(transaccion9Temp);
					}
				} else {
					//jComboBoxid_transaccion9AnalisisTransaCliente.setSelectedItem(transaccion9Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion9ForeignKeyDescripcion(Long idTransaccion9Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion9Temp=null;

			for(Transaccion transaccion9Aux:transaccion9sForeignKey) {
				if(transaccion9Aux.getId()!=null && transaccion9Aux.getId().equals(idTransaccion9Seleccionado)) {
					transaccion9Temp=transaccion9Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion9Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion9ForeignKeyGenerico(Long idTransaccion9Seleccionado,JComboBox jComboBoxid_transaccion9AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion9Temp=null;

			for(Transaccion transaccion9Aux:transaccion9sForeignKey) {
				if(transaccion9Aux.getId()!=null && transaccion9Aux.getId().equals(idTransaccion9Seleccionado)) {
					transaccion9Temp=transaccion9Aux;
					break;
				}
			}

			if(transaccion9Temp!=null) {
				jComboBoxid_transaccion9AnalisisTransaClienteGenerico.setSelectedItem(transaccion9Temp);
			} else {
				if(jComboBoxid_transaccion9AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion9AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion9AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccion10ForeignKey(Long idTransaccion10Seleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccion10Temp=null;

			for(Transaccion transaccion10Aux:transaccion10sForeignKey) {
				if(transaccion10Aux.getId()!=null && transaccion10Aux.getId().equals(idTransaccion10Seleccionado)) {
					transaccion10Temp=transaccion10Aux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccion10Temp!=null) {

					if(this.analisistransacliente!=null) {
						this.analisistransacliente.setTransaccion10(transaccion10Temp);
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.setSelectedItem(transaccion10Temp);
					}
				} else {
					//jComboBoxid_transaccion10AnalisisTransaCliente.setSelectedItem(transaccion10Temp);
					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccion10ForeignKeyDescripcion(Long idTransaccion10Seleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccion10Temp=null;

			for(Transaccion transaccion10Aux:transaccion10sForeignKey) {
				if(transaccion10Aux.getId()!=null && transaccion10Aux.getId().equals(idTransaccion10Seleccionado)) {
					transaccion10Temp=transaccion10Aux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccion10Temp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccion10ForeignKeyGenerico(Long idTransaccion10Seleccionado,JComboBox jComboBoxid_transaccion10AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccion10Temp=null;

			for(Transaccion transaccion10Aux:transaccion10sForeignKey) {
				if(transaccion10Aux.getId()!=null && transaccion10Aux.getId().equals(idTransaccion10Seleccionado)) {
					transaccion10Temp=transaccion10Aux;
					break;
				}
			}

			if(transaccion10Temp!=null) {
				jComboBoxid_transaccion10AnalisisTransaClienteGenerico.setSelectedItem(transaccion10Temp);
			} else {
				if(jComboBoxid_transaccion10AnalisisTransaClienteGenerico!=null && jComboBoxid_transaccion10AnalisisTransaClienteGenerico.getItemCount()>0) {
					jComboBoxid_transaccion10AnalisisTransaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_empresaAnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaAnalisisTransaClienteGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaAnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				analisistransacliente.setid_empresa(empresaAux.getId());
				analisistransacliente.setempresa_descripcion(AnalisisTransaClienteConstantesFunciones.getEmpresaDescripcion(empresaAux));
				analisistransacliente.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_moduloAnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloAnalisisTransaClienteGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloAnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				analisistransacliente.setid_modulo(moduloAux.getId());
				analisistransacliente.setmodulo_descripcion(AnalisisTransaClienteConstantesFunciones.getModuloDescripcion(moduloAux));
				analisistransacliente.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccionAnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccionAnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccionAnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				analisistransacliente.setid_transaccion(transaccionAux.getId());
				analisistransacliente.settransaccion_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccionDescripcion(transaccionAux));
				analisistransacliente.setTransaccion(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion1ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion1AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion1AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion1AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion1(transaccionAux.getId());
				analisistransacliente.settransaccion1_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion1Descripcion(transaccionAux));
				analisistransacliente.setTransaccion1(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion2ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion2AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion2AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion2AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion2(transaccionAux.getId());
				analisistransacliente.settransaccion2_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion2Descripcion(transaccionAux));
				analisistransacliente.setTransaccion2(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion3ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion3AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion3AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion3AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion3(transaccionAux.getId());
				analisistransacliente.settransaccion3_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion3Descripcion(transaccionAux));
				analisistransacliente.setTransaccion3(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion4ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion4AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion4AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion4AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion4(transaccionAux.getId());
				analisistransacliente.settransaccion4_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion4Descripcion(transaccionAux));
				analisistransacliente.setTransaccion4(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion5ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion5AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion5AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion5AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion5(transaccionAux.getId());
				analisistransacliente.settransaccion5_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion5Descripcion(transaccionAux));
				analisistransacliente.setTransaccion5(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion6ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion6AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion6AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion6AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion6(transaccionAux.getId());
				analisistransacliente.settransaccion6_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion6Descripcion(transaccionAux));
				analisistransacliente.setTransaccion6(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion7ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion7AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion7AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion7AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion7(transaccionAux.getId());
				analisistransacliente.settransaccion7_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion7Descripcion(transaccionAux));
				analisistransacliente.setTransaccion7(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion8ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion8AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion8AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion8AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion8(transaccionAux.getId());
				analisistransacliente.settransaccion8_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion8Descripcion(transaccionAux));
				analisistransacliente.setTransaccion8(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion9ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion9AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion9AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion9AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion9(transaccionAux.getId());
				analisistransacliente.settransaccion9_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion9Descripcion(transaccionAux));
				analisistransacliente.setTransaccion9(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccion10ForeignKey(AnalisisTransaCliente analisistransacliente,JComboBox jComboBoxid_transaccion10AnalisisTransaClienteGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion10AnalisisTransaClienteGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion10AnalisisTransaClienteGenerico.getSelectedItem();
			}

			if(transaccionAux!=null) {
				analisistransacliente.setid_transaccion10(transaccionAux.getId());
				analisistransacliente.settransaccion10_descripcion(AnalisisTransaClienteConstantesFunciones.getTransaccion10Descripcion(transaccionAux));
				analisistransacliente.setTransaccion10(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.addItem(transaccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion1sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion1:this.transaccion1sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.addItem(transaccion1);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion2sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion2:this.transaccion2sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.addItem(transaccion2);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion3sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion3:this.transaccion3sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.addItem(transaccion3);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion4sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion4:this.transaccion4sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.addItem(transaccion4);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion5sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion5:this.transaccion5sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.addItem(transaccion5);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion6sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion6:this.transaccion6sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.addItem(transaccion6);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion7sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion7:this.transaccion7sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.addItem(transaccion7);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion8sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion8:this.transaccion8sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.addItem(transaccion8);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion9sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion9:this.transaccion9sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.addItem(transaccion9);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccion10sForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.removeAllItems();

							for(Transaccion transaccion10:this.transaccion10sForeignKey) {
								this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.addItem(transaccion10);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { 
					}

					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionForeignKey(Transaccion transaccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.setSelectedItem(transaccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion1ForeignKey(Transaccion transaccion1,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.setSelectedItem(transaccion1);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion2ForeignKey(Transaccion transaccion2,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.setSelectedItem(transaccion2);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion3ForeignKey(Transaccion transaccion3,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.setSelectedItem(transaccion3);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion4ForeignKey(Transaccion transaccion4,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.setSelectedItem(transaccion4);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion5ForeignKey(Transaccion transaccion5,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.setSelectedItem(transaccion5);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion6ForeignKey(Transaccion transaccion6,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.setSelectedItem(transaccion6);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion7ForeignKey(Transaccion transaccion7,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.setSelectedItem(transaccion7);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion8ForeignKey(Transaccion transaccion8,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.setSelectedItem(transaccion8);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion9ForeignKey(Transaccion transaccion9,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.setSelectedItem(transaccion9);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccion10ForeignKey(Transaccion transaccion10,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.setSelectedItem(transaccion10);
						}
					} else {
						if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesAnalisisTransaCliente() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			AnalisisTransaClienteConstantesFunciones.refrescarForeignKeysDescripcionesAnalisisTransaCliente(this.analisistransaclienteLogic.getAnalisisTransaClientes());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			AnalisisTransaClienteConstantesFunciones.refrescarForeignKeysDescripcionesAnalisisTransaCliente(this.analisistransaclientes);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(Transaccion.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//analisistransaclienteLogic.setAnalisisTransaClientes(this.analisistransaclientes);
			analisistransaclienteLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public AnalisisTransaClienteParameterReturnGeneral getAnalisisTransaClienteParameterGeneral() {
		return this.analisistransaclienteParameterGeneral;
	}
	
	public void setAnalisisTransaClienteParameterGeneral(AnalisisTransaClienteParameterReturnGeneral analisistransaclienteParameterGeneral) {
		this.analisistransaclienteParameterGeneral = analisistransaclienteParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoAnalisisTransaCliente() {
		return isPermisoTodoAnalisisTransaCliente;
	}

	public void setIsPermisoTodoAnalisisTransaCliente(Boolean isPermisoTodoAnalisisTransaCliente) {
		this.isPermisoTodoAnalisisTransaCliente = isPermisoTodoAnalisisTransaCliente;
	}

	public Boolean getIsPermisoNuevoAnalisisTransaCliente() {
		return isPermisoNuevoAnalisisTransaCliente;
	}

	public void setIsPermisoNuevoAnalisisTransaCliente(Boolean isPermisoNuevoAnalisisTransaCliente) {
		this.isPermisoNuevoAnalisisTransaCliente = isPermisoNuevoAnalisisTransaCliente;
	}

	public Boolean getIsPermisoActualizarAnalisisTransaCliente() {
		return isPermisoActualizarAnalisisTransaCliente;
	}

	public void setIsPermisoActualizarAnalisisTransaCliente(Boolean isPermisoActualizarAnalisisTransaCliente) {
		this.isPermisoActualizarAnalisisTransaCliente = isPermisoActualizarAnalisisTransaCliente;
	}

	public Boolean getIsPermisoEliminarAnalisisTransaCliente() {
		return isPermisoEliminarAnalisisTransaCliente;
	}

	public void setIsPermisoEliminarAnalisisTransaCliente(Boolean isPermisoEliminarAnalisisTransaCliente) {
		this.isPermisoEliminarAnalisisTransaCliente = isPermisoEliminarAnalisisTransaCliente;
	}

	public Boolean getIsPermisoGuardarCambiosAnalisisTransaCliente() {
		return isPermisoGuardarCambiosAnalisisTransaCliente;
	}

	public void setIsPermisoGuardarCambiosAnalisisTransaCliente(Boolean isPermisoGuardarCambiosAnalisisTransaCliente) {
		this.isPermisoGuardarCambiosAnalisisTransaCliente = isPermisoGuardarCambiosAnalisisTransaCliente;
	}
	
	public Boolean getIsPermisoConsultaAnalisisTransaCliente() {
		return isPermisoConsultaAnalisisTransaCliente;
	}

	public void setIsPermisoConsultaAnalisisTransaCliente(Boolean isPermisoConsultaAnalisisTransaCliente) {
		this.isPermisoConsultaAnalisisTransaCliente = isPermisoConsultaAnalisisTransaCliente;
	}

	public Boolean getIsPermisoBusquedaAnalisisTransaCliente() {
		return isPermisoBusquedaAnalisisTransaCliente;
	}

	public void setIsPermisoBusquedaAnalisisTransaCliente(Boolean isPermisoBusquedaAnalisisTransaCliente) {
		this.isPermisoBusquedaAnalisisTransaCliente = isPermisoBusquedaAnalisisTransaCliente;
	}

	public Boolean getIsPermisoReporteAnalisisTransaCliente() {
		return isPermisoReporteAnalisisTransaCliente;
	}

	public void setIsPermisoReporteAnalisisTransaCliente(Boolean isPermisoReporteAnalisisTransaCliente) {
		this.isPermisoReporteAnalisisTransaCliente = isPermisoReporteAnalisisTransaCliente;
	}
	
	public Boolean getIsPermisoPaginacionMedioAnalisisTransaCliente() {
		return isPermisoPaginacionMedioAnalisisTransaCliente;
	}

	public void setIsPermisoPaginacionMedioAnalisisTransaCliente(Boolean isPermisoPaginacionMedioAnalisisTransaCliente) {
		this.isPermisoPaginacionMedioAnalisisTransaCliente = isPermisoPaginacionMedioAnalisisTransaCliente;
	}
	
	public Boolean getIsPermisoPaginacionTodoAnalisisTransaCliente() {
		return isPermisoPaginacionTodoAnalisisTransaCliente;
	}

	public void setIsPermisoPaginacionTodoAnalisisTransaCliente(Boolean isPermisoPaginacionTodoAnalisisTransaCliente) {
		this.isPermisoPaginacionTodoAnalisisTransaCliente = isPermisoPaginacionTodoAnalisisTransaCliente;
	}
	
	public Boolean getIsPermisoPaginacionAltoAnalisisTransaCliente() {
		return isPermisoPaginacionAltoAnalisisTransaCliente;
	}

	public void setIsPermisoPaginacionAltoAnalisisTransaCliente(Boolean isPermisoPaginacionAltoAnalisisTransaCliente) {
		this.isPermisoPaginacionAltoAnalisisTransaCliente = isPermisoPaginacionAltoAnalisisTransaCliente;
	}
	
	public Boolean getIsPermisoCopiarAnalisisTransaCliente() {
		return isPermisoCopiarAnalisisTransaCliente;
	}

	public void setIsPermisoCopiarAnalisisTransaCliente(Boolean isPermisoCopiarAnalisisTransaCliente) {
		this.isPermisoCopiarAnalisisTransaCliente = isPermisoCopiarAnalisisTransaCliente;
	}
	
	public Boolean getIsPermisoVerFormAnalisisTransaCliente() {
		return isPermisoVerFormAnalisisTransaCliente;
	}

	public void setIsPermisoVerFormAnalisisTransaCliente(Boolean isPermisoVerFormAnalisisTransaCliente) {
		this.isPermisoVerFormAnalisisTransaCliente = isPermisoVerFormAnalisisTransaCliente;
	}
	
	public Boolean getIsPermisoDuplicarAnalisisTransaCliente() {
		return isPermisoDuplicarAnalisisTransaCliente;
	}

	public void setIsPermisoDuplicarAnalisisTransaCliente(Boolean isPermisoDuplicarAnalisisTransaCliente) {
		this.isPermisoDuplicarAnalisisTransaCliente = isPermisoDuplicarAnalisisTransaCliente;
	}
	
	public Boolean getIsPermisoOrdenAnalisisTransaCliente() {
		return isPermisoOrdenAnalisisTransaCliente;
	}

	public void setIsPermisoOrdenAnalisisTransaCliente(Boolean isPermisoOrdenAnalisisTransaCliente) {
		this.isPermisoOrdenAnalisisTransaCliente = isPermisoOrdenAnalisisTransaCliente;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoAnalisisTransaCliente() {
		return isVisibilidadCeldaNuevoAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaNuevoAnalisisTransaCliente(Boolean isVisibilidadCeldaNuevoAnalisisTransaCliente) {
		this.isVisibilidadCeldaNuevoAnalisisTransaCliente = isVisibilidadCeldaNuevoAnalisisTransaCliente;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarAnalisisTransaCliente() {
		return isVisibilidadCeldaDuplicarAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaDuplicarAnalisisTransaCliente(Boolean isVisibilidadCeldaDuplicarAnalisisTransaCliente) {
		this.isVisibilidadCeldaDuplicarAnalisisTransaCliente = isVisibilidadCeldaDuplicarAnalisisTransaCliente;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarAnalisisTransaCliente() {
		return isVisibilidadCeldaCopiarAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaCopiarAnalisisTransaCliente(Boolean isVisibilidadCeldaCopiarAnalisisTransaCliente) {
		this.isVisibilidadCeldaCopiarAnalisisTransaCliente = isVisibilidadCeldaCopiarAnalisisTransaCliente;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormAnalisisTransaCliente() {
		return isVisibilidadCeldaVerFormAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaVerFormAnalisisTransaCliente(Boolean isVisibilidadCeldaVerFormAnalisisTransaCliente) {
		this.isVisibilidadCeldaVerFormAnalisisTransaCliente = isVisibilidadCeldaVerFormAnalisisTransaCliente;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenAnalisisTransaCliente() {
		return isVisibilidadCeldaOrdenAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaOrdenAnalisisTransaCliente(Boolean isVisibilidadCeldaOrdenAnalisisTransaCliente) {
		this.isVisibilidadCeldaOrdenAnalisisTransaCliente = isVisibilidadCeldaOrdenAnalisisTransaCliente;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente() {
		return isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente(Boolean isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente) {
		this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente = isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente;
	}
	
	public Boolean getIsVisibilidadCeldaModificarAnalisisTransaCliente() {
		return isVisibilidadCeldaModificarAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaModificarAnalisisTransaCliente(Boolean isVisibilidadCeldaModificarAnalisisTransaCliente) {
		this.isVisibilidadCeldaModificarAnalisisTransaCliente = isVisibilidadCeldaModificarAnalisisTransaCliente;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarAnalisisTransaCliente() {
		return isVisibilidadCeldaActualizarAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaActualizarAnalisisTransaCliente(Boolean isVisibilidadCeldaActualizarAnalisisTransaCliente) {
		this.isVisibilidadCeldaActualizarAnalisisTransaCliente = isVisibilidadCeldaActualizarAnalisisTransaCliente;
	}

	public Boolean getIsVisibilidadCeldaEliminarAnalisisTransaCliente() {
		return isVisibilidadCeldaEliminarAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaEliminarAnalisisTransaCliente(Boolean isVisibilidadCeldaEliminarAnalisisTransaCliente) {
		this.isVisibilidadCeldaEliminarAnalisisTransaCliente = isVisibilidadCeldaEliminarAnalisisTransaCliente;
	}

	public Boolean getIsVisibilidadCeldaCancelarAnalisisTransaCliente() {
		return isVisibilidadCeldaCancelarAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaCancelarAnalisisTransaCliente(Boolean isVisibilidadCeldaCancelarAnalisisTransaCliente) {
		this.isVisibilidadCeldaCancelarAnalisisTransaCliente = isVisibilidadCeldaCancelarAnalisisTransaCliente;
	}

	public Boolean getIsVisibilidadCeldaGuardarAnalisisTransaCliente() {
		return isVisibilidadCeldaGuardarAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaGuardarAnalisisTransaCliente(Boolean isVisibilidadCeldaGuardarAnalisisTransaCliente) {
		this.isVisibilidadCeldaGuardarAnalisisTransaCliente = isVisibilidadCeldaGuardarAnalisisTransaCliente;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosAnalisisTransaCliente() {
		return isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente;
	}

	public void setIsVisibilidadCeldaGuardarCambiosAnalisisTransaCliente(Boolean isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente) {
		this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente = isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente;
	}
		
	public AnalisisTransaClienteSessionBean getanalisistransaclienteSessionBean() {
		return this.analisistransaclienteSessionBean;
	}
	
	public void setanalisistransaclienteSessionBean(AnalisisTransaClienteSessionBean analisistransaclienteSessionBean) {
		this.analisistransaclienteSessionBean=analisistransaclienteSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorNombre() {
		return this.isVisibilidadBusquedaPorNombre;
	}

	public void setisVisibilidadBusquedaPorNombre(Boolean isVisibilidadBusquedaPorNombre) {
		this.isVisibilidadBusquedaPorNombre=isVisibilidadBusquedaPorNombre;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdTransaccion() {
		return this.isVisibilidadFK_IdTransaccion;
	}

	public void setisVisibilidadFK_IdTransaccion(Boolean isVisibilidadFK_IdTransaccion) {
		this.isVisibilidadFK_IdTransaccion=isVisibilidadFK_IdTransaccion;
	}

	public Boolean getisVisibilidadFK_IdTransaccion1() {
		return this.isVisibilidadFK_IdTransaccion1;
	}

	public void setisVisibilidadFK_IdTransaccion1(Boolean isVisibilidadFK_IdTransaccion1) {
		this.isVisibilidadFK_IdTransaccion1=isVisibilidadFK_IdTransaccion1;
	}

	public Boolean getisVisibilidadFK_IdTransaccion10() {
		return this.isVisibilidadFK_IdTransaccion10;
	}

	public void setisVisibilidadFK_IdTransaccion10(Boolean isVisibilidadFK_IdTransaccion10) {
		this.isVisibilidadFK_IdTransaccion10=isVisibilidadFK_IdTransaccion10;
	}

	public Boolean getisVisibilidadFK_IdTransaccion2() {
		return this.isVisibilidadFK_IdTransaccion2;
	}

	public void setisVisibilidadFK_IdTransaccion2(Boolean isVisibilidadFK_IdTransaccion2) {
		this.isVisibilidadFK_IdTransaccion2=isVisibilidadFK_IdTransaccion2;
	}

	public Boolean getisVisibilidadFK_IdTransaccion4() {
		return this.isVisibilidadFK_IdTransaccion4;
	}

	public void setisVisibilidadFK_IdTransaccion4(Boolean isVisibilidadFK_IdTransaccion4) {
		this.isVisibilidadFK_IdTransaccion4=isVisibilidadFK_IdTransaccion4;
	}

	public Boolean getisVisibilidadFK_IdTransaccion5() {
		return this.isVisibilidadFK_IdTransaccion5;
	}

	public void setisVisibilidadFK_IdTransaccion5(Boolean isVisibilidadFK_IdTransaccion5) {
		this.isVisibilidadFK_IdTransaccion5=isVisibilidadFK_IdTransaccion5;
	}

	public Boolean getisVisibilidadFK_IdTransaccion6() {
		return this.isVisibilidadFK_IdTransaccion6;
	}

	public void setisVisibilidadFK_IdTransaccion6(Boolean isVisibilidadFK_IdTransaccion6) {
		this.isVisibilidadFK_IdTransaccion6=isVisibilidadFK_IdTransaccion6;
	}

	public Boolean getisVisibilidadFK_IdTransaccion7() {
		return this.isVisibilidadFK_IdTransaccion7;
	}

	public void setisVisibilidadFK_IdTransaccion7(Boolean isVisibilidadFK_IdTransaccion7) {
		this.isVisibilidadFK_IdTransaccion7=isVisibilidadFK_IdTransaccion7;
	}

	public Boolean getisVisibilidadFK_IdTransaccion8() {
		return this.isVisibilidadFK_IdTransaccion8;
	}

	public void setisVisibilidadFK_IdTransaccion8(Boolean isVisibilidadFK_IdTransaccion8) {
		this.isVisibilidadFK_IdTransaccion8=isVisibilidadFK_IdTransaccion8;
	}

	public Boolean getisVisibilidadFK_IdTransaccion9() {
		return this.isVisibilidadFK_IdTransaccion9;
	}

	public void setisVisibilidadFK_IdTransaccion9(Boolean isVisibilidadFK_IdTransaccion9) {
		this.isVisibilidadFK_IdTransaccion9=isVisibilidadFK_IdTransaccion9;
	}

	public Boolean getisVisibilidadFK_IdTransaccionTransaccio3() {
		return this.isVisibilidadFK_IdTransaccionTransaccio3;
	}

	public void setisVisibilidadFK_IdTransaccionTransaccio3(Boolean isVisibilidadFK_IdTransaccionTransaccio3) {
		this.isVisibilidadFK_IdTransaccionTransaccio3=isVisibilidadFK_IdTransaccionTransaccio3;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(analisistransacliente,null);
				this.setActualParaGuardarModuloForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccionForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion1ForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion2ForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion3ForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion4ForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion5ForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion6ForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion7ForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion8ForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion9ForeignKey(analisistransacliente,null);
				this.setActualParaGuardarTransaccion10ForeignKey(analisistransacliente,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(AnalisisTransaCliente analisistransacliente,AnalisisTransaCliente analisistransaclienteAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalAnalisisTransaCliente(analisistransacliente);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		analisistransaclienteAux.setId(analisistransacliente.getId());
		analisistransaclienteAux.setVersionRow(analisistransacliente.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessAnalisisTransaCliente();
		
			int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = analisistransaclienteValidator.getInvalidValues(this.analisistransacliente);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			analisistransaclienteLogic.setDatosCliente(datosCliente);
			analisistransaclienteLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				analisistransaclienteAux=new  AnalisisTransaCliente();
				
				analisistransaclienteAux.setIsNew(true);
				analisistransaclienteAux.setIsChanged(true);
				
				analisistransaclienteAux.setAnalisisTransaClienteOriginal(this.analisistransacliente);
				
				analisistransaclienteAux.setId(this.analisistransacliente.getId());	
				analisistransaclienteAux.setVersionRow(this.analisistransacliente.getVersionRow());	
				analisistransaclienteAux.setid_empresa(this.analisistransacliente.getid_empresa());	
				analisistransaclienteAux.setid_modulo(this.analisistransacliente.getid_modulo());	
				analisistransaclienteAux.setnombre(this.analisistransacliente.getnombre());	
				analisistransaclienteAux.setdescripcion(this.analisistransacliente.getdescripcion());	
				analisistransaclienteAux.setid_transaccion(this.analisistransacliente.getid_transaccion());	
				
				if(this.analisistransacliente.getid_transaccion1()!=null && this.analisistransacliente.getid_transaccion1()>0L) {
					analisistransaclienteAux.setid_transaccion1(this.analisistransacliente.getid_transaccion1());
				} else {
					analisistransaclienteAux.setid_transaccion1(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion2()!=null && this.analisistransacliente.getid_transaccion2()>0L) {
					analisistransaclienteAux.setid_transaccion2(this.analisistransacliente.getid_transaccion2());
				} else {
					analisistransaclienteAux.setid_transaccion2(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion3()!=null && this.analisistransacliente.getid_transaccion3()>0L) {
					analisistransaclienteAux.setid_transaccion3(this.analisistransacliente.getid_transaccion3());
				} else {
					analisistransaclienteAux.setid_transaccion3(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion4()!=null && this.analisistransacliente.getid_transaccion4()>0L) {
					analisistransaclienteAux.setid_transaccion4(this.analisistransacliente.getid_transaccion4());
				} else {
					analisistransaclienteAux.setid_transaccion4(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion5()!=null && this.analisistransacliente.getid_transaccion5()>0L) {
					analisistransaclienteAux.setid_transaccion5(this.analisistransacliente.getid_transaccion5());
				} else {
					analisistransaclienteAux.setid_transaccion5(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion6()!=null && this.analisistransacliente.getid_transaccion6()>0L) {
					analisistransaclienteAux.setid_transaccion6(this.analisistransacliente.getid_transaccion6());
				} else {
					analisistransaclienteAux.setid_transaccion6(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion7()!=null && this.analisistransacliente.getid_transaccion7()>0L) {
					analisistransaclienteAux.setid_transaccion7(this.analisistransacliente.getid_transaccion7());
				} else {
					analisistransaclienteAux.setid_transaccion7(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion8()!=null && this.analisistransacliente.getid_transaccion8()>0L) {
					analisistransaclienteAux.setid_transaccion8(this.analisistransacliente.getid_transaccion8());
				} else {
					analisistransaclienteAux.setid_transaccion8(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion9()!=null && this.analisistransacliente.getid_transaccion9()>0L) {
					analisistransaclienteAux.setid_transaccion9(this.analisistransacliente.getid_transaccion9());
				} else {
					analisistransaclienteAux.setid_transaccion9(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion10()!=null && this.analisistransacliente.getid_transaccion10()>0L) {
					analisistransaclienteAux.setid_transaccion10(this.analisistransacliente.getid_transaccion10());
				} else {
					analisistransaclienteAux.setid_transaccion10(null);
				}	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.analisistransaclienteSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(analisistransaclienteAux,analisistransaclienteLogic.getAnalisisTransaClientes());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(analisistransaclienteAux,analisistransaclientes);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.analisistransaclienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						analisistransaclienteLogic.saveAnalisisTransaClientes();//WithConnection
						//analisistransaclienteLogic.getSetVersionRowAnalisisTransaClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.analisistransacliente,analisistransaclienteAux);
					
					this.refrescarForeignKeysDescripcionesAnalisisTransaCliente();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								analisistransaclienteLogic.saveAnalisisTransaClienteRelaciones(analisistransaclienteAux);//WithConnection
								//analisistransaclienteLogic.getSetVersionRowAnalisisTransaClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.analisistransacliente,analisistransaclienteAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones() 
									|| this.analisistransaclienteSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(analisistransaclienteAux,analisistransaclienteLogic.getAnalisisTransaClientes());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(analisistransaclienteAux,analisistransaclientes);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.analisistransacliente,analisistransaclienteAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				analisistransaclienteAux=new  AnalisisTransaCliente();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado() 
					|| (this.analisistransaclienteSessionBean.getEsGuardarRelacionado() && this.analisistransacliente.getId()>=0)) {
						
					analisistransaclienteAux.setIsNew(false);
				}
				
				analisistransaclienteAux.setIsDeleted(false);
			
				analisistransaclienteAux.setId(this.analisistransacliente.getId());	
				analisistransaclienteAux.setVersionRow(this.analisistransacliente.getVersionRow());	
				analisistransaclienteAux.setid_empresa(this.analisistransacliente.getid_empresa());	
				analisistransaclienteAux.setid_modulo(this.analisistransacliente.getid_modulo());	
				analisistransaclienteAux.setnombre(this.analisistransacliente.getnombre());	
				analisistransaclienteAux.setdescripcion(this.analisistransacliente.getdescripcion());	
				analisistransaclienteAux.setid_transaccion(this.analisistransacliente.getid_transaccion());	
				
				if(this.analisistransacliente.getid_transaccion1()!=null && this.analisistransacliente.getid_transaccion1()>0L) {
					analisistransaclienteAux.setid_transaccion1(this.analisistransacliente.getid_transaccion1());
				} else {
					analisistransaclienteAux.setid_transaccion1(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion2()!=null && this.analisistransacliente.getid_transaccion2()>0L) {
					analisistransaclienteAux.setid_transaccion2(this.analisistransacliente.getid_transaccion2());
				} else {
					analisistransaclienteAux.setid_transaccion2(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion3()!=null && this.analisistransacliente.getid_transaccion3()>0L) {
					analisistransaclienteAux.setid_transaccion3(this.analisistransacliente.getid_transaccion3());
				} else {
					analisistransaclienteAux.setid_transaccion3(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion4()!=null && this.analisistransacliente.getid_transaccion4()>0L) {
					analisistransaclienteAux.setid_transaccion4(this.analisistransacliente.getid_transaccion4());
				} else {
					analisistransaclienteAux.setid_transaccion4(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion5()!=null && this.analisistransacliente.getid_transaccion5()>0L) {
					analisistransaclienteAux.setid_transaccion5(this.analisistransacliente.getid_transaccion5());
				} else {
					analisistransaclienteAux.setid_transaccion5(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion6()!=null && this.analisistransacliente.getid_transaccion6()>0L) {
					analisistransaclienteAux.setid_transaccion6(this.analisistransacliente.getid_transaccion6());
				} else {
					analisistransaclienteAux.setid_transaccion6(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion7()!=null && this.analisistransacliente.getid_transaccion7()>0L) {
					analisistransaclienteAux.setid_transaccion7(this.analisistransacliente.getid_transaccion7());
				} else {
					analisistransaclienteAux.setid_transaccion7(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion8()!=null && this.analisistransacliente.getid_transaccion8()>0L) {
					analisistransaclienteAux.setid_transaccion8(this.analisistransacliente.getid_transaccion8());
				} else {
					analisistransaclienteAux.setid_transaccion8(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion9()!=null && this.analisistransacliente.getid_transaccion9()>0L) {
					analisistransaclienteAux.setid_transaccion9(this.analisistransacliente.getid_transaccion9());
				} else {
					analisistransaclienteAux.setid_transaccion9(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion10()!=null && this.analisistransacliente.getid_transaccion10()>0L) {
					analisistransaclienteAux.setid_transaccion10(this.analisistransacliente.getid_transaccion10());
				} else {
					analisistransaclienteAux.setid_transaccion10(null);
				}	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(analisistransaclienteAux,analisistransaclienteLogic.getAnalisisTransaClientes());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(analisistransaclienteAux,analisistransaclientes);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.analisistransaclienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						analisistransaclienteLogic.saveAnalisisTransaClientes();//WithConnection
						//analisistransaclienteLogic.getSetVersionRowAnalisisTransaClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.analisistransacliente,analisistransaclienteAux);
					
					this.refrescarForeignKeysDescripcionesAnalisisTransaCliente();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								analisistransaclienteLogic.saveAnalisisTransaClienteRelaciones(analisistransaclienteAux);//WithConnection
								//analisistransaclienteLogic.getSetVersionRowAnalisisTransaClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.analisistransacliente,analisistransaclienteAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones() 
									|| this.analisistransaclienteSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(analisistransaclienteAux,analisistransaclienteLogic.getAnalisisTransaClientes());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(analisistransaclienteAux,analisistransaclientes);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.analisistransacliente,analisistransaclienteAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				analisistransaclienteAux=new  AnalisisTransaCliente();
				
				analisistransaclienteAux.setIsNew(false);
				analisistransaclienteAux.setIsChanged(false);
				
				analisistransaclienteAux.setIsDeleted(true);
				
				analisistransaclienteAux.setId(this.analisistransacliente.getId());	
				analisistransaclienteAux.setVersionRow(this.analisistransacliente.getVersionRow());	
				analisistransaclienteAux.setid_empresa(this.analisistransacliente.getid_empresa());	
				analisistransaclienteAux.setid_modulo(this.analisistransacliente.getid_modulo());	
				analisistransaclienteAux.setnombre(this.analisistransacliente.getnombre());	
				analisistransaclienteAux.setdescripcion(this.analisistransacliente.getdescripcion());	
				analisistransaclienteAux.setid_transaccion(this.analisistransacliente.getid_transaccion());	
				
				if(this.analisistransacliente.getid_transaccion1()!=null && this.analisistransacliente.getid_transaccion1()>0L) {
					analisistransaclienteAux.setid_transaccion1(this.analisistransacliente.getid_transaccion1());
				} else {
					analisistransaclienteAux.setid_transaccion1(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion2()!=null && this.analisistransacliente.getid_transaccion2()>0L) {
					analisistransaclienteAux.setid_transaccion2(this.analisistransacliente.getid_transaccion2());
				} else {
					analisistransaclienteAux.setid_transaccion2(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion3()!=null && this.analisistransacliente.getid_transaccion3()>0L) {
					analisistransaclienteAux.setid_transaccion3(this.analisistransacliente.getid_transaccion3());
				} else {
					analisistransaclienteAux.setid_transaccion3(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion4()!=null && this.analisistransacliente.getid_transaccion4()>0L) {
					analisistransaclienteAux.setid_transaccion4(this.analisistransacliente.getid_transaccion4());
				} else {
					analisistransaclienteAux.setid_transaccion4(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion5()!=null && this.analisistransacliente.getid_transaccion5()>0L) {
					analisistransaclienteAux.setid_transaccion5(this.analisistransacliente.getid_transaccion5());
				} else {
					analisistransaclienteAux.setid_transaccion5(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion6()!=null && this.analisistransacliente.getid_transaccion6()>0L) {
					analisistransaclienteAux.setid_transaccion6(this.analisistransacliente.getid_transaccion6());
				} else {
					analisistransaclienteAux.setid_transaccion6(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion7()!=null && this.analisistransacliente.getid_transaccion7()>0L) {
					analisistransaclienteAux.setid_transaccion7(this.analisistransacliente.getid_transaccion7());
				} else {
					analisistransaclienteAux.setid_transaccion7(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion8()!=null && this.analisistransacliente.getid_transaccion8()>0L) {
					analisistransaclienteAux.setid_transaccion8(this.analisistransacliente.getid_transaccion8());
				} else {
					analisistransaclienteAux.setid_transaccion8(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion9()!=null && this.analisistransacliente.getid_transaccion9()>0L) {
					analisistransaclienteAux.setid_transaccion9(this.analisistransacliente.getid_transaccion9());
				} else {
					analisistransaclienteAux.setid_transaccion9(null);
				}	
				
				if(this.analisistransacliente.getid_transaccion10()!=null && this.analisistransacliente.getid_transaccion10()>0L) {
					analisistransaclienteAux.setid_transaccion10(this.analisistransacliente.getid_transaccion10());
				} else {
					analisistransaclienteAux.setid_transaccion10(null);
				}	
				
				if(this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.analisistransaclienteAux.getId()>=0) {	
						this.analisistransaclientesEliminados.add(analisistransaclienteAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(analisistransaclienteAux,analisistransaclienteLogic.getAnalisisTransaClientes());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(analisistransaclienteAux,analisistransaclientes);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.analisistransaclienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						analisistransaclienteLogic.saveAnalisisTransaClientes();//WithConnection
						//analisistransaclienteLogic.getSetVersionRowAnalisisTransaClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								analisistransaclienteLogic.saveAnalisisTransaClienteRelaciones(analisistransaclienteAux);//WithConnection
								//analisistransaclienteLogic.getSetVersionRowAnalisisTransaClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones() 
								|| this.analisistransaclienteSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(analisistransaclienteAux,analisistransaclienteLogic.getAnalisisTransaClientes());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(analisistransaclienteAux,analisistransaclientes);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getAnalisisTransaClientes().addAll(this.analisistransaclientesEliminados);
					
					analisistransaclienteLogic.saveAnalisisTransaClientes();//WithConnection
					//analisistransaclienteLogic.getSetVersionRowAnalisisTransaClientes();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesAnalisisTransaCliente();
				
				this.analisistransaclientesEliminados= new ArrayList<AnalisisTransaCliente>();		
			}
			
			if(this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Analisis Transaccion Cliente GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.analisistransacliente=analisistransaclienteAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessAnalisisTransaCliente();
      	}
		
	}	
	
	public void actualizarRelaciones(AnalisisTransaCliente analisistransaclienteLocal) throws Exception {
		
		if(this.analisistransaclienteSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(AnalisisTransaCliente analisistransaclienteLocal) throws Exception {	
		if(this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				analisistransaclienteLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				analisistransaclienteLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionBeanSwingJInternalFrameLocal.actualizarLista(transaccionBeanSwingJInternalFrameLocal.transaccion,this.transaccionsForeignKey);

				transaccionBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionBeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion(transaccionBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey("Formulario");
				this.setActualTransaccionForeignKey(transaccionBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion1BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion1BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion1BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion1BeanSwingJInternalFrameLocal.actualizarLista(transaccion1BeanSwingJInternalFrameLocal.transaccion,this.transaccion1sForeignKey);

				transaccion1BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion1BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion1(transaccion1BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion1();
				this.cargarCombosFrameTransaccion1sForeignKey("Formulario");
				this.setActualTransaccion1ForeignKey(transaccion1BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion2BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion2BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion2BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion2BeanSwingJInternalFrameLocal.actualizarLista(transaccion2BeanSwingJInternalFrameLocal.transaccion,this.transaccion2sForeignKey);

				transaccion2BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion2BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion2(transaccion2BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion2();
				this.cargarCombosFrameTransaccion2sForeignKey("Formulario");
				this.setActualTransaccion2ForeignKey(transaccion2BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion3BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion3BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion3BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion3BeanSwingJInternalFrameLocal.actualizarLista(transaccion3BeanSwingJInternalFrameLocal.transaccion,this.transaccion3sForeignKey);

				transaccion3BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion3BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion3(transaccion3BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion3();
				this.cargarCombosFrameTransaccion3sForeignKey("Formulario");
				this.setActualTransaccion3ForeignKey(transaccion3BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion4BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion4BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion4BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion4BeanSwingJInternalFrameLocal.actualizarLista(transaccion4BeanSwingJInternalFrameLocal.transaccion,this.transaccion4sForeignKey);

				transaccion4BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion4BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion4(transaccion4BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion4();
				this.cargarCombosFrameTransaccion4sForeignKey("Formulario");
				this.setActualTransaccion4ForeignKey(transaccion4BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion5BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion5BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion5BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion5BeanSwingJInternalFrameLocal.actualizarLista(transaccion5BeanSwingJInternalFrameLocal.transaccion,this.transaccion5sForeignKey);

				transaccion5BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion5BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion5(transaccion5BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion5();
				this.cargarCombosFrameTransaccion5sForeignKey("Formulario");
				this.setActualTransaccion5ForeignKey(transaccion5BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion6BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion6BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion6BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion6BeanSwingJInternalFrameLocal.actualizarLista(transaccion6BeanSwingJInternalFrameLocal.transaccion,this.transaccion6sForeignKey);

				transaccion6BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion6BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion6(transaccion6BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion6();
				this.cargarCombosFrameTransaccion6sForeignKey("Formulario");
				this.setActualTransaccion6ForeignKey(transaccion6BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion7BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion7BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion7BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion7BeanSwingJInternalFrameLocal.actualizarLista(transaccion7BeanSwingJInternalFrameLocal.transaccion,this.transaccion7sForeignKey);

				transaccion7BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion7BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion7(transaccion7BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion7();
				this.cargarCombosFrameTransaccion7sForeignKey("Formulario");
				this.setActualTransaccion7ForeignKey(transaccion7BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion8BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion8BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion8BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion8BeanSwingJInternalFrameLocal.actualizarLista(transaccion8BeanSwingJInternalFrameLocal.transaccion,this.transaccion8sForeignKey);

				transaccion8BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion8BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion8(transaccion8BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion8();
				this.cargarCombosFrameTransaccion8sForeignKey("Formulario");
				this.setActualTransaccion8ForeignKey(transaccion8BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion9BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion9BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion9BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion9BeanSwingJInternalFrameLocal.actualizarLista(transaccion9BeanSwingJInternalFrameLocal.transaccion,this.transaccion9sForeignKey);

				transaccion9BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion9BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion9(transaccion9BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion9();
				this.cargarCombosFrameTransaccion9sForeignKey("Formulario");
				this.setActualTransaccion9ForeignKey(transaccion9BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccion10BeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccion10BeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccion10BeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccion10BeanSwingJInternalFrameLocal.actualizarLista(transaccion10BeanSwingJInternalFrameLocal.transaccion,this.transaccion10sForeignKey);

				transaccion10BeanSwingJInternalFrameLocal.actualizarRelaciones(transaccion10BeanSwingJInternalFrameLocal.transaccion);

				analisistransaclienteLocal.setTransaccion10(transaccion10BeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion10();
				this.cargarCombosFrameTransaccion10sForeignKey("Formulario");
				this.setActualTransaccion10ForeignKey(transaccion10BeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarAnalisisTransaClienteActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = analisistransaclienteValidator.getInvalidValues(this.analisistransacliente);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(AnalisisTransaCliente analisistransacliente,List<AnalisisTransaCliente> analisistransaclientes) throws Exception {
		try	{		
			AnalisisTransaClienteConstantesFunciones.actualizarLista(analisistransacliente,analisistransaclientes,this.analisistransaclienteSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(AnalisisTransaCliente analisistransacliente,List<AnalisisTransaCliente> analisistransaclientes) throws Exception {
		try	{			
			AnalisisTransaClienteConstantesFunciones.actualizarSelectedLista(analisistransacliente,analisistransaclientes);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<AnalisisTransaCliente> analisistransaclientesLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				analisistransaclientesLocal=this.analisistransaclienteLogic.getAnalisisTransaClientes();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				analisistransaclientesLocal=this.analisistransaclientes;
			}
			//ARCHITECTURE
		
			for(AnalisisTransaCliente analisistransaclienteLocal:analisistransaclientesLocal) {
				if(this.permiteMantenimiento(analisistransaclienteLocal) && analisistransaclienteLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+AnalisisTransaClienteConstantesFunciones.getAnalisisTransaClienteLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_empresaAnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_moduloAnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelnombreAnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabeldescripcionAnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccionAnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION1)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion1AnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion2AnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION3)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion3AnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION4)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion4AnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION5)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion5AnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION6)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion6AnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION7)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion7AnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION8)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion8AnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION9)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion9AnalisisTransaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION10)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion10AnalisisTransaCliente,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_empresaAnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_moduloAnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelnombreAnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabeldescripcionAnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccionAnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion1AnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion2AnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion3AnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion4AnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion5AnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion6AnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion7AnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion8AnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion9AnalisisTransaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelid_transaccion10AnalisisTransaCliente,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoAnalisisTransaCliente--;	
		
		
		this.analisistransaclienteAux=new AnalisisTransaCliente();
		
		this.analisistransaclienteAux.setId(this.iIdNuevoAnalisisTransaCliente);
		this.analisistransaclienteAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.analisistransaclienteLogic.getAnalisisTransaClientes().add(this.analisistransaclienteAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.analisistransaclientes.add(this.analisistransaclienteAux);
		}
		//ARCHITECTURE
		
		this.analisistransacliente=this.analisistransaclienteAux;
		
		if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioAnalisisTransaCliente(this.analisistransacliente);
			this.setVariablesObjetoActualToFormularioForeignKeyAnalisisTransaCliente(this.analisistransacliente);
		}
				
		//this.setDefaultControlesAnalisisTransaCliente();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyAnalisisTransaCliente();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyAnalisisTransaCliente();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyAnalisisTransaCliente();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualAnalisisTransaCliente(this.analisistransaclienteBean,this.analisistransacliente,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.analisistransaclienteSessionBean.getConGuardarRelaciones()) {
			classes=AnalisisTransaClienteConstantesFunciones.getClassesRelationshipsOfAnalisisTransaCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.analisistransaclienteReturnGeneral=analisistransaclienteLogic.procesarEventosAnalisisTransaClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.analisistransaclienteLogic.getAnalisisTransaClientes(),this.analisistransacliente,this.analisistransaclienteParameterGeneral,this.isEsNuevoAnalisisTransaCliente,classes);//this.analisistransaclienteLogic.getAnalisisTransaCliente()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanAnalisisTransaCliente(this.analisistransaclienteReturnGeneral,this.analisistransaclienteBean,false);
		
		if(this.analisistransaclienteReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyAnalisisTransaCliente(this.analisistransaclienteReturnGeneral.getAnalisisTransaCliente());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioAnalisisTransaCliente(this.analisistransaclienteReturnGeneral.getAnalisisTransaCliente());
		}
		
		if(this.analisistransaclienteReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioAnalisisTransaCliente(this.analisistransaclienteReturnGeneral.getAnalisisTransaCliente(),classes);//this.analisistransaclienteBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyAnalisisTransaCliente();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyAnalisisTransaCliente();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.RecargarFormAnalisisTransaCliente(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingAnalisisTransaCliente(false);
						
			if(analisistransaclienteSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualAnalisisTransaCliente();
			}
			
			this.actualizarVisualTableDatosAnalisisTransaCliente();
			
			this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(this.getIndiceNuevoAnalisisTransaCliente(), this.getIndiceNuevoAnalisisTransaCliente());
			
			this.seleccionarFilaTablaAnalisisTransaClienteActual();
						
			this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesAnalisisTransaCliente(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreanombreAnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarnombreAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreadescripcionAnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activardescripcionAnalisisTransaCliente);	
		//
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_empresaAnalisisTransaCliente);//
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_moduloAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccionAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion1AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion2AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion3AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion4AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion5AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion6AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion7AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion8AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion9AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.setEnabled(isHabilitar && this.analisistransaclienteConstantesFunciones.activarid_transaccion10AnalisisTransaCliente);
	};
	
	public void setDefaultControlesAnalisisTransaCliente() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoAnalisisTransaCliente(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.analisistransaclienteSessionBean.setConGuardarRelaciones(true);			
			this.analisistransaclienteSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jTabbedPaneRelacionesAnalisisTransaCliente.setVisible(true);
			
					
		} else {
			//this.analisistransaclienteSessionBean.setConGuardarRelaciones(false);			
			this.analisistransaclienteSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jTabbedPaneRelacionesAnalisisTransaCliente.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoAnalisisTransaCliente() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclienteLogic.getAnalisisTransaClientes()) {
				if(analisistransaclienteAux.getId().equals(this.iIdNuevoAnalisisTransaCliente)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclientes) {
				if(analisistransaclienteAux.getId().equals(this.iIdNuevoAnalisisTransaCliente)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclienteLogic.getAnalisisTransaClientes()) {
				if(analisistransaclienteAux.getId().equals(analisistransacliente.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclientes) {
				if(analisistransaclienteAux.getId().equals(analisistransacliente.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalAnalisisTransaCliente(AnalisisTransaCliente analisistransaclienteOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclienteLogic.getAnalisisTransaClientes()) {
				if(analisistransaclienteAux.getAnalisisTransaClienteOriginal().getId().equals(analisistransaclienteOriginal.getId())) {
					existe=true;
					analisistransaclienteOriginal.setId(analisistransaclienteAux.getId());
					analisistransaclienteOriginal.setVersionRow(analisistransaclienteAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclientes) {
				if(analisistransaclienteAux.getAnalisisTransaClienteOriginal().getId().equals(analisistransaclienteOriginal.getId())) {
					existe=true;
					analisistransaclienteOriginal.setId(analisistransaclienteAux.getId());
					analisistransaclienteOriginal.setVersionRow(analisistransaclienteAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosAnalisisTransaCliente(Boolean esParaCancelar) throws Exception {
		analisistransaclientesAux=new ArrayList<AnalisisTransaCliente>();
		analisistransaclienteAux=new AnalisisTransaCliente();
		
		if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclienteLogic.getAnalisisTransaClientes()) {
					if(analisistransaclienteAux.getId()<0) {
						analisistransaclientesAux.add(analisistransaclienteAux);
					}		
				}
				this.iIdNuevoAnalisisTransaCliente=0L;
				this.analisistransaclienteLogic.getAnalisisTransaClientes().removeAll(analisistransaclientesAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclientes) {
					if(analisistransaclienteAux.getId()<0) {
						analisistransaclientesAux.add(analisistransaclienteAux);
					}		
				}
				this.iIdNuevoAnalisisTransaCliente=0L;
				this.analisistransaclientes.removeAll(analisistransaclientesAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoAnalisisTransaCliente 
					&& this.analisistransaclienteLogic.getAnalisisTransaClientes().size()>0
					) {
					analisistransaclienteAux=this.analisistransaclienteLogic.getAnalisisTransaClientes().get(this.analisistransaclienteLogic.getAnalisisTransaClientes().size() - 1);
				
					if(analisistransaclienteAux.getId()<0) {
						this.analisistransaclienteLogic.getAnalisisTransaClientes().remove(analisistransaclienteAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoAnalisisTransaCliente && this.analisistransaclientes.size()>0) {
					analisistransaclienteAux=this.analisistransaclientes.get(this.analisistransaclientes.size() - 1);
				
					if(analisistransaclienteAux.getId()<0) {
						this.analisistransaclientes.remove(analisistransaclienteAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoAnalisisTransaCliente(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(analisistransacliente.getId()<0) {
				this.analisistransaclienteLogic.getAnalisisTransaClientes().remove(this.analisistransacliente);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(analisistransacliente.getId()<0) {
				this.analisistransaclientes.remove(this.analisistransacliente);
			}
		}			
	}
	
	public void setEstadosInicialesAnalisisTransaCliente(List<AnalisisTransaCliente> analisistransaclientesAux) throws Exception {
		AnalisisTransaClienteConstantesFunciones.setEstadosInicialesAnalisisTransaCliente(analisistransaclientesAux);
	}
	
	public void setEstadosInicialesAnalisisTransaCliente(AnalisisTransaCliente analisistransaclienteAux) throws Exception {
		AnalisisTransaClienteConstantesFunciones.setEstadosInicialesAnalisisTransaCliente(analisistransaclienteAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarAnalisisTransaClienteActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarAnalisisTransaClienteActual()) {
				if(!this.isEsNuevoAnalisisTransaCliente) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoAnalisisTransaCliente=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarAnalisisTransaClienteActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Analisis Transaccion Cliente ?", "MANTENIMIENTO DE Analisis Transaccion Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(AnalisisTransaCliente analisistransacliente) throws Exception {
		AnalisisTransaClienteConstantesFunciones.seleccionarAsignar(this.analisistransacliente,analisistransacliente);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarAnalisisTransaCliente=this.isPermisoActualizarOriginalAnalisisTransaCliente;
			
			
			this.seleccionarAsignar(analisistransacliente);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			AnalisisTransaClienteConstantesFunciones.quitarEspaciosAnalisisTransaCliente(this.analisistransacliente,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.analisistransaclienteSessionBean.setsFuncionBusquedaRapida(this.analisistransaclienteSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoAnalisisTransaCliente) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosAnalisisTransaCliente(esParaCancelar);				
				this.cancelarNuevoAnalisisTransaCliente(esParaCancelar);								
			}
			
			this.analisistransacliente=new AnalisisTransaCliente();
			
			this.inicializarAnalisisTransaCliente();
			
			this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarAnalisisTransaCliente() throws Exception {
		try {
			AnalisisTransaClienteConstantesFunciones.inicializarAnalisisTransaCliente(this.analisistransacliente);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.analisistransaclienteLogic.getAnalisisTransaClientes().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteAnalisisTransaClientes(String sAccionBusqueda,List<AnalisisTransaCliente> analisistransaclientesParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="AnalisisTransaCliente"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="AnalisisTransaClienteMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("AnalisisTransaClienteMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="AnalisisTransaCliente"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Analisis Transaccion Clientees");		
		parameters.put("busquedapor", AnalisisTransaClienteConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceAnalisisTransaCliente=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			AnalisisTransaClienteConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			AnalisisTransaClienteConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceAnalisisTransaCliente=new JRBeanArrayDataSource(AnalisisTransaClienteJInternalFrame.TraerAnalisisTransaClienteBeans(analisistransaclientesParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceAnalisisTransaCliente);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+AnalisisTransaClienteConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+AnalisisTransaClienteConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(AnalisisTransaClienteBean.TraerAnalisisTransaClienteBeans(analisistransaclientesParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteAnalisisTransaClientes(sAccionBusqueda,sTipoArchivoReporte,analisistransaclientesParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalAnalisisTransaClientes(sAccionBusqueda,sTipoArchivoReporte,analisistransaclientesParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoAnalisisTransaClienteActionPerformed(null);
					//this.generarExcelReporteAnalisisTransaClientes(sAccionBusqueda,sTipoArchivoReporte,analisistransaclientesParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalAnalisisTransaClientes(sAccionBusqueda,sTipoArchivoReporte,analisistransaclientesParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesAnalisisTransaClientes(sAccionBusqueda,sTipoArchivoReporte,analisistransaclientesParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesAnalisisTransaClientes(sAccionBusqueda,sTipoArchivoReporte,analisistransaclientesParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteAnalisisTransaClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<AnalisisTransaCliente> analisistransaclientesParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"analisistransacliente";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("AnalisisTransaClientes");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderAnalisisTransaCliente("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(AnalisisTransaCliente analisistransacliente : analisistransaclientesParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			AnalisisTransaClienteConstantesFunciones.generarExcelReporteDataAnalisisTransaCliente("NORMAL",row,workbook,analisistransacliente,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderAnalisisTransaCliente(String sTipo,Row row,Workbook workbook) {
		
		AnalisisTransaClienteConstantesFunciones.generarExcelReporteHeaderAnalisisTransaCliente(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalAnalisisTransaClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<AnalisisTransaCliente> analisistransaclientesParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"analisistransacliente_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("AnalisisTransaClientes");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(AnalisisTransaCliente analisistransacliente : analisistransaclientesParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(AnalisisTransaClienteConstantesFunciones.getAnalisisTransaClienteDescripcion(analisistransacliente));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion1_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion2_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion3_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion4_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion5_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion6_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion7_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion8_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion9_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(analisistransacliente.gettransaccion10_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesAnalisisTransaClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<AnalisisTransaCliente> analisistransaclientesParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<AnalisisTransaCliente> analisistransaclientesRespaldo=null;
		
		classes=AnalisisTransaClienteConstantesFunciones.getClassesRelationshipsOfAnalisisTransaCliente(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.analisistransaclienteLogic.setDatosCliente(this.datosCliente);
		this.analisistransaclienteLogic.setDatosDeep(this.datosDeep);
		this.analisistransaclienteLogic.setIsConDeep(true);
		
		analisistransaclientesRespaldo=this.analisistransaclienteLogic.getAnalisisTransaClientes();
		
		this.analisistransaclienteLogic.setAnalisisTransaClientes(analisistransaclientesParaReportes);	
		this.analisistransaclienteLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		analisistransaclientesParaReportes=this.analisistransaclienteLogic.getAnalisisTransaClientes();
		this.analisistransaclienteLogic.setAnalisisTransaClientes(analisistransaclientesRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"analisistransacliente_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("AnalisisTransaClientes");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderAnalisisTransaCliente("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(AnalisisTransaCliente analisistransacliente : analisistransaclientesParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderAnalisisTransaCliente("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			AnalisisTransaClienteConstantesFunciones.generarExcelReporteDataAnalisisTransaCliente("NORMAL",row,workbook,analisistransacliente,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(AnalisisTransaClienteConstantesFunciones.getAnalisisTransaClienteDescripcion(analisistransacliente));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessAnalisisTransaCliente() throws Exception {		
		this.startProcessAnalisisTransaCliente(true);
	}
	
	public void startProcessAnalisisTransaCliente(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasAnalisisTransaCliente ,this.jPanelParametrosReportesAnalisisTransaCliente, this.jScrollPanelDatosAnalisisTransaCliente,this.jPanelPaginacionAnalisisTransaCliente, this.jScrollPanelDatosEdicionAnalisisTransaCliente, this.jPanelAccionesAnalisisTransaCliente,this.jPanelAccionesFormularioAnalisisTransaCliente,this.jmenuBarAnalisisTransaCliente,this.jmenuBarDetalleAnalisisTransaCliente,this.jTtoolBarAnalisisTransaCliente,this.jTtoolBarDetalleAnalisisTransaCliente);		
		
		final JTabbedPane jTabbedPaneBusquedasAnalisisTransaCliente=this.jTabbedPaneBusquedasAnalisisTransaCliente; 
		
		final JPanel jPanelParametrosReportesAnalisisTransaCliente=this.jPanelParametrosReportesAnalisisTransaCliente;
		//final JScrollPane jScrollPanelDatosAnalisisTransaCliente=this.jScrollPanelDatosAnalisisTransaCliente;
		final JTable jTableDatosAnalisisTransaCliente=this.jTableDatosAnalisisTransaCliente;		
		final JPanel jPanelPaginacionAnalisisTransaCliente=this.jPanelPaginacionAnalisisTransaCliente;
		//final JScrollPane jScrollPanelDatosEdicionAnalisisTransaCliente=this.jScrollPanelDatosEdicionAnalisisTransaCliente;
		final JPanel jPanelAccionesAnalisisTransaCliente=this.jPanelAccionesAnalisisTransaCliente;
		
		JPanel jPanelCamposAuxiliarAnalisisTransaCliente=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarAnalisisTransaCliente=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			jPanelCamposAuxiliarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelCamposAnalisisTransaCliente;
			jPanelAccionesFormularioAuxiliarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelAccionesFormularioAnalisisTransaCliente;
		}
		
		final JPanel jPanelCamposAnalisisTransaCliente=jPanelCamposAuxiliarAnalisisTransaCliente;
		final JPanel jPanelAccionesFormularioAnalisisTransaCliente=jPanelAccionesFormularioAuxiliarAnalisisTransaCliente;
		
		
		final JMenuBar jmenuBarAnalisisTransaCliente=this.jmenuBarAnalisisTransaCliente;
		final JToolBar jTtoolBarAnalisisTransaCliente=this.jTtoolBarAnalisisTransaCliente;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarAnalisisTransaCliente=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarAnalisisTransaCliente=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			jmenuBarDetalleAuxiliarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jmenuBarDetalleAnalisisTransaCliente;
			jTtoolBarDetalleAuxiliarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jTtoolBarDetalleAnalisisTransaCliente;
		}
		
		final JMenuBar jmenuBarDetalleAnalisisTransaCliente=jmenuBarDetalleAuxiliarAnalisisTransaCliente;
		final JToolBar jTtoolBarDetalleAnalisisTransaCliente=jTtoolBarDetalleAuxiliarAnalisisTransaCliente;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasAnalisisTransaCliente;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesAnalisisTransaCliente;
			processRunnable.jTableDatos=jTableDatosAnalisisTransaCliente;
			processRunnable.jPanelCampos=jPanelCamposAnalisisTransaCliente;
			processRunnable.jPanelPaginacion=jPanelPaginacionAnalisisTransaCliente;
			processRunnable.jPanelAcciones=jPanelAccionesAnalisisTransaCliente;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioAnalisisTransaCliente;
			
			
			processRunnable.jmenuBar=jmenuBarAnalisisTransaCliente;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleAnalisisTransaCliente;
			processRunnable.jTtoolBar=jTtoolBarAnalisisTransaCliente;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleAnalisisTransaCliente;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasAnalisisTransaCliente ,jPanelParametrosReportesAnalisisTransaCliente,jTableDatosAnalisisTransaCliente, /*jScrollPanelDatosAnalisisTransaCliente,*/jPanelCamposAnalisisTransaCliente,jPanelPaginacionAnalisisTransaCliente, /*jScrollPanelDatosEdicionAnalisisTransaCliente,*/ jPanelAccionesAnalisisTransaCliente,jPanelAccionesFormularioAnalisisTransaCliente,jmenuBarAnalisisTransaCliente,jmenuBarDetalleAnalisisTransaCliente,jTtoolBarAnalisisTransaCliente,jTtoolBarDetalleAnalisisTransaCliente);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasAnalisisTransaCliente ,jPanelParametrosReportesAnalisisTransaCliente, jScrollPanelDatosAnalisisTransaCliente,jPanelPaginacionAnalisisTransaCliente, jScrollPanelDatosEdicionAnalisisTransaCliente, jPanelAccionesAnalisisTransaCliente,jPanelAccionesFormularioAnalisisTransaCliente,jmenuBarAnalisisTransaCliente,jmenuBarDetalleAnalisisTransaCliente,jTtoolBarAnalisisTransaCliente,jTtoolBarDetalleAnalisisTransaCliente);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessAnalisisTransaCliente() {// throws Exception 
		this.finishProcessAnalisisTransaCliente(true);
	}
	
	public void finishProcessAnalisisTransaCliente(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasAnalisisTransaCliente ,this.jPanelParametrosReportesAnalisisTransaCliente, this.jScrollPanelDatosAnalisisTransaCliente,this.jPanelPaginacionAnalisisTransaCliente, this.jScrollPanelDatosEdicionAnalisisTransaCliente, this.jPanelAccionesAnalisisTransaCliente,this.jPanelAccionesFormularioAnalisisTransaCliente,this.jmenuBarAnalisisTransaCliente,this.jmenuBarDetalleAnalisisTransaCliente,this.jTtoolBarAnalisisTransaCliente,this.jTtoolBarDetalleAnalisisTransaCliente);		
		
		final JTabbedPane jTabbedPaneBusquedasAnalisisTransaCliente=this.jTabbedPaneBusquedasAnalisisTransaCliente; 
		
		final JPanel jPanelParametrosReportesAnalisisTransaCliente=this.jPanelParametrosReportesAnalisisTransaCliente;
		//final JScrollPane jScrollPanelDatosAnalisisTransaCliente=this.jScrollPanelDatosAnalisisTransaCliente;
		final JTable jTableDatosAnalisisTransaCliente=this.jTableDatosAnalisisTransaCliente;		
		final JPanel jPanelPaginacionAnalisisTransaCliente=this.jPanelPaginacionAnalisisTransaCliente;
		//final JScrollPane jScrollPanelDatosEdicionAnalisisTransaCliente=this.jScrollPanelDatosEdicionAnalisisTransaCliente;
		final JPanel jPanelAccionesAnalisisTransaCliente=this.jPanelAccionesAnalisisTransaCliente;
		
		JPanel jPanelCamposAuxiliarAnalisisTransaCliente=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarAnalisisTransaCliente=new JPanel();
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			jPanelCamposAuxiliarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelCamposAnalisisTransaCliente;
			jPanelAccionesFormularioAuxiliarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelAccionesFormularioAnalisisTransaCliente;
		}
		
		final JPanel jPanelCamposAnalisisTransaCliente=jPanelCamposAuxiliarAnalisisTransaCliente;
		final JPanel jPanelAccionesFormularioAnalisisTransaCliente=jPanelAccionesFormularioAuxiliarAnalisisTransaCliente;
		
		
		final JMenuBar jmenuBarAnalisisTransaCliente=this.jmenuBarAnalisisTransaCliente;		
		final JToolBar jTtoolBarAnalisisTransaCliente=this.jTtoolBarAnalisisTransaCliente;
				
		JMenuBar jmenuBarDetalleAuxiliarAnalisisTransaCliente=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarAnalisisTransaCliente=new JToolBar();
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			jmenuBarDetalleAuxiliarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jmenuBarDetalleAnalisisTransaCliente;
			jTtoolBarDetalleAuxiliarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jTtoolBarDetalleAnalisisTransaCliente;		
		}
		
		final JMenuBar jmenuBarDetalleAnalisisTransaCliente=jmenuBarDetalleAuxiliarAnalisisTransaCliente;
		final JToolBar jTtoolBarDetalleAnalisisTransaCliente=jTtoolBarDetalleAuxiliarAnalisisTransaCliente;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasAnalisisTransaCliente;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesAnalisisTransaCliente;
			processRunnable.jTableDatos=jTableDatosAnalisisTransaCliente;
			processRunnable.jPanelCampos=jPanelCamposAnalisisTransaCliente;
			processRunnable.jPanelPaginacion=jPanelPaginacionAnalisisTransaCliente;
			processRunnable.jPanelAcciones=jPanelAccionesAnalisisTransaCliente;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioAnalisisTransaCliente;
			
			
			processRunnable.jmenuBar=jmenuBarAnalisisTransaCliente;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleAnalisisTransaCliente;
			processRunnable.jTtoolBar=jTtoolBarAnalisisTransaCliente;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleAnalisisTransaCliente;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasAnalisisTransaCliente ,jPanelParametrosReportesAnalisisTransaCliente, jTableDatosAnalisisTransaCliente,/*jScrollPanelDatosAnalisisTransaCliente,*/jPanelCamposAnalisisTransaCliente,jPanelPaginacionAnalisisTransaCliente, /*jScrollPanelDatosEdicionAnalisisTransaCliente,*/ jPanelAccionesAnalisisTransaCliente,jPanelAccionesFormularioAnalisisTransaCliente,jmenuBarAnalisisTransaCliente,jmenuBarDetalleAnalisisTransaCliente,jTtoolBarAnalisisTransaCliente,jTtoolBarDetalleAnalisisTransaCliente));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesAnalisisTransaCliente(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarAnalisisTransaCliente(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuAnalisisTransaCliente(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarAnalisisTransaCliente(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarAnalisisTransaCliente,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleAnalisisTransaCliente,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuAnalisisTransaCliente(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarAnalisisTransaCliente,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleAnalisisTransaCliente,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.analisistransaclienteConstantesFunciones.getsFinalQueryAnalisisTransaCliente();
		String  finalQueryPaginacionTodos=this.analisistransaclienteConstantesFunciones.getsFinalQueryAnalisisTransaCliente();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=AnalisisTransaClienteConstantesFunciones.getArrayColumnasGlobalesNoAnalisisTransaCliente(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=AnalisisTransaClienteConstantesFunciones.getArrayColumnasGlobalesAnalisisTransaCliente(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,AnalisisTransaClienteConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.analisistransaclientesEliminados= new ArrayList<AnalisisTransaCliente>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessAnalisisTransaCliente();
		
				///*AnalisisTransaClienteSessionBean*/this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			
			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=AnalisisTransaClienteConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=AnalisisTransaClienteConstantesFunciones.getClassesForeignKeysOfAnalisisTransaCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/analisistransacliente."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			analisistransaclientesAux= new ArrayList<AnalisisTransaCliente>();
			
				
			analisistransaclienteLogic.setDatosCliente(this.datosCliente);
			analisistransaclienteLogic.setDatosDeep(this.datosDeep);
			analisistransaclienteLogic.setIsConDeep(true);
			
			
			analisistransaclienteLogic.getAnalisisTransaClienteDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					analisistransaclienteLogic.getTodosAnalisisTransaClientes(finalQueryGlobal,pagination);
					
					//analisistransaclienteLogic.getTodosAnalisisTransaClientesWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(analisistransaclienteLogic.getAnalisisTransaClientes()==null|| analisistransaclienteLogic.getAnalisisTransaClientes().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							analisistransaclientesAux= new ArrayList<AnalisisTransaCliente>();
							analisistransaclientesAux.addAll(analisistransaclienteLogic.getAnalisisTransaClientes());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							analisistransaclientesAux= new ArrayList<AnalisisTransaCliente>();
							analisistransaclientesAux.addAll(analisistransaclientes);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							analisistransaclienteLogic.getTodosAnalisisTransaClientes(finalQueryGlobal+"",this.pagination);												
							
							//analisistransaclienteLogic.getTodosAnalisisTransaClientesWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteAnalisisTransaClientes("Todos",analisistransaclienteLogic.getAnalisisTransaClientes() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							analisistransaclienteLogic.setAnalisisTransaClientes(new ArrayList<AnalisisTransaCliente>());					
							analisistransaclienteLogic.getAnalisisTransaClientes().addAll(analisistransaclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							analisistransaclientes=new ArrayList<AnalisisTransaCliente>();
							analisistransaclientes.addAll(analisistransaclientesAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idAnalisisTransaCliente=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idAnalisisTransaCliente=this.idActual;
				
				} else if(this.idAnalisisTransaClienteActual!=null && this.idAnalisisTransaClienteActual!=0L) {
					idAnalisisTransaCliente=idAnalisisTransaClienteActual;
				}
				
					
				this.sDetalleReporte=AnalisisTransaClienteConstantesFunciones.getDetalleIndicePorId(idAnalisisTransaCliente);
				
				this.analisistransaclientes=new ArrayList<AnalisisTransaCliente>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					analisistransaclienteLogic.getEntity(idAnalisisTransaCliente);
					
					//analisistransaclienteLogic.getEntityWithConnection(idAnalisisTransaCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.setAnalisisTransaClientes(new ArrayList<AnalisisTransaCliente>());
					analisistransaclienteLogic.getAnalisisTransaClientes().add(analisistransaclienteLogic.getAnalisisTransaCliente());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransaclientes=new ArrayList<AnalisisTransaCliente>();
					this.analisistransaclientes.add(analisistransacliente);
				}
				
				if(analisistransaclienteLogic.getAnalisisTransaCliente()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorNombre")) {
				this.sDetalleReporte=AnalisisTransaClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					analisistransaclienteLogic.getAnalisisTransaClientesBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AnalisisTransaClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AnalisisTransaClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=analisistransaclienteLogic.getAnalisisTransaClientes()==null||analisistransaclienteLogic.getAnalisisTransaClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=analisistransaclientes==null|| analisistransaclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						analisistransaclientesAux=new ArrayList<AnalisisTransaCliente>();
						analisistransaclientesAux.addAll(analisistransaclienteLogic.getAnalisisTransaClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							analisistransaclientesAux=new ArrayList<AnalisisTransaCliente>();
							analisistransaclientesAux.addAll(analisistransaclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							analisistransaclienteLogic.getAnalisisTransaClientesBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AnalisisTransaClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AnalisisTransaClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAnalisisTransaClientes("BusquedaPorNombre",analisistransaclienteLogic.getAnalisisTransaClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAnalisisTransaClientes("BusquedaPorNombre",analisistransaclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						analisistransaclienteLogic.setAnalisisTransaClientes(new ArrayList<AnalisisTransaCliente>());
						analisistransaclienteLogic.getAnalisisTransaClientes().addAll(analisistransaclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							analisistransaclientes=new ArrayList<AnalisisTransaCliente>();
							analisistransaclientes.addAll(analisistransaclientesAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesAnalisisTransaCliente();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessAnalisisTransaCliente();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=analisistransaclienteLogic.getAnalisisTransaClientes().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=analisistransaclientes.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=analisistransaclienteLogic.getAnalisisTransaClientes().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=analisistransaclientes.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(AnalisisTransaCliente analisistransacliente) {
		Boolean permite=true;
		
		if(this.analisistransacliente.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=AnalisisTransaClienteConstantesFunciones.getOrderByListaAnalisisTransaCliente();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=AnalisisTransaClienteConstantesFunciones.getOrderByListaAnalisisTransaCliente();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AnalisisTransaCliente analisistransacliente:analisistransaclienteLogic.getAnalisisTransaClientes()) {
				if(analisistransacliente.getsType().equals(Constantes2.S_TOTALES)) {
					analisistransaclienteTotales=analisistransacliente;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AnalisisTransaCliente analisistransacliente:this.analisistransaclientes) {
				if(analisistransacliente.getsType().equals(Constantes2.S_TOTALES)) {
					analisistransaclienteTotales=analisistransacliente;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.analisistransaclienteAux=new AnalisisTransaCliente();
			this.analisistransaclienteAux.setsType(Constantes2.S_TOTALES);
			this.analisistransaclienteAux.setIsNew(false);
			this.analisistransaclienteAux.setIsChanged(false);
			this.analisistransaclienteAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				AnalisisTransaClienteConstantesFunciones.TotalizarValoresFilaAnalisisTransaCliente(this.analisistransaclienteLogic.getAnalisisTransaClientes(),this.analisistransaclienteAux);
				
				this.analisistransaclienteLogic.getAnalisisTransaClientes().add(this.analisistransaclienteAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				AnalisisTransaClienteConstantesFunciones.TotalizarValoresFilaAnalisisTransaCliente(this.analisistransaclientes,this.analisistransaclienteAux);
				
				this.analisistransaclientes.add(this.analisistransaclienteAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		analisistransaclienteTotales=new AnalisisTransaCliente();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.analisistransaclienteLogic.getAnalisisTransaClientes().remove(analisistransaclienteTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.analisistransaclientes.remove(analisistransaclienteTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		analisistransaclienteTotales=new AnalisisTransaCliente();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AnalisisTransaCliente analisistransacliente:analisistransaclienteLogic.getAnalisisTransaClientes()) {
				if(analisistransacliente.getsType().equals(Constantes2.S_TOTALES)) {
					analisistransaclienteTotales=analisistransacliente;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				AnalisisTransaClienteConstantesFunciones.TotalizarValoresFilaAnalisisTransaCliente(this.analisistransaclienteLogic.getAnalisisTransaClientes(),analisistransaclienteTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AnalisisTransaCliente analisistransacliente:this.analisistransaclientes) {
				if(analisistransacliente.getsType().equals(Constantes2.S_TOTALES)) {
					analisistransaclienteTotales=analisistransacliente;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				AnalisisTransaClienteConstantesFunciones.TotalizarValoresFilaAnalisisTransaCliente(this.analisistransaclientes,analisistransaclienteTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getAnalisisTransaClientesBusquedaPorNombre()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion1()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion1";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion10()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion10";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion2()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion2";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion4()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion4";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion5()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion5";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion6()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion6";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion7()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion7";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion8()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion8";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion9()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion9";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccionTransaccio3()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionTransaccio3";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getAnalisisTransaClientesBusquedaPorNombre(String sFinalQuery,String nombre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesBusquedaPorNombre(sFinalQuery,this.pagination,nombre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion(String sFinalQuery,Long id_transaccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion(sFinalQuery,this.pagination,id_transaccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion1(String sFinalQuery,Long id_transaccion1)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion1(sFinalQuery,this.pagination,id_transaccion1);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion10(String sFinalQuery,Long id_transaccion10)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion10(sFinalQuery,this.pagination,id_transaccion10);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion2(String sFinalQuery,Long id_transaccion2)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion2(sFinalQuery,this.pagination,id_transaccion2);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion4(String sFinalQuery,Long id_transaccion4)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion4(sFinalQuery,this.pagination,id_transaccion4);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion5(String sFinalQuery,Long id_transaccion5)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion5(sFinalQuery,this.pagination,id_transaccion5);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion6(String sFinalQuery,Long id_transaccion6)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion6(sFinalQuery,this.pagination,id_transaccion6);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion7(String sFinalQuery,Long id_transaccion7)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion7(sFinalQuery,this.pagination,id_transaccion7);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion8(String sFinalQuery,Long id_transaccion8)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion8(sFinalQuery,this.pagination,id_transaccion8);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccion9(String sFinalQuery,Long id_transaccion9)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccion9(sFinalQuery,this.pagination,id_transaccion9);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAnalisisTransaClientesFK_IdTransaccionTransaccio3(String sFinalQuery,Long id_transaccion3)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLogic.getAnalisisTransaClientesFK_IdTransaccionTransaccio3(sFinalQuery,this.pagination,id_transaccion3);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosAnalisisTransaCliente() {
		this.isPermisoTodoAnalisisTransaCliente=false;
		this.isPermisoNuevoAnalisisTransaCliente=false;
		this.isPermisoActualizarAnalisisTransaCliente=false;
		this.isPermisoActualizarOriginalAnalisisTransaCliente=false;
		this.isPermisoEliminarAnalisisTransaCliente=false;
		this.isPermisoGuardarCambiosAnalisisTransaCliente=false;
		this.isPermisoConsultaAnalisisTransaCliente=false;
		this.isPermisoBusquedaAnalisisTransaCliente=false;
		this.isPermisoReporteAnalisisTransaCliente=false;		
		this.isPermisoOrdenAnalisisTransaCliente=false;		
		this.isPermisoPaginacionMedioAnalisisTransaCliente=false;		
		this.isPermisoPaginacionAltoAnalisisTransaCliente=false;
		this.isPermisoPaginacionTodoAnalisisTransaCliente=false;
		this.isPermisoCopiarAnalisisTransaCliente=false;		
		this.isPermisoVerFormAnalisisTransaCliente=false;		
		this.isPermisoDuplicarAnalisisTransaCliente=false;		
		this.isPermisoOrdenAnalisisTransaCliente=false;		
	}
	
	public void setPermisosUsuarioAnalisisTransaCliente(Boolean isPermiso) {
		this.isPermisoTodoAnalisisTransaCliente=isPermiso;
		this.isPermisoNuevoAnalisisTransaCliente=isPermiso;
		this.isPermisoActualizarAnalisisTransaCliente=isPermiso;
		this.isPermisoActualizarOriginalAnalisisTransaCliente=isPermiso;
		this.isPermisoEliminarAnalisisTransaCliente=isPermiso;
		this.isPermisoGuardarCambiosAnalisisTransaCliente=isPermiso;
		this.isPermisoConsultaAnalisisTransaCliente=isPermiso;
		this.isPermisoBusquedaAnalisisTransaCliente=isPermiso;
		this.isPermisoReporteAnalisisTransaCliente=isPermiso;
		this.isPermisoOrdenAnalisisTransaCliente=isPermiso;		
		this.isPermisoPaginacionMedioAnalisisTransaCliente=isPermiso;		
		this.isPermisoPaginacionAltoAnalisisTransaCliente=isPermiso;		
		this.isPermisoPaginacionTodoAnalisisTransaCliente=isPermiso;		
		this.isPermisoCopiarAnalisisTransaCliente=isPermiso;		
		this.isPermisoVerFormAnalisisTransaCliente=isPermiso;		
		this.isPermisoDuplicarAnalisisTransaCliente=isPermiso;
		this.isPermisoOrdenAnalisisTransaCliente=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioAnalisisTransaCliente(Boolean isPermiso) {
		//this.isPermisoTodoAnalisisTransaCliente=isPermiso;
		this.isPermisoNuevoAnalisisTransaCliente=isPermiso;
		this.isPermisoActualizarAnalisisTransaCliente=isPermiso;
		this.isPermisoActualizarOriginalAnalisisTransaCliente=isPermiso;
		this.isPermisoEliminarAnalisisTransaCliente=isPermiso;
		this.isPermisoGuardarCambiosAnalisisTransaCliente=isPermiso;
		//this.isPermisoConsultaAnalisisTransaCliente=isPermiso;
		//this.isPermisoBusquedaAnalisisTransaCliente=isPermiso;
		//this.isPermisoReporteAnalisisTransaCliente=isPermiso;
		//this.isPermisoOrdenAnalisisTransaCliente=isPermiso;		
		//this.isPermisoPaginacionMedioAnalisisTransaCliente=isPermiso;		
		//this.isPermisoPaginacionAltoAnalisisTransaCliente=isPermiso;		
		//this.isPermisoPaginacionTodoAnalisisTransaCliente=isPermiso;		
		//this.isPermisoCopiarAnalisisTransaCliente=isPermiso;		
		//this.isPermisoDuplicarAnalisisTransaCliente=isPermiso;
		//this.isPermisoOrdenAnalisisTransaCliente=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioAnalisisTransaClienteClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(AnalisisTransaClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioAnalisisTransaClienteClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioAnalisisTransaClienteClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionAnalisisTransaClienteClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioAnalisisTransaClienteClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioAnalisisTransaCliente() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(AnalisisTransaClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, AnalisisTransaClienteConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoAnalisisTransaCliente=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarAnalisisTransaCliente=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalAnalisisTransaCliente=this.isPermisoActualizarAnalisisTransaCliente;
			this.isPermisoEliminarAnalisisTransaCliente=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosAnalisisTransaCliente=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaAnalisisTransaCliente=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaAnalisisTransaCliente=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoAnalisisTransaCliente=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteAnalisisTransaCliente=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenAnalisisTransaCliente=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioAnalisisTransaCliente=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoAnalisisTransaCliente=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoAnalisisTransaCliente=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarAnalisisTransaCliente=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormAnalisisTransaCliente=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarAnalisisTransaCliente=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenAnalisisTransaCliente=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosAnalisisTransaCliente.setToolTipText(this.jTableDatosAnalisisTransaCliente.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioAnalisisTransaCliente(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioAnalisisTransaCliente(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(AnalisisTransaClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(AnalisisTransaClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioAnalisisTransaCliente() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyAnalisisTransaClienteListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.transaccionsForeignKey=new ArrayList();
				this.transaccion1sForeignKey=new ArrayList();
				this.transaccion2sForeignKey=new ArrayList();
				this.transaccion3sForeignKey=new ArrayList();
				this.transaccion4sForeignKey=new ArrayList();
				this.transaccion5sForeignKey=new ArrayList();
				this.transaccion6sForeignKey=new ArrayList();
				this.transaccion7sForeignKey=new ArrayList();
				this.transaccion8sForeignKey=new ArrayList();
				this.transaccion9sForeignKey=new ArrayList();
				this.transaccion10sForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyAnalisisTransaClienteListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(AnalisisTransaClienteJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyAnalisisTransaClienteListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion1Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion2Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion3Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion4Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion5Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion6Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion7Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion8Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion9Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccion10Listas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion1Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion1sForeignKey==null||this.transaccion1sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion1sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion2Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion2sForeignKey==null||this.transaccion2sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion2sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion3Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion3sForeignKey==null||this.transaccion3sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion3sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion4Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion4sForeignKey==null||this.transaccion4sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion4sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion5Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion5sForeignKey==null||this.transaccion5sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion5sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion6Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion6sForeignKey==null||this.transaccion6sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion6sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion7Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion7sForeignKey==null||this.transaccion7sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion7sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion8Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion8sForeignKey==null||this.transaccion8sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion8sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion9Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion9sForeignKey==null||this.transaccion9sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion9sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion10Listas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccion10sForeignKey==null||this.transaccion10sForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccion10sForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyAnalisisTransaClienteListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			AnalisisTransaClienteParameterReturnGeneral analisistransaclienteReturnGeneral=new AnalisisTransaClienteParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_empresaAnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_empresaAnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_moduloAnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_moduloAnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalTransaccion="";

				if(((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccionAnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccionAnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion, "");
						finalQueryGlobalTransaccion+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccionActual();
					}
				} else {
					finalQueryGlobalTransaccion="NONE";
				}


				String finalQueryGlobalTransaccion1="";

				if(((this.transaccion1sForeignKey==null||this.transaccion1sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion1AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion1AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion1()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion1=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion1=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion1, "");
						finalQueryGlobalTransaccion1+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion1sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion1=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion1Actual();
					}
				} else {
					finalQueryGlobalTransaccion1="NONE";
				}


				String finalQueryGlobalTransaccion2="";

				if(((this.transaccion2sForeignKey==null||this.transaccion2sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion2AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion2AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion2()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion2=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion2=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion2, "");
						finalQueryGlobalTransaccion2+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion2sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion2=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion2Actual();
					}
				} else {
					finalQueryGlobalTransaccion2="NONE";
				}


				String finalQueryGlobalTransaccion3="";

				if(((this.transaccion3sForeignKey==null||this.transaccion3sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion3AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion3AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion3()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion3=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion3=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion3, "");
						finalQueryGlobalTransaccion3+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion3sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion3=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion3Actual();
					}
				} else {
					finalQueryGlobalTransaccion3="NONE";
				}


				String finalQueryGlobalTransaccion4="";

				if(((this.transaccion4sForeignKey==null||this.transaccion4sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion4AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion4AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion4()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion4=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion4=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion4, "");
						finalQueryGlobalTransaccion4+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion4sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion4=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion4Actual();
					}
				} else {
					finalQueryGlobalTransaccion4="NONE";
				}


				String finalQueryGlobalTransaccion5="";

				if(((this.transaccion5sForeignKey==null||this.transaccion5sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion5AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion5AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion5()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion5=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion5=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion5, "");
						finalQueryGlobalTransaccion5+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion5sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion5=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion5Actual();
					}
				} else {
					finalQueryGlobalTransaccion5="NONE";
				}


				String finalQueryGlobalTransaccion6="";

				if(((this.transaccion6sForeignKey==null||this.transaccion6sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion6AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion6AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion6()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion6=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion6=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion6, "");
						finalQueryGlobalTransaccion6+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion6sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion6=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion6Actual();
					}
				} else {
					finalQueryGlobalTransaccion6="NONE";
				}


				String finalQueryGlobalTransaccion7="";

				if(((this.transaccion7sForeignKey==null||this.transaccion7sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion7AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion7AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion7()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion7=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion7=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion7, "");
						finalQueryGlobalTransaccion7+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion7sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion7=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion7Actual();
					}
				} else {
					finalQueryGlobalTransaccion7="NONE";
				}


				String finalQueryGlobalTransaccion8="";

				if(((this.transaccion8sForeignKey==null||this.transaccion8sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion8AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion8AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion8()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion8=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion8=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion8, "");
						finalQueryGlobalTransaccion8+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion8sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion8=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion8Actual();
					}
				} else {
					finalQueryGlobalTransaccion8="NONE";
				}


				String finalQueryGlobalTransaccion9="";

				if(((this.transaccion9sForeignKey==null||this.transaccion9sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion9AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion9AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion9()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion9=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion9=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion9, "");
						finalQueryGlobalTransaccion9+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion9sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion9=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion9Actual();
					}
				} else {
					finalQueryGlobalTransaccion9="NONE";
				}


				String finalQueryGlobalTransaccion10="";

				if(((this.transaccion10sForeignKey==null||this.transaccion10sForeignKey.size()<=0) && this.analisistransaclienteConstantesFunciones.cargarid_transaccion10AnalisisTransaCliente)
					 || (this.esRecargarFks && this.analisistransaclienteConstantesFunciones.cargarid_transaccion10AnalisisTransaCliente)) {

					if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion10()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion10=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion10=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion10, "");
						finalQueryGlobalTransaccion10+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccion10sForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion10=" WHERE " + ConstantesSql.ID + "="+analisistransaclienteSessionBean.getlidTransaccion10Actual();
					}
				} else {
					finalQueryGlobalTransaccion10="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				analisistransaclienteReturnGeneral=analisistransaclienteLogic.cargarCombosLoteForeignKeyAnalisisTransaCliente(finalQueryGlobalEmpresa,finalQueryGlobalModulo,finalQueryGlobalTransaccion,finalQueryGlobalTransaccion1,finalQueryGlobalTransaccion2,finalQueryGlobalTransaccion3,finalQueryGlobalTransaccion4,finalQueryGlobalTransaccion5,finalQueryGlobalTransaccion6,finalQueryGlobalTransaccion7,finalQueryGlobalTransaccion8,finalQueryGlobalTransaccion9,finalQueryGlobalTransaccion10);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=analisistransaclienteReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=analisistransaclienteReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalTransaccion.equals("NONE")) {
				this.transaccionsForeignKey=analisistransaclienteReturnGeneral.gettransaccionsForeignKey();
			}

			if(!finalQueryGlobalTransaccion1.equals("NONE")) {
				this.transaccion1sForeignKey=analisistransaclienteReturnGeneral.gettransaccion1sForeignKey();
			}

			if(!finalQueryGlobalTransaccion2.equals("NONE")) {
				this.transaccion2sForeignKey=analisistransaclienteReturnGeneral.gettransaccion2sForeignKey();
			}

			if(!finalQueryGlobalTransaccion3.equals("NONE")) {
				this.transaccion3sForeignKey=analisistransaclienteReturnGeneral.gettransaccion3sForeignKey();
			}

			if(!finalQueryGlobalTransaccion4.equals("NONE")) {
				this.transaccion4sForeignKey=analisistransaclienteReturnGeneral.gettransaccion4sForeignKey();
			}

			if(!finalQueryGlobalTransaccion5.equals("NONE")) {
				this.transaccion5sForeignKey=analisistransaclienteReturnGeneral.gettransaccion5sForeignKey();
			}

			if(!finalQueryGlobalTransaccion6.equals("NONE")) {
				this.transaccion6sForeignKey=analisistransaclienteReturnGeneral.gettransaccion6sForeignKey();
			}

			if(!finalQueryGlobalTransaccion7.equals("NONE")) {
				this.transaccion7sForeignKey=analisistransaclienteReturnGeneral.gettransaccion7sForeignKey();
			}

			if(!finalQueryGlobalTransaccion8.equals("NONE")) {
				this.transaccion8sForeignKey=analisistransaclienteReturnGeneral.gettransaccion8sForeignKey();
			}

			if(!finalQueryGlobalTransaccion9.equals("NONE")) {
				this.transaccion9sForeignKey=analisistransaclienteReturnGeneral.gettransaccion9sForeignKey();
			}

			if(!finalQueryGlobalTransaccion10.equals("NONE")) {
				this.transaccion10sForeignKey=analisistransaclienteReturnGeneral.gettransaccion10sForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyAnalisisTransaCliente()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyTransaccion();
			this.addItemDefectoCombosForeignKeyTransaccion1();
			this.addItemDefectoCombosForeignKeyTransaccion2();
			this.addItemDefectoCombosForeignKeyTransaccion3();
			this.addItemDefectoCombosForeignKeyTransaccion4();
			this.addItemDefectoCombosForeignKeyTransaccion5();
			this.addItemDefectoCombosForeignKeyTransaccion6();
			this.addItemDefectoCombosForeignKeyTransaccion7();
			this.addItemDefectoCombosForeignKeyTransaccion8();
			this.addItemDefectoCombosForeignKeyTransaccion9();
			this.addItemDefectoCombosForeignKeyTransaccion10();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.analisistransaclienteSessionBean==null) {
				this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
			}

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				Transaccion transaccion=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionsForeignKey,transaccion,true)) {

					this.transaccionsForeignKey.add(0,transaccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion1()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion1()) {
				Transaccion transaccion1=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion1,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion1.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion1sForeignKey,transaccion1,true)) {

					this.transaccion1sForeignKey.add(0,transaccion1);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion2()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion2()) {
				Transaccion transaccion2=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion2,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion2.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion2sForeignKey,transaccion2,true)) {

					this.transaccion2sForeignKey.add(0,transaccion2);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion3()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion3()) {
				Transaccion transaccion3=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion3,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion3.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion3sForeignKey,transaccion3,true)) {

					this.transaccion3sForeignKey.add(0,transaccion3);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion4()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion4()) {
				Transaccion transaccion4=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion4,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion4.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion4sForeignKey,transaccion4,true)) {

					this.transaccion4sForeignKey.add(0,transaccion4);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion5()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion5()) {
				Transaccion transaccion5=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion5,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion5.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion5sForeignKey,transaccion5,true)) {

					this.transaccion5sForeignKey.add(0,transaccion5);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion6()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion6()) {
				Transaccion transaccion6=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion6,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion6.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion6sForeignKey,transaccion6,true)) {

					this.transaccion6sForeignKey.add(0,transaccion6);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion7()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion7()) {
				Transaccion transaccion7=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion7,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion7.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion7sForeignKey,transaccion7,true)) {

					this.transaccion7sForeignKey.add(0,transaccion7);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion8()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion8()) {
				Transaccion transaccion8=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion8,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion8.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion8sForeignKey,transaccion8,true)) {

					this.transaccion8sForeignKey.add(0,transaccion8);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion9()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion9()) {
				Transaccion transaccion9=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion9,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion9.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion9sForeignKey,transaccion9,true)) {

					this.transaccion9sForeignKey.add(0,transaccion9);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion10()throws Exception {
		try {

			if(!this.analisistransaclienteSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion10()) {
				Transaccion transaccion10=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion10,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion10.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccion10sForeignKey,transaccion10,true)) {

					this.transaccion10sForeignKey.add(0,transaccion10);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyAnalisisTransaCliente()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyAnalisisTransaCliente(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyAnalisisTransaCliente()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyAnalisisTransaCliente();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente)throws Exception {	
		try {
			
			this.setActualTransaccionForeignKey(analisistransacliente.getid_transaccion(),false,"Formulario");
			this.setActualTransaccion1ForeignKey(analisistransacliente.getid_transaccion1(),false,"Formulario");
			this.setActualTransaccion2ForeignKey(analisistransacliente.getid_transaccion2(),false,"Formulario");
			this.setActualTransaccion3ForeignKey(analisistransacliente.getid_transaccion3(),false,"Formulario");
			this.setActualTransaccion4ForeignKey(analisistransacliente.getid_transaccion4(),false,"Formulario");
			this.setActualTransaccion5ForeignKey(analisistransacliente.getid_transaccion5(),false,"Formulario");
			this.setActualTransaccion6ForeignKey(analisistransacliente.getid_transaccion6(),false,"Formulario");
			this.setActualTransaccion7ForeignKey(analisistransacliente.getid_transaccion7(),false,"Formulario");
			this.setActualTransaccion8ForeignKey(analisistransacliente.getid_transaccion8(),false,"Formulario");
			this.setActualTransaccion9ForeignKey(analisistransacliente.getid_transaccion9(),false,"Formulario");
			this.setActualTransaccion10ForeignKey(analisistransacliente.getid_transaccion10(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyAnalisisTransaCliente()throws Exception {	
		try {
			
			this.setActualTransaccionForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion(),false,"Formulario");
			this.setActualTransaccion1ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion1(),false,"Formulario");
			this.setActualTransaccion2ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion2(),false,"Formulario");
			this.setActualTransaccion3ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion3(),false,"Formulario");
			this.setActualTransaccion4ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion4(),false,"Formulario");
			this.setActualTransaccion5ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion5(),false,"Formulario");
			this.setActualTransaccion6ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion6(),false,"Formulario");
			this.setActualTransaccion7ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion7(),false,"Formulario");
			this.setActualTransaccion8ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion8(),false,"Formulario");
			this.setActualTransaccion9ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion9(),false,"Formulario");
			this.setActualTransaccion10ForeignKey(this.analisistransaclienteConstantesFunciones.getid_transaccion10(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyAnalisisTransaCliente()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyAnalisisTransaCliente()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyAnalisisTransaCliente()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroAnalisisTransaCliente()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyAnalisisTransaCliente()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameTransaccionsForeignKey("Todos");
			this.cargarCombosFrameTransaccion1sForeignKey("Todos");
			this.cargarCombosFrameTransaccion2sForeignKey("Todos");
			this.cargarCombosFrameTransaccion3sForeignKey("Todos");
			this.cargarCombosFrameTransaccion4sForeignKey("Todos");
			this.cargarCombosFrameTransaccion5sForeignKey("Todos");
			this.cargarCombosFrameTransaccion6sForeignKey("Todos");
			this.cargarCombosFrameTransaccion7sForeignKey("Todos");
			this.cargarCombosFrameTransaccion8sForeignKey("Todos");
			this.cargarCombosFrameTransaccion9sForeignKey("Todos");
			this.cargarCombosFrameTransaccion10sForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyAnalisisTransaCliente(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion1sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion2sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion3sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion4sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion5sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion6sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion7sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion8sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion9sForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccion10sForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyAnalisisTransaCliente()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	


























	
	

	public AnalisisTransaClienteBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public AnalisisTransaClienteBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public AnalisisTransaClienteBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean(); 
		this.analisistransaclienteConstantesFunciones=new AnalisisTransaClienteConstantesFunciones(); 
		this.analisistransaclienteBean=new AnalisisTransaCliente();//(this.analisistransaclienteConstantesFunciones); 		
		this.analisistransaclienteReturnGeneral=new AnalisisTransaClienteParameterReturnGeneral(); 
		
		this.analisistransaclienteSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.analisistransaclienteSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public AnalisisTransaClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public AnalisisTransaClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public AnalisisTransaClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessAnalisisTransaCliente(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.analisistransaclienteConstantesFunciones=new AnalisisTransaClienteConstantesFunciones(); 
			this.analisistransaclienteBean=new AnalisisTransaCliente();//this.analisistransaclienteConstantesFunciones); 			
			this.analisistransaclienteReturnGeneral=new AnalisisTransaClienteParameterReturnGeneral(); 
		
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Analisis Transaccion Cliente Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			
			
			this.analisistransacliente=new AnalisisTransaCliente();
			this.analisistransaclientes = new ArrayList<AnalisisTransaCliente>();
			this.analisistransaclientesAux = new ArrayList<AnalisisTransaCliente>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic=new AnalisisTransaClienteLogic();
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}
			
			//this.analisistransaclienteSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.analisistransaclienteSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormAnalisisTransaCliente);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoAnalisisTransaCliente);	
					}
					
					if(this.jInternalFrameImportacionAnalisisTransaCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionAnalisisTransaCliente);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByAnalisisTransaCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByAnalisisTransaCliente);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormAnalisisTransaCliente);
				this.jInternalFrameDetalleFormAnalisisTransaCliente.setVisible(false);
				this.jInternalFrameDetalleFormAnalisisTransaCliente.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoAnalisisTransaCliente);
					this.jInternalFrameReporteDinamicoAnalisisTransaCliente.setVisible(false);
					this.jInternalFrameReporteDinamicoAnalisisTransaCliente.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionAnalisisTransaCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionAnalisisTransaCliente);
					this.jInternalFrameImportacionAnalisisTransaCliente.setVisible(false);
					this.jInternalFrameImportacionAnalisisTransaCliente.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByAnalisisTransaCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByAnalisisTransaCliente);
					this.jInternalFrameOrderByAnalisisTransaCliente.setVisible(false);
					this.jInternalFrameOrderByAnalisisTransaCliente.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idAnalisisTransaClienteActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=AnalisisTransaClienteConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.analisistransaclienteReturnGeneral=new AnalisisTransaClienteParameterReturnGeneral();
			
			this.analisistransaclienteParameterGeneral=new AnalisisTransaClienteParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.analisistransaclienteLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(AnalisisTransaClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,AnalisisTransaClienteConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.analisistransaclienteSessionBean.getEsGuardarRelacionado(),this.analisistransaclienteSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,AnalisisTransaClienteConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.analisistransaclienteSessionBean.getEsGuardarRelacionado(),this.analisistransaclienteSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=false;
			this.isVisibilidadCeldaDuplicarAnalisisTransaCliente=true;
			this.isVisibilidadCeldaCopiarAnalisisTransaCliente=true;
			this.isVisibilidadCeldaVerFormAnalisisTransaCliente=true;
			this.isVisibilidadCeldaOrdenAnalisisTransaCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=false;
			
			
			this.isVisibilidadBusquedaPorNombre=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdTransaccion=true;
			this.isVisibilidadFK_IdTransaccion1=true;
			this.isVisibilidadFK_IdTransaccion10=true;
			this.isVisibilidadFK_IdTransaccion2=true;
			this.isVisibilidadFK_IdTransaccion4=true;
			this.isVisibilidadFK_IdTransaccion5=true;
			this.isVisibilidadFK_IdTransaccion6=true;
			this.isVisibilidadFK_IdTransaccion7=true;
			this.isVisibilidadFK_IdTransaccion8=true;
			this.isVisibilidadFK_IdTransaccion9=true;
			this.isVisibilidadFK_IdTransaccionTransaccio3=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosAnalisisTransaCliente();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioAnalisisTransaCliente(false);
			
			this.setPermisosUsuarioAnalisisTransaCliente();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado() 
				|| (this.analisistransaclienteSessionBean.getEsGuardarRelacionado() && this.analisistransaclienteSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioAnalisisTransaClienteClasesRelacionadas();
			}
			
			if(this.analisistransaclienteSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioAnalisisTransaClienteClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosAnalisisTransaCliente();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualAnalisisTransaCliente();
			}
			
			if(!this.isPermisoBusquedaAnalisisTransaCliente) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioAnalisisTransaCliente,this.isPermisoPaginacionMedioAnalisisTransaCliente,this.isPermisoPaginacionTodoAnalisisTransaCliente);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(AnalisisTransaClienteConstantesFunciones.getTiposSeleccionarAnalisisTransaCliente());
				
				this.tiposColumnasSelect=AnalisisTransaClienteConstantesFunciones.getTiposSeleccionarAnalisisTransaCliente(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioAnalisisTransaCliente();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioAnalisisTransaCliente(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioAnalisisTransaCliente(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesAnalisisTransaCliente() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.moduloLogic=new ModuloLogic();
			this.transaccionLogic=new TransaccionLogic();
			this.transaccion1Logic=new TransaccionLogic();
			this.transaccion2Logic=new TransaccionLogic();
			this.transaccion3Logic=new TransaccionLogic();
			this.transaccion4Logic=new TransaccionLogic();
			this.transaccion5Logic=new TransaccionLogic();
			this.transaccion6Logic=new TransaccionLogic();
			this.transaccion7Logic=new TransaccionLogic();
			this.transaccion8Logic=new TransaccionLogic();
			this.transaccion9Logic=new TransaccionLogic();
			this.transaccion10Logic=new TransaccionLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				analisistransaclienteImplementable= (AnalisisTransaClienteImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+AnalisisTransaClienteConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				analisistransaclienteImplementableHome= (AnalisisTransaClienteImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+AnalisisTransaClienteConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.analisistransaclientes= new ArrayList<AnalisisTransaCliente>();
			this.analisistransaclientesEliminados= new ArrayList<AnalisisTransaCliente>();
						
			this.isEsNuevoAnalisisTransaCliente=false;
			this.esParaAccionDesdeFormularioAnalisisTransaCliente=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.transaccionsForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion1sForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion2sForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion3sForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion4sForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion5sForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion6sForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion7sForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion8sForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion9sForeignKey=new ArrayList<Transaccion>() ;
			this.transaccion10sForeignKey=new ArrayList<Transaccion>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyAnalisisTransaCliente(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroAnalisisTransaCliente();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=AnalisisTransaClienteConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingAnalisisTransaCliente(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioAnalisisTransaCliente();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioAnalisisTransaCliente();
			}
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasAnalisisTransaCliente.getTabCount(); i++) {
					this.jTabbedPaneBusquedasAnalisisTransaCliente.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasAnalisisTransaCliente.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessAnalisisTransaCliente(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga AnalisisTransaCliente: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectAnalisisTransaCliente() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesAnalisisTransaCliente")) {
				iIndex=this.jInternalFrameDetalleFormAnalisisTransaCliente.jTabbedPaneRelacionesAnalisisTransaCliente.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormAnalisisTransaCliente.jTabbedPaneRelacionesAnalisisTransaCliente.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessAnalisisTransaCliente();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyAnalisisTransaCliente(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyAnalisisTransaCliente(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyAnalisisTransaCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyAnalisisTransaClienteListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyAnalisisTransaCliente();
		
		this.cargarCombosFrameForeignKeyAnalisisTransaCliente();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyAnalisisTransaCliente();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyAnalisisTransaCliente();
		}
	}
	
	

	public void cargarCombosForeignKeyTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion(this.transaccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion1(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion1Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion1();
				this.cargarCombosFrameTransaccion1sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion1(this.transaccion1sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion2(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion2Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion2();
				this.cargarCombosFrameTransaccion2sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion2(this.transaccion2sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion3(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion3Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion3();
				this.cargarCombosFrameTransaccion3sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion3(this.transaccion3sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion4(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion4Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion4();
				this.cargarCombosFrameTransaccion4sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion4(this.transaccion4sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion5(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion5Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion5();
				this.cargarCombosFrameTransaccion5sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion5(this.transaccion5sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion6(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion6Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion6();
				this.cargarCombosFrameTransaccion6sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion6(this.transaccion6sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion7(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion7Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion7();
				this.cargarCombosFrameTransaccion7sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion7(this.transaccion7sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion8(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion8Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion8();
				this.cargarCombosFrameTransaccion8sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion8(this.transaccion8sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion9(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion9Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion9();
				this.cargarCombosFrameTransaccion9sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion9(this.transaccion9sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion10(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccion10Listas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion10();
				this.cargarCombosFrameTransaccion10sForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion10(this.transaccion10sForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoAnalisisTransaClienteActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.analisistransaclienteSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
			
			if(jTableDatosAnalisisTransaCliente.getRowCount()>=1) {
				jTableDatosAnalisisTransaCliente.removeRowSelectionInterval(0, jTableDatosAnalisisTransaCliente.getRowCount()-1);						
			}
			
			this.isEsNuevoAnalisisTransaCliente=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoAnalisisTransaCliente(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesAnalisisTransaCliente(true);			
			//this.analisistransacliente=new AnalisisTransaCliente();
			//this.analisistransacliente.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesAnalisisTransaCliente(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAnalisisTransaCliente() ;
			
			if(AnalisisTransaClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleAnalisisTransaCliente(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.analisistransacliente);	
			this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);				
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
			if(this.analisistransaclienteSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar AnalisisTransaCliente: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarAnalisisTransaClienteActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosAnalisisTransaCliente.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosAnalisisTransaCliente.getSelectedRows().length;			
			}
			
			analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoAnalisisTransaCliente--;			
				//AnalisisTransaCliente analisistransaclienteAux= new AnalisisTransaCliente();			
				//analisistransaclienteAux.setId(this.iIdNuevoAnalisisTransaCliente);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//AnalisisTransaCliente analisistransaclienteOrigen=new AnalisisTransaCliente();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(AnalisisTransaCliente analisistransaclienteOrigen : analisistransaclientesSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							analisistransaclienteOrigen =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							analisistransaclienteOrigen =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaAnalisisTransaCliente();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.analisistransacliente.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosAnalisisTransaCliente(analisistransaclienteOrigen,this.analisistransacliente,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.analisistransaclienteLogic.getAnalisisTransaClientes().add(this.analisistransaclienteAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.analisistransaclientes.add(this.analisistransaclienteAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
				
				this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(this.getIndiceNuevoAnalisisTransaCliente(), this.getIndiceNuevoAnalisisTransaCliente());
				
				int iLastRow =  this.jTableDatosAnalisisTransaCliente.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosAnalisisTransaCliente.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosAnalisisTransaCliente.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();									
		
			AnalisisTransaCliente analisistransaclienteOrigen=new AnalisisTransaCliente();
			AnalisisTransaCliente analisistransaclienteDestino=new AnalisisTransaCliente();
				
			analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosAnalisisTransaCliente.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || analisistransaclientesSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosAnalisisTransaCliente.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						analisistransaclienteOrigen =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						analisistransaclienteOrigen =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						analisistransaclienteDestino =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						analisistransaclienteDestino =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				analisistransaclienteOrigen =analisistransaclientesSeleccionados.get(0);
				analisistransaclienteDestino =analisistransaclientesSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosAnalisisTransaCliente(analisistransaclienteOrigen,analisistransaclienteDestino,true,false);
				
				analisistransaclienteDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(analisistransaclienteDestino,analisistransaclienteLogic.getAnalisisTransaClientes());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(analisistransaclienteDestino,analisistransaclientes);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
				
				//this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(this.getIndiceNuevoAnalisisTransaCliente(), this.getIndiceNuevoAnalisisTransaCliente());
				
				int iLastRow =  this.jTableDatosAnalisisTransaCliente.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosAnalisisTransaCliente.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosAnalisisTransaCliente.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormAnalisisTransaCliente.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesAnalisisTransaCliente.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(!isVisible);
			this.jPanelPaginacionAnalisisTransaCliente.setVisible(!isVisible);
			this.jPanelAccionesAnalisisTransaCliente.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameAnalisisTransaCliente();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoAnalisisTransaCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionAnalisisTransaCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByAnalisisTransaCliente();
			
			this.abrirFrameOrderByAnalisisTransaCliente();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByAnalisisTransaCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleAnalisisTransaCliente(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormAnalisisTransaCliente);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormAnalisisTransaCliente.isMaximum()) {
					this.jInternalFrameDetalleFormAnalisisTransaCliente.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormAnalisisTransaCliente.setSize(this.jInternalFrameDetalleFormAnalisisTransaCliente.iWidthFormulario,this.jInternalFrameDetalleFormAnalisisTransaCliente.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormAnalisisTransaCliente.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormAnalisisTransaCliente.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormAnalisisTransaCliente.isMaximum()) {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jContentPaneDetalleAnalisisTransaCliente.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormAnalisisTransaCliente.jTabbedPaneRelacionesAnalisisTransaCliente.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormAnalisisTransaCliente.jContentPaneDetalleAnalisisTransaCliente.getWidth(),AnalisisTransaClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormAnalisisTransaCliente.jTabbedPaneRelacionesAnalisisTransaCliente.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormAnalisisTransaCliente.jContentPaneDetalleAnalisisTransaCliente.getWidth(),AnalisisTransaClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormAnalisisTransaCliente.jTabbedPaneRelacionesAnalisisTransaCliente.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormAnalisisTransaCliente.jContentPaneDetalleAnalisisTransaCliente.getWidth(),AnalisisTransaClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormAnalisisTransaCliente.setVisible(true);
	        this.jInternalFrameDetalleFormAnalisisTransaCliente.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByAnalisisTransaCliente() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByAnalisisTransaCliente==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByAnalisisTransaCliente=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByAnalisisTransaCliente,false,this);
				} else {
					this.jInternalFrameOrderByAnalisisTransaCliente=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByAnalisisTransaCliente,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByAnalisisTransaCliente);
				this.jInternalFrameOrderByAnalisisTransaCliente.setVisible(false);
				this.jInternalFrameOrderByAnalisisTransaCliente.setSelected(false);
				
				this.jInternalFrameOrderByAnalisisTransaCliente.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByAnalisisTransaCliente"));
				
				this.inicializarActualizarBindingTablaOrderByAnalisisTransaCliente();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionAnalisisTransaCliente() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionAnalisisTransaCliente==null) {
				
				this.jInternalFrameImportacionAnalisisTransaCliente=new ImportacionJInternalFrame(AnalisisTransaClienteConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionAnalisisTransaCliente);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionAnalisisTransaCliente);
				this.jInternalFrameImportacionAnalisisTransaCliente.setVisible(false);
				this.jInternalFrameImportacionAnalisisTransaCliente.setSelected(false);


				this.jInternalFrameImportacionAnalisisTransaCliente.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionAnalisisTransaCliente"));
				this.jInternalFrameImportacionAnalisisTransaCliente.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionAnalisisTransaCliente"));
				this.jInternalFrameImportacionAnalisisTransaCliente.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionAnalisisTransaCliente"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoAnalisisTransaCliente() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente==null) {
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente=new ReporteDinamicoJInternalFrame(AnalisisTransaClienteConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoAnalisisTransaCliente);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoAnalisisTransaCliente);
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.setVisible(false);
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoAnalisisTransaCliente"));
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoAnalisisTransaCliente"));
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoAnalisisTransaCliente"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualAnalisisTransaCliente();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleAnalisisTransaCliente() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormAnalisisTransaCliente);
			
	       	this.jInternalFrameDetalleFormAnalisisTransaCliente.setVisible(false);
	        this.jInternalFrameDetalleFormAnalisisTransaCliente.setSelected(false);
			
			//this.jInternalFrameDetalleFormAnalisisTransaCliente.dispose();
			//this.jInternalFrameDetalleFormAnalisisTransaCliente=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoAnalisisTransaCliente() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoAnalisisTransaCliente.setVisible(true);
	        this.jInternalFrameReporteDinamicoAnalisisTransaCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionAnalisisTransaCliente() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionAnalisisTransaCliente.setVisible(true);
	        this.jInternalFrameImportacionAnalisisTransaCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByAnalisisTransaCliente() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByAnalisisTransaCliente.setVisible(true);
	        this.jInternalFrameOrderByAnalisisTransaCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByAnalisisTransaCliente() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByAnalisisTransaCliente.setVisible(false);
	        this.jInternalFrameOrderByAnalisisTransaCliente.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoAnalisisTransaCliente() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoAnalisisTransaCliente.setVisible(false);
	        this.jInternalFrameReporteDinamicoAnalisisTransaCliente.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionAnalisisTransaCliente() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionAnalisisTransaCliente.setVisible(false);
	        this.jInternalFrameImportacionAnalisisTransaCliente.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarAnalisisTransaCliente(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarAnalisisTransaCliente(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesAnalisisTransaCliente(true);
			//this.isEsNuevoAnalisisTransaCliente=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesAnalisisTransaCliente(false) ;
			
			if(analisistransaclienteSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(AnalisisTransaClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleAnalisisTransaCliente(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAnalisisTransaCliente(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaAnalisisTransaClienteActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarAnalisisTransaCliente(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesAnalisisTransaCliente(true);
			//this.isEsNuevoAnalisisTransaCliente=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.analisistransacliente.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesAnalisisTransaCliente(false) ;
			
			if(AnalisisTransaClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleAnalisisTransaCliente(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAnalisisTransaCliente(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaTransaccion(List<Transaccion> transaccionsForeignKey)throws Exception{
		TableColumn tableColumnTransaccion=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION));
		TableCellEditor tableCellEditorTransaccion =tableColumnTransaccion.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionsForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion1(List<Transaccion> transaccion1sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion1=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1));
		TableCellEditor tableCellEditorTransaccion1 =tableColumnTransaccion1.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion1;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion1sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion1sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion2(List<Transaccion> transaccion2sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion2=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2));
		TableCellEditor tableCellEditorTransaccion2 =tableColumnTransaccion2.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion2;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion2sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion2sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion3(List<Transaccion> transaccion3sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion3=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3));
		TableCellEditor tableCellEditorTransaccion3 =tableColumnTransaccion3.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion3;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion3sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion3sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion4(List<Transaccion> transaccion4sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion4=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4));
		TableCellEditor tableCellEditorTransaccion4 =tableColumnTransaccion4.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion4;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion4sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion4sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion5(List<Transaccion> transaccion5sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion5=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5));
		TableCellEditor tableCellEditorTransaccion5 =tableColumnTransaccion5.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion5;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion5sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion5sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion6(List<Transaccion> transaccion6sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion6=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6));
		TableCellEditor tableCellEditorTransaccion6 =tableColumnTransaccion6.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion6;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion6sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion6sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion7(List<Transaccion> transaccion7sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion7=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7));
		TableCellEditor tableCellEditorTransaccion7 =tableColumnTransaccion7.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion7;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion7sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion7sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion8(List<Transaccion> transaccion8sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion8=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8));
		TableCellEditor tableCellEditorTransaccion8 =tableColumnTransaccion8.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion8;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion8sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion8sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion9(List<Transaccion> transaccion9sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion9=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9));
		TableCellEditor tableCellEditorTransaccion9 =tableColumnTransaccion9.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion9;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion9sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion9sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion10(List<Transaccion> transaccion10sForeignKey)throws Exception{
		TableColumn tableColumnTransaccion10=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10));
		TableCellEditor tableCellEditorTransaccion10 =tableColumnTransaccion10.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion10;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccion10sForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccion10sForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesAnalisisTransaCliente(false);
			
			//if(!this.isEsNuevoAnalisisTransaCliente) {								
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				
			}
			
			if(this.permiteMantenimiento(this.analisistransacliente)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoAnalisisTransaCliente=true;
					this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
					this.isEsNuevoAnalisisTransaCliente=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoAnalisisTransaCliente=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoAnalisisTransaCliente=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesAnalisisTransaCliente(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualAnalisisTransaCliente(false);
				
				this.habilitarDeshabilitarControlesAnalisisTransaCliente(false);
			
												
				
				if(AnalisisTransaClienteJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleAnalisisTransaCliente();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoAnalisisTransaClienteActionPerformed(evt,analisistransaclienteSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualAnalisisTransaCliente(this.analisistransacliente,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,analisistransaclienteSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.analisistransacliente.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				this.analisistransacliente.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				this.analisistransacliente.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.analisistransacliente)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((AnalisisTransaClienteModel) this.jTableDatosAnalisisTransaCliente.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoAnalisisTransaCliente=true;
				this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
				this.isEsNuevoAnalisisTransaCliente=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesAnalisisTransaCliente(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualAnalisisTransaCliente(false);
				
				this.habilitarDeshabilitarControlesAnalisisTransaCliente(false);
				
				
				
				if(AnalisisTransaClienteJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleAnalisisTransaCliente();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosAnalisisTransaCliente.getRowCount()>=1) {
				jTableDatosAnalisisTransaCliente.removeRowSelectionInterval(0, jTableDatosAnalisisTransaCliente.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesAnalisisTransaCliente(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesAnalisisTransaCliente(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAnalisisTransaCliente(false) ;
			
			this.isEsNuevoAnalisisTransaCliente=false;
			
			if(AnalisisTransaClienteJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleAnalisisTransaCliente();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingAnalisisTransaCliente(false);
				
				//SI ES MANUAL
				if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualAnalisisTransaCliente();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoAnalisisTransaCliente--;			
			//AnalisisTransaCliente analisistransaclienteAux= new AnalisisTransaCliente();			
			//analisistransaclienteAux.setId(this.iIdNuevoAnalisisTransaCliente);
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaAnalisisTransaCliente();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
			
			this.analisistransacliente.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.analisistransaclienteLogic.getAnalisisTransaClientes().add(this.analisistransaclienteAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.analisistransaclientes.add(this.analisistransaclienteAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
			
			this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(this.getIndiceNuevoAnalisisTransaCliente(), this.getIndiceNuevoAnalisisTransaCliente());
			
			int iLastRow =  this.jTableDatosAnalisisTransaCliente.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosAnalisisTransaCliente.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosAnalisisTransaCliente.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAnalisisTransaCliente(false);
			
			//SI ES MANUAL
			if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualAnalisisTransaCliente();
			}
			
			//this.abrirFrameTreeAnalisisTransaCliente();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Analisis Transaccion ClienteES ?", "MANTENIMIENTO DE Analisis Transaccion Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionAnalisisTransaCliente.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralAnalisisTransaCliente();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.analisistransaclienteReturnGeneral=analisistransaclienteLogic.procesarImportacionAnalisisTransaClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.analisistransaclienteParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarAnalisisTransaClienteReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionAnalisisTransaCliente.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionAnalisisTransaCliente.setFileImportacion(this.jInternalFrameImportacionAnalisisTransaCliente.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionAnalisisTransaCliente.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionAnalisisTransaCliente.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionAnalisisTransaCliente.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionAnalisisTransaCliente.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();		

		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("AnalisisTransaClienteBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"AnalisisTransaClienteBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteAnalisisTransaClientes("Todos",analisistransaclientesSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion1_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion1_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion1_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion1_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion3_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion3_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion3_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion3_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion4_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion4_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion4_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion4_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion5_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion5_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion5_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion5_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion6_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion6_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion6_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion6_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion7_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion7_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion7_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion7_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion8_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion8_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion8_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion8_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion9_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion9_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion9_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion9_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion10_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion10_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion10_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion10_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoria="id_transaccion";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1:
					sNombreCampoCategoria="id_transaccion1";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2:
					sNombreCampoCategoria="id_transaccion2";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3:
					sNombreCampoCategoria="id_transaccion3";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4:
					sNombreCampoCategoria="id_transaccion4";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5:
					sNombreCampoCategoria="id_transaccion5";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6:
					sNombreCampoCategoria="id_transaccion6";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7:
					sNombreCampoCategoria="id_transaccion7";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8:
					sNombreCampoCategoria="id_transaccion8";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9:
					sNombreCampoCategoria="id_transaccion9";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10:
					sNombreCampoCategoria="id_transaccion10";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoriaValor="id_transaccion";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1:
					sNombreCampoCategoriaValor="id_transaccion1";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2:
					sNombreCampoCategoriaValor="id_transaccion2";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3:
					sNombreCampoCategoriaValor="id_transaccion3";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4:
					sNombreCampoCategoriaValor="id_transaccion4";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5:
					sNombreCampoCategoriaValor="id_transaccion5";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6:
					sNombreCampoCategoriaValor="id_transaccion6";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7:
					sNombreCampoCategoriaValor="id_transaccion7";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8:
					sNombreCampoCategoriaValor="id_transaccion8";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9:
					sNombreCampoCategoriaValor="id_transaccion9";
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10:
					sNombreCampoCategoriaValor="id_transaccion10";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 1",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion1");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion2");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 3",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion3");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 4",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion4");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 5",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion5");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 6",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion6");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 7",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion7");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 8",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion8");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 9",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion9");
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion 10",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion10");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();		
		
		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"analisistransacliente";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("AnalisisTransaClientes");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion1_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion2_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion3_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion4_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion5_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion6_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion7_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion8_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion9_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10);
					iRow++;

					for(AnalisisTransaCliente analisistransacliente:analisistransaclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(analisistransacliente.gettransaccion10_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelAnalisisTransaCliente(row);				
			//	iRow++;
			//}				
			
			//for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientesSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelAnalisisTransaCliente(analisistransaclienteAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAnalisisTransaCliente(false);
			
			//SI ES MANUAL
			if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualAnalisisTransaCliente();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAnalisisTransaCliente(false);
			
			//SI ES MANUAL
			if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualAnalisisTransaCliente();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAnalisisTransaCliente(false);
			
			//SI ES MANUAL
			if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualAnalisisTransaCliente();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaAnalisisTransaCliente() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosAnalisisTransaCliente.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosAnalisisTransaCliente.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosAnalisisTransaCliente.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosAnalisisTransaCliente.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosAnalisisTransaCliente.setMinimumSize(dimensionMinimum);
		this.jTableDatosAnalisisTransaCliente.setMaximumSize(dimensionMaximum);
		this.jTableDatosAnalisisTransaCliente.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingAnalisisTransaCliente(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingAnalisisTransaCliente(esInicializar,true);
	}
	
	public void inicializarActualizarBindingAnalisisTransaCliente(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaAnalisisTransaCliente(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesAnalisisTransaCliente(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasAnalisisTransaCliente(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesAnalisisTransaCliente(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesAnalisisTransaCliente(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualAnalisisTransaCliente() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaAnalisisTransaCliente();
		
		this.inicializarActualizarBindingBotonesManualAnalisisTransaCliente(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualAnalisisTransaCliente();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesAnalisisTransaCliente() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualAnalisisTransaCliente(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualAnalisisTransaCliente(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosAnalisisTransaCliente.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosAnalisisTransaCliente.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteAnalisisTransaCliente.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormAnalisisTransaCliente.jCheckBoxPostAccionNuevoAnalisisTransaCliente.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormAnalisisTransaCliente.jCheckBoxPostAccionSinCerrarAnalisisTransaCliente.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormAnalisisTransaCliente.jCheckBoxPostAccionSinMensajeAnalisisTransaCliente.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosAnalisisTransaCliente.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosAnalisisTransaCliente.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteAnalisisTransaCliente.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jCheckBoxPostAccionNuevoAnalisisTransaCliente.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jCheckBoxPostAccionSinCerrarAnalisisTransaCliente.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jCheckBoxPostAccionSinMensajeAnalisisTransaCliente.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionAnalisisTransaCliente.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionAnalisisTransaCliente.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesAnalisisTransaCliente.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesAnalisisTransaCliente.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesAnalisisTransaCliente.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarAnalisisTransaCliente.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesAnalisisTransaCliente.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesAnalisisTransaCliente.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralAnalisisTransaCliente.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesAnalisisTransaCliente(Boolean esInicializar) throws Exception {
		try	{	
			if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualAnalisisTransaCliente(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesAnalisisTransaCliente() throws Exception {
		try	{
			if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualAnalisisTransaCliente();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleAnalisisTransaCliente() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualAnalisisTransaCliente() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesAnalisisTransaCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesAnalisisTransaCliente.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesAnalisisTransaCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesAnalisisTransaCliente.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesAnalisisTransaCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesAnalisisTransaCliente.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionAnalisisTransaCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionAnalisisTransaCliente.addItem(reporte);
			}
			
			
			if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionAnalisisTransaCliente.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionAnalisisTransaCliente.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesAnalisisTransaCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesAnalisisTransaCliente.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesAnalisisTransaCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesAnalisisTransaCliente.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarAnalisisTransaCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarAnalisisTransaCliente.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarAnalisisTransaCliente.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualAnalisisTransaCliente();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualAnalisisTransaCliente() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente!=null) {
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente!=null) {
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente!=null) {
				
				if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualAnalisisTransaCliente()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.nombreBusquedaPorNombre=this.jTextAreanombreBusquedaPorNombreAnalisisTransaCliente.getText();
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasAnalisisTransaCliente(Boolean esInicializar) throws Exception {				
		if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualAnalisisTransaCliente();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaAnalisisTransaCliente() throws Exception {
		this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByAnalisisTransaCliente() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByAnalisisTransaCliente.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByAnalisisTransaCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByAnalisisTransaCliente.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByAnalisisTransaCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByAnalisisTransaCliente.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosAnalisisTransaClienteOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaClienteOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByAnalisisTransaCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByAnalisisTransaCliente.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByAnalisisTransaCliente.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaAnalisisTransaCliente(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=analisistransaclienteLogic.getAnalisisTransaClientes().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=analisistransaclientes.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosAnalisisTransaCliente.setModel(new AnalisisTransaClienteModel(this.analisistransaclienteLogic.getAnalisisTransaClientes(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosAnalisisTransaCliente.setModel(new AnalisisTransaClienteModel(this.analisistransaclientes,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByAnalisisTransaCliente!=null && this.jInternalFrameOrderByAnalisisTransaCliente.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByAnalisisTransaCliente();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+AnalisisTransaClienteConstantesFunciones.SCLASSWEBTITULO,analisistransaclienteConstantesFunciones.resaltarSeleccionarAnalisisTransaCliente,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+AnalisisTransaClienteConstantesFunciones.SCLASSWEBTITULO,analisistransaclienteConstantesFunciones.resaltarSeleccionarAnalisisTransaCliente,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_ID));

		if(this.analisistransaclienteConstantesFunciones.mostraridAnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.analisistransaclienteConstantesFunciones.resaltaridAnalisisTransaCliente,this.analisistransaclienteConstantesFunciones.activaridAnalisisTransaCliente,this,true,"idAnalisisTransaCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.analisistransaclienteConstantesFunciones.resaltaridAnalisisTransaCliente,this.analisistransaclienteConstantesFunciones.activaridAnalisisTransaCliente,this,true,"idAnalisisTransaCliente","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_empresaAnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_empresaAnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_empresaAnalisisTransaCliente));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_empresaAnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_empresaAnalisisTransaCliente,false,"id_empresaAnalisisTransaCliente","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_moduloAnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_moduloAnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_moduloAnalisisTransaCliente));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_moduloAnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_moduloAnalisisTransaCliente,false,"id_moduloAnalisisTransaCliente","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE));

		if(this.analisistransaclienteConstantesFunciones.mostrarnombreAnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.analisistransaclienteConstantesFunciones.resaltarnombreAnalisisTransaCliente,this.analisistransaclienteConstantesFunciones.activarnombreAnalisisTransaCliente,this,true,"nombreAnalisisTransaCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.analisistransaclienteConstantesFunciones.resaltarnombreAnalisisTransaCliente,this.analisistransaclienteConstantesFunciones.activarnombreAnalisisTransaCliente,this,true,"nombreAnalisisTransaCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION));

		if(this.analisistransaclienteConstantesFunciones.mostrardescripcionAnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.analisistransaclienteConstantesFunciones.resaltardescripcionAnalisisTransaCliente,this.analisistransaclienteConstantesFunciones.activardescripcionAnalisisTransaCliente,this,true,"descripcionAnalisisTransaCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.analisistransaclienteConstantesFunciones.resaltardescripcionAnalisisTransaCliente,this.analisistransaclienteConstantesFunciones.activardescripcionAnalisisTransaCliente,this,true,"descripcionAnalisisTransaCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccionAnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionsForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccionAnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccionAnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionsForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccionAnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccionAnalisisTransaCliente,true,"id_transaccionAnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion1AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion1sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion1AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion1AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion1sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion1AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion1AnalisisTransaCliente,true,"id_transaccion1AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion2AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion2sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion2AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion2AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion2sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion2AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion2AnalisisTransaCliente,true,"id_transaccion2AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion3AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion3sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion3AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion3AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion3sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion3AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion3AnalisisTransaCliente,true,"id_transaccion3AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion4AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion4sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion4AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion4AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion4sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion4AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion4AnalisisTransaCliente,true,"id_transaccion4AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion5AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion5sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion5AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion5AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion5sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion5AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion5AnalisisTransaCliente,true,"id_transaccion5AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion6AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion6sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion6AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion6AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion6sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion6AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion6AnalisisTransaCliente,true,"id_transaccion6AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion7AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion7sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion7AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion7AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion7sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion7AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion7AnalisisTransaCliente,true,"id_transaccion7AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion8AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion8sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion8AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion8AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion8sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion8AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion8AnalisisTransaCliente,true,"id_transaccion8AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion9AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion9sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion9AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion9AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion9sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion9AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion9AnalisisTransaCliente,true,"id_transaccion9AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10));

		if(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion10AnalisisTransaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccion10sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion10AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion10AnalisisTransaCliente));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccion10sForeignKey,this.analisistransaclienteConstantesFunciones.resaltarid_transaccion10AnalisisTransaCliente,this,this.analisistransaclienteConstantesFunciones.activarid_transaccion10AnalisisTransaCliente,true,"id_transaccion10AnalisisTransaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AnalisisTransaClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.analisistransaclienteSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.analisistransaclienteSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosAnalisisTransaCliente.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.analisistransaclienteSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.analisistransaclienteSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosAnalisisTransaCliente.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.analisistransaclienteSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.analisistransaclienteSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosAnalisisTransaCliente.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosAnalisisTransaCliente.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosAnalisisTransaCliente.moveColumn(this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosAnalisisTransaCliente.moveColumn(this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosAnalisisTransaCliente.moveColumn(this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosAnalisisTransaCliente.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosAnalisisTransaCliente.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosAnalisisTransaCliente,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosAnalisisTransaCliente.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosAnalisisTransaCliente.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosAnalisisTransaCliente.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=analisistransaclienteLogic.getAnalisisTransaClientes().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=analisistransaclientes.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosAnalisisTransaCliente.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosAnalisisTransaCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosAnalisisTransaCliente();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoAnalisisTransaCliente=false;
					
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
				if(this.analisistransaclienteSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosAnalisisTransaCliente.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.analisistransacliente.getsType().equals("DUPLICADO")
				   || this.analisistransacliente.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoAnalisisTransaCliente=true;
				
				} else {
					this.isEsNuevoAnalisisTransaCliente=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
					if(this.analisistransacliente.getId()>=0 && !this.analisistransacliente.getIsNew()) {						
						this.isEsNuevoAnalisisTransaCliente=false;
						
					} else {
						this.isEsNuevoAnalisisTransaCliente=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoAnalisisTransaCliente(esRelaciones);						
				
				this.seleccionarAnalisisTransaCliente(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.analisistransacliente.getId()<0) {
					this.isEsNuevoAnalisisTransaCliente=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarAnalisisTransaCliente(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarAnalisisTransaCliente(evt,rowIndex);
				}	
				
				if(this.analisistransaclienteSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion AnalisisTransaCliente: " + this.dDif); 
					}
				}								
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarAnalisisTransaCliente(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.analisistransacliente)) {
					if(this.analisistransacliente.getId()>0) {
						this.analisistransacliente.setIsDeleted(true);
						
						this.analisistransaclientesEliminados.add(this.analisistransacliente);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.analisistransaclienteLogic.getAnalisisTransaClientes().remove(this.analisistransacliente);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.analisistransaclientes.remove(this.analisistransacliente);				
					}
					
					
					((AnalisisTransaClienteModel) this.jTableDatosAnalisisTransaCliente.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarAnalisisTransaCliente(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoAnalisisTransaCliente) {
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosAnalisisTransaCliente.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosAnalisisTransaCliente.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioAnalisisTransaCliente(this.analisistransacliente);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.analisistransaclienteConstantesFunciones.cargarid_empresaAnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_empresaAnalisisTransaCliente) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.analisistransacliente.getid_empresa());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(analisistransacliente.getEmpresa()!=null) {
							this.empresasForeignKey.add(analisistransacliente.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.analisistransacliente.getid_empresa(),false,"Formulario");

					//Modulo
					if(!this.analisistransaclienteConstantesFunciones.cargarid_moduloAnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_moduloAnalisisTransaCliente) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.analisistransacliente.getid_modulo());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(analisistransacliente.getModulo()!=null) {
							this.modulosForeignKey.add(analisistransacliente.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.analisistransacliente.getid_modulo(),false,"Formulario");

					//Transaccion
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccionAnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccionAnalisisTransaCliente) {
						//this.cargarCombosTransaccionsForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccionsForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion()!=null) {
							this.transaccionsForeignKey.add(analisistransacliente.getTransaccion());
						}

						this.addItemDefectoCombosForeignKeyTransaccion();
						this.cargarCombosFrameTransaccionsForeignKey("Todos");
					}
					this.setActualTransaccionForeignKey(this.analisistransacliente.getid_transaccion(),false,"Formulario");

					//Transaccion1
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion1AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion1AnalisisTransaCliente) {
						//this.cargarCombosTransaccion1sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion1());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion1sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion1()!=null) {
							this.transaccion1sForeignKey.add(analisistransacliente.getTransaccion1());
						}

						this.addItemDefectoCombosForeignKeyTransaccion1();
						this.cargarCombosFrameTransaccion1sForeignKey("Todos");
					}
					this.setActualTransaccion1ForeignKey(this.analisistransacliente.getid_transaccion1(),false,"Formulario");

					//Transaccion2
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion2AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion2AnalisisTransaCliente) {
						//this.cargarCombosTransaccion2sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion2());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion2sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion2()!=null) {
							this.transaccion2sForeignKey.add(analisistransacliente.getTransaccion2());
						}

						this.addItemDefectoCombosForeignKeyTransaccion2();
						this.cargarCombosFrameTransaccion2sForeignKey("Todos");
					}
					this.setActualTransaccion2ForeignKey(this.analisistransacliente.getid_transaccion2(),false,"Formulario");

					//Transaccion3
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion3AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion3AnalisisTransaCliente) {
						//this.cargarCombosTransaccion3sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion3());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion3sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion3()!=null) {
							this.transaccion3sForeignKey.add(analisistransacliente.getTransaccion3());
						}

						this.addItemDefectoCombosForeignKeyTransaccion3();
						this.cargarCombosFrameTransaccion3sForeignKey("Todos");
					}
					this.setActualTransaccion3ForeignKey(this.analisistransacliente.getid_transaccion3(),false,"Formulario");

					//Transaccion4
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion4AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion4AnalisisTransaCliente) {
						//this.cargarCombosTransaccion4sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion4());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion4sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion4()!=null) {
							this.transaccion4sForeignKey.add(analisistransacliente.getTransaccion4());
						}

						this.addItemDefectoCombosForeignKeyTransaccion4();
						this.cargarCombosFrameTransaccion4sForeignKey("Todos");
					}
					this.setActualTransaccion4ForeignKey(this.analisistransacliente.getid_transaccion4(),false,"Formulario");

					//Transaccion5
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion5AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion5AnalisisTransaCliente) {
						//this.cargarCombosTransaccion5sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion5());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion5sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion5()!=null) {
							this.transaccion5sForeignKey.add(analisistransacliente.getTransaccion5());
						}

						this.addItemDefectoCombosForeignKeyTransaccion5();
						this.cargarCombosFrameTransaccion5sForeignKey("Todos");
					}
					this.setActualTransaccion5ForeignKey(this.analisistransacliente.getid_transaccion5(),false,"Formulario");

					//Transaccion6
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion6AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion6AnalisisTransaCliente) {
						//this.cargarCombosTransaccion6sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion6());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion6sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion6()!=null) {
							this.transaccion6sForeignKey.add(analisistransacliente.getTransaccion6());
						}

						this.addItemDefectoCombosForeignKeyTransaccion6();
						this.cargarCombosFrameTransaccion6sForeignKey("Todos");
					}
					this.setActualTransaccion6ForeignKey(this.analisistransacliente.getid_transaccion6(),false,"Formulario");

					//Transaccion7
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion7AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion7AnalisisTransaCliente) {
						//this.cargarCombosTransaccion7sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion7());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion7sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion7()!=null) {
							this.transaccion7sForeignKey.add(analisistransacliente.getTransaccion7());
						}

						this.addItemDefectoCombosForeignKeyTransaccion7();
						this.cargarCombosFrameTransaccion7sForeignKey("Todos");
					}
					this.setActualTransaccion7ForeignKey(this.analisistransacliente.getid_transaccion7(),false,"Formulario");

					//Transaccion8
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion8AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion8AnalisisTransaCliente) {
						//this.cargarCombosTransaccion8sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion8());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion8sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion8()!=null) {
							this.transaccion8sForeignKey.add(analisistransacliente.getTransaccion8());
						}

						this.addItemDefectoCombosForeignKeyTransaccion8();
						this.cargarCombosFrameTransaccion8sForeignKey("Todos");
					}
					this.setActualTransaccion8ForeignKey(this.analisistransacliente.getid_transaccion8(),false,"Formulario");

					//Transaccion9
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion9AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion9AnalisisTransaCliente) {
						//this.cargarCombosTransaccion9sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion9());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion9sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion9()!=null) {
							this.transaccion9sForeignKey.add(analisistransacliente.getTransaccion9());
						}

						this.addItemDefectoCombosForeignKeyTransaccion9();
						this.cargarCombosFrameTransaccion9sForeignKey("Todos");
					}
					this.setActualTransaccion9ForeignKey(this.analisistransacliente.getid_transaccion9(),false,"Formulario");

					//Transaccion10
					if(!this.analisistransaclienteConstantesFunciones.cargarid_transaccion10AnalisisTransaCliente || this.analisistransaclienteConstantesFunciones.event_dependid_transaccion10AnalisisTransaCliente) {
						//this.cargarCombosTransaccion10sForeignKeyLista(" where id="+this.analisistransacliente.getid_transaccion10());
									//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
						this.transaccion10sForeignKey=new ArrayList<Transaccion>();

						if(analisistransacliente.getTransaccion10()!=null) {
							this.transaccion10sForeignKey.add(analisistransacliente.getTransaccion10());
						}

						this.addItemDefectoCombosForeignKeyTransaccion10();
						this.cargarCombosFrameTransaccion10sForeignKey("Todos");
					}
					this.setActualTransaccion10ForeignKey(this.analisistransacliente.getid_transaccion10(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesAnalisisTransaCliente("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesAnalisisTransaCliente(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualAnalisisTransaCliente() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoAnalisisTransaCliente(analisistransacliente,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioAnalisisTransaCliente(analisistransacliente);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyAnalisisTransaCliente(analisistransacliente,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyAnalisisTransaCliente(analisistransacliente);
	}
	
	public void setVariablesObjetoActualToFormularioAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.setText(analisistransacliente.getId().toString());
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreanombreAnalisisTransaCliente.setText(analisistransacliente.getnombre());
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreadescripcionAnalisisTransaCliente.setText(analisistransacliente.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,AnalisisTransaCliente analisistransaclienteLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,analisistransaclienteLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,AnalisisTransaCliente analisistransaclienteLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				analisistransaclienteLocal=this.analisistransacliente;
			} else {
				analisistransaclienteLocal=this.analisistransaclienteAnterior;
			}
		}
		
		if(this.permiteMantenimiento(analisistransaclienteLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoAnalisisTransaCliente(analisistransaclienteLocal,true);
					
					if(analisistransaclienteSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(analisistransaclienteLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(analisistransaclienteLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(analisistransacliente,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(analisistransacliente);
	}
	
	public void setVariablesFormularioToObjetoActualAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(analisistransacliente,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.getText()==null || this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.getText()=="" || this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.getText()=="Id") {
				this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.setText("0");
			}

			if(conColumnasBase) {analisistransacliente.setId(Long.parseLong(this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AnalisisTransaClienteConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelIdAnalisisTransaCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			analisistransacliente.setnombre(this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreanombreAnalisisTransaCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelnombreAnalisisTransaCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			analisistransacliente.setdescripcion(this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreadescripcionAnalisisTransaCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabeldescripcionAnalisisTransaCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualAnalisisTransaCliente(AnalisisTransaCliente analisistransaclienteBean,AnalisisTransaCliente analisistransacliente,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion()!=null && !analisistransaclienteBean.getid_transaccion().equals(-1L))) {analisistransacliente.setid_transaccion(analisistransaclienteBean.getid_transaccion());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion1()!=null && !analisistransaclienteBean.getid_transaccion1().equals(null))) {analisistransacliente.setid_transaccion1(analisistransaclienteBean.getid_transaccion1());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion2()!=null && !analisistransaclienteBean.getid_transaccion2().equals(null))) {analisistransacliente.setid_transaccion2(analisistransaclienteBean.getid_transaccion2());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion3()!=null && !analisistransaclienteBean.getid_transaccion3().equals(null))) {analisistransacliente.setid_transaccion3(analisistransaclienteBean.getid_transaccion3());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion4()!=null && !analisistransaclienteBean.getid_transaccion4().equals(null))) {analisistransacliente.setid_transaccion4(analisistransaclienteBean.getid_transaccion4());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion5()!=null && !analisistransaclienteBean.getid_transaccion5().equals(null))) {analisistransacliente.setid_transaccion5(analisistransaclienteBean.getid_transaccion5());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion6()!=null && !analisistransaclienteBean.getid_transaccion6().equals(null))) {analisistransacliente.setid_transaccion6(analisistransaclienteBean.getid_transaccion6());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion7()!=null && !analisistransaclienteBean.getid_transaccion7().equals(null))) {analisistransacliente.setid_transaccion7(analisistransaclienteBean.getid_transaccion7());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion8()!=null && !analisistransaclienteBean.getid_transaccion8().equals(null))) {analisistransacliente.setid_transaccion8(analisistransaclienteBean.getid_transaccion8());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion9()!=null && !analisistransaclienteBean.getid_transaccion9().equals(null))) {analisistransacliente.setid_transaccion9(analisistransaclienteBean.getid_transaccion9());}
			if(conDefault || (!conDefault && analisistransaclienteBean.getid_transaccion10()!=null && !analisistransaclienteBean.getid_transaccion10().equals(null))) {analisistransacliente.setid_transaccion10(analisistransaclienteBean.getid_transaccion10());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosAnalisisTransaCliente(AnalisisTransaCliente analisistransaclienteOrigen,AnalisisTransaCliente analisistransacliente,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && analisistransaclienteOrigen.getId()!=null && !analisistransaclienteOrigen.getId().equals(0L))) {analisistransacliente.setId(analisistransaclienteOrigen.getId());}}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getnombre()!=null && !analisistransaclienteOrigen.getnombre().equals(""))) {analisistransacliente.setnombre(analisistransaclienteOrigen.getnombre());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getdescripcion()!=null && !analisistransaclienteOrigen.getdescripcion().equals(""))) {analisistransacliente.setdescripcion(analisistransaclienteOrigen.getdescripcion());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion()!=null && !analisistransaclienteOrigen.getid_transaccion().equals(-1L))) {analisistransacliente.setid_transaccion(analisistransaclienteOrigen.getid_transaccion());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion1()!=null && !analisistransaclienteOrigen.getid_transaccion1().equals(null))) {analisistransacliente.setid_transaccion1(analisistransaclienteOrigen.getid_transaccion1());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion2()!=null && !analisistransaclienteOrigen.getid_transaccion2().equals(null))) {analisistransacliente.setid_transaccion2(analisistransaclienteOrigen.getid_transaccion2());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion3()!=null && !analisistransaclienteOrigen.getid_transaccion3().equals(null))) {analisistransacliente.setid_transaccion3(analisistransaclienteOrigen.getid_transaccion3());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion4()!=null && !analisistransaclienteOrigen.getid_transaccion4().equals(null))) {analisistransacliente.setid_transaccion4(analisistransaclienteOrigen.getid_transaccion4());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion5()!=null && !analisistransaclienteOrigen.getid_transaccion5().equals(null))) {analisistransacliente.setid_transaccion5(analisistransaclienteOrigen.getid_transaccion5());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion6()!=null && !analisistransaclienteOrigen.getid_transaccion6().equals(null))) {analisistransacliente.setid_transaccion6(analisistransaclienteOrigen.getid_transaccion6());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion7()!=null && !analisistransaclienteOrigen.getid_transaccion7().equals(null))) {analisistransacliente.setid_transaccion7(analisistransaclienteOrigen.getid_transaccion7());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion8()!=null && !analisistransaclienteOrigen.getid_transaccion8().equals(null))) {analisistransacliente.setid_transaccion8(analisistransaclienteOrigen.getid_transaccion8());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion9()!=null && !analisistransaclienteOrigen.getid_transaccion9().equals(null))) {analisistransacliente.setid_transaccion9(analisistransaclienteOrigen.getid_transaccion9());}
			if(conDefault || (!conDefault && analisistransaclienteOrigen.getid_transaccion10()!=null && !analisistransaclienteOrigen.getid_transaccion10().equals(null))) {analisistransacliente.setid_transaccion10(analisistransaclienteOrigen.getid_transaccion10());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.setText(analisistransacliente.getId().toString());
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreanombreAnalisisTransaCliente.setText(analisistransacliente.getnombre());
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreadescripcionAnalisisTransaCliente.setText(analisistransacliente.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioAnalisisTransaCliente(AnalisisTransaClienteBean analisistransaclienteBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.setText(analisistransaclienteBean.getId().toString());
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreanombreAnalisisTransaCliente.setText(analisistransaclienteBean.getnombre());
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreadescripcionAnalisisTransaCliente.setText(analisistransaclienteBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanAnalisisTransaCliente(AnalisisTransaClienteParameterReturnGeneral analisistransaclienteReturnGeneral,AnalisisTransaClienteBean analisistransaclienteBean,Boolean conDefault) throws Exception { 
		try {
			AnalisisTransaCliente analisistransaclienteLocal=new AnalisisTransaCliente();
			
			analisistransaclienteLocal=analisistransaclienteReturnGeneral.getAnalisisTransaCliente();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && analisistransaclienteLocal.getId()!=null && !analisistransaclienteLocal.getId().equals(0L))) {analisistransaclienteBean.setId(analisistransaclienteLocal.getId());}}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getnombre()!=null && !analisistransaclienteLocal.getnombre().equals(""))) {analisistransaclienteBean.setnombre(analisistransaclienteLocal.getnombre());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getdescripcion()!=null && !analisistransaclienteLocal.getdescripcion().equals(""))) {analisistransaclienteBean.setdescripcion(analisistransaclienteLocal.getdescripcion());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion()!=null && !analisistransaclienteLocal.getid_transaccion().equals(-1L))) {analisistransaclienteBean.setid_transaccion(analisistransaclienteLocal.getid_transaccion());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion1()!=null && !analisistransaclienteLocal.getid_transaccion1().equals(null))) {analisistransaclienteBean.setid_transaccion1(analisistransaclienteLocal.getid_transaccion1());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion2()!=null && !analisistransaclienteLocal.getid_transaccion2().equals(null))) {analisistransaclienteBean.setid_transaccion2(analisistransaclienteLocal.getid_transaccion2());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion3()!=null && !analisistransaclienteLocal.getid_transaccion3().equals(null))) {analisistransaclienteBean.setid_transaccion3(analisistransaclienteLocal.getid_transaccion3());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion4()!=null && !analisistransaclienteLocal.getid_transaccion4().equals(null))) {analisistransaclienteBean.setid_transaccion4(analisistransaclienteLocal.getid_transaccion4());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion5()!=null && !analisistransaclienteLocal.getid_transaccion5().equals(null))) {analisistransaclienteBean.setid_transaccion5(analisistransaclienteLocal.getid_transaccion5());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion6()!=null && !analisistransaclienteLocal.getid_transaccion6().equals(null))) {analisistransaclienteBean.setid_transaccion6(analisistransaclienteLocal.getid_transaccion6());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion7()!=null && !analisistransaclienteLocal.getid_transaccion7().equals(null))) {analisistransaclienteBean.setid_transaccion7(analisistransaclienteLocal.getid_transaccion7());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion8()!=null && !analisistransaclienteLocal.getid_transaccion8().equals(null))) {analisistransaclienteBean.setid_transaccion8(analisistransaclienteLocal.getid_transaccion8());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion9()!=null && !analisistransaclienteLocal.getid_transaccion9().equals(null))) {analisistransaclienteBean.setid_transaccion9(analisistransaclienteLocal.getid_transaccion9());}
			if(conDefault || (!conDefault && analisistransaclienteLocal.getid_transaccion10()!=null && !analisistransaclienteLocal.getid_transaccion10().equals(null))) {analisistransaclienteBean.setid_transaccion10(analisistransaclienteLocal.getid_transaccion10());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxAnalisisTransaClienteGenerico(Long idAnalisisTransaClienteSeleccionado,JComboBox jComboBoxAnalisisTransaCliente,List<AnalisisTransaCliente> analisistransaclientesLocal)throws Exception {
		try {
			AnalisisTransaCliente  analisistransaclienteTemp=null;

			for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientesLocal) {
				if(analisistransaclienteAux.getId()!=null && analisistransaclienteAux.getId().equals(idAnalisisTransaClienteSeleccionado)) {
					analisistransaclienteTemp=analisistransaclienteAux;
					break;
				}
			}

			jComboBoxAnalisisTransaCliente.setSelectedItem(analisistransaclienteTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxAnalisisTransaClienteGenerico(JComboBox jComboBoxAnalisisTransaCliente,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxAnalisisTransaCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxAnalisisTransaCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxAnalisisTransaCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxAnalisisTransaCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxAnalisisTransaCliente.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxAnalisisTransaCliente.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxAnalisisTransaCliente.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxAnalisisTransaCliente.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxAnalisisTransaCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxAnalisisTransaCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			analisistransacliente=(AnalisisTransaCliente) analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			analisistransacliente =(AnalisisTransaCliente) analisistransaclientes.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("Transaccion")) {
			//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion_descripcion();
			}
		}

		if(sTipo.equals("Transaccion1")) {
			//sDescripcion=this.getActualTransaccion1ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion1_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion1ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion1_descripcion();
			}
		}

		if(sTipo.equals("Transaccion2")) {
			//sDescripcion=this.getActualTransaccion2ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion2_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion2ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion2_descripcion();
			}
		}

		if(sTipo.equals("Transaccion3")) {
			//sDescripcion=this.getActualTransaccion3ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion3_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion3ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion3_descripcion();
			}
		}

		if(sTipo.equals("Transaccion4")) {
			//sDescripcion=this.getActualTransaccion4ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion4_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion4ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion4_descripcion();
			}
		}

		if(sTipo.equals("Transaccion5")) {
			//sDescripcion=this.getActualTransaccion5ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion5_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion5ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion5_descripcion();
			}
		}

		if(sTipo.equals("Transaccion6")) {
			//sDescripcion=this.getActualTransaccion6ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion6_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion6ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion6_descripcion();
			}
		}

		if(sTipo.equals("Transaccion7")) {
			//sDescripcion=this.getActualTransaccion7ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion7_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion7ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion7_descripcion();
			}
		}

		if(sTipo.equals("Transaccion8")) {
			//sDescripcion=this.getActualTransaccion8ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion8_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion8ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion8_descripcion();
			}
		}

		if(sTipo.equals("Transaccion9")) {
			//sDescripcion=this.getActualTransaccion9ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion9_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion9ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion9_descripcion();
			}
		}

		if(sTipo.equals("Transaccion10")) {
			//sDescripcion=this.getActualTransaccion10ForeignKeyDescripcion((Long)value);
			if(!analisistransacliente.getIsNew() && !analisistransacliente.getIsChanged() && !analisistransacliente.getIsDeleted()) {
				sDescripcion=analisistransacliente.gettransaccion10_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccion10ForeignKeyDescripcion((Long)value);
				sDescripcion=analisistransacliente.gettransaccion10_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		AnalisisTransaCliente analisistransaclienteRow=new AnalisisTransaCliente();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			analisistransaclienteRow=(AnalisisTransaCliente) analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			analisistransaclienteRow=(AnalisisTransaCliente) analisistransaclientes.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualAnalisisTransaCliente(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaNuevoAnalisisTransaCliente && this.isPermisoNuevoAnalisisTransaCliente));			
			this.jButtonDuplicarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaDuplicarAnalisisTransaCliente && this.isPermisoDuplicarAnalisisTransaCliente));			
			this.jButtonCopiarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaCopiarAnalisisTransaCliente && this.isPermisoCopiarAnalisisTransaCliente));
			this.jButtonVerFormAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaVerFormAnalisisTransaCliente && this.isPermisoVerFormAnalisisTransaCliente));
			
			this.jButtonAbrirOrderByAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaOrdenAnalisisTransaCliente && this.isPermisoOrdenAnalisisTransaCliente));			
			
			this.jButtonNuevoRelacionesAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente && this.isPermisoNuevoAnalisisTransaCliente));			
			this.jButtonNuevoGuardarCambiosAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaNuevoAnalisisTransaCliente && this.isPermisoNuevoAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonModificarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaModificarAnalisisTransaCliente && this.isPermisoActualizarAnalisisTransaCliente));	
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaActualizarAnalisisTransaCliente && this.isPermisoActualizarAnalisisTransaCliente));	
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaEliminarAnalisisTransaCliente && this.isPermisoEliminarAnalisisTransaCliente));
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarAnalisisTransaCliente.setVisible(this.isVisibilidadCeldaCancelarAnalisisTransaCliente);							
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaGuardarAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));			
			
			}
						
			this.jButtonGuardarCambiosTablaAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaNuevoAnalisisTransaCliente && this.isPermisoNuevoAnalisisTransaCliente));						
			this.jButtonDuplicarToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaDuplicarAnalisisTransaCliente && this.isPermisoDuplicarAnalisisTransaCliente));						
			this.jButtonCopiarToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaCopiarAnalisisTransaCliente && this.isPermisoCopiarAnalisisTransaCliente));			
			this.jButtonVerFormToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaVerFormAnalisisTransaCliente && this.isPermisoVerFormAnalisisTransaCliente));			
			this.jButtonAbrirOrderByToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaOrdenAnalisisTransaCliente && this.isPermisoOrdenAnalisisTransaCliente));
			this.jButtonNuevoRelacionesToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente && this.isPermisoNuevoAnalisisTransaCliente));			
			this.jButtonNuevoGuardarCambiosToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaNuevoAnalisisTransaCliente && this.isPermisoNuevoAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));			
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonModificarToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaModificarAnalisisTransaCliente && this.isPermisoActualizarAnalisisTransaCliente));	
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaActualizarAnalisisTransaCliente  && this.isPermisoActualizarAnalisisTransaCliente));	
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaEliminarAnalisisTransaCliente && this.isPermisoEliminarAnalisisTransaCliente));
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarToolBarAnalisisTransaCliente.setVisible(this.isVisibilidadCeldaCancelarAnalisisTransaCliente);				
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaGuardarAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaNuevoAnalisisTransaCliente && this.isPermisoNuevoAnalisisTransaCliente));			
			this.jMenuItemDuplicarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaDuplicarAnalisisTransaCliente && this.isPermisoDuplicarAnalisisTransaCliente));			
			this.jMenuItemCopiarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaCopiarAnalisisTransaCliente && this.isPermisoCopiarAnalisisTransaCliente));			
			this.jMenuItemVerFormAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaVerFormAnalisisTransaCliente && this.isPermisoVerFormAnalisisTransaCliente));			
			this.jMenuItemAbrirOrderByAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaOrdenAnalisisTransaCliente && this.isPermisoOrdenAnalisisTransaCliente));			
			//this.jMenuItemMostrarOcultarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaOrdenAnalisisTransaCliente && this.isPermisoOrdenAnalisisTransaCliente));
			this.jMenuItemDetalleAbrirOrderByAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaOrdenAnalisisTransaCliente && this.isPermisoOrdenAnalisisTransaCliente));			
			//this.jMenuItemDetalleMostrarOcultarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaOrdenAnalisisTransaCliente && this.isPermisoOrdenAnalisisTransaCliente));			
			this.jMenuItemNuevoRelacionesAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente && this.isPermisoNuevoAnalisisTransaCliente));			
			this.jMenuItemNuevoGuardarCambiosAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaNuevoAnalisisTransaCliente && this.isPermisoNuevoAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));									
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemModificarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaModificarAnalisisTransaCliente && this.isPermisoActualizarAnalisisTransaCliente));	
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemActualizarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaActualizarAnalisisTransaCliente && this.isPermisoActualizarAnalisisTransaCliente));	
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemEliminarAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaEliminarAnalisisTransaCliente && this.isPermisoEliminarAnalisisTransaCliente));
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemCancelarAnalisisTransaCliente.setVisible(this.isVisibilidadCeldaCancelarAnalisisTransaCliente);				
			}
			
			this.jMenuItemGuardarCambiosAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaGuardarAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));						
			this.jMenuItemGuardarCambiosTablaAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=this.jButtonNuevoAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaDuplicarAnalisisTransaCliente=this.jButtonDuplicarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaCopiarAnalisisTransaCliente=this.jButtonCopiarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaVerFormAnalisisTransaCliente=this.jButtonVerFormAnalisisTransaCliente.isVisible();
			
			this.isVisibilidadCeldaOrdenAnalisisTransaCliente=this.jButtonAbrirOrderByAnalisisTransaCliente.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=this.jButtonNuevoRelacionesAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=this.jButtonModificarAnalisisTransaCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaGuardarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosAnalisisTransaCliente.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=this.jButtonGuardarCambiosTablaAnalisisTransaCliente.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=this.jButtonNuevoToolBarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=this.jButtonNuevoRelacionesToolBarAnalisisTransaCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonModificarToolBarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarToolBarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarToolBarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarToolBarAnalisisTransaCliente.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarAnalisisTransaCliente=this.jButtonGuardarCambiosToolBarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=this.jButtonGuardarCambiosTablaToolBarAnalisisTransaCliente.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=this.jMenuItemNuevoAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=this.jMenuItemNuevoRelacionesAnalisisTransaCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemModificarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemActualizarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemEliminarAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemCancelarAnalisisTransaCliente.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarAnalisisTransaCliente=this.jMenuItemGuardarCambiosAnalisisTransaCliente.isVisible();
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=this.jMenuItemGuardarCambiosTablaAnalisisTransaCliente.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesAnalisisTransaCliente(Boolean esInicializar) {
		if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {			
			if(this.analisistransaclienteSessionBean.getConGuardarRelaciones()) {
				//if(this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesAnalisisTransaCliente();
			}
			
			this.inicializarActualizarBindingBotonesManualAnalisisTransaCliente(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualAnalisisTransaCliente() {
		this.jButtonNuevoAnalisisTransaCliente.setVisible(this.isPermisoNuevoAnalisisTransaCliente);			
		this.jButtonDuplicarAnalisisTransaCliente.setVisible(this.isPermisoDuplicarAnalisisTransaCliente);			
		this.jButtonCopiarAnalisisTransaCliente.setVisible(this.isPermisoCopiarAnalisisTransaCliente);			
		this.jButtonVerFormAnalisisTransaCliente.setVisible(this.isPermisoVerFormAnalisisTransaCliente);			
		
		this.jButtonAbrirOrderByAnalisisTransaCliente.setVisible(this.isPermisoOrdenAnalisisTransaCliente);					
		
		this.jButtonNuevoRelacionesAnalisisTransaCliente.setVisible(this.isPermisoNuevoAnalisisTransaCliente);			
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonModificarAnalisisTransaCliente.setVisible(this.isPermisoActualizarAnalisisTransaCliente);	
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarAnalisisTransaCliente.setVisible(this.isPermisoActualizarAnalisisTransaCliente);	
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarAnalisisTransaCliente.setVisible(this.isPermisoEliminarAnalisisTransaCliente);
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarAnalisisTransaCliente.setVisible(this.isVisibilidadCeldaCancelarAnalisisTransaCliente);						
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosAnalisisTransaCliente.setVisible(this.isPermisoGuardarCambiosAnalisisTransaCliente);							
		}
		
		this.jButtonGuardarCambiosTablaAnalisisTransaCliente.setVisible(this.isPermisoActualizarAnalisisTransaCliente);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleAnalisisTransaCliente() {
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonModificarAnalisisTransaCliente.setVisible(this.isPermisoActualizarAnalisisTransaCliente);	
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarAnalisisTransaCliente.setVisible(this.isPermisoActualizarAnalisisTransaCliente);	
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarAnalisisTransaCliente.setVisible(this.isPermisoEliminarAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarAnalisisTransaCliente.setVisible(this.isVisibilidadCeldaCancelarAnalisisTransaCliente);							
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosAnalisisTransaCliente.setVisible((this.isVisibilidadCeldaGuardarAnalisisTransaCliente && this.isPermisoGuardarCambiosAnalisisTransaCliente));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosAnalisisTransaCliente() {
		if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualAnalisisTransaCliente();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesAnalisisTransaCliente() {
	}
	
	public void jTableDatosAnalisisTransaClienteListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarAnalisisTransaCliente(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidAnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.analisistransacliente.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaAnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaAnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.analisistransacliente.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloAnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloAnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.analisistransacliente.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreAnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.analisistransacliente.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionAnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.analisistransacliente.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccionAnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion=true;

			idTienePermisotransaccion=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccionBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion()!=null) {
					this.transaccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionBeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion());
					this.transaccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion=(TitledBorder)this.transaccionBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccionAnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion = "+this.analisistransacliente.getid_transaccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion1AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion1=true;

			idTienePermisotransaccion1=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion1) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion1BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion1BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion1BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion1()!=null) {
					this.transaccion1BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion1BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion1());
					this.transaccion1BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion1BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion1BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion1BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion1=(TitledBorder)this.transaccion1BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion1.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion1AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion1()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion1 = "+this.analisistransacliente.getid_transaccion1().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion2AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion2=true;

			idTienePermisotransaccion2=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion2) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion2BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion2BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion2BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion2()!=null) {
					this.transaccion2BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion2BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion2());
					this.transaccion2BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion2BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion2BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion2BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion2=(TitledBorder)this.transaccion2BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion2.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion2AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion2 = "+this.analisistransacliente.getid_transaccion2().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion3AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion3=true;

			idTienePermisotransaccion3=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion3) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion3BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion3BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion3BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion3()!=null) {
					this.transaccion3BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion3BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion3());
					this.transaccion3BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion3BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion3BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion3BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion3=(TitledBorder)this.transaccion3BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion3.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion3AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion3()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion3 = "+this.analisistransacliente.getid_transaccion3().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion4AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion4=true;

			idTienePermisotransaccion4=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion4) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion4BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion4BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion4BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion4()!=null) {
					this.transaccion4BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion4BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion4());
					this.transaccion4BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion4BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion4BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion4BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion4=(TitledBorder)this.transaccion4BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion4.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion4AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion4()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion4 = "+this.analisistransacliente.getid_transaccion4().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion5AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion5=true;

			idTienePermisotransaccion5=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion5) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion5BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion5BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion5BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion5()!=null) {
					this.transaccion5BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion5BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion5());
					this.transaccion5BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion5BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion5BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion5BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion5=(TitledBorder)this.transaccion5BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion5.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion5AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion5()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion5 = "+this.analisistransacliente.getid_transaccion5().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion6AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion6=true;

			idTienePermisotransaccion6=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion6) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion6BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion6BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion6BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion6()!=null) {
					this.transaccion6BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion6BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion6());
					this.transaccion6BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion6BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion6BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion6BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion6=(TitledBorder)this.transaccion6BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion6.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion6AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion6()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion6 = "+this.analisistransacliente.getid_transaccion6().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion7AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion7=true;

			idTienePermisotransaccion7=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion7) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion7BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion7BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion7BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion7()!=null) {
					this.transaccion7BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion7BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion7());
					this.transaccion7BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion7BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion7BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion7BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion7=(TitledBorder)this.transaccion7BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion7.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion7AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion7()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion7 = "+this.analisistransacliente.getid_transaccion7().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion8AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion8=true;

			idTienePermisotransaccion8=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion8) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion8BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion8BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion8BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion8()!=null) {
					this.transaccion8BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion8BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion8());
					this.transaccion8BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion8BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion8BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion8BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion8=(TitledBorder)this.transaccion8BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion8.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion8AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion8()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion8 = "+this.analisistransacliente.getid_transaccion8().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion9AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion9=true;

			idTienePermisotransaccion9=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion9) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion9BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion9BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion9BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion9()!=null) {
					this.transaccion9BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion9BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion9());
					this.transaccion9BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion9BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion9BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion9BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion9=(TitledBorder)this.transaccion9BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion9.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion9AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion9()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion9 = "+this.analisistransacliente.getid_transaccion9().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion10AnalisisTransaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion10=true;

			idTienePermisotransaccion10=this.tienePermisosUsuarioEnPaginaWebAnalisisTransaCliente(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion10) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAnalisisTransaCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAnalisisTransaCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);

				this.transaccion10BeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccion10BeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccion10BeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.analisistransaclienteLogic.getConnexion());

				if(this.analisistransacliente.getid_transaccion10()!=null) {
					this.transaccion10BeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccion10BeanSwingJInternalFrame.setIdActual(this.analisistransacliente.getid_transaccion10());
					this.transaccion10BeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccion10BeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccion10BeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccion10BeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAnalisisTransaCliente=(TitledBorder)this.jScrollPanelDatosAnalisisTransaCliente.getBorder();
				TitledBorder titledBordertransaccion10=(TitledBorder)this.transaccion10BeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion10.setTitle(titledBorderAnalisisTransaCliente.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion10AnalisisTransaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.getanalisistransacliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.analisistransacliente==null) {
						this.analisistransacliente = new AnalisisTransaCliente();
					}

					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);
				}

				if(this.analisistransacliente.getid_transaccion10()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion10 = "+this.analisistransacliente.getid_transaccion10().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAnalisisTransaCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorNombreAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesBusquedaPorNombre();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdEmpresa();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdModulo();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionAnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccion1AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion1();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccion10AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion10();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccion2AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion2();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccion4AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion4();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccion5AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion5();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccion6AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion6();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccion7AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion7();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccion8AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion8();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccion9AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccion9();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionTransaccio3AnalisisTransaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);

			this.getAnalisisTransaClientesFK_IdTransaccionTransaccio3();

			this.inicializarActualizarBindingAnalisisTransaCliente(false);

			//if(AnalisisTransaClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.analisistransaclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameAnalisisTransaCliente() {
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.setVisible(false);	    			
			this.jInternalFrameDetalleFormAnalisisTransaCliente.dispose();
			this.jInternalFrameDetalleFormAnalisisTransaCliente=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente!=null) {
			this.jInternalFrameReporteDinamicoAnalisisTransaCliente.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoAnalisisTransaCliente.dispose();
			this.jInternalFrameReporteDinamicoAnalisisTransaCliente=null;
		}
		
		if(this.jInternalFrameImportacionAnalisisTransaCliente!=null) {
			this.jInternalFrameImportacionAnalisisTransaCliente.setVisible(false);	    			
			this.jInternalFrameImportacionAnalisisTransaCliente.dispose();
			this.jInternalFrameImportacionAnalisisTransaCliente=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessAnalisisTransaCliente();
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
			
			if(sTipo.equals("NuevoAnalisisTransaCliente")) {
				jButtonNuevoAnalisisTransaClienteActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarAnalisisTransaCliente")) {
				jButtonDuplicarAnalisisTransaClienteActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarAnalisisTransaCliente")) {
				jButtonCopiarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("VerFormAnalisisTransaCliente")) {
				jButtonVerFormAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarAnalisisTransaCliente")) {
				jButtonNuevoAnalisisTransaClienteActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarAnalisisTransaCliente")) {
				jButtonDuplicarAnalisisTransaClienteActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoAnalisisTransaCliente")) {
				jButtonNuevoAnalisisTransaClienteActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarAnalisisTransaCliente")) {
				jButtonDuplicarAnalisisTransaClienteActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesAnalisisTransaCliente")) {
				jButtonNuevoAnalisisTransaClienteActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarAnalisisTransaCliente")) {
				jButtonNuevoAnalisisTransaClienteActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesAnalisisTransaCliente")) {
				jButtonNuevoAnalisisTransaClienteActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarAnalisisTransaCliente")) {
				jButtonModificarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarAnalisisTransaCliente")) {
				jButtonModificarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarAnalisisTransaCliente")) {
				jButtonModificarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("ActualizarAnalisisTransaCliente")) {
				jButtonActualizarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarAnalisisTransaCliente")) {
				jButtonActualizarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarAnalisisTransaCliente")) {
				jButtonActualizarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("EliminarAnalisisTransaCliente")) {
				jButtonEliminarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarAnalisisTransaCliente")) {
				jButtonEliminarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarAnalisisTransaCliente")) {
				jButtonEliminarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("CancelarAnalisisTransaCliente")) {
				jButtonCancelarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarAnalisisTransaCliente")) {
				jButtonCancelarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarAnalisisTransaCliente")) {
				jButtonCancelarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("CerrarAnalisisTransaCliente")) {
				jButtonCerrarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarAnalisisTransaCliente")) {
				jButtonCerrarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarAnalisisTransaCliente")) {
				jButtonCerrarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarAnalisisTransaCliente")) {
				jButtonMostrarOcultarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarAnalisisTransaCliente")) {
				jButtonCancelarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosAnalisisTransaCliente")) {
				jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarAnalisisTransaCliente")) {
				jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarAnalisisTransaCliente")) {
				jButtonCopiarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarAnalisisTransaCliente")) {
				jButtonVerFormAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosAnalisisTransaCliente")) {
				jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarAnalisisTransaCliente")) {
				jButtonCopiarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormAnalisisTransaCliente")) {
				jButtonVerFormAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaAnalisisTransaCliente")) {
				jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarAnalisisTransaCliente")) {
				jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaAnalisisTransaCliente")) {
				jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionAnalisisTransaCliente")) {
				jButtonRecargarInformacionAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarAnalisisTransaCliente")) {
				jButtonRecargarInformacionAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionAnalisisTransaCliente")) {
				jButtonRecargarInformacionAnalisisTransaClienteActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresAnalisisTransaCliente")) {
				jButtonAnterioresAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarAnalisisTransaCliente")) {
				jButtonAnterioresAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreAnalisisTransaCliente")) {
				jButtonAnterioresAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("SiguientesAnalisisTransaCliente")) {
				jButtonSiguientesAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarAnalisisTransaCliente")) {
				jButtonSiguientesAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesAnalisisTransaCliente")) {
				jButtonSiguientesAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByAnalisisTransaCliente") || sTipo.equals("MenuItemDetalleAbrirOrderByAnalisisTransaCliente")) {
				jButtonAbrirOrderByAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarAnalisisTransaCliente") || sTipo.equals("MenuItemDetalleMostrarOcultarAnalisisTransaCliente")) {
				jButtonMostrarOcultarAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosAnalisisTransaCliente")) {
				jButtonNuevoGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarAnalisisTransaCliente")) {
				jButtonNuevoGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosAnalisisTransaCliente")) {
				jButtonNuevoGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoAnalisisTransaCliente")) {
				jButtonCerrarReporteDinamicoAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoAnalisisTransaCliente")) {
				jButtonGenerarReporteDinamicoAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoAnalisisTransaCliente")) {
				
				jButtonGenerarExcelReporteDinamicoAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionAnalisisTransaCliente")) {
				jButtonCerrarImportacionAnalisisTransaClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionAnalisisTransaCliente")) {
				
				jButtonGenerarImportacionAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionAnalisisTransaCliente")) {
				
				jButtonAbrirImportacionAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesAnalisisTransaCliente")) {
				jComboBoxTiposAccionesAnalisisTransaClienteActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesAnalisisTransaCliente")) {
				jComboBoxTiposRelacionesAnalisisTransaClienteActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioAnalisisTransaCliente")) {
				jComboBoxTiposAccionesAnalisisTransaClienteActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarAnalisisTransaCliente")) {
				
				jComboBoxTiposSeleccionarAnalisisTransaClienteActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralAnalisisTransaCliente")) {
				jTextFieldValorCampoGeneralAnalisisTransaClienteActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByAnalisisTransaCliente")) {
				jButtonAbrirOrderByAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarAnalisisTransaCliente")) {
				jButtonAbrirOrderByAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByAnalisisTransaCliente")) {
				jButtonCerrarOrderByAnalisisTransaClienteActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idAnalisisTransaClienteBusqueda")) {
				this.jButtonidAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaAnalisisTransaClienteUpdate")) {
				this.jButtonid_empresaAnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaAnalisisTransaClienteBusqueda")) {
				this.jButtonid_empresaAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloAnalisisTransaClienteUpdate")) {
				this.jButtonid_moduloAnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloAnalisisTransaClienteBusqueda")) {
				this.jButtonid_moduloAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreAnalisisTransaClienteBusqueda")) {
				this.jButtonnombreAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionAnalisisTransaClienteBusqueda")) {
				this.jButtondescripcionAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionAnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccionAnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionAnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccionAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion1AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion1AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion1AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion1AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion2AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion2AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion2AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion2AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion3AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion3AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion3AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion3AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion4AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion4AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion4AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion4AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion5AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion5AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion5AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion5AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion6AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion6AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion6AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion6AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion7AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion7AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion7AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion7AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion8AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion8AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion8AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion8AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion9AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion9AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion9AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion9AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion10AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion10AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion10AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion10AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("BusquedaPorNombreAnalisisTransaCliente")) {
				this.jButtonBusquedaPorNombreAnalisisTransaClienteActionPerformed(evt);
			}
			
			;
			
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessAnalisisTransaCliente();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				


				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			AnalisisTransaCliente analisistransaclienteLocal=null;
			
			if(!this.getEsControlTabla()) {
				analisistransaclienteLocal=this.analisistransacliente;
			} else {
				analisistransaclienteLocal=this.analisistransaclienteAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
							
				
				


				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAnalisisTransaClienteActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
								
						
				


				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
								
				
				


				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAnalisisTransaClienteActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
							
				
				


				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
								
				
				


				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAnalisisTransaClienteActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAnalisisTransaClienteActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosAnalisisTransaCliente")) {
					jCheckBoxSeleccionarTodosAnalisisTransaClienteItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosAnalisisTransaCliente")) {
					jCheckBoxSeleccionadosAnalisisTransaClienteItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarAnalisisTransaCliente")) {
					
				}
				
				


				
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
												
				
				


				
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAnalisisTransaClienteActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.analisistransacliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.analisistransacliente);
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AnalisisTransaCliente.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AnalisisTransaCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAnalisisTransaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.analisistransaclienteAnterior =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarAnalisisTransaCliente")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosAnalisisTransaClienteListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosAnalisisTransaCliente.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.analisistransacliente =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.analisistransacliente);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarAnalisisTransaCliente")) {
				
				}
				
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarAnalisisTransaCliente")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosAnalisisTransaCliente.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarAnalisisTransaCliente")) {
			
			}
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessAnalisisTransaCliente();
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
			if(sTipo.equals("NuevoAnalisisTransaCliente")) {
				jButtonNuevoAnalisisTransaClienteActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarAnalisisTransaCliente")) {
				jButtonDuplicarAnalisisTransaClienteActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarAnalisisTransaCliente")) {
				jButtonCopiarAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormAnalisisTransaCliente")) {
				jButtonVerFormAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesAnalisisTransaCliente")) {
				jButtonNuevoAnalisisTransaClienteActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarAnalisisTransaCliente")) {
				jButtonModificarAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarAnalisisTransaCliente")) {
				jButtonActualizarAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarAnalisisTransaCliente")) {
				jButtonEliminarAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaAnalisisTransaCliente")) {
				jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarAnalisisTransaCliente")) {
				jButtonCancelarAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarAnalisisTransaCliente")) {
				jButtonCerrarAnalisisTransaClienteActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosAnalisisTransaCliente")) {
				jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosAnalisisTransaCliente")) {
				jButtonNuevoGuardarCambiosAnalisisTransaClienteActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByAnalisisTransaCliente")) {
				jButtonAbrirOrderByAnalisisTransaClienteActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionAnalisisTransaCliente")) {
				jButtonRecargarInformacionAnalisisTransaClienteActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresAnalisisTransaCliente")) {
				jButtonAnterioresAnalisisTransaClienteActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesAnalisisTransaCliente")) {
				jButtonSiguientesAnalisisTransaClienteActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idAnalisisTransaClienteBusqueda")) {
				this.jButtonidAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaAnalisisTransaClienteUpdate")) {
				this.jButtonid_empresaAnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaAnalisisTransaClienteBusqueda")) {
				this.jButtonid_empresaAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloAnalisisTransaClienteUpdate")) {
				this.jButtonid_moduloAnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloAnalisisTransaClienteBusqueda")) {
				this.jButtonid_moduloAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreAnalisisTransaClienteBusqueda")) {
				this.jButtonnombreAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionAnalisisTransaClienteBusqueda")) {
				this.jButtondescripcionAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionAnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccionAnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionAnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccionAnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion1AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion1AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion1AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion1AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion2AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion2AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion2AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion2AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion3AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion3AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion3AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion3AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion4AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion4AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion4AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion4AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion5AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion5AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion5AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion5AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion6AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion6AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion6AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion6AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion7AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion7AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion7AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion7AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion8AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion8AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion8AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion8AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion9AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion9AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion9AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion9AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion10AnalisisTransaClienteUpdate")) {
				this.jButtonid_transaccion10AnalisisTransaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion10AnalisisTransaClienteBusqueda")) {
				this.jButtonid_transaccion10AnalisisTransaClienteBusquedaActionPerformed(evt);
			}
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessAnalisisTransaCliente();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameAnalisisTransaCliente")) {
				closingInternalFrameAnalisisTransaCliente();
				
			} else if(sTipo.equals("jButtonCancelarAnalisisTransaCliente")) {
				JInternalFrameBase jInternalFrameDetalleFormAnalisisTransaCliente = (JInternalFrameBase)evt.getSource();
	            	
	            AnalisisTransaClienteBeanSwingJInternalFrame jInternalFrameParent=(AnalisisTransaClienteBeanSwingJInternalFrame)jInternalFrameDetalleFormAnalisisTransaCliente.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarAnalisisTransaClienteActionPerformed(null);
			}
			
			AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.analisistransacliente,new Object(),this.analisistransaclienteParameterGeneral,this.analisistransaclienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormAnalisisTransaCliente(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormAnalisisTransaCliente(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormAnalisisTransaCliente(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.analisistransacliente)) {
			if(!esControlTabla) {
				if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);			
				}
				
				if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualAnalisisTransaCliente(this.analisistransacliente,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.analisistransaclienteReturnGeneral=analisistransaclienteLogic.procesarEventosAnalisisTransaClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.analisistransaclienteLogic.getAnalisisTransaClientes(),this.analisistransacliente,this.analisistransaclienteParameterGeneral,this.isEsNuevoAnalisisTransaCliente,classes);//this.analisistransaclienteLogic.getAnalisisTransaCliente()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanAnalisisTransaCliente(this.analisistransaclienteReturnGeneral,this.analisistransaclienteBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanAnalisisTransaCliente(classes,this.analisistransaclienteReturnGeneral,this.analisistransaclienteBean,false);
					}
						
					if(this.analisistransaclienteReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyAnalisisTransaCliente(this.analisistransaclienteReturnGeneral.getAnalisisTransaCliente());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioAnalisisTransaCliente(this.analisistransaclienteReturnGeneral.getAnalisisTransaCliente());	
					}
						
					if(this.analisistransaclienteReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioAnalisisTransaCliente(this.analisistransaclienteReturnGeneral.getAnalisisTransaCliente(),classes);//this.analisistransaclienteBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioAnalisisTransaCliente(this.analisistransacliente,classes);//this.analisistransaclienteBean);									
				}
			
				if(AnalisisTransaClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualAnalisisTransaCliente(this.analisistransacliente,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysAnalisisTransaCliente(this.analisistransacliente);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.analisistransaclienteAnterior!=null) {
						this.analisistransacliente=this.analisistransaclienteAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.analisistransaclienteReturnGeneral=analisistransaclienteLogic.procesarEventosAnalisisTransaClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.analisistransaclienteLogic.getAnalisisTransaClientes(),this.analisistransacliente,this.analisistransaclienteParameterGeneral,this.isEsNuevoAnalisisTransaCliente,classes);//this.analisistransaclienteLogic.getAnalisisTransaCliente()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.analisistransaclienteSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.analisistransaclienteSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.analisistransaclienteReturnGeneral.getAnalisisTransaCliente(),analisistransaclienteLogic.getAnalisisTransaClientes());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.analisistransaclienteReturnGeneral.getAnalisisTransaCliente(),this.analisistransaclientes);
				}
				//ARCHITECTURE
				
				//this.jTableDatosAnalisisTransaCliente.repaint();
				
				//((AbstractTableModel) this.jTableDatosAnalisisTransaCliente.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosAnalisisTransaCliente();
			}
		}
	}
	
	public void actualizarVisualTableDatosAnalisisTransaCliente() throws Exception {
		
		AnalisisTransaClienteModel analisistransaclienteModel=(AnalisisTransaClienteModel)this.jTableDatosAnalisisTransaCliente.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			analisistransaclienteModel.analisistransaclientes=this.analisistransaclienteLogic.getAnalisisTransaClientes();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			analisistransaclienteModel.analisistransaclientes=this.analisistransaclientes;
		}
		
		
		((AnalisisTransaClienteModel) this.jTableDatosAnalisisTransaCliente.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaAnalisisTransaCliente() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getanalisistransaclienteAnterior(),this.analisistransaclienteLogic.getAnalisisTransaClientes());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getanalisistransaclienteAnterior(),this.analisistransaclientes);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosAnalisisTransaCliente();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.analisistransacliente,new Object(),generalEntityParameterGeneral,this.analisistransaclienteReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.analisistransaclienteSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=AnalisisTransaClienteConstantesFunciones.getClassesRelationshipsOfAnalisisTransaCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=AnalisisTransaClienteConstantesFunciones.getClassesRelationshipsFromStringsOfAnalisisTransaCliente(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormAnalisisTransaCliente(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				AnalisisTransaClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.analisistransacliente,new Object(),generalEntityParameterGeneral,this.analisistransaclienteReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioAnalisisTransaCliente(AnalisisTransaClienteBean analisistransaclienteBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanAnalisisTransaCliente(ArrayList<Classe> classes,AnalisisTransaClienteReturnGeneral analisistransaclienteReturnGeneral,AnalisisTransaClienteBean analisistransaclienteBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.analisistransacliente)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente = new AnalisisTransaClienteDetalleFormJInternalFrame(jDesktopPane,this.analisistransaclienteSessionBean.getConGuardarRelaciones(),this.analisistransaclienteSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.setVisible(false);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.setSelected(false);						
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.analisistransaclienteLogic=this.analisistransaclienteLogic;
		
		this.cargarCombosFrameForeignKeyAnalisisTransaCliente("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleAnalisisTransaCliente();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleAnalisisTransaCliente();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyAnalisisTransaCliente("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyAnalisisTransaCliente();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarAnalisisTransaCliente"));
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonModificarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"ModificarAnalisisTransaCliente"));

		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonModificarToolBarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"ModificarToolBarAnalisisTransaCliente"));
					
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemModificarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"MenuItemModificarAnalisisTransaCliente"));		
		
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"ActualizarAnalisisTransaCliente"));
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarToolBarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"ActualizarToolBarAnalisisTransaCliente"));
						
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemActualizarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemActualizarAnalisisTransaCliente"));		
		
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"EliminarAnalisisTransaCliente"));
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"EliminarToolBarAnalisisTransaCliente"));
								
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemEliminarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemEliminarAnalisisTransaCliente"));		
		
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"CancelarAnalisisTransaCliente"));
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"CancelarToolBarAnalisisTransaCliente"));
					
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemCancelarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemCancelarAnalisisTransaCliente"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemDetalleCerrarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarAnalisisTransaCliente"));		
		
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarAnalisisTransaCliente"));
		
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarAnalisisTransaCliente"));
		
		
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioAnalisisTransaCliente"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonidAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"idAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_empresaAnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaAnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_empresaAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_moduloAnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_moduloAnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_moduloAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloAnalisisTransaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonnombreAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombreAnalisisTransaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtondescripcionAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"descripcionAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccionAnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionAnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccionAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion1AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion1AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion1AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion1AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion2AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion2AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion2AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion2AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion3AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion3AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion3AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion3AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion4AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion4AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion4AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion4AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion5AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion5AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion5AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion5AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion6AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion6AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion6AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion6AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion7AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion7AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion7AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion7AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion8AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion8AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion8AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion8AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion9AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion9AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion9AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion9AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion10AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion10AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion10AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion10AnalisisTransaClienteBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jTabbedPaneRelacionesAnalisisTransaCliente.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesAnalisisTransaCliente"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameAnalisisTransaCliente"));
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarAnalisisTransaCliente"));
		}
		
		this.jTableDatosAnalisisTransaCliente.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarAnalisisTransaCliente"));
		
		this.jTableDatosAnalisisTransaCliente.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarAnalisisTransaCliente"));
		
		this.jButtonNuevoAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"NuevoAnalisisTransaCliente"));
		
		this.jButtonDuplicarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"DuplicarAnalisisTransaCliente"));
		
		this.jButtonCopiarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"CopiarAnalisisTransaCliente"));
		
		this.jButtonVerFormAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"VerFormAnalisisTransaCliente"));
		
		
		this.jButtonNuevoToolBarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"NuevoToolBarAnalisisTransaCliente"));
			
		this.jButtonDuplicarToolBarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"DuplicarToolBarAnalisisTransaCliente"));
			
		this.jMenuItemNuevoAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemNuevoAnalisisTransaCliente"));
			
		this.jMenuItemDuplicarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarAnalisisTransaCliente"));		
		
		
		this.jButtonNuevoRelacionesAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"NuevoRelacionesAnalisisTransaCliente"));
		
		
		this.jButtonNuevoRelacionesToolBarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarAnalisisTransaCliente"));
			
		this.jMenuItemNuevoRelacionesAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesAnalisisTransaCliente"));		
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonModificarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"ModificarAnalisisTransaCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonModificarToolBarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"ModificarToolBarAnalisisTransaCliente"));
			
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemModificarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"MenuItemModificarAnalisisTransaCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"ActualizarAnalisisTransaCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonActualizarToolBarAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"ActualizarToolBarAnalisisTransaCliente"));
				
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemActualizarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemActualizarAnalisisTransaCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"EliminarAnalisisTransaCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonEliminarToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"EliminarToolBarAnalisisTransaCliente"));
						
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemEliminarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemEliminarAnalisisTransaCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"CancelarAnalisisTransaCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonCancelarToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"CancelarToolBarAnalisisTransaCliente"));
			
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemCancelarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemCancelarAnalisisTransaCliente"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarAnalisisTransaCliente"));		
		
		
		this.jButtonCerrarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"CerrarAnalisisTransaCliente"));
		
		
		this.jButtonCerrarToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"CerrarToolBarAnalisisTransaCliente"));
			
		this.jMenuItemCerrarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemCerrarAnalisisTransaCliente"));
			
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jMenuItemDetalleCerrarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarAnalisisTransaCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosAnalisisTransaCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarAnalisisTransaCliente"));
		}
		
		this.jButtonCopiarToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"CopiarToolBarAnalisisTransaCliente"));
			
		this.jButtonVerFormToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"VerFormToolBarAnalisisTransaCliente"));
		
		this.jMenuItemGuardarCambiosAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosAnalisisTransaCliente"));
			
		this.jMenuItemCopiarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemCopiarAnalisisTransaCliente"));		
		
		this.jMenuItemVerFormAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemVerFormAnalisisTransaCliente"));		
		
		
		this.jButtonGuardarCambiosTablaAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaAnalisisTransaCliente"));
		
		
		this.jButtonGuardarCambiosTablaToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarAnalisisTransaCliente"));
			
		this.jMenuItemGuardarCambiosTablaAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaAnalisisTransaCliente"));		
		
		
		
		this.jButtonRecargarInformacionAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"RecargarInformacionAnalisisTransaCliente"));
					
		this.jButtonRecargarInformacionToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarAnalisisTransaCliente"));
		
		this.jMenuItemRecargarInformacionAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionAnalisisTransaCliente"));		
		
		
		
		this.jButtonAnterioresAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"AnterioresAnalisisTransaCliente"));
		
		
		this.jButtonAnterioresToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"AnterioresToolBarAnalisisTransaCliente"));
		
		this.jMenuItemAnterioresAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresAnalisisTransaCliente"));		
		
		
		this.jButtonSiguientesAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"SiguientesAnalisisTransaCliente"));
		
		
		this.jButtonSiguientesToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"SiguientesToolBarAnalisisTransaCliente"));
			
		this.jMenuItemSiguientesAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesAnalisisTransaCliente"));
			
		this.jMenuItemAbrirOrderByAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByAnalisisTransaCliente"));
			
		this.jMenuItemMostrarOcultarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarAnalisisTransaCliente"));
			
		this.jMenuItemDetalleAbrirOrderByAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByAnalisisTransaCliente"));
			
		this.jMenuItemDetalleMostarOcultarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarAnalisisTransaCliente"));		
		
		
		this.jButtonNuevoGuardarCambiosAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosAnalisisTransaCliente"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarAnalisisTransaCliente"));
			
		this.jMenuItemNuevoGuardarCambiosAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosAnalisisTransaCliente"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosAnalisisTransaCliente.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosAnalisisTransaCliente"));

		this.jCheckBoxSeleccionadosAnalisisTransaCliente.addItemListener(new CheckBoxItemListener(this,"SeleccionadosAnalisisTransaCliente"));
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioAnalisisTransaCliente"));
		}
		
		
		this.jComboBoxTiposRelacionesAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"TiposRelacionesAnalisisTransaCliente"));
			
		this.jComboBoxTiposAccionesAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesAnalisisTransaCliente"));
					
		this.jComboBoxTiposSeleccionarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"TiposSeleccionarAnalisisTransaCliente"));
			
		this.jTextFieldValorCampoGeneralAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralAnalisisTransaCliente"));		
		
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonidAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"idAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_empresaAnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaAnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_empresaAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_moduloAnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_moduloAnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_moduloAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloAnalisisTransaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonnombreAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombreAnalisisTransaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtondescripcionAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"descripcionAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccionAnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionAnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccionAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion1AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion1AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion1AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion1AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion2AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion2AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion2AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion2AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion3AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion3AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion3AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion3AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion4AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion4AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion4AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion4AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion5AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion5AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion5AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion5AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion6AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion6AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion6AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion6AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion7AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion7AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion7AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion7AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion8AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion8AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion8AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion8AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion9AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion9AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion9AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion9AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion10AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion10AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion10AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion10AnalisisTransaClienteBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorNombreAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreAnalisisTransaCliente"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoAnalisisTransaCliente!=null) {
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoAnalisisTransaCliente"));
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoAnalisisTransaCliente"));
				this.jInternalFrameReporteDinamicoAnalisisTransaCliente.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoAnalisisTransaCliente"));
			}
			
			//this.jButtonCerrarReporteDinamicoAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoAnalisisTransaCliente"));				
			//this.jButtonGenerarReporteDinamicoAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoAnalisisTransaCliente"));
			//this.jButtonGenerarExcelReporteDinamicoAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoAnalisisTransaCliente"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionAnalisisTransaCliente!=null) {
				this.jInternalFrameImportacionAnalisisTransaCliente.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionAnalisisTransaCliente"));
				this.jInternalFrameImportacionAnalisisTransaCliente.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionAnalisisTransaCliente"));
				this.jInternalFrameImportacionAnalisisTransaCliente.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionAnalisisTransaCliente"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"AbrirOrderByAnalisisTransaCliente"));
			
			this.jButtonAbrirOrderByToolBarAnalisisTransaCliente.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarAnalisisTransaCliente"));			
			
			if(this.jInternalFrameOrderByAnalisisTransaCliente!=null) {
				this.jInternalFrameOrderByAnalisisTransaCliente.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByAnalisisTransaCliente"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAnalisisTransaCliente.jTabbedPaneRelacionesAnalisisTransaCliente.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesAnalisisTransaCliente"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameAnalisisTransaCliente();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormAnalisisTransaCliente = (JInternalFrameBase)event.getSource();
	            	
	            AnalisisTransaClienteBeanSwingJInternalFrame jInternalFrameParent=(AnalisisTransaClienteBeanSwingJInternalFrame)jInternalFrameDetalleFormAnalisisTransaCliente.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarAnalisisTransaClienteActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosAnalisisTransaCliente.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosAnalisisTransaClienteListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosAnalisisTransaCliente.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosAnalisisTransaCliente.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAnalisisTransaClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAnalisisTransaClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAnalisisTransaClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoAnalisisTransaCliente";
		inputMap = this.jButtonNuevoAnalisisTransaCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoAnalisisTransaCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoAnalisisTransaClienteActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAnalisisTransaClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAnalisisTransaClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAnalisisTransaClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesAnalisisTransaCliente";
		inputMap = this.jButtonNuevoRelacionesAnalisisTransaCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesAnalisisTransaCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoAnalisisTransaClienteActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarAnalisisTransaCliente";
		inputMap = this.jButtonModificarAnalisisTransaCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarAnalisisTransaCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarAnalisisTransaClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarAnalisisTransaCliente";
		inputMap = this.jButtonActualizarAnalisisTransaCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarAnalisisTransaCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarAnalisisTransaClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarAnalisisTransaCliente";
		inputMap = this.jButtonEliminarAnalisisTransaCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarAnalisisTransaCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarAnalisisTransaClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarAnalisisTransaCliente";
		inputMap = this.jButtonCancelarAnalisisTransaCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarAnalisisTransaCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarAnalisisTransaClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarAnalisisTransaCliente";
		inputMap = this.jButtonCerrarAnalisisTransaCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarAnalisisTransaCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarAnalisisTransaClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosAnalisisTransaCliente";
		inputMap = this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosAnalisisTransaCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonGuardarCambiosAnalisisTransaCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosAnalisisTransaClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosAnalisisTransaCliente.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosAnalisisTransaClienteItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesAnalisisTransaCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesAnalisisTransaClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarAnalisisTransaCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarAnalisisTransaClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralAnalisisTransaCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralAnalisisTransaClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonidAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"idAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_empresaAnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaAnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_empresaAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_moduloAnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_moduloAnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_moduloAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloAnalisisTransaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonnombreAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombreAnalisisTransaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtondescripcionAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"descripcionAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccionAnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionAnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccionAnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionAnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion1AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion1AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion1AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion1AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion2AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion2AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion2AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion2AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion3AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion3AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion3AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion3AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion4AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion4AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion4AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion4AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion5AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion5AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion5AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion5AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion6AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion6AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion6AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion6AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion7AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion7AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion7AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion7AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion8AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion8AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion8AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion8AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion9AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion9AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion9AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion9AnalisisTransaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion10AnalisisTransaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion10AnalisisTransaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jButtonid_transaccion10AnalisisTransaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion10AnalisisTransaClienteBusqueda"));
		
		
		this.jButtonBusquedaPorNombreAnalisisTransaCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreAnalisisTransaCliente"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionAnalisisTransaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionAnalisisTransaClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarAnalisisTransaClienteActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarAnalisisTransaCliente.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosAnalisisTransaCliente(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclienteLogic.getAnalisisTransaClientes()) {
					analisistransaclienteAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientes) {
					analisistransaclienteAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosAnalisisTransaClienteItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclienteLogic.getAnalisisTransaClientes()) {
						analisistransaclienteAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientes) {
						analisistransaclienteAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclienteLogic.getAnalisisTransaClientes()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientes) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosAnalisisTransaCliente.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosAnalisisTransaCliente.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosAnalisisTransaClienteItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosAnalisisTransaCliente.getSelectedRows();
			
			AnalisisTransaCliente analisistransaclienteLocal=new AnalisisTransaCliente();
			
			//this.seleccionarTodosAnalisisTransaCliente(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					analisistransaclienteLocal =(AnalisisTransaCliente) this.analisistransaclienteLogic.getAnalisisTransaClientes().toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					analisistransaclienteLocal =(AnalisisTransaCliente) this.analisistransaclientes.toArray()[this.jTableDatosAnalisisTransaCliente.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				analisistransaclienteLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclienteLogic.getAnalisisTransaClientes()) {
						analisistransaclienteAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientes) {
						analisistransaclienteAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosAnalisisTransaCliente.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosAnalisisTransaCliente.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosAnalisisTransaCliente,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualAnalisisTransaClienteItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarAnalisisTransaClienteParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralAnalisisTransaClienteActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralAnalisisTransaCliente.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclienteLogic.getAnalisisTransaClientes()) {
				
						if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							analisistransaclienteAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							analisistransaclienteAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientes) {
					
						if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							analisistransaclienteAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							analisistransaclienteAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesAnalisisTransaClienteActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioAnalisisTransaCliente=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesAnalisisTransaCliente.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteAnalisisTransaCliente) {				
					conSplash=true;//false;										
					
					//this.startProcessAnalisisTransaCliente(conSplash);
				
					this.generarReporteAnalisisTransaClientesSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoAnalisisTransaClientesSeleccionados();
				//this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoAnalisisTransaClientesSeleccionados(false);
				//this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoAnalisisTransaClientesSeleccionados(true);
				//this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessAnalisisTransaCliente();
				
				this.exportarAnalisisTransaClientesSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionAnalisisTransaClientes();
				//this.importarAnalisisTransaClientes();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessAnalisisTransaCliente();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelAnalisisTransaClientesSeleccionados();
				//this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Analisis Transaccion Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessAnalisisTransaCliente();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoAnalisisTransaCliente)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyAnalisisTransaCliente(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.setSelectedIndex(0);					
				}	
			} 			
			else if(AnalisisTransaClienteBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteAnalisisTransaCliente) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessAnalisisTransaCliente(conSplash);
					
						//this.actualizarParametrosGeneralAnalisisTransaCliente();
						
						this.generarReporteProcesoAccionAnalisisTransaClientesSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(AnalisisTransaClienteBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Analisis Transaccion ClienteES SELECCIONADOS?", "MANTENIMIENTO DE Analisis Transaccion Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessAnalisisTransaCliente();
				
						this.actualizarParametrosGeneralAnalisisTransaCliente();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.analisistransaclienteReturnGeneral=analisistransaclienteLogic.procesarAccionAnalisisTransaClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.analisistransaclienteLogic.getAnalisisTransaClientes(),this.analisistransaclienteParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarAnalisisTransaClienteReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralAnalisisTransaCliente();
					
					AnalisisTransaClienteBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarAnalisisTransaClienteReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesAnalisisTransaCliente.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxTiposAccionesFormularioAnalisisTransaCliente.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessAnalisisTransaCliente(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesAnalisisTransaClienteActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessAnalisisTransaCliente();
			
			if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();		
			AnalisisTransaCliente analisistransacliente=new AnalisisTransaCliente();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingAnalisisTransaCliente(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesAnalisisTransaCliente.getSelectedItem();
			
			
			
			
			analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
			//this.sTipoAccion;
			
			if(analisistransaclientesSeleccionados.size()==1) {
				for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientesSeleccionados) {
					analisistransacliente=analisistransaclienteAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessAnalisisTransaCliente();
			
      		//this.finishProcessAnalisisTransaCliente(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarAnalisisTransaClienteReturnGeneral() throws Exception {
		if(this.analisistransaclienteReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.analisistransaclienteReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.analisistransaclienteReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.analisistransaclienteReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.analisistransaclienteReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.analisistransaclienteReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingAnalisisTransaCliente(false);
		}
		
		if(this.analisistransaclienteReturnGeneral.getConRetornoLista() || this.analisistransaclienteReturnGeneral.getConRetornoObjeto()) {
			if(this.analisistransaclienteReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.analisistransaclienteLogic.setAnalisisTransaClientes(this.analisistransaclienteReturnGeneral.getAnalisisTransaClientes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.analisistransaclienteReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.analisistransaclienteLogic.setAnalisisTransaCliente(this.analisistransaclienteReturnGeneral.getAnalisisTransaCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingAnalisisTransaCliente(false);
		}
	}
	
	public void actualizarParametrosGeneralAnalisisTransaCliente() throws Exception {
		
		
	}
	
	public ArrayList<AnalisisTransaCliente> getAnalisisTransaClientesSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioAnalisisTransaCliente) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclienteLogic.getAnalisisTransaClientes()) {
					if(analisistransaclienteAux.getIsSelected()) {
						analisistransaclientesSeleccionados.add(analisistransaclienteAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AnalisisTransaCliente analisistransaclienteAux:this.analisistransaclientes) {
					if(analisistransaclienteAux.getIsSelected()) {
						analisistransaclientesSeleccionados.add(analisistransaclienteAux);				
					}
				}
			}
			
			if(analisistransaclientesSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						analisistransaclientesSeleccionados.addAll(this.analisistransaclienteLogic.getAnalisisTransaClientes());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						analisistransaclientesSeleccionados.addAll(this.analisistransaclientes);				
					}
				}
			}
		} else {
			analisistransaclientesSeleccionados.add(this.analisistransacliente);
		}
		
		return analisistransaclientesSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteAnalisisTransaClientesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalAnalisisTransaClientesSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoAnalisisTransaClientesSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoAnalisisTransaClientesSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoAnalisisTransaClientesSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Analisis Transaccion Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesAnalisisTransaClientesSeleccionados() throws Exception {
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();		
		
		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteAnalisisTransaClientes("Todos",analisistransaclientesSeleccionados);
		
	}	
	
	public void generarReporteNormalAnalisisTransaClientesSeleccionados() throws Exception {
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();		
		
		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteAnalisisTransaClientes("Todos",analisistransaclientesSeleccionados);
	}		
	
	public void generarReporteProcesoAccionAnalisisTransaClientesSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();
		
		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteAnalisisTransaClientes("Todos",analisistransaclientesSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoAnalisisTransaClientesSeleccionados() throws Exception {
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();		
		
		
		this.abrirInicializarFrameReporteDinamicoAnalisisTransaCliente();
		
		
		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoAnalisisTransaCliente();
		
		
		//this.generarReporteAnalisisTransaClientes("Todos",analisistransaclientesSeleccionados ,analisistransaclienteImplementable,analisistransaclienteImplementableHome);
	}
	
	public void mostrarImportacionAnalisisTransaClientes() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionAnalisisTransaCliente();
		
		this.abrirFrameImportacionAnalisisTransaCliente();		
		
			
		//this.generarReporteAnalisisTransaClientes("Todos",analisistransaclientesSeleccionados ,analisistransaclienteImplementable,analisistransaclienteImplementableHome);
	}
	
	public void importarAnalisisTransaClientes() throws Exception {		
	
	}
	
	public void exportarAnalisisTransaClientesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelAnalisisTransaClientesSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoAnalisisTransaClientesSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlAnalisisTransaClientesSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Analisis Transaccion Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoAnalisisTransaClientesSeleccionados() throws Exception {
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();		
		
		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"analisistransacliente."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarAnalisisTransaCliente(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientesSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarAnalisisTransaCliente(analisistransaclienteAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//analisistransaclienteAux.setsDetalleGeneralEntityReporte(analisistransaclienteAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarAnalisisTransaCliente(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=analisistransacliente.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion1_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion2_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion3_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion4_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion5_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion6_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion7_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion8_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion9_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=analisistransacliente.gettransaccion10_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelAnalisisTransaClientesSeleccionados() throws Exception {
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();		
		
		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"analisistransacliente.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("AnalisisTransaClientes");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelAnalisisTransaCliente(row);				
				iRow++;
			}				
			
			for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientesSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelAnalisisTransaCliente(analisistransaclienteAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlAnalisisTransaClientesSeleccionados() throws Exception {
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();		
		
		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"analisistransacliente.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("analisistransaclientes");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("analisistransacliente");
			//elementRoot.appendChild(element);
		
			for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientesSeleccionados) {
				element = document.createElement("analisistransacliente");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlAnalisisTransaCliente(analisistransaclienteAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Analisis Transaccion Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelAnalisisTransaCliente(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9);
		cell = row.createCell(iColumn++);cell.setCellValue(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion1_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion2_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion3_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion4_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion5_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion6_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion7_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion8_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion9_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(analisistransacliente.gettransaccion10_descripcion());				
	}
	
	public void setFilaDatosExportarXmlAnalisisTransaCliente(AnalisisTransaCliente analisistransacliente,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(AnalisisTransaClienteConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(analisistransacliente.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(AnalisisTransaClienteConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(analisistransacliente.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(analisistransacliente.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementmodulo_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(analisistransacliente.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementnombre = document.createElement(AnalisisTransaClienteConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(analisistransacliente.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementdescripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(analisistransacliente.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementtransaccion_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION);
		elementtransaccion_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion_descripcion()));
		element.appendChild(elementtransaccion_descripcion);

		Element elementtransaccion1_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION1);
		elementtransaccion1_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion1_descripcion()));
		element.appendChild(elementtransaccion1_descripcion);

		Element elementtransaccion2_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION2);
		elementtransaccion2_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion2_descripcion()));
		element.appendChild(elementtransaccion2_descripcion);

		Element elementtransaccion3_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION3);
		elementtransaccion3_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion3_descripcion()));
		element.appendChild(elementtransaccion3_descripcion);

		Element elementtransaccion4_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION4);
		elementtransaccion4_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion4_descripcion()));
		element.appendChild(elementtransaccion4_descripcion);

		Element elementtransaccion5_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION5);
		elementtransaccion5_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion5_descripcion()));
		element.appendChild(elementtransaccion5_descripcion);

		Element elementtransaccion6_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION6);
		elementtransaccion6_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion6_descripcion()));
		element.appendChild(elementtransaccion6_descripcion);

		Element elementtransaccion7_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION7);
		elementtransaccion7_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion7_descripcion()));
		element.appendChild(elementtransaccion7_descripcion);

		Element elementtransaccion8_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION8);
		elementtransaccion8_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion8_descripcion()));
		element.appendChild(elementtransaccion8_descripcion);

		Element elementtransaccion9_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION9);
		elementtransaccion9_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion9_descripcion()));
		element.appendChild(elementtransaccion9_descripcion);

		Element elementtransaccion10_descripcion = document.createElement(AnalisisTransaClienteConstantesFunciones.IDTRANSACCION10);
		elementtransaccion10_descripcion.appendChild(document.createTextNode(analisistransacliente.gettransaccion10_descripcion()));
		element.appendChild(elementtransaccion10_descripcion);
	}
	
	public void generarReporteGroupGenericoAnalisisTransaClientesSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados=new ArrayList<AnalisisTransaCliente>();
		
		analisistransaclientesSeleccionados=this.getAnalisisTransaClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoAnalisisTransaCliente(analisistransaclientesSeleccionados);
		
		this.generarReporteAnalisisTransaClientes("Todos",analisistransaclientesSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoAnalisisTransaCliente(ArrayList<AnalisisTransaCliente> analisistransaclientesSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(AnalisisTransaCliente analisistransaclienteAux:analisistransaclientesSeleccionados) {
				analisistransaclienteAux.setsDetalleGeneralEntityReporte(analisistransaclienteAux.toString());
			
				if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION1)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion1_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION2)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion2_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION3)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion3_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION4)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion4_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION5)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion5_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION6)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion6_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION7)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion7_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION8)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion8_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION9)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion9_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AnalisisTransaClienteConstantesFunciones.LABEL_IDTRANSACCION10)) {
					existe=true;
					analisistransaclienteAux.setsDescripcionGeneralEntityReporte1(analisistransaclienteAux.gettransaccion10_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AnalisisTransaClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesAnalisisTransaCliente(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoAnalisisTransaCliente=true;
				this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=true;
				this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=true;
			}
			
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=false;
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=true;
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=false;
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=true;
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=true;
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=false;
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=true;
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=true;
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=true;
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=false;
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=false;
			this.isVisibilidadCeldaModificarAnalisisTransaCliente=true;
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaCancelarAnalisisTransaCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarAnalisisTransaCliente=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(AnalisisTransaClienteJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=true;
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=true;
		} else {
			this.actualizarEstadoPanelsAnalisisTransaCliente(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarAnalisisTransaCliente=false;
			//this.isVisibilidadCeldaVerFormAnalisisTransaCliente=false;
			this.isVisibilidadCeldaDuplicarAnalisisTransaCliente=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!analisistransaclienteSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;
		} else {
			this.isVisibilidadCeldaNuevoAnalisisTransaCliente=false;
			this.isVisibilidadCeldaGuardarCambiosAnalisisTransaCliente=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
			if(!analisistransaclienteSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;												
			}
			
			this.jButtonCerrarAnalisisTransaCliente.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesAnalisisTransaCliente=false;
		}
		
		if(!this.permiteMantenimiento(this.analisistransacliente)) {
			this.isVisibilidadCeldaActualizarAnalisisTransaCliente=false;
			this.isVisibilidadCeldaEliminarAnalisisTransaCliente=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesAnalisisTransaCliente() {
	}
	
	public void actualizarEstadoPanelsAnalisisTransaCliente(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosEdicionAnalisisTransaCliente.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAnalisisTransaCliente!=null) {
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosAnalisisTransaCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionAnalisisTransaCliente!=null) {
				this.jPanelPaginacionAnalisisTransaCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAnalisisTransaCliente!=null) {
				this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosEdicionAnalisisTransaCliente.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAnalisisTransaCliente!=null) {
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosAnalisisTransaCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionAnalisisTransaCliente!=null) {
				this.jPanelPaginacionAnalisisTransaCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesAnalisisTransaCliente!=null) {
				this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosEdicionAnalisisTransaCliente.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAnalisisTransaCliente!=null) {
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosAnalisisTransaCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionAnalisisTransaCliente!=null) {
				this.jPanelPaginacionAnalisisTransaCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesAnalisisTransaCliente!=null) {
				this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosEdicionAnalisisTransaCliente.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAnalisisTransaCliente!=null) {
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosAnalisisTransaCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionAnalisisTransaCliente!=null) {
				this.jPanelPaginacionAnalisisTransaCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesAnalisisTransaCliente!=null) {
				this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosEdicionAnalisisTransaCliente.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAnalisisTransaCliente!=null) {
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosAnalisisTransaCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionAnalisisTransaCliente!=null) {
				this.jPanelPaginacionAnalisisTransaCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAnalisisTransaCliente!=null) {
				this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosEdicionAnalisisTransaCliente.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAnalisisTransaCliente!=null) {
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosAnalisisTransaCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionAnalisisTransaCliente!=null) {
				this.jPanelPaginacionAnalisisTransaCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAnalisisTransaCliente!=null) {
				this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosEdicionAnalisisTransaCliente.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAnalisisTransaCliente!=null) {
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAnalisisTransaCliente!=null) {
				this.jScrollPanelDatosAnalisisTransaCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionAnalisisTransaCliente!=null) {
				this.jPanelPaginacionAnalisisTransaCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAnalisisTransaCliente!=null) {
				this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasAnalisisTransaCliente!=null) {
					this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesAnalisisTransaCliente!=null) {
				this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.analisistransaclienteSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAnalisisTransaCliente!=null) {
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesAnalisisTransaCliente!=null) {
				this.jPanelParametrosReportesAnalisisTransaCliente.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorNombre=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadBusquedaPorNombre=isParaModuloNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion(Boolean isParaTransaccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNegation=!isParaTransaccion;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccionNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion1(Boolean isParaTransaccion1){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion1Negation=!isParaTransaccion1;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion1Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion2(Boolean isParaTransaccion2){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion2Negation=!isParaTransaccion2;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion2Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion3(Boolean isParaTransaccion3){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion3Negation=!isParaTransaccion3;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion3Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion4(Boolean isParaTransaccion4){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion4Negation=!isParaTransaccion4;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion4Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion5(Boolean isParaTransaccion5){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion5Negation=!isParaTransaccion5;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion5Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion6(Boolean isParaTransaccion6){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion6Negation=!isParaTransaccion6;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion6Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion7(Boolean isParaTransaccion7){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion7Negation=!isParaTransaccion7;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion7Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion8(Boolean isParaTransaccion8){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion8Negation=!isParaTransaccion8;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion8Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion9(Boolean isParaTransaccion9){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion9Negation=!isParaTransaccion9;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion9Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion10(Boolean isParaTransaccion10){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccion10Negation=!isParaTransaccion10;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccion10Negation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(jPanelBusquedaPorNombreAnalisisTransaCliente);}
		}
		
	}
	
	
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//AnalisisTransaClienteSessionBean analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
		
		if(this.analisistransaclienteSessionBean==null) {
			this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
		}
		
		this.analisistransaclienteSessionBean.setsUltimaBusquedaAnalisisTransaCliente(this.getsAccionBusqueda());
		this.analisistransaclienteSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.analisistransaclienteSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
			analisistransaclienteSessionBean.setnombre(this.getnombreBusquedaPorNombre());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//AnalisisTransaClienteSessionBean analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
		
		if(this.analisistransaclienteSessionBean==null) {
			this.analisistransaclienteSessionBean=new AnalisisTransaClienteSessionBean();
		}
		
		if(this.analisistransaclienteSessionBean.getsUltimaBusquedaAnalisisTransaCliente()!=null&&!this.analisistransaclienteSessionBean.getsUltimaBusquedaAnalisisTransaCliente().equals("")) {
			this.setsAccionBusqueda(analisistransaclienteSessionBean.getsUltimaBusquedaAnalisisTransaCliente());
			this.setiNumeroPaginacion(analisistransaclienteSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(analisistransaclienteSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
				this.setnombreBusquedaPorNombre(analisistransaclienteSessionBean.getnombre());
				analisistransaclienteSessionBean.setnombre("");
			}
		}
		
		this.analisistransaclienteSessionBean.setsUltimaBusquedaAnalisisTransaCliente("");
		this.analisistransaclienteSessionBean.setiNumeroPaginacion(AnalisisTransaClienteConstantesFunciones.INUMEROPAGINACION);
		this.analisistransaclienteSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaAnalisisTransaCliente(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioAnalisisTransaCliente() {
		this.updateBorderResaltarBusquedasFormularioAnalisisTransaCliente();
		this.updateVisibilidadBusquedasFormularioAnalisisTransaCliente();
		this.updateHabilitarBusquedasFormularioAnalisisTransaCliente();
	}
	
	public void updateBorderResaltarBusquedasFormularioAnalisisTransaCliente() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasAnalisisTransaCliente.getComponents().length>0) {
	

		if(this.analisistransaclienteConstantesFunciones.resaltarBusquedaPorNombreAnalisisTransaCliente!=null) {
			index= this.jTabbedPaneBusquedasAnalisisTransaCliente.indexOfComponent(this.jPanelBusquedaPorNombreAnalisisTransaCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAnalisisTransaCliente.getComponent(index);
				jPanel.setBorder(this.analisistransaclienteConstantesFunciones.resaltarBusquedaPorNombreAnalisisTransaCliente);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioAnalisisTransaCliente() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasAnalisisTransaCliente.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasAnalisisTransaCliente.indexOfComponent(this.jPanelBusquedaPorNombreAnalisisTransaCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAnalisisTransaCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.analisistransaclienteConstantesFunciones.mostrarBusquedaPorNombreAnalisisTransaCliente);
			if(!this.analisistransaclienteConstantesFunciones.mostrarBusquedaPorNombreAnalisisTransaCliente && index>-1) {
				this.jTabbedPaneBusquedasAnalisisTransaCliente.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioAnalisisTransaCliente() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasAnalisisTransaCliente.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasAnalisisTransaCliente.indexOfComponent(this.jPanelBusquedaPorNombreAnalisisTransaCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAnalisisTransaCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.analisistransaclienteConstantesFunciones.activarBusquedaPorNombreAnalisisTransaCliente);
				this.jTabbedPaneBusquedasAnalisisTransaCliente.setEnabledAt(index,this.analisistransaclienteConstantesFunciones.activarBusquedaPorNombreAnalisisTransaCliente);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaAnalisisTransaCliente(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorNombre")) {
			index= this.jTabbedPaneBusquedasAnalisisTransaCliente.indexOfComponent(this.jPanelBusquedaPorNombreAnalisisTransaCliente);

			this.jTabbedPaneBusquedasAnalisisTransaCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAnalisisTransaCliente.getComponent(index);

			this.analisistransaclienteConstantesFunciones.setResaltarBusquedaPorNombreAnalisisTransaCliente(resaltar);

			jPanel.setBorder(this.analisistransaclienteConstantesFunciones.resaltarBusquedaPorNombreAnalisisTransaCliente);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarAnalisisTransaCliente.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioAnalisisTransaCliente() throws Exception {

		if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioAnalisisTransaCliente();
		this.updateVisibilidadResaltarControlesFormularioAnalisisTransaCliente();
		this.updateHabilitarResaltarControlesFormularioAnalisisTransaCliente();
		
	}
	
	public void updateBorderResaltarControlesFormularioAnalisisTransaCliente() throws Exception {
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.analisistransaclienteConstantesFunciones.resaltaridAnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltaridAnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_empresaAnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_empresaAnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_moduloAnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_moduloAnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarnombreAnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreanombreAnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarnombreAnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltardescripcionAnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreadescripcionAnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltardescripcionAnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccionAnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccionAnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion1AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion1AnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion2AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion2AnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion3AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion3AnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion4AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion4AnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion5AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion5AnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion6AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion6AnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion7AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion7AnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion8AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion8AnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion9AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion9AnalisisTransaCliente);}
		if(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion10AnalisisTransaCliente!=null && this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.setBorder(this.analisistransaclienteConstantesFunciones.resaltarid_transaccion10AnalisisTransaCliente);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioAnalisisTransaCliente() throws Exception {		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
	
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostraridAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelidAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostraridAnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_empresaAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_empresaAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_empresaAnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_moduloAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_moduloAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_moduloAnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreanombreAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarnombreAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelnombreAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarnombreAnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreadescripcionAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrardescripcionAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPaneldescripcionAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrardescripcionAnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccionAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccionAnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccionAnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion1AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion1AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion1AnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion2AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion2AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion2AnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion3AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion3AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion3AnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion4AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion4AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion4AnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion5AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion5AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion5AnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion6AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion6AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion6AnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion7AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion7AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion7AnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion8AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion8AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion8AnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion9AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion9AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion9AnalisisTransaCliente);
		//this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion10AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jPanelid_transaccion10AnalisisTransaCliente.setVisible(this.analisistransaclienteConstantesFunciones.mostrarid_transaccion10AnalisisTransaCliente);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioAnalisisTransaCliente() throws Exception {
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormAnalisisTransaCliente!=null) {
	
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jLabelidAnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activaridAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_empresaAnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_empresaAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_moduloAnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_moduloAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreanombreAnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarnombreAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jTextAreadescripcionAnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activardescripcionAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccionAnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccionAnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion1AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion1AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion2AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion2AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion3AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion3AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion4AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion4AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion5AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion5AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion6AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion6AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion7AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion7AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion8AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion8AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion9AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion9AnalisisTransaCliente);
		this.jInternalFrameDetalleFormAnalisisTransaCliente.jComboBoxid_transaccion10AnalisisTransaCliente.setEnabled(this.analisistransaclienteConstantesFunciones.activarid_transaccion10AnalisisTransaCliente);
		}
	}
	
		
}