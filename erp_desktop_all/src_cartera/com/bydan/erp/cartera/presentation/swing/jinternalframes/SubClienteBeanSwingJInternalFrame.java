/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.cartera.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.cartera.util.SubClienteConstantesFunciones;
import com.bydan.erp.cartera.util.SubClienteParameterReturnGeneral;
//import com.bydan.erp.cartera.util.SubClienteParameterGeneral;
//import com.bydan.erp.cartera.presentation.report.source.SubClienteBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.cartera.resources.reportes.AuxiliarReportes;


import com.bydan.erp.cartera.util.*;
import com.bydan.erp.cartera.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.cartera.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class SubClienteBeanSwingJInternalFrame extends SubClienteJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(SubClienteBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<SubCliente> subclienteValidator = new ClassValidator<SubCliente>(SubCliente.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public SubCliente subcliente;	
	public SubCliente subclienteAux;
	public SubCliente subclienteAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public SubCliente subclienteTotales;
	public Long idSubClienteActual;
	public Long iIdNuevoSubCliente=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboTipoIdentificacion="";

	public List<TipoIdentificacion> tipoidentificacionsForeignKey;

	public List<TipoIdentificacion> gettipoidentificacionsForeignKey() {
		return tipoidentificacionsForeignKey;
	}

	public void settipoidentificacionsForeignKey(List<TipoIdentificacion> tipoidentificacionsForeignKey) {
		this.tipoidentificacionsForeignKey = tipoidentificacionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoIdentificacion tipoidentificacionForeignKey;

	public TipoIdentificacion gettipoidentificacionForeignKey() {
		return tipoidentificacionForeignKey;
	}

	public void settipoidentificacionForeignKey(TipoIdentificacion tipoidentificacionForeignKey) {
		this.tipoidentificacionForeignKey = tipoidentificacionForeignKey;
	}

	public String sFinalQueryComboPais="";

	public List<Pais> paissForeignKey;

	public List<Pais> getpaissForeignKey() {
		return paissForeignKey;
	}

	public void setpaissForeignKey(List<Pais> paissForeignKey) {
		this.paissForeignKey = paissForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisForeignKey;

	public Pais getpaisForeignKey() {
		return paisForeignKey;
	}

	public void setpaisForeignKey(Pais paisForeignKey) {
		this.paisForeignKey = paisForeignKey;
	}

	public String sFinalQueryComboCiudad="";

	public List<Ciudad> ciudadsForeignKey;

	public List<Ciudad> getciudadsForeignKey() {
		return ciudadsForeignKey;
	}

	public void setciudadsForeignKey(List<Ciudad> ciudadsForeignKey) {
		this.ciudadsForeignKey = ciudadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ciudad ciudadForeignKey;

	public Ciudad getciudadForeignKey() {
		return ciudadForeignKey;
	}

	public void setciudadForeignKey(Ciudad ciudadForeignKey) {
		this.ciudadForeignKey = ciudadForeignKey;
	}

	public String sFinalQueryComboZona="";

	public List<Zona> zonasForeignKey;

	public List<Zona> getzonasForeignKey() {
		return zonasForeignKey;
	}

	public void setzonasForeignKey(List<Zona> zonasForeignKey) {
		this.zonasForeignKey = zonasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Zona zonaForeignKey;

	public Zona getzonaForeignKey() {
		return zonaForeignKey;
	}

	public void setzonaForeignKey(Zona zonaForeignKey) {
		this.zonaForeignKey = zonaForeignKey;
	}

	public String sFinalQueryComboPaisNacionalidad="";

	public List<Pais> paisnacionalidadsForeignKey;

	public List<Pais> getpaisnacionalidadsForeignKey() {
		return paisnacionalidadsForeignKey;
	}

	public void setpaisnacionalidadsForeignKey(List<Pais> paisnacionalidadsForeignKey) {
		this.paisnacionalidadsForeignKey = paisnacionalidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisnacionalidadForeignKey;

	public Pais getpaisnacionalidadForeignKey() {
		return paisnacionalidadForeignKey;
	}

	public void setpaisnacionalidadForeignKey(Pais paisnacionalidadForeignKey) {
		this.paisnacionalidadForeignKey = paisnacionalidadForeignKey;
	}

	public String sFinalQueryComboTipoGenero="";

	public List<TipoGenero> tipogenerosForeignKey;

	public List<TipoGenero> gettipogenerosForeignKey() {
		return tipogenerosForeignKey;
	}

	public void settipogenerosForeignKey(List<TipoGenero> tipogenerosForeignKey) {
		this.tipogenerosForeignKey = tipogenerosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoGenero tipogeneroForeignKey;

	public TipoGenero gettipogeneroForeignKey() {
		return tipogeneroForeignKey;
	}

	public void settipogeneroForeignKey(TipoGenero tipogeneroForeignKey) {
		this.tipogeneroForeignKey = tipogeneroForeignKey;
	}

	public String sFinalQueryComboEstadoCivil="";

	public List<EstadoCivil> estadocivilsForeignKey;

	public List<EstadoCivil> getestadocivilsForeignKey() {
		return estadocivilsForeignKey;
	}

	public void setestadocivilsForeignKey(List<EstadoCivil> estadocivilsForeignKey) {
		this.estadocivilsForeignKey = estadocivilsForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoCivil estadocivilForeignKey;

	public EstadoCivil getestadocivilForeignKey() {
		return estadocivilForeignKey;
	}

	public void setestadocivilForeignKey(EstadoCivil estadocivilForeignKey) {
		this.estadocivilForeignKey = estadocivilForeignKey;
	}

	public String sFinalQueryComboEstadoLegal="";

	public List<EstadoLegal> estadolegalsForeignKey;

	public List<EstadoLegal> getestadolegalsForeignKey() {
		return estadolegalsForeignKey;
	}

	public void setestadolegalsForeignKey(List<EstadoLegal> estadolegalsForeignKey) {
		this.estadolegalsForeignKey = estadolegalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoLegal estadolegalForeignKey;

	public EstadoLegal getestadolegalForeignKey() {
		return estadolegalForeignKey;
	}

	public void setestadolegalForeignKey(EstadoLegal estadolegalForeignKey) {
		this.estadolegalForeignKey = estadolegalForeignKey;
	}

	public String sFinalQueryComboTipoNivelEdu="";

	public List<TipoNivelEdu> tiponiveledusForeignKey;

	public List<TipoNivelEdu> gettiponiveledusForeignKey() {
		return tiponiveledusForeignKey;
	}

	public void settiponiveledusForeignKey(List<TipoNivelEdu> tiponiveledusForeignKey) {
		this.tiponiveledusForeignKey = tiponiveledusForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoNivelEdu tiponiveleduForeignKey;

	public TipoNivelEdu gettiponiveleduForeignKey() {
		return tiponiveleduForeignKey;
	}

	public void settiponiveleduForeignKey(TipoNivelEdu tiponiveleduForeignKey) {
		this.tiponiveleduForeignKey = tiponiveleduForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idCuentaContableActual=0L;

	public Long getidCuentaContableActual() {
		return idCuentaContableActual;
	}

	public void setidCuentaContableActual(Long idCuentaContableActual) {
		this.idCuentaContableActual= idCuentaContableActual;
	}
	
	

	public Boolean isTienePermisosFactura=false;

	public Boolean getIsTienePermisosFactura() {
		return isTienePermisosFactura;
	}

	public void setIsTienePermisosFactura(Boolean isTienePermisosFactura) {
		this.isTienePermisosFactura= isTienePermisosFactura;
	}


	public Boolean isTienePermisosConsignacion=false;

	public Boolean getIsTienePermisosConsignacion() {
		return isTienePermisosConsignacion;
	}

	public void setIsTienePermisosConsignacion(Boolean isTienePermisosConsignacion) {
		this.isTienePermisosConsignacion= isTienePermisosConsignacion;
	}


	public Boolean isTienePermisosGuiaRemision=false;

	public Boolean getIsTienePermisosGuiaRemision() {
		return isTienePermisosGuiaRemision;
	}

	public void setIsTienePermisosGuiaRemision(Boolean isTienePermisosGuiaRemision) {
		this.isTienePermisosGuiaRemision= isTienePermisosGuiaRemision;
	}


	public Boolean isTienePermisosProforma=false;

	public Boolean getIsTienePermisosProforma() {
		return isTienePermisosProforma;
	}

	public void setIsTienePermisosProforma(Boolean isTienePermisosProforma) {
		this.isTienePermisosProforma= isTienePermisosProforma;
	}


	public Boolean isTienePermisosPedidoExpor=false;

	public Boolean getIsTienePermisosPedidoExpor() {
		return isTienePermisosPedidoExpor;
	}

	public void setIsTienePermisosPedidoExpor(Boolean isTienePermisosPedidoExpor) {
		this.isTienePermisosPedidoExpor= isTienePermisosPedidoExpor;
	}


	public Boolean isTienePermisosPedido=false;

	public Boolean getIsTienePermisosPedido() {
		return isTienePermisosPedido;
	}

	public void setIsTienePermisosPedido(Boolean isTienePermisosPedido) {
		this.isTienePermisosPedido= isTienePermisosPedido;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoSubCliente;
	public Boolean isPermisoNuevoSubCliente;
	public Boolean isPermisoActualizarSubCliente;
	public Boolean isPermisoActualizarOriginalSubCliente;
	public Boolean isPermisoEliminarSubCliente;
	public Boolean isPermisoGuardarCambiosSubCliente;
	public Boolean isPermisoConsultaSubCliente;
	public Boolean isPermisoBusquedaSubCliente;
	public Boolean isPermisoReporteSubCliente;
	public Boolean isPermisoPaginacionMedioSubCliente;
	public Boolean isPermisoPaginacionAltoSubCliente;
	public Boolean isPermisoPaginacionTodoSubCliente;
	public Boolean isPermisoCopiarSubCliente;
	public Boolean isPermisoVerFormSubCliente;
	public Boolean isPermisoDuplicarSubCliente;
	public Boolean isPermisoOrdenSubCliente;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public SubClienteParameterReturnGeneral subclienteReturnGeneral;
	public SubClienteParameterReturnGeneral subclienteParameterGeneral;
	
	

	public FacturaLogic facturaLogic=null;

	public FacturaLogic getFacturaLogic() {
		return facturaLogic;
	}

	public void setFacturaLogic(FacturaLogic facturaLogic) {
		this.facturaLogic = facturaLogic;
	}


	public ConsignacionLogic consignacionLogic=null;

	public ConsignacionLogic getConsignacionLogic() {
		return consignacionLogic;
	}

	public void setConsignacionLogic(ConsignacionLogic consignacionLogic) {
		this.consignacionLogic = consignacionLogic;
	}


	public GuiaRemisionLogic guiaremisionLogic=null;

	public GuiaRemisionLogic getGuiaRemisionLogic() {
		return guiaremisionLogic;
	}

	public void setGuiaRemisionLogic(GuiaRemisionLogic guiaremisionLogic) {
		this.guiaremisionLogic = guiaremisionLogic;
	}


	public ProformaLogic proformaLogic=null;

	public ProformaLogic getProformaLogic() {
		return proformaLogic;
	}

	public void setProformaLogic(ProformaLogic proformaLogic) {
		this.proformaLogic = proformaLogic;
	}


	public PedidoExporLogic pedidoexporLogic=null;

	public PedidoExporLogic getPedidoExporLogic() {
		return pedidoexporLogic;
	}

	public void setPedidoExporLogic(PedidoExporLogic pedidoexporLogic) {
		this.pedidoexporLogic = pedidoexporLogic;
	}


	public PedidoLogic pedidoLogic=null;

	public PedidoLogic getPedidoLogic() {
		return pedidoLogic;
	}

	public void setPedidoLogic(PedidoLogic pedidoLogic) {
		this.pedidoLogic = pedidoLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoSubCliente=false;
	public Boolean esParaAccionDesdeFormularioSubCliente=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected SubClienteSessionBeanAdditional subclienteSessionBeanAdditional=null;
	
	public SubClienteSessionBeanAdditional getSubClienteSessionBeanAdditional() {
		return this.subclienteSessionBeanAdditional;
	}
	
	public void setSubClienteSessionBeanAdditional(SubClienteSessionBeanAdditional subclienteSessionBeanAdditional) {
		try {
			this.subclienteSessionBeanAdditional=subclienteSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected SubClienteBeanSwingJInternalFrameAdditional subclienteBeanSwingJInternalFrameAdditional=null;
	//public class SubClienteBeanSwingJInternalFrame
	
	public SubClienteBeanSwingJInternalFrameAdditional getSubClienteBeanSwingJInternalFrameAdditional() {
		return this.subclienteBeanSwingJInternalFrameAdditional;
	}
	
	public void setSubClienteBeanSwingJInternalFrameAdditional(SubClienteBeanSwingJInternalFrameAdditional subclienteBeanSwingJInternalFrameAdditional) {
		try {
			this.subclienteBeanSwingJInternalFrameAdditional=subclienteBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public SubClienteLogic subclienteLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public SubCliente subclienteBean;
	public SubClienteConstantesFunciones subclienteConstantesFunciones;
	//public SubClienteParameterReturnGeneral subclienteReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public ClienteLogic clienteLogic;
	public SucursalLogic sucursalLogic;
	public TipoIdentificacionLogic tipoidentificacionLogic;
	public PaisLogic paisLogic;
	public CiudadLogic ciudadLogic;
	public ZonaLogic zonaLogic;
	public PaisLogic paisnacionalidadLogic;
	public TipoGeneroLogic tipogeneroLogic;
	public EstadoCivilLogic estadocivilLogic;
	public EstadoLegalLogic estadolegalLogic;
	public TipoNivelEduLogic tiponiveleduLogic;
	public CuentaContableLogic cuentacontableLogic;
	
	//PARAMETROS
	
	
	//public List<SubCliente> subclientes;	
	//public List<SubCliente> subclientesEliminados;
	//public List<SubCliente> subclientesAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoSubCliente=false;
	public Boolean isVisibilidadCeldaDuplicarSubCliente=true;
	public Boolean isVisibilidadCeldaCopiarSubCliente=true;
	public Boolean isVisibilidadCeldaVerFormSubCliente=true;
	public Boolean isVisibilidadCeldaOrdenSubCliente=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesSubCliente=false;
	public Boolean isVisibilidadCeldaModificarSubCliente=false;
	public Boolean isVisibilidadCeldaActualizarSubCliente=false;
	public Boolean isVisibilidadCeldaEliminarSubCliente=false;
	public Boolean isVisibilidadCeldaCancelarSubCliente=false;
	public Boolean isVisibilidadCeldaGuardarSubCliente=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosSubCliente=false;	
	
	
	public Boolean isVisibilidadBusquedaPorIdentificacion=false;
	public Boolean isVisibilidadBusquedaPorNombreCompleto=false;
	public Boolean isVisibilidadBusquedaPorRuc=false;
	public Boolean isVisibilidadFK_IdCiudad=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdCuentaContable=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoCivil=false;
	public Boolean isVisibilidadFK_IdEstadoLegal=false;
	public Boolean isVisibilidadFK_IdPais=false;
	public Boolean isVisibilidadFK_IdPaisNacionalidad=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoGenero=false;
	public Boolean isVisibilidadFK_IdTipoIdentificacion=false;
	public Boolean isVisibilidadFK_IdTipoNivelEdu=false;
	public Boolean isVisibilidadFK_IdZona=false;
	
	public Long getiIdNuevoSubCliente() {
		return this.iIdNuevoSubCliente;
	}

	public void setiIdNuevoSubCliente(Long iIdNuevoSubCliente) {
		this.iIdNuevoSubCliente = iIdNuevoSubCliente;
	}
	
	public Long getidSubClienteActual() {
		return this.idSubClienteActual;
	}

	public void setidSubClienteActual(Long idSubClienteActual) {
		this.idSubClienteActual = idSubClienteActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public SubCliente getsubcliente() {
		return this.subcliente;
	}

	public void setsubcliente(SubCliente subcliente) {
		this.subcliente = subcliente;
	}
	
	public SubCliente getsubclienteAux() {
		return this.subclienteAux;
	}

	public void setsubclienteAux(SubCliente subclienteAux) {
		this.subclienteAux = subclienteAux;
	}				
	
	public SubCliente getsubclienteAnterior() {
		return this.subclienteAnterior;
	}

	public void setsubclienteAnterior(SubCliente subclienteAnterior) {
		this.subclienteAnterior = subclienteAnterior;
	}	
	
	public SubCliente getsubclienteTotales() {
		return this.subclienteTotales;
	}

	public void setsubclienteTotales(SubCliente subclienteTotales) {
		this.subclienteTotales = subclienteTotales;
	}	
	
	public SubCliente getsubclienteBean() {
		return this.subclienteBean;
	}

	public void setsubclienteBean(SubCliente subclienteBean) {
		this.subclienteBean = subclienteBean;
	}	
	
	public SubClienteParameterReturnGeneral getsubclienteReturnGeneral() {
		return this.subclienteReturnGeneral;
	}

	public void setsubclienteReturnGeneral(SubClienteParameterReturnGeneral subclienteReturnGeneral) {
		this.subclienteReturnGeneral = subclienteReturnGeneral;
	}	
	
	
	public String identificacionBusquedaPorIdentificacion="";

	public String getidentificacionBusquedaPorIdentificacion() {
		return this.identificacionBusquedaPorIdentificacion;
	}

	public void setidentificacionBusquedaPorIdentificacion(String identificacionBusquedaPorIdentificacion) {
		this.identificacionBusquedaPorIdentificacion = identificacionBusquedaPorIdentificacion;
	}

	public String nombre_completoBusquedaPorNombreCompleto="";

	public String getnombre_completoBusquedaPorNombreCompleto() {
		return this.nombre_completoBusquedaPorNombreCompleto;
	}

	public void setnombre_completoBusquedaPorNombreCompleto(String nombre_completoBusquedaPorNombreCompleto) {
		this.nombre_completoBusquedaPorNombreCompleto = nombre_completoBusquedaPorNombreCompleto;
	}

	public String rucBusquedaPorRuc="";

	public String getrucBusquedaPorRuc() {
		return this.rucBusquedaPorRuc;
	}

	public void setrucBusquedaPorRuc(String rucBusquedaPorRuc) {
		this.rucBusquedaPorRuc = rucBusquedaPorRuc;
	}

	public Long id_ciudadFK_IdCiudad=-1L;

	public Long getid_ciudadFK_IdCiudad() {
		return this.id_ciudadFK_IdCiudad;
	}

	public void setid_ciudadFK_IdCiudad(Long id_ciudadFK_IdCiudad) {
		this.id_ciudadFK_IdCiudad = id_ciudadFK_IdCiudad;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_cuenta_contableFK_IdCuentaContable=-1L;

	public Long getid_cuenta_contableFK_IdCuentaContable() {
		return this.id_cuenta_contableFK_IdCuentaContable;
	}

	public void setid_cuenta_contableFK_IdCuentaContable(Long id_cuenta_contableFK_IdCuentaContable) {
		this.id_cuenta_contableFK_IdCuentaContable = id_cuenta_contableFK_IdCuentaContable;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_civilFK_IdEstadoCivil=-1L;

	public Long getid_estado_civilFK_IdEstadoCivil() {
		return this.id_estado_civilFK_IdEstadoCivil;
	}

	public void setid_estado_civilFK_IdEstadoCivil(Long id_estado_civilFK_IdEstadoCivil) {
		this.id_estado_civilFK_IdEstadoCivil = id_estado_civilFK_IdEstadoCivil;
	}

	public Long id_estado_legalFK_IdEstadoLegal=-1L;

	public Long getid_estado_legalFK_IdEstadoLegal() {
		return this.id_estado_legalFK_IdEstadoLegal;
	}

	public void setid_estado_legalFK_IdEstadoLegal(Long id_estado_legalFK_IdEstadoLegal) {
		this.id_estado_legalFK_IdEstadoLegal = id_estado_legalFK_IdEstadoLegal;
	}

	public Long id_paisFK_IdPais=-1L;

	public Long getid_paisFK_IdPais() {
		return this.id_paisFK_IdPais;
	}

	public void setid_paisFK_IdPais(Long id_paisFK_IdPais) {
		this.id_paisFK_IdPais = id_paisFK_IdPais;
	}

	public Long id_pais_nacionalidadFK_IdPaisNacionalidad=-1L;

	public Long getid_pais_nacionalidadFK_IdPaisNacionalidad() {
		return this.id_pais_nacionalidadFK_IdPaisNacionalidad;
	}

	public void setid_pais_nacionalidadFK_IdPaisNacionalidad(Long id_pais_nacionalidadFK_IdPaisNacionalidad) {
		this.id_pais_nacionalidadFK_IdPaisNacionalidad = id_pais_nacionalidadFK_IdPaisNacionalidad;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_generoFK_IdTipoGenero=-1L;

	public Long getid_tipo_generoFK_IdTipoGenero() {
		return this.id_tipo_generoFK_IdTipoGenero;
	}

	public void setid_tipo_generoFK_IdTipoGenero(Long id_tipo_generoFK_IdTipoGenero) {
		this.id_tipo_generoFK_IdTipoGenero = id_tipo_generoFK_IdTipoGenero;
	}

	public Long id_tipo_identificacionFK_IdTipoIdentificacion=-1L;

	public Long getid_tipo_identificacionFK_IdTipoIdentificacion() {
		return this.id_tipo_identificacionFK_IdTipoIdentificacion;
	}

	public void setid_tipo_identificacionFK_IdTipoIdentificacion(Long id_tipo_identificacionFK_IdTipoIdentificacion) {
		this.id_tipo_identificacionFK_IdTipoIdentificacion = id_tipo_identificacionFK_IdTipoIdentificacion;
	}

	public Long id_tipo_nivel_eduFK_IdTipoNivelEdu=-1L;

	public Long getid_tipo_nivel_eduFK_IdTipoNivelEdu() {
		return this.id_tipo_nivel_eduFK_IdTipoNivelEdu;
	}

	public void setid_tipo_nivel_eduFK_IdTipoNivelEdu(Long id_tipo_nivel_eduFK_IdTipoNivelEdu) {
		this.id_tipo_nivel_eduFK_IdTipoNivelEdu = id_tipo_nivel_eduFK_IdTipoNivelEdu;
	}

	public Long id_zonaFK_IdZona=-1L;

	public Long getid_zonaFK_IdZona() {
		return this.id_zonaFK_IdZona;
	}

	public void setid_zonaFK_IdZona(Long id_zonaFK_IdZona) {
		this.id_zonaFK_IdZona = id_zonaFK_IdZona;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public SubClienteLogic getSubClienteLogic()	{		
		return subclienteLogic;
	}

	public void setSubClienteLogic(SubClienteLogic subclienteLogic) {
		this.subclienteLogic = subclienteLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoSubCliente() {
		return isEsNuevoSubCliente;
	}

	public void setIsEsNuevoSubCliente(Boolean isEsNuevoSubCliente) {
		this.isEsNuevoSubCliente = isEsNuevoSubCliente;
	}

	public Boolean getEsParaAccionDesdeFormularioSubCliente() {
		return esParaAccionDesdeFormularioSubCliente;
	}
	
	public void setEsParaAccionDesdeFormularioSubCliente(Boolean esParaAccionDesdeFormularioSubCliente) {
		this.esParaAccionDesdeFormularioSubCliente = esParaAccionDesdeFormularioSubCliente;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(subclienteSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(subclienteSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(subclienteSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoIdentificacionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoidentificacionsForeignKey=new ArrayList<TipoIdentificacion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoIdentificacionLogic tipoidentificacionLogic=new TipoIdentificacionLogic();

			//tipoidentificacionLogic.getTipoIdentificacionDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoIdentificacion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoidentificacionLogic.getTipoIdentificacionDataAccess().setIsForForeingKeyData(true);

					tipoidentificacionLogic.getTodosTipoIdentificacionsWithConnection(sFinalQuery,new Pagination());

					this.tipoidentificacionsForeignKey=tipoidentificacionLogic.getTipoIdentificacions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoIdentificacion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoidentificacionLogic.getEntityWithConnection(subclienteSessionBean.getlidTipoIdentificacionActual());
					this.tipoidentificacionsForeignKey.add(tipoidentificacionLogic.getTipoIdentificacion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaissForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paissForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paissForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPais(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(subclienteSessionBean.getlidPaisActual());
					this.paissForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCiudadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ciudadsForeignKey=new ArrayList<Ciudad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CiudadLogic ciudadLogic=new CiudadLogic();

			//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

					ciudadLogic.getTodosCiudadsWithConnection(sFinalQuery,new Pagination());

					this.ciudadsForeignKey=ciudadLogic.getCiudads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCiudad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ciudadLogic.getEntityWithConnection(subclienteSessionBean.getlidCiudadActual());
					this.ciudadsForeignKey.add(ciudadLogic.getCiudad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosZonasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.zonasForeignKey=new ArrayList<Zona>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ZonaLogic zonaLogic=new ZonaLogic();

			//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

					zonaLogic.getTodosZonasWithConnection(sFinalQuery,new Pagination());

					this.zonasForeignKey=zonaLogic.getZonas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaZona(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					zonaLogic.getEntityWithConnection(subclienteSessionBean.getlidZonaActual());
					this.zonasForeignKey.add(zonaLogic.getZona());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaisNacionalidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paisnacionalidadsForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionPaisNacionalidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisnacionalidadLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paisnacionalidadsForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPaisNacionalidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(subclienteSessionBean.getlidPaisNacionalidadActual());
					this.paisnacionalidadsForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoGenerosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipogenerosForeignKey=new ArrayList<TipoGenero>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoGeneroLogic tipogeneroLogic=new TipoGeneroLogic();

			//tipogeneroLogic.getTipoGeneroDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipogeneroLogic.getTipoGeneroDataAccess().setIsForForeingKeyData(true);

					tipogeneroLogic.getTodosTipoGenerosWithConnection(sFinalQuery,new Pagination());

					this.tipogenerosForeignKey=tipogeneroLogic.getTipoGeneros();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoGenero(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogeneroLogic.getEntityWithConnection(subclienteSessionBean.getlidTipoGeneroActual());
					this.tipogenerosForeignKey.add(tipogeneroLogic.getTipoGenero());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoCivilsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadocivilsForeignKey=new ArrayList<EstadoCivil>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoCivilLogic estadocivilLogic=new EstadoCivilLogic();

			//estadocivilLogic.getEstadoCivilDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadocivilLogic.getEstadoCivilDataAccess().setIsForForeingKeyData(true);

					estadocivilLogic.getTodosEstadoCivilsWithConnection(sFinalQuery,new Pagination());

					this.estadocivilsForeignKey=estadocivilLogic.getEstadoCivils();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoCivil(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadocivilLogic.getEntityWithConnection(subclienteSessionBean.getlidEstadoCivilActual());
					this.estadocivilsForeignKey.add(estadocivilLogic.getEstadoCivil());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoLegalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadolegalsForeignKey=new ArrayList<EstadoLegal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoLegalLogic estadolegalLogic=new EstadoLegalLogic();

			//estadolegalLogic.getEstadoLegalDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoLegal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadolegalLogic.getEstadoLegalDataAccess().setIsForForeingKeyData(true);

					estadolegalLogic.getTodosEstadoLegalsWithConnection(sFinalQuery,new Pagination());

					this.estadolegalsForeignKey=estadolegalLogic.getEstadoLegals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoLegal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadolegalLogic.getEntityWithConnection(subclienteSessionBean.getlidEstadoLegalActual());
					this.estadolegalsForeignKey.add(estadolegalLogic.getEstadoLegal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoNivelEdusForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiponiveledusForeignKey=new ArrayList<TipoNivelEdu>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoNivelEduLogic tiponiveleduLogic=new TipoNivelEduLogic();

			//tiponiveleduLogic.getTipoNivelEduDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoNivelEdu()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiponiveleduLogic.getTipoNivelEduDataAccess().setIsForForeingKeyData(true);

					tiponiveleduLogic.getTodosTipoNivelEdusWithConnection(sFinalQuery,new Pagination());

					this.tiponiveledusForeignKey=tiponiveleduLogic.getTipoNivelEdus();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoNivelEdu(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiponiveleduLogic.getEntityWithConnection(subclienteSessionBean.getlidTipoNivelEduActual());
					this.tiponiveledusForeignKey.add(tiponiveleduLogic.getTipoNivelEdu());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(subclienteSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaSubCliente.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaSubClienteGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaSubClienteGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaSubClienteGenerico!=null && jComboBoxid_empresaSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_empresaSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteSubCliente.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteSubCliente!=null) {
						jComboBoxid_clienteFK_IdClienteSubCliente.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteSubCliente!=null) {
							//jComboBoxid_clienteFK_IdClienteSubCliente.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteSubCliente.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteSubCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteSubClienteGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteSubClienteGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteSubClienteGenerico!=null && jComboBoxid_clienteSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_clienteSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalSubCliente.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalSubClienteGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalSubClienteGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalSubClienteGenerico!=null && jComboBoxid_sucursalSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_sucursalSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoIdentificacionForeignKey(Long idTipoIdentificacionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoIdentificacion  tipoidentificacionTemp=null;

			for(TipoIdentificacion tipoidentificacionAux:tipoidentificacionsForeignKey) {
				if(tipoidentificacionAux.getId()!=null && tipoidentificacionAux.getId().equals(idTipoIdentificacionSeleccionado)) {
					tipoidentificacionTemp=tipoidentificacionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoidentificacionTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setTipoIdentificacion(tipoidentificacionTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.setSelectedItem(tipoidentificacionTemp);
					}
				} else {
					//jComboBoxid_tipo_identificacionSubCliente.setSelectedItem(tipoidentificacionTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoIdentificacion") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoidentificacionTemp!=null && jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente!=null) {
						jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.setSelectedItem(tipoidentificacionTemp);
					} else {
						if(jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente!=null) {
							//jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.setSelectedItem(tipoidentificacionTemp);
							if(jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.getItemCount()>0) {
								jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoIdentificacionForeignKeyDescripcion(Long idTipoIdentificacionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoIdentificacion  tipoidentificacionTemp=null;

			for(TipoIdentificacion tipoidentificacionAux:tipoidentificacionsForeignKey) {
				if(tipoidentificacionAux.getId()!=null && tipoidentificacionAux.getId().equals(idTipoIdentificacionSeleccionado)) {
					tipoidentificacionTemp=tipoidentificacionAux;
					break;
				}
			}


			sDescripcion=TipoIdentificacionConstantesFunciones.getTipoIdentificacionDescripcion(tipoidentificacionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoIdentificacionForeignKeyGenerico(Long idTipoIdentificacionSeleccionado,JComboBox jComboBoxid_tipo_identificacionSubClienteGenerico)throws Exception
	{
		try
		{
			TipoIdentificacion  tipoidentificacionTemp=null;

			for(TipoIdentificacion tipoidentificacionAux:tipoidentificacionsForeignKey) {
				if(tipoidentificacionAux.getId()!=null && tipoidentificacionAux.getId().equals(idTipoIdentificacionSeleccionado)) {
					tipoidentificacionTemp=tipoidentificacionAux;
					break;
				}
			}

			if(tipoidentificacionTemp!=null) {
				jComboBoxid_tipo_identificacionSubClienteGenerico.setSelectedItem(tipoidentificacionTemp);
			} else {
				if(jComboBoxid_tipo_identificacionSubClienteGenerico!=null && jComboBoxid_tipo_identificacionSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_identificacionSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisForeignKey(Long idPaisSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setPais(paisTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.setSelectedItem(paisTemp);
					}
				} else {
					//jComboBoxid_paisSubCliente.setSelectedItem(paisTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisForeignKeyDescripcion(Long idPaisSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisForeignKeyGenerico(Long idPaisSeleccionado,JComboBox jComboBoxid_paisSubClienteGenerico)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(paisTemp!=null) {
				jComboBoxid_paisSubClienteGenerico.setSelectedItem(paisTemp);
			} else {
				if(jComboBoxid_paisSubClienteGenerico!=null && jComboBoxid_paisSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_paisSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCiudadForeignKey(Long idCiudadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ciudadTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setCiudad(ciudadTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.setSelectedItem(ciudadTemp);
					}
				} else {
					//jComboBoxid_ciudadSubCliente.setSelectedItem(ciudadTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCiudadForeignKeyDescripcion(Long idCiudadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}


			sDescripcion=CiudadConstantesFunciones.getCiudadDescripcion(ciudadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCiudadForeignKeyGenerico(Long idCiudadSeleccionado,JComboBox jComboBoxid_ciudadSubClienteGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(ciudadTemp!=null) {
				jComboBoxid_ciudadSubClienteGenerico.setSelectedItem(ciudadTemp);
			} else {
				if(jComboBoxid_ciudadSubClienteGenerico!=null && jComboBoxid_ciudadSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_ciudadSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualZonaForeignKey(Long idZonaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(zonaTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setZona(zonaTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.setSelectedItem(zonaTemp);
					}
				} else {
					//jComboBoxid_zonaSubCliente.setSelectedItem(zonaTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualZonaForeignKeyDescripcion(Long idZonaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}


			sDescripcion=ZonaConstantesFunciones.getZonaDescripcion(zonaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualZonaForeignKeyGenerico(Long idZonaSeleccionado,JComboBox jComboBoxid_zonaSubClienteGenerico)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(zonaTemp!=null) {
				jComboBoxid_zonaSubClienteGenerico.setSelectedItem(zonaTemp);
			} else {
				if(jComboBoxid_zonaSubClienteGenerico!=null && jComboBoxid_zonaSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_zonaSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisNacionalidadForeignKey(Long idPaisNacionalidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisnacionalidadTemp=null;

			for(Pais paisnacionalidadAux:paisnacionalidadsForeignKey) {
				if(paisnacionalidadAux.getId()!=null && paisnacionalidadAux.getId().equals(idPaisNacionalidadSeleccionado)) {
					paisnacionalidadTemp=paisnacionalidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisnacionalidadTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setPaisNacionalidad(paisnacionalidadTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.setSelectedItem(paisnacionalidadTemp);
					}
				} else {
					//jComboBoxid_pais_nacionalidadSubCliente.setSelectedItem(paisnacionalidadTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisNacionalidadForeignKeyDescripcion(Long idPaisNacionalidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisnacionalidadTemp=null;

			for(Pais paisnacionalidadAux:paisnacionalidadsForeignKey) {
				if(paisnacionalidadAux.getId()!=null && paisnacionalidadAux.getId().equals(idPaisNacionalidadSeleccionado)) {
					paisnacionalidadTemp=paisnacionalidadAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisnacionalidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisNacionalidadForeignKeyGenerico(Long idPaisNacionalidadSeleccionado,JComboBox jComboBoxid_pais_nacionalidadSubClienteGenerico)throws Exception
	{
		try
		{
			Pais  paisnacionalidadTemp=null;

			for(Pais paisnacionalidadAux:paisnacionalidadsForeignKey) {
				if(paisnacionalidadAux.getId()!=null && paisnacionalidadAux.getId().equals(idPaisNacionalidadSeleccionado)) {
					paisnacionalidadTemp=paisnacionalidadAux;
					break;
				}
			}

			if(paisnacionalidadTemp!=null) {
				jComboBoxid_pais_nacionalidadSubClienteGenerico.setSelectedItem(paisnacionalidadTemp);
			} else {
				if(jComboBoxid_pais_nacionalidadSubClienteGenerico!=null && jComboBoxid_pais_nacionalidadSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_pais_nacionalidadSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoGeneroForeignKey(Long idTipoGeneroSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipogeneroTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setTipoGenero(tipogeneroTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.setSelectedItem(tipogeneroTemp);
					}
				} else {
					//jComboBoxid_tipo_generoSubCliente.setSelectedItem(tipogeneroTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoGeneroForeignKeyDescripcion(Long idTipoGeneroSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}


			sDescripcion=TipoGeneroConstantesFunciones.getTipoGeneroDescripcion(tipogeneroTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoGeneroForeignKeyGenerico(Long idTipoGeneroSeleccionado,JComboBox jComboBoxid_tipo_generoSubClienteGenerico)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}

			if(tipogeneroTemp!=null) {
				jComboBoxid_tipo_generoSubClienteGenerico.setSelectedItem(tipogeneroTemp);
			} else {
				if(jComboBoxid_tipo_generoSubClienteGenerico!=null && jComboBoxid_tipo_generoSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_generoSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoCivilForeignKey(Long idEstadoCivilSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadocivilTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setEstadoCivil(estadocivilTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.setSelectedItem(estadocivilTemp);
					}
				} else {
					//jComboBoxid_estado_civilSubCliente.setSelectedItem(estadocivilTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoCivil") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadocivilTemp!=null && jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente!=null) {
						jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.setSelectedItem(estadocivilTemp);
					} else {
						if(jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente!=null) {
							//jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.setSelectedItem(estadocivilTemp);
							if(jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.getItemCount()>0) {
								jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoCivilForeignKeyDescripcion(Long idEstadoCivilSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}


			sDescripcion=EstadoCivilConstantesFunciones.getEstadoCivilDescripcion(estadocivilTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoCivilForeignKeyGenerico(Long idEstadoCivilSeleccionado,JComboBox jComboBoxid_estado_civilSubClienteGenerico)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}

			if(estadocivilTemp!=null) {
				jComboBoxid_estado_civilSubClienteGenerico.setSelectedItem(estadocivilTemp);
			} else {
				if(jComboBoxid_estado_civilSubClienteGenerico!=null && jComboBoxid_estado_civilSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_estado_civilSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoLegalForeignKey(Long idEstadoLegalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoLegal  estadolegalTemp=null;

			for(EstadoLegal estadolegalAux:estadolegalsForeignKey) {
				if(estadolegalAux.getId()!=null && estadolegalAux.getId().equals(idEstadoLegalSeleccionado)) {
					estadolegalTemp=estadolegalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadolegalTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setEstadoLegal(estadolegalTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.setSelectedItem(estadolegalTemp);
					}
				} else {
					//jComboBoxid_estado_legalSubCliente.setSelectedItem(estadolegalTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoLegal") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadolegalTemp!=null && jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente!=null) {
						jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.setSelectedItem(estadolegalTemp);
					} else {
						if(jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente!=null) {
							//jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.setSelectedItem(estadolegalTemp);
							if(jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.getItemCount()>0) {
								jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoLegalForeignKeyDescripcion(Long idEstadoLegalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoLegal  estadolegalTemp=null;

			for(EstadoLegal estadolegalAux:estadolegalsForeignKey) {
				if(estadolegalAux.getId()!=null && estadolegalAux.getId().equals(idEstadoLegalSeleccionado)) {
					estadolegalTemp=estadolegalAux;
					break;
				}
			}


			sDescripcion=EstadoLegalConstantesFunciones.getEstadoLegalDescripcion(estadolegalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoLegalForeignKeyGenerico(Long idEstadoLegalSeleccionado,JComboBox jComboBoxid_estado_legalSubClienteGenerico)throws Exception
	{
		try
		{
			EstadoLegal  estadolegalTemp=null;

			for(EstadoLegal estadolegalAux:estadolegalsForeignKey) {
				if(estadolegalAux.getId()!=null && estadolegalAux.getId().equals(idEstadoLegalSeleccionado)) {
					estadolegalTemp=estadolegalAux;
					break;
				}
			}

			if(estadolegalTemp!=null) {
				jComboBoxid_estado_legalSubClienteGenerico.setSelectedItem(estadolegalTemp);
			} else {
				if(jComboBoxid_estado_legalSubClienteGenerico!=null && jComboBoxid_estado_legalSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_estado_legalSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoNivelEduForeignKey(Long idTipoNivelEduSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoNivelEdu  tiponiveleduTemp=null;

			for(TipoNivelEdu tiponiveleduAux:tiponiveledusForeignKey) {
				if(tiponiveleduAux.getId()!=null && tiponiveleduAux.getId().equals(idTipoNivelEduSeleccionado)) {
					tiponiveleduTemp=tiponiveleduAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiponiveleduTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setTipoNivelEdu(tiponiveleduTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.setSelectedItem(tiponiveleduTemp);
					}
				} else {
					//jComboBoxid_tipo_nivel_eduSubCliente.setSelectedItem(tiponiveleduTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoNivelEduForeignKeyDescripcion(Long idTipoNivelEduSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoNivelEdu  tiponiveleduTemp=null;

			for(TipoNivelEdu tiponiveleduAux:tiponiveledusForeignKey) {
				if(tiponiveleduAux.getId()!=null && tiponiveleduAux.getId().equals(idTipoNivelEduSeleccionado)) {
					tiponiveleduTemp=tiponiveleduAux;
					break;
				}
			}


			sDescripcion=TipoNivelEduConstantesFunciones.getTipoNivelEduDescripcion(tiponiveleduTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoNivelEduForeignKeyGenerico(Long idTipoNivelEduSeleccionado,JComboBox jComboBoxid_tipo_nivel_eduSubClienteGenerico)throws Exception
	{
		try
		{
			TipoNivelEdu  tiponiveleduTemp=null;

			for(TipoNivelEdu tiponiveleduAux:tiponiveledusForeignKey) {
				if(tiponiveleduAux.getId()!=null && tiponiveleduAux.getId().equals(idTipoNivelEduSeleccionado)) {
					tiponiveleduTemp=tiponiveleduAux;
					break;
				}
			}

			if(tiponiveleduTemp!=null) {
				jComboBoxid_tipo_nivel_eduSubClienteGenerico.setSelectedItem(tiponiveleduTemp);
			} else {
				if(jComboBoxid_tipo_nivel_eduSubClienteGenerico!=null && jComboBoxid_tipo_nivel_eduSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_nivel_eduSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.subcliente!=null) {
						this.subcliente.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contableSubCliente.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contableSubClienteGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contableSubClienteGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contableSubClienteGenerico!=null && jComboBoxid_cuenta_contableSubClienteGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contableSubClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(SubCliente subcliente,JComboBox jComboBoxid_empresaSubClienteGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaSubClienteGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaSubClienteGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				subcliente.setid_empresa(empresaAux.getId());
				subcliente.setempresa_descripcion(SubClienteConstantesFunciones.getEmpresaDescripcion(empresaAux));
				subcliente.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(SubCliente subcliente,JComboBox jComboBoxid_clienteSubClienteGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteSubClienteGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteSubClienteGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				subcliente.setid_cliente(clienteAux.getId());
				subcliente.setcliente_descripcion(SubClienteConstantesFunciones.getClienteDescripcion(clienteAux));
				subcliente.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(SubCliente subcliente,JComboBox jComboBoxid_sucursalSubClienteGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalSubClienteGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalSubClienteGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				subcliente.setid_sucursal(sucursalAux.getId());
				subcliente.setsucursal_descripcion(SubClienteConstantesFunciones.getSucursalDescripcion(sucursalAux));
				subcliente.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoIdentificacionForeignKey(SubCliente subcliente,JComboBox jComboBoxid_tipo_identificacionSubClienteGenerico)throws Exception
	{
		try
		{
			TipoIdentificacion  tipoidentificacionAux=new TipoIdentificacion();

			if(jComboBoxid_tipo_identificacionSubClienteGenerico==null) {
				tipoidentificacionAux=(TipoIdentificacion)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.getSelectedItem();
			} else {
				tipoidentificacionAux=(TipoIdentificacion)jComboBoxid_tipo_identificacionSubClienteGenerico.getSelectedItem();
			}

			if(tipoidentificacionAux!=null && tipoidentificacionAux.getId()!=null) {
				subcliente.setid_tipo_identificacion(tipoidentificacionAux.getId());
				subcliente.settipoidentificacion_descripcion(SubClienteConstantesFunciones.getTipoIdentificacionDescripcion(tipoidentificacionAux));
				subcliente.setTipoIdentificacion(tipoidentificacionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisForeignKey(SubCliente subcliente,JComboBox jComboBoxid_paisSubClienteGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_paisSubClienteGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_paisSubClienteGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				subcliente.setid_pais(paisAux.getId());
				subcliente.setpais_descripcion(SubClienteConstantesFunciones.getPaisDescripcion(paisAux));
				subcliente.setPais(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCiudadForeignKey(SubCliente subcliente,JComboBox jComboBoxid_ciudadSubClienteGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadAux=new Ciudad();

			if(jComboBoxid_ciudadSubClienteGenerico==null) {
				ciudadAux=(Ciudad)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.getSelectedItem();
			} else {
				ciudadAux=(Ciudad)jComboBoxid_ciudadSubClienteGenerico.getSelectedItem();
			}

			if(ciudadAux!=null && ciudadAux.getId()!=null) {
				subcliente.setid_ciudad(ciudadAux.getId());
				subcliente.setciudad_descripcion(SubClienteConstantesFunciones.getCiudadDescripcion(ciudadAux));
				subcliente.setCiudad(ciudadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarZonaForeignKey(SubCliente subcliente,JComboBox jComboBoxid_zonaSubClienteGenerico)throws Exception
	{
		try
		{
			Zona  zonaAux=new Zona();

			if(jComboBoxid_zonaSubClienteGenerico==null) {
				zonaAux=(Zona)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.getSelectedItem();
			} else {
				zonaAux=(Zona)jComboBoxid_zonaSubClienteGenerico.getSelectedItem();
			}

			if(zonaAux!=null && zonaAux.getId()!=null) {
				subcliente.setid_zona(zonaAux.getId());
				subcliente.setzona_descripcion(SubClienteConstantesFunciones.getZonaDescripcion(zonaAux));
				subcliente.setZona(zonaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisNacionalidadForeignKey(SubCliente subcliente,JComboBox jComboBoxid_pais_nacionalidadSubClienteGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_pais_nacionalidadSubClienteGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_pais_nacionalidadSubClienteGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				subcliente.setid_pais_nacionalidad(paisAux.getId());
				subcliente.setpaisnacionalidad_descripcion(SubClienteConstantesFunciones.getPaisNacionalidadDescripcion(paisAux));
				subcliente.setPaisNacionalidad(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoGeneroForeignKey(SubCliente subcliente,JComboBox jComboBoxid_tipo_generoSubClienteGenerico)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroAux=new TipoGenero();

			if(jComboBoxid_tipo_generoSubClienteGenerico==null) {
				tipogeneroAux=(TipoGenero)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.getSelectedItem();
			} else {
				tipogeneroAux=(TipoGenero)jComboBoxid_tipo_generoSubClienteGenerico.getSelectedItem();
			}

			if(tipogeneroAux!=null && tipogeneroAux.getId()!=null) {
				subcliente.setid_tipo_genero(tipogeneroAux.getId());
				subcliente.settipogenero_descripcion(SubClienteConstantesFunciones.getTipoGeneroDescripcion(tipogeneroAux));
				subcliente.setTipoGenero(tipogeneroAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoCivilForeignKey(SubCliente subcliente,JComboBox jComboBoxid_estado_civilSubClienteGenerico)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilAux=new EstadoCivil();

			if(jComboBoxid_estado_civilSubClienteGenerico==null) {
				estadocivilAux=(EstadoCivil)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.getSelectedItem();
			} else {
				estadocivilAux=(EstadoCivil)jComboBoxid_estado_civilSubClienteGenerico.getSelectedItem();
			}

			if(estadocivilAux!=null && estadocivilAux.getId()!=null) {
				subcliente.setid_estado_civil(estadocivilAux.getId());
				subcliente.setestadocivil_descripcion(SubClienteConstantesFunciones.getEstadoCivilDescripcion(estadocivilAux));
				subcliente.setEstadoCivil(estadocivilAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoLegalForeignKey(SubCliente subcliente,JComboBox jComboBoxid_estado_legalSubClienteGenerico)throws Exception
	{
		try
		{
			EstadoLegal  estadolegalAux=new EstadoLegal();

			if(jComboBoxid_estado_legalSubClienteGenerico==null) {
				estadolegalAux=(EstadoLegal)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.getSelectedItem();
			} else {
				estadolegalAux=(EstadoLegal)jComboBoxid_estado_legalSubClienteGenerico.getSelectedItem();
			}

			if(estadolegalAux!=null && estadolegalAux.getId()!=null) {
				subcliente.setid_estado_legal(estadolegalAux.getId());
				subcliente.setestadolegal_descripcion(SubClienteConstantesFunciones.getEstadoLegalDescripcion(estadolegalAux));
				subcliente.setEstadoLegal(estadolegalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoNivelEduForeignKey(SubCliente subcliente,JComboBox jComboBoxid_tipo_nivel_eduSubClienteGenerico)throws Exception
	{
		try
		{
			TipoNivelEdu  tiponiveleduAux=new TipoNivelEdu();

			if(jComboBoxid_tipo_nivel_eduSubClienteGenerico==null) {
				tiponiveleduAux=(TipoNivelEdu)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.getSelectedItem();
			} else {
				tiponiveleduAux=(TipoNivelEdu)jComboBoxid_tipo_nivel_eduSubClienteGenerico.getSelectedItem();
			}

			if(tiponiveleduAux!=null && tiponiveleduAux.getId()!=null) {
				subcliente.setid_tipo_nivel_edu(tiponiveleduAux.getId());
				subcliente.settiponiveledu_descripcion(SubClienteConstantesFunciones.getTipoNivelEduDescripcion(tiponiveleduAux));
				subcliente.setTipoNivelEdu(tiponiveleduAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(SubCliente subcliente,JComboBox jComboBoxid_cuenta_contableSubClienteGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contableSubClienteGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contableSubClienteGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				subcliente.setid_cuenta_contable(cuentacontableAux.getId());
				subcliente.setcuentacontable_descripcion(SubClienteConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				subcliente.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteSubCliente.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteSubCliente.addItem(cliente);
							}
						}

						if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoIdentificacionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoIdentificacion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.removeAllItems();

							for(TipoIdentificacion tipoidentificacion:this.tipoidentificacionsForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.addItem(tipoidentificacion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoIdentificacion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.removeAllItems();

							for(TipoIdentificacion tipoidentificacion:this.tipoidentificacionsForeignKey) {
								this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.addItem(tipoidentificacion);
							}
						}

						if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaissForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.addItem(pais);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCiudadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCiudad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.addItem(ciudad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameZonasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingZona=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.addItem(zona);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaisNacionalidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.removeAllItems();

							for(Pais paisnacionalidad:this.paisnacionalidadsForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.addItem(paisnacionalidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoGenerosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoGenero=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.removeAllItems();

							for(TipoGenero tipogenero:this.tipogenerosForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.addItem(tipogenero);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoCivilsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoCivil=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.removeAllItems();

							for(EstadoCivil estadocivil:this.estadocivilsForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.addItem(estadocivil);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoCivil") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.removeAllItems();

							for(EstadoCivil estadocivil:this.estadocivilsForeignKey) {
								this.jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.addItem(estadocivil);
							}
						}

						if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoLegalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoLegal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.removeAllItems();

							for(EstadoLegal estadolegal:this.estadolegalsForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.addItem(estadolegal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoLegal") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.removeAllItems();

							for(EstadoLegal estadolegal:this.estadolegalsForeignKey) {
								this.jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.addItem(estadolegal);
							}
						}

						if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoNivelEdusForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoNivelEdu=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.removeAllItems();

							for(TipoNivelEdu tiponiveledu:this.tiponiveledusForeignKey) {
								if(tiponiveledu.getes_defecto()) {
									this.subclienteBean.setid_tipo_nivel_edu(tiponiveledu.getId());
								}

								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.addItem(tiponiveledu);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) { 
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormSubCliente!=null) { 
					}

					if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteSubCliente.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteSubCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoIdentificacionForeignKey(TipoIdentificacion tipoidentificacion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.setSelectedItem(tipoidentificacion);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.setSelectedItem(tipoidentificacion);
						} else {
							this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisForeignKey(Pais pais,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.setSelectedItem(pais);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCiudadForeignKey(Ciudad ciudad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.setSelectedItem(ciudad);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameZonaForeignKey(Zona zona,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.setSelectedItem(zona);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisNacionalidadForeignKey(Pais paisnacionalidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.setSelectedItem(paisnacionalidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoGeneroForeignKey(TipoGenero tipogenero,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.setSelectedItem(tipogenero);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoCivilForeignKey(EstadoCivil estadocivil,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.setSelectedItem(estadocivil);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.setSelectedItem(estadocivil);
						} else {
							this.jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoLegalForeignKey(EstadoLegal estadolegal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.setSelectedItem(estadolegal);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.setSelectedItem(estadolegal);
						} else {
							this.jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoNivelEduForeignKey(TipoNivelEdu tiponiveledu,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.setSelectedItem(tiponiveledu);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormSubCliente!=null) {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesSubCliente() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			SubClienteConstantesFunciones.refrescarForeignKeysDescripcionesSubCliente(this.subclienteLogic.getSubClientes());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			SubClienteConstantesFunciones.refrescarForeignKeysDescripcionesSubCliente(this.subclientes);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(TipoIdentificacion.class));
		classes.add(new Classe(Pais.class));
		classes.add(new Classe(Ciudad.class));
		classes.add(new Classe(Zona.class));
		classes.add(new Classe(TipoGenero.class));
		classes.add(new Classe(EstadoCivil.class));
		classes.add(new Classe(EstadoLegal.class));
		classes.add(new Classe(TipoNivelEdu.class));
		classes.add(new Classe(CuentaContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//subclienteLogic.setSubClientes(this.subclientes);
			subclienteLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public SubClienteParameterReturnGeneral getSubClienteParameterGeneral() {
		return this.subclienteParameterGeneral;
	}
	
	public void setSubClienteParameterGeneral(SubClienteParameterReturnGeneral subclienteParameterGeneral) {
		this.subclienteParameterGeneral = subclienteParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoSubCliente() {
		return isPermisoTodoSubCliente;
	}

	public void setIsPermisoTodoSubCliente(Boolean isPermisoTodoSubCliente) {
		this.isPermisoTodoSubCliente = isPermisoTodoSubCliente;
	}

	public Boolean getIsPermisoNuevoSubCliente() {
		return isPermisoNuevoSubCliente;
	}

	public void setIsPermisoNuevoSubCliente(Boolean isPermisoNuevoSubCliente) {
		this.isPermisoNuevoSubCliente = isPermisoNuevoSubCliente;
	}

	public Boolean getIsPermisoActualizarSubCliente() {
		return isPermisoActualizarSubCliente;
	}

	public void setIsPermisoActualizarSubCliente(Boolean isPermisoActualizarSubCliente) {
		this.isPermisoActualizarSubCliente = isPermisoActualizarSubCliente;
	}

	public Boolean getIsPermisoEliminarSubCliente() {
		return isPermisoEliminarSubCliente;
	}

	public void setIsPermisoEliminarSubCliente(Boolean isPermisoEliminarSubCliente) {
		this.isPermisoEliminarSubCliente = isPermisoEliminarSubCliente;
	}

	public Boolean getIsPermisoGuardarCambiosSubCliente() {
		return isPermisoGuardarCambiosSubCliente;
	}

	public void setIsPermisoGuardarCambiosSubCliente(Boolean isPermisoGuardarCambiosSubCliente) {
		this.isPermisoGuardarCambiosSubCliente = isPermisoGuardarCambiosSubCliente;
	}
	
	public Boolean getIsPermisoConsultaSubCliente() {
		return isPermisoConsultaSubCliente;
	}

	public void setIsPermisoConsultaSubCliente(Boolean isPermisoConsultaSubCliente) {
		this.isPermisoConsultaSubCliente = isPermisoConsultaSubCliente;
	}

	public Boolean getIsPermisoBusquedaSubCliente() {
		return isPermisoBusquedaSubCliente;
	}

	public void setIsPermisoBusquedaSubCliente(Boolean isPermisoBusquedaSubCliente) {
		this.isPermisoBusquedaSubCliente = isPermisoBusquedaSubCliente;
	}

	public Boolean getIsPermisoReporteSubCliente() {
		return isPermisoReporteSubCliente;
	}

	public void setIsPermisoReporteSubCliente(Boolean isPermisoReporteSubCliente) {
		this.isPermisoReporteSubCliente = isPermisoReporteSubCliente;
	}
	
	public Boolean getIsPermisoPaginacionMedioSubCliente() {
		return isPermisoPaginacionMedioSubCliente;
	}

	public void setIsPermisoPaginacionMedioSubCliente(Boolean isPermisoPaginacionMedioSubCliente) {
		this.isPermisoPaginacionMedioSubCliente = isPermisoPaginacionMedioSubCliente;
	}
	
	public Boolean getIsPermisoPaginacionTodoSubCliente() {
		return isPermisoPaginacionTodoSubCliente;
	}

	public void setIsPermisoPaginacionTodoSubCliente(Boolean isPermisoPaginacionTodoSubCliente) {
		this.isPermisoPaginacionTodoSubCliente = isPermisoPaginacionTodoSubCliente;
	}
	
	public Boolean getIsPermisoPaginacionAltoSubCliente() {
		return isPermisoPaginacionAltoSubCliente;
	}

	public void setIsPermisoPaginacionAltoSubCliente(Boolean isPermisoPaginacionAltoSubCliente) {
		this.isPermisoPaginacionAltoSubCliente = isPermisoPaginacionAltoSubCliente;
	}
	
	public Boolean getIsPermisoCopiarSubCliente() {
		return isPermisoCopiarSubCliente;
	}

	public void setIsPermisoCopiarSubCliente(Boolean isPermisoCopiarSubCliente) {
		this.isPermisoCopiarSubCliente = isPermisoCopiarSubCliente;
	}
	
	public Boolean getIsPermisoVerFormSubCliente() {
		return isPermisoVerFormSubCliente;
	}

	public void setIsPermisoVerFormSubCliente(Boolean isPermisoVerFormSubCliente) {
		this.isPermisoVerFormSubCliente = isPermisoVerFormSubCliente;
	}
	
	public Boolean getIsPermisoDuplicarSubCliente() {
		return isPermisoDuplicarSubCliente;
	}

	public void setIsPermisoDuplicarSubCliente(Boolean isPermisoDuplicarSubCliente) {
		this.isPermisoDuplicarSubCliente = isPermisoDuplicarSubCliente;
	}
	
	public Boolean getIsPermisoOrdenSubCliente() {
		return isPermisoOrdenSubCliente;
	}

	public void setIsPermisoOrdenSubCliente(Boolean isPermisoOrdenSubCliente) {
		this.isPermisoOrdenSubCliente = isPermisoOrdenSubCliente;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoSubCliente() {
		return isVisibilidadCeldaNuevoSubCliente;
	}

	public void setIsVisibilidadCeldaNuevoSubCliente(Boolean isVisibilidadCeldaNuevoSubCliente) {
		this.isVisibilidadCeldaNuevoSubCliente = isVisibilidadCeldaNuevoSubCliente;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarSubCliente() {
		return isVisibilidadCeldaDuplicarSubCliente;
	}

	public void setIsVisibilidadCeldaDuplicarSubCliente(Boolean isVisibilidadCeldaDuplicarSubCliente) {
		this.isVisibilidadCeldaDuplicarSubCliente = isVisibilidadCeldaDuplicarSubCliente;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarSubCliente() {
		return isVisibilidadCeldaCopiarSubCliente;
	}

	public void setIsVisibilidadCeldaCopiarSubCliente(Boolean isVisibilidadCeldaCopiarSubCliente) {
		this.isVisibilidadCeldaCopiarSubCliente = isVisibilidadCeldaCopiarSubCliente;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormSubCliente() {
		return isVisibilidadCeldaVerFormSubCliente;
	}

	public void setIsVisibilidadCeldaVerFormSubCliente(Boolean isVisibilidadCeldaVerFormSubCliente) {
		this.isVisibilidadCeldaVerFormSubCliente = isVisibilidadCeldaVerFormSubCliente;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenSubCliente() {
		return isVisibilidadCeldaOrdenSubCliente;
	}

	public void setIsVisibilidadCeldaOrdenSubCliente(Boolean isVisibilidadCeldaOrdenSubCliente) {
		this.isVisibilidadCeldaOrdenSubCliente = isVisibilidadCeldaOrdenSubCliente;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesSubCliente() {
		return isVisibilidadCeldaNuevoRelacionesSubCliente;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesSubCliente(Boolean isVisibilidadCeldaNuevoRelacionesSubCliente) {
		this.isVisibilidadCeldaNuevoRelacionesSubCliente = isVisibilidadCeldaNuevoRelacionesSubCliente;
	}
	
	public Boolean getIsVisibilidadCeldaModificarSubCliente() {
		return isVisibilidadCeldaModificarSubCliente;
	}

	public void setIsVisibilidadCeldaModificarSubCliente(Boolean isVisibilidadCeldaModificarSubCliente) {
		this.isVisibilidadCeldaModificarSubCliente = isVisibilidadCeldaModificarSubCliente;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarSubCliente() {
		return isVisibilidadCeldaActualizarSubCliente;
	}

	public void setIsVisibilidadCeldaActualizarSubCliente(Boolean isVisibilidadCeldaActualizarSubCliente) {
		this.isVisibilidadCeldaActualizarSubCliente = isVisibilidadCeldaActualizarSubCliente;
	}

	public Boolean getIsVisibilidadCeldaEliminarSubCliente() {
		return isVisibilidadCeldaEliminarSubCliente;
	}

	public void setIsVisibilidadCeldaEliminarSubCliente(Boolean isVisibilidadCeldaEliminarSubCliente) {
		this.isVisibilidadCeldaEliminarSubCliente = isVisibilidadCeldaEliminarSubCliente;
	}

	public Boolean getIsVisibilidadCeldaCancelarSubCliente() {
		return isVisibilidadCeldaCancelarSubCliente;
	}

	public void setIsVisibilidadCeldaCancelarSubCliente(Boolean isVisibilidadCeldaCancelarSubCliente) {
		this.isVisibilidadCeldaCancelarSubCliente = isVisibilidadCeldaCancelarSubCliente;
	}

	public Boolean getIsVisibilidadCeldaGuardarSubCliente() {
		return isVisibilidadCeldaGuardarSubCliente;
	}

	public void setIsVisibilidadCeldaGuardarSubCliente(Boolean isVisibilidadCeldaGuardarSubCliente) {
		this.isVisibilidadCeldaGuardarSubCliente = isVisibilidadCeldaGuardarSubCliente;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosSubCliente() {
		return isVisibilidadCeldaGuardarCambiosSubCliente;
	}

	public void setIsVisibilidadCeldaGuardarCambiosSubCliente(Boolean isVisibilidadCeldaGuardarCambiosSubCliente) {
		this.isVisibilidadCeldaGuardarCambiosSubCliente = isVisibilidadCeldaGuardarCambiosSubCliente;
	}
		
	public SubClienteSessionBean getsubclienteSessionBean() {
		return this.subclienteSessionBean;
	}
	
	public void setsubclienteSessionBean(SubClienteSessionBean subclienteSessionBean) {
		this.subclienteSessionBean=subclienteSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorIdentificacion() {
		return this.isVisibilidadBusquedaPorIdentificacion;
	}

	public void setisVisibilidadBusquedaPorIdentificacion(Boolean isVisibilidadBusquedaPorIdentificacion) {
		this.isVisibilidadBusquedaPorIdentificacion=isVisibilidadBusquedaPorIdentificacion;
	}

	public Boolean getisVisibilidadBusquedaPorNombreCompleto() {
		return this.isVisibilidadBusquedaPorNombreCompleto;
	}

	public void setisVisibilidadBusquedaPorNombreCompleto(Boolean isVisibilidadBusquedaPorNombreCompleto) {
		this.isVisibilidadBusquedaPorNombreCompleto=isVisibilidadBusquedaPorNombreCompleto;
	}

	public Boolean getisVisibilidadBusquedaPorRuc() {
		return this.isVisibilidadBusquedaPorRuc;
	}

	public void setisVisibilidadBusquedaPorRuc(Boolean isVisibilidadBusquedaPorRuc) {
		this.isVisibilidadBusquedaPorRuc=isVisibilidadBusquedaPorRuc;
	}

	public Boolean getisVisibilidadFK_IdCiudad() {
		return this.isVisibilidadFK_IdCiudad;
	}

	public void setisVisibilidadFK_IdCiudad(Boolean isVisibilidadFK_IdCiudad) {
		this.isVisibilidadFK_IdCiudad=isVisibilidadFK_IdCiudad;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdCuentaContable() {
		return this.isVisibilidadFK_IdCuentaContable;
	}

	public void setisVisibilidadFK_IdCuentaContable(Boolean isVisibilidadFK_IdCuentaContable) {
		this.isVisibilidadFK_IdCuentaContable=isVisibilidadFK_IdCuentaContable;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoCivil() {
		return this.isVisibilidadFK_IdEstadoCivil;
	}

	public void setisVisibilidadFK_IdEstadoCivil(Boolean isVisibilidadFK_IdEstadoCivil) {
		this.isVisibilidadFK_IdEstadoCivil=isVisibilidadFK_IdEstadoCivil;
	}

	public Boolean getisVisibilidadFK_IdEstadoLegal() {
		return this.isVisibilidadFK_IdEstadoLegal;
	}

	public void setisVisibilidadFK_IdEstadoLegal(Boolean isVisibilidadFK_IdEstadoLegal) {
		this.isVisibilidadFK_IdEstadoLegal=isVisibilidadFK_IdEstadoLegal;
	}

	public Boolean getisVisibilidadFK_IdPais() {
		return this.isVisibilidadFK_IdPais;
	}

	public void setisVisibilidadFK_IdPais(Boolean isVisibilidadFK_IdPais) {
		this.isVisibilidadFK_IdPais=isVisibilidadFK_IdPais;
	}

	public Boolean getisVisibilidadFK_IdPaisNacionalidad() {
		return this.isVisibilidadFK_IdPaisNacionalidad;
	}

	public void setisVisibilidadFK_IdPaisNacionalidad(Boolean isVisibilidadFK_IdPaisNacionalidad) {
		this.isVisibilidadFK_IdPaisNacionalidad=isVisibilidadFK_IdPaisNacionalidad;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoGenero() {
		return this.isVisibilidadFK_IdTipoGenero;
	}

	public void setisVisibilidadFK_IdTipoGenero(Boolean isVisibilidadFK_IdTipoGenero) {
		this.isVisibilidadFK_IdTipoGenero=isVisibilidadFK_IdTipoGenero;
	}

	public Boolean getisVisibilidadFK_IdTipoIdentificacion() {
		return this.isVisibilidadFK_IdTipoIdentificacion;
	}

	public void setisVisibilidadFK_IdTipoIdentificacion(Boolean isVisibilidadFK_IdTipoIdentificacion) {
		this.isVisibilidadFK_IdTipoIdentificacion=isVisibilidadFK_IdTipoIdentificacion;
	}

	public Boolean getisVisibilidadFK_IdTipoNivelEdu() {
		return this.isVisibilidadFK_IdTipoNivelEdu;
	}

	public void setisVisibilidadFK_IdTipoNivelEdu(Boolean isVisibilidadFK_IdTipoNivelEdu) {
		this.isVisibilidadFK_IdTipoNivelEdu=isVisibilidadFK_IdTipoNivelEdu;
	}

	public Boolean getisVisibilidadFK_IdZona() {
		return this.isVisibilidadFK_IdZona;
	}

	public void setisVisibilidadFK_IdZona(Boolean isVisibilidadFK_IdZona) {
		this.isVisibilidadFK_IdZona=isVisibilidadFK_IdZona;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysSubCliente(SubCliente subcliente)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(subcliente,null);
				this.setActualParaGuardarClienteForeignKey(subcliente,null);
				this.setActualParaGuardarSucursalForeignKey(subcliente,null);
				this.setActualParaGuardarTipoIdentificacionForeignKey(subcliente,null);
				this.setActualParaGuardarPaisForeignKey(subcliente,null);
				this.setActualParaGuardarCiudadForeignKey(subcliente,null);
				this.setActualParaGuardarZonaForeignKey(subcliente,null);
				this.setActualParaGuardarPaisNacionalidadForeignKey(subcliente,null);
				this.setActualParaGuardarTipoGeneroForeignKey(subcliente,null);
				this.setActualParaGuardarEstadoCivilForeignKey(subcliente,null);
				this.setActualParaGuardarEstadoLegalForeignKey(subcliente,null);
				this.setActualParaGuardarTipoNivelEduForeignKey(subcliente,null);
				this.setActualParaGuardarCuentaContableForeignKey(subcliente,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(SubCliente subcliente,SubCliente subclienteAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalSubCliente(subcliente);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		subclienteAux.setId(subcliente.getId());
		subclienteAux.setVersionRow(subcliente.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessSubCliente();
		
			int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = subclienteValidator.getInvalidValues(this.subcliente);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			subclienteLogic.setDatosCliente(datosCliente);
			subclienteLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				subclienteAux=new  SubCliente();
				
				subclienteAux.setIsNew(true);
				subclienteAux.setIsChanged(true);
				
				subclienteAux.setSubClienteOriginal(this.subcliente);
				
				subclienteAux.setId(this.subcliente.getId());	
				subclienteAux.setVersionRow(this.subcliente.getVersionRow());	
				subclienteAux.setid_empresa(this.subcliente.getid_empresa());	
				subclienteAux.setid_cliente(this.subcliente.getid_cliente());	
				subclienteAux.setid_sucursal(this.subcliente.getid_sucursal());	
				subclienteAux.setid_tipo_identificacion(this.subcliente.getid_tipo_identificacion());	
				subclienteAux.setidentificacion(this.subcliente.getidentificacion());	
				subclienteAux.setruc(this.subcliente.getruc());	
				subclienteAux.setnombre(this.subcliente.getnombre());	
				subclienteAux.setapellido(this.subcliente.getapellido());	
				subclienteAux.setnombre_completo(this.subcliente.getnombre_completo());	
				subclienteAux.setdireccion(this.subcliente.getdireccion());	
				subclienteAux.settelefono(this.subcliente.gettelefono());	
				subclienteAux.setnumero_celular(this.subcliente.getnumero_celular());	
				subclienteAux.setmail(this.subcliente.getmail());	
				subclienteAux.setfecha_nacimiento(this.subcliente.getfecha_nacimiento());	
				subclienteAux.setfechao(this.subcliente.getfechao());	
				subclienteAux.setobservacion(this.subcliente.getobservacion());	
				subclienteAux.setid_pais(this.subcliente.getid_pais());	
				subclienteAux.setid_ciudad(this.subcliente.getid_ciudad());	
				subclienteAux.setid_zona(this.subcliente.getid_zona());	
				subclienteAux.setid_pais_nacionalidad(this.subcliente.getid_pais_nacionalidad());	
				subclienteAux.setid_tipo_genero(this.subcliente.getid_tipo_genero());	
				subclienteAux.setid_estado_civil(this.subcliente.getid_estado_civil());	
				subclienteAux.setid_estado_legal(this.subcliente.getid_estado_legal());	
				subclienteAux.setid_tipo_nivel_edu(this.subcliente.getid_tipo_nivel_edu());	
				subclienteAux.setpath_imagen_firma(this.subcliente.getpath_imagen_firma());	
				subclienteAux.setid_cuenta_contable(this.subcliente.getid_cuenta_contable());	
				subclienteAux.setnumero_carga(this.subcliente.getnumero_carga());	
				subclienteAux.setlimite_credito(this.subcliente.getlimite_credito());	
				subclienteAux.setdescuento(this.subcliente.getdescuento());	
				subclienteAux.setcodigo_contrato(this.subcliente.getcodigo_contrato());	
				subclienteAux.setvalor_contrato(this.subcliente.getvalor_contrato());	
				subclienteAux.setfecha_inicio(this.subcliente.getfecha_inicio());	
				subclienteAux.setfecha_fin(this.subcliente.getfecha_fin());	
				subclienteAux.setplazo(this.subcliente.getplazo());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.subclienteSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.subclienteSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(subclienteAux,subclienteLogic.getSubClientes());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(subclienteAux,subclientes);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.subclienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.subclienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.saveSubClientes();//WithConnection
						//subclienteLogic.getSetVersionRowSubClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.subcliente,subclienteAux);
					
					this.refrescarForeignKeysDescripcionesSubCliente();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.subclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas().addAll(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturasEliminados);
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions().addAll(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions().addAll(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas().addAll(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors().addAll(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos().addAll(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturas.addAll(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturasEliminados);
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacions.addAll(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisions.addAll(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformas.addAll(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexpors.addAll(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidos.addAll(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidosEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								subclienteLogic.saveSubClienteRelaciones(subclienteAux,this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas(),this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions(),this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions(),this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas(),this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors(),this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos());//WithConnection
								//subclienteLogic.getSetVersionRowSubClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.subcliente,subclienteAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.setFacturas(new ArrayList<Factura>());
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(new ArrayList<Proforma>());
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.setPedidos(new ArrayList<Pedido>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturas= new ArrayList<Factura>();
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacions= new ArrayList<Consignacion>();
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisions= new ArrayList<GuiaRemision>();
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformas= new ArrayList<Proforma>();
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexpors= new ArrayList<PedidoExpor>();
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidos= new ArrayList<Pedido>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setFacturas(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas());

							if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setConsignacions(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());

							if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setGuiaRemisions(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());

							if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setProformas(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());

							if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setPedidoExpors(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());

							if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setPedidos(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.subclienteSessionBean.getEstaModoGuardarRelaciones() 
									|| this.subclienteSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(subclienteAux,subclienteLogic.getSubClientes());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(subclienteAux,subclientes);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.subcliente,subclienteAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				subclienteAux=new  SubCliente();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.subclienteSessionBean.getEsGuardarRelacionado() 
					|| (this.subclienteSessionBean.getEsGuardarRelacionado() && this.subcliente.getId()>=0)) {
						
					subclienteAux.setIsNew(false);
				}
				
				subclienteAux.setIsDeleted(false);
			
				subclienteAux.setId(this.subcliente.getId());	
				subclienteAux.setVersionRow(this.subcliente.getVersionRow());	
				subclienteAux.setid_empresa(this.subcliente.getid_empresa());	
				subclienteAux.setid_cliente(this.subcliente.getid_cliente());	
				subclienteAux.setid_sucursal(this.subcliente.getid_sucursal());	
				subclienteAux.setid_tipo_identificacion(this.subcliente.getid_tipo_identificacion());	
				subclienteAux.setidentificacion(this.subcliente.getidentificacion());	
				subclienteAux.setruc(this.subcliente.getruc());	
				subclienteAux.setnombre(this.subcliente.getnombre());	
				subclienteAux.setapellido(this.subcliente.getapellido());	
				subclienteAux.setnombre_completo(this.subcliente.getnombre_completo());	
				subclienteAux.setdireccion(this.subcliente.getdireccion());	
				subclienteAux.settelefono(this.subcliente.gettelefono());	
				subclienteAux.setnumero_celular(this.subcliente.getnumero_celular());	
				subclienteAux.setmail(this.subcliente.getmail());	
				subclienteAux.setfecha_nacimiento(this.subcliente.getfecha_nacimiento());	
				subclienteAux.setfechao(this.subcliente.getfechao());	
				subclienteAux.setobservacion(this.subcliente.getobservacion());	
				subclienteAux.setid_pais(this.subcliente.getid_pais());	
				subclienteAux.setid_ciudad(this.subcliente.getid_ciudad());	
				subclienteAux.setid_zona(this.subcliente.getid_zona());	
				subclienteAux.setid_pais_nacionalidad(this.subcliente.getid_pais_nacionalidad());	
				subclienteAux.setid_tipo_genero(this.subcliente.getid_tipo_genero());	
				subclienteAux.setid_estado_civil(this.subcliente.getid_estado_civil());	
				subclienteAux.setid_estado_legal(this.subcliente.getid_estado_legal());	
				subclienteAux.setid_tipo_nivel_edu(this.subcliente.getid_tipo_nivel_edu());	
				subclienteAux.setpath_imagen_firma(this.subcliente.getpath_imagen_firma());	
				subclienteAux.setid_cuenta_contable(this.subcliente.getid_cuenta_contable());	
				subclienteAux.setnumero_carga(this.subcliente.getnumero_carga());	
				subclienteAux.setlimite_credito(this.subcliente.getlimite_credito());	
				subclienteAux.setdescuento(this.subcliente.getdescuento());	
				subclienteAux.setcodigo_contrato(this.subcliente.getcodigo_contrato());	
				subclienteAux.setvalor_contrato(this.subcliente.getvalor_contrato());	
				subclienteAux.setfecha_inicio(this.subcliente.getfecha_inicio());	
				subclienteAux.setfecha_fin(this.subcliente.getfecha_fin());	
				subclienteAux.setplazo(this.subcliente.getplazo());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(subclienteAux,subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(subclienteAux,subclientes);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.subclienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.subclienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.saveSubClientes();//WithConnection
						//subclienteLogic.getSetVersionRowSubClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.subcliente,subclienteAux);
					
					this.refrescarForeignKeysDescripcionesSubCliente();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.subclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas().addAll(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturasEliminados);
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions().addAll(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions().addAll(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas().addAll(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors().addAll(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos().addAll(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturas.addAll(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturasEliminados);
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacions.addAll(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisions.addAll(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformas.addAll(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexpors.addAll(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidos.addAll(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidosEliminados);
						}
						//ARCHITECTURE
						
						if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								subclienteLogic.saveSubClienteRelaciones(subclienteAux,this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas(),this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions(),this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions(),this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas(),this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors(),this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos());//WithConnection
								//subclienteLogic.getSetVersionRowSubClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.subcliente,subclienteAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.setFacturas(new ArrayList<Factura>());
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(new ArrayList<Proforma>());
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.setPedidos(new ArrayList<Pedido>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturas= new ArrayList<Factura>();
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacions= new ArrayList<Consignacion>();
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisions= new ArrayList<GuiaRemision>();
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformas= new ArrayList<Proforma>();
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexpors= new ArrayList<PedidoExpor>();
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidos= new ArrayList<Pedido>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setFacturas(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas());

							if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setConsignacions(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());

							if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setGuiaRemisions(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());

							if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setProformas(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());

							if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setPedidoExpors(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());

							if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setPedidos(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.subclienteSessionBean.getEstaModoGuardarRelaciones() 
									|| this.subclienteSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(subclienteAux,subclienteLogic.getSubClientes());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(subclienteAux,subclientes);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.subcliente,subclienteAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				subclienteAux=new  SubCliente();
				
				subclienteAux.setIsNew(false);
				subclienteAux.setIsChanged(false);
				
				subclienteAux.setIsDeleted(true);
				
				subclienteAux.setId(this.subcliente.getId());	
				subclienteAux.setVersionRow(this.subcliente.getVersionRow());	
				subclienteAux.setid_empresa(this.subcliente.getid_empresa());	
				subclienteAux.setid_cliente(this.subcliente.getid_cliente());	
				subclienteAux.setid_sucursal(this.subcliente.getid_sucursal());	
				subclienteAux.setid_tipo_identificacion(this.subcliente.getid_tipo_identificacion());	
				subclienteAux.setidentificacion(this.subcliente.getidentificacion());	
				subclienteAux.setruc(this.subcliente.getruc());	
				subclienteAux.setnombre(this.subcliente.getnombre());	
				subclienteAux.setapellido(this.subcliente.getapellido());	
				subclienteAux.setnombre_completo(this.subcliente.getnombre_completo());	
				subclienteAux.setdireccion(this.subcliente.getdireccion());	
				subclienteAux.settelefono(this.subcliente.gettelefono());	
				subclienteAux.setnumero_celular(this.subcliente.getnumero_celular());	
				subclienteAux.setmail(this.subcliente.getmail());	
				subclienteAux.setfecha_nacimiento(this.subcliente.getfecha_nacimiento());	
				subclienteAux.setfechao(this.subcliente.getfechao());	
				subclienteAux.setobservacion(this.subcliente.getobservacion());	
				subclienteAux.setid_pais(this.subcliente.getid_pais());	
				subclienteAux.setid_ciudad(this.subcliente.getid_ciudad());	
				subclienteAux.setid_zona(this.subcliente.getid_zona());	
				subclienteAux.setid_pais_nacionalidad(this.subcliente.getid_pais_nacionalidad());	
				subclienteAux.setid_tipo_genero(this.subcliente.getid_tipo_genero());	
				subclienteAux.setid_estado_civil(this.subcliente.getid_estado_civil());	
				subclienteAux.setid_estado_legal(this.subcliente.getid_estado_legal());	
				subclienteAux.setid_tipo_nivel_edu(this.subcliente.getid_tipo_nivel_edu());	
				subclienteAux.setpath_imagen_firma(this.subcliente.getpath_imagen_firma());	
				subclienteAux.setid_cuenta_contable(this.subcliente.getid_cuenta_contable());	
				subclienteAux.setnumero_carga(this.subcliente.getnumero_carga());	
				subclienteAux.setlimite_credito(this.subcliente.getlimite_credito());	
				subclienteAux.setdescuento(this.subcliente.getdescuento());	
				subclienteAux.setcodigo_contrato(this.subcliente.getcodigo_contrato());	
				subclienteAux.setvalor_contrato(this.subcliente.getvalor_contrato());	
				subclienteAux.setfecha_inicio(this.subcliente.getfecha_inicio());	
				subclienteAux.setfecha_fin(this.subcliente.getfecha_fin());	
				subclienteAux.setplazo(this.subcliente.getplazo());	
				
				if(this.subclienteSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.subclienteAux.getId()>=0) {	
						this.subclientesEliminados.add(subclienteAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(subclienteAux,subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(subclienteAux,subclientes);
				}
				//ARCHITECTURE
				
				//ELIMINAR ARCHIVOS
				//Funciones.eliminarArchivo(servletContext.getRealPath(this.subcliente.getpath_imagen_firma()));	
				
				if(!isGuardarCambiosEnLote && !this.subclienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.subclienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.saveSubClientes();//WithConnection
						//subclienteLogic.getSetVersionRowSubClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.subclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas().addAll(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturasEliminados);
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions().addAll(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions().addAll(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas().addAll(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors().addAll(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos().addAll(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturas.addAll(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturasEliminados);
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacions.addAll(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisions.addAll(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionsEliminados);
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformas.addAll(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformasEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexpors.addAll(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporsEliminados);
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidos.addAll(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidosEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jInternalFrameDetalleFormGuiaRemision.detalleguiaremisionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								subclienteLogic.saveSubClienteRelaciones(subclienteAux,this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas(),this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions(),this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions(),this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas(),this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors(),this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos());//WithConnection
								//subclienteLogic.getSetVersionRowSubClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.setFacturas(new ArrayList<Factura>());
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(new ArrayList<GuiaRemision>());
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(new ArrayList<Proforma>());
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.setPedidos(new ArrayList<Pedido>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturas= new ArrayList<Factura>();
							this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacions= new ArrayList<Consignacion>();
							this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisions= new ArrayList<GuiaRemision>();
							this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformas= new ArrayList<Proforma>();
							this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexpors= new ArrayList<PedidoExpor>();
							this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidos= new ArrayList<Pedido>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setFacturas(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas());

							if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setConsignacions(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());

							if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setGuiaRemisions(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());

							if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setProformas(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());

							if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setPedidoExpors(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());

							if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.quitarFilaTotales();}
							subclienteAux.setPedidos(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.subclienteSessionBean.getEstaModoGuardarRelaciones() 
								|| this.subclienteSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(subclienteAux,subclienteLogic.getSubClientes());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(subclienteAux,subclientes);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getSubClientes().addAll(this.subclientesEliminados);
					
					subclienteLogic.saveSubClientes();//WithConnection
					//subclienteLogic.getSetVersionRowSubClientes();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesSubCliente();
				
				this.subclientesEliminados= new ArrayList<SubCliente>();		
			}
			
			if(this.subclienteSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.subclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Sub Cliente GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.subcliente=subclienteAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessSubCliente();
      	}
		
	}	
	
	public void actualizarRelaciones(SubCliente subclienteLocal) throws Exception {
		
		if(this.subclienteSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				subclienteLocal.setFacturas(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas());
				subclienteLocal.setConsignacions(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());
				subclienteLocal.setGuiaRemisions(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());
				subclienteLocal.setProformas(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());
				subclienteLocal.setPedidoExpors(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());
				subclienteLocal.setPedidos(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos());
			
			} else {
			
				subclienteLocal.setFacturas(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturas);
				subclienteLocal.setConsignacions(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacions);
				subclienteLocal.setGuiaRemisions(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisions);
				subclienteLocal.setProformas(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformas);
				subclienteLocal.setPedidoExpors(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexpors);
				subclienteLocal.setPedidos(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidos);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(SubCliente subclienteLocal) throws Exception {	
		if(this.subclienteSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				subclienteLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				subclienteLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				subclienteLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoIdentificacionDetalleFormJInternalFrame.class)) {
				TipoIdentificacionBeanSwingJInternalFrame tipoidentificacionBeanSwingJInternalFrameLocal=(TipoIdentificacionBeanSwingJInternalFrame) ((TipoIdentificacionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoidentificacionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoIdentificacion(tipoidentificacionBeanSwingJInternalFrameLocal.gettipoidentificacion(),true);
				tipoidentificacionBeanSwingJInternalFrameLocal.actualizarLista(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion,this.tipoidentificacionsForeignKey);

				tipoidentificacionBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion);

				subclienteLocal.setTipoIdentificacion(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion);

				this.addItemDefectoCombosForeignKeyTipoIdentificacion();
				this.cargarCombosFrameTipoIdentificacionsForeignKey("Formulario");
				this.setActualTipoIdentificacionForeignKey(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisBeanSwingJInternalFrameLocal.getpais(),true);
				paisBeanSwingJInternalFrameLocal.actualizarLista(paisBeanSwingJInternalFrameLocal.pais,this.paissForeignKey);

				paisBeanSwingJInternalFrameLocal.actualizarRelaciones(paisBeanSwingJInternalFrameLocal.pais);

				subclienteLocal.setPais(paisBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey("Formulario");
				this.setActualPaisForeignKey(paisBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CiudadDetalleFormJInternalFrame.class)) {
				CiudadBeanSwingJInternalFrame ciudadBeanSwingJInternalFrameLocal=(CiudadBeanSwingJInternalFrame) ((CiudadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ciudadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCiudad(ciudadBeanSwingJInternalFrameLocal.getciudad(),true);
				ciudadBeanSwingJInternalFrameLocal.actualizarLista(ciudadBeanSwingJInternalFrameLocal.ciudad,this.ciudadsForeignKey);

				ciudadBeanSwingJInternalFrameLocal.actualizarRelaciones(ciudadBeanSwingJInternalFrameLocal.ciudad);

				subclienteLocal.setCiudad(ciudadBeanSwingJInternalFrameLocal.ciudad);

				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey("Formulario");
				this.setActualCiudadForeignKey(ciudadBeanSwingJInternalFrameLocal.ciudad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ZonaDetalleFormJInternalFrame.class)) {
				ZonaBeanSwingJInternalFrame zonaBeanSwingJInternalFrameLocal=(ZonaBeanSwingJInternalFrame) ((ZonaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				zonaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoZona(zonaBeanSwingJInternalFrameLocal.getzona(),true);
				zonaBeanSwingJInternalFrameLocal.actualizarLista(zonaBeanSwingJInternalFrameLocal.zona,this.zonasForeignKey);

				zonaBeanSwingJInternalFrameLocal.actualizarRelaciones(zonaBeanSwingJInternalFrameLocal.zona);

				subclienteLocal.setZona(zonaBeanSwingJInternalFrameLocal.zona);

				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey("Formulario");
				this.setActualZonaForeignKey(zonaBeanSwingJInternalFrameLocal.zona.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisnacionalidadBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisnacionalidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisnacionalidadBeanSwingJInternalFrameLocal.getpais(),true);
				paisnacionalidadBeanSwingJInternalFrameLocal.actualizarLista(paisnacionalidadBeanSwingJInternalFrameLocal.pais,this.paisnacionalidadsForeignKey);

				paisnacionalidadBeanSwingJInternalFrameLocal.actualizarRelaciones(paisnacionalidadBeanSwingJInternalFrameLocal.pais);

				subclienteLocal.setPaisNacionalidad(paisnacionalidadBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPaisNacionalidad();
				this.cargarCombosFramePaisNacionalidadsForeignKey("Formulario");
				this.setActualPaisNacionalidadForeignKey(paisnacionalidadBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoGeneroDetalleFormJInternalFrame.class)) {
				TipoGeneroBeanSwingJInternalFrame tipogeneroBeanSwingJInternalFrameLocal=(TipoGeneroBeanSwingJInternalFrame) ((TipoGeneroDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipogeneroBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoGenero(tipogeneroBeanSwingJInternalFrameLocal.gettipogenero(),true);
				tipogeneroBeanSwingJInternalFrameLocal.actualizarLista(tipogeneroBeanSwingJInternalFrameLocal.tipogenero,this.tipogenerosForeignKey);

				tipogeneroBeanSwingJInternalFrameLocal.actualizarRelaciones(tipogeneroBeanSwingJInternalFrameLocal.tipogenero);

				subclienteLocal.setTipoGenero(tipogeneroBeanSwingJInternalFrameLocal.tipogenero);

				this.addItemDefectoCombosForeignKeyTipoGenero();
				this.cargarCombosFrameTipoGenerosForeignKey("Formulario");
				this.setActualTipoGeneroForeignKey(tipogeneroBeanSwingJInternalFrameLocal.tipogenero.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoCivilDetalleFormJInternalFrame.class)) {
				EstadoCivilBeanSwingJInternalFrame estadocivilBeanSwingJInternalFrameLocal=(EstadoCivilBeanSwingJInternalFrame) ((EstadoCivilDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadocivilBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoCivil(estadocivilBeanSwingJInternalFrameLocal.getestadocivil(),true);
				estadocivilBeanSwingJInternalFrameLocal.actualizarLista(estadocivilBeanSwingJInternalFrameLocal.estadocivil,this.estadocivilsForeignKey);

				estadocivilBeanSwingJInternalFrameLocal.actualizarRelaciones(estadocivilBeanSwingJInternalFrameLocal.estadocivil);

				subclienteLocal.setEstadoCivil(estadocivilBeanSwingJInternalFrameLocal.estadocivil);

				this.addItemDefectoCombosForeignKeyEstadoCivil();
				this.cargarCombosFrameEstadoCivilsForeignKey("Formulario");
				this.setActualEstadoCivilForeignKey(estadocivilBeanSwingJInternalFrameLocal.estadocivil.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoLegalDetalleFormJInternalFrame.class)) {
				EstadoLegalBeanSwingJInternalFrame estadolegalBeanSwingJInternalFrameLocal=(EstadoLegalBeanSwingJInternalFrame) ((EstadoLegalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadolegalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoLegal(estadolegalBeanSwingJInternalFrameLocal.getestadolegal(),true);
				estadolegalBeanSwingJInternalFrameLocal.actualizarLista(estadolegalBeanSwingJInternalFrameLocal.estadolegal,this.estadolegalsForeignKey);

				estadolegalBeanSwingJInternalFrameLocal.actualizarRelaciones(estadolegalBeanSwingJInternalFrameLocal.estadolegal);

				subclienteLocal.setEstadoLegal(estadolegalBeanSwingJInternalFrameLocal.estadolegal);

				this.addItemDefectoCombosForeignKeyEstadoLegal();
				this.cargarCombosFrameEstadoLegalsForeignKey("Formulario");
				this.setActualEstadoLegalForeignKey(estadolegalBeanSwingJInternalFrameLocal.estadolegal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoNivelEduDetalleFormJInternalFrame.class)) {
				TipoNivelEduBeanSwingJInternalFrame tiponiveleduBeanSwingJInternalFrameLocal=(TipoNivelEduBeanSwingJInternalFrame) ((TipoNivelEduDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiponiveleduBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoNivelEdu(tiponiveleduBeanSwingJInternalFrameLocal.gettiponiveledu(),true);
				tiponiveleduBeanSwingJInternalFrameLocal.actualizarLista(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu,this.tiponiveledusForeignKey);

				tiponiveleduBeanSwingJInternalFrameLocal.actualizarRelaciones(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu);

				subclienteLocal.setTipoNivelEdu(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu);

				this.addItemDefectoCombosForeignKeyTipoNivelEdu();
				this.cargarCombosFrameTipoNivelEdusForeignKey("Formulario");
				this.setActualTipoNivelEduForeignKey(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				subclienteLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarSubClienteActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = subclienteValidator.getInvalidValues(this.subcliente);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(SubCliente subcliente,List<SubCliente> subclientes) throws Exception {
		try	{		
			SubClienteConstantesFunciones.actualizarLista(subcliente,subclientes,this.subclienteSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(SubCliente subcliente,List<SubCliente> subclientes) throws Exception {
		try	{			
			SubClienteConstantesFunciones.actualizarSelectedLista(subcliente,subclientes);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<SubCliente> subclientesLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				subclientesLocal=this.subclienteLogic.getSubClientes();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				subclientesLocal=this.subclientes;
			}
			//ARCHITECTURE
		
			for(SubCliente subclienteLocal:subclientesLocal) {
				if(this.permiteMantenimiento(subclienteLocal) && subclienteLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+SubClienteConstantesFunciones.getSubClienteLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_empresaSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_clienteSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_sucursalSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDTIPOIDENTIFICACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_tipo_identificacionSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDENTIFICACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelidentificacionSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelrucSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelnombreSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.APELLIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelapellidoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.NOMBRECOMPLETO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelnombre_completoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.DIRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabeldireccionSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.TELEFONO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabeltelefonoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.NUMEROCELULAR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelnumero_celularSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.MAIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelmailSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.FECHANACIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelfecha_nacimientoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelfechaoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.OBSERVACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelobservacionSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDPAIS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_paisSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDCIUDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_ciudadSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDZONA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_zonaSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDPAISNACIONALIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_pais_nacionalidadSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDTIPOGENERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_tipo_generoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDESTADOCIVIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_estado_civilSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDESTADOLEGAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_estado_legalSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDTIPONIVELEDU)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_tipo_nivel_eduSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.PATHIMAGENFIRMA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelpath_imagen_firmaSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelid_cuenta_contableSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.NUMEROCARGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelnumero_cargaSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.LIMITECREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabellimite_creditoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.DESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabeldescuentoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.CODIGOCONTRATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelcodigo_contratoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.VALORCONTRATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelvalor_contratoSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.FECHAINICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelfecha_inicioSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.FECHAFIN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelfecha_finSubCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(SubClienteConstantesFunciones.PLAZO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelplazoSubCliente,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_empresaSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_clienteSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_sucursalSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_tipo_identificacionSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelidentificacionSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelrucSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelnombreSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelapellidoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelnombre_completoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabeldireccionSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabeltelefonoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelnumero_celularSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelmailSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelfecha_nacimientoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelfechaoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelobservacionSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_paisSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_ciudadSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_zonaSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_pais_nacionalidadSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_tipo_generoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_estado_civilSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_estado_legalSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_tipo_nivel_eduSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelpath_imagen_firmaSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelid_cuenta_contableSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelnumero_cargaSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabellimite_creditoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabeldescuentoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelcodigo_contratoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelvalor_contratoSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelfecha_inicioSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelfecha_finSubCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormSubCliente.jLabelplazoSubCliente,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("Factura")) {
			if(this.subcliente==null) {
				this.subcliente= new SubCliente();
			}

			if(this.subclienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoSubCliente
				this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.getfactura().setSubCliente(this.subcliente);
			}

			return;
		}
		 else  if(sTipo.equals("Consignacion")) {
			if(this.subcliente==null) {
				this.subcliente= new SubCliente();
			}

			if(this.subclienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoSubCliente
				this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.getconsignacion().setSubCliente(this.subcliente);
			}

			return;
		}
		 else  if(sTipo.equals("GuiaRemision")) {
			if(this.subcliente==null) {
				this.subcliente= new SubCliente();
			}

			if(this.subclienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoSubCliente
				this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.getguiaremision().setSubCliente(this.subcliente);
			}

			return;
		}
		 else  if(sTipo.equals("Proforma")) {
			if(this.subcliente==null) {
				this.subcliente= new SubCliente();
			}

			if(this.subclienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoSubCliente
				this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.getproforma().setSubCliente(this.subcliente);
			}

			return;
		}
		 else  if(sTipo.equals("PedidoExpor")) {
			if(this.subcliente==null) {
				this.subcliente= new SubCliente();
			}

			if(this.subclienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoSubCliente
				this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.getpedidoexpor().setSubCliente(this.subcliente);
			}

			return;
		}
		 else  if(sTipo.equals("Pedido")) {
			if(this.subcliente==null) {
				this.subcliente= new SubCliente();
			}

			if(this.subclienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoSubCliente
				this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.getpedido().setSubCliente(this.subcliente);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoSubCliente--;	
		
		
		this.subclienteAux=new SubCliente();
		
		this.subclienteAux.setId(this.iIdNuevoSubCliente);
		this.subclienteAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.subclienteLogic.getSubClientes().add(this.subclienteAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.subclientes.add(this.subclienteAux);
		}
		//ARCHITECTURE
		
		this.subcliente=this.subclienteAux;
		
		if(SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioSubCliente(this.subcliente);
			this.setVariablesObjetoActualToFormularioForeignKeySubCliente(this.subcliente);
		}
				
		//this.setDefaultControlesSubCliente();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeySubCliente();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeySubCliente();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeySubCliente();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualSubCliente(this.subclienteBean,this.subcliente,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(SubClienteConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.subclienteSessionBean.getConGuardarRelaciones()) {
			classes=SubClienteConstantesFunciones.getClassesRelationshipsOfSubCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.subclienteReturnGeneral=subclienteLogic.procesarEventosSubClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.subclienteLogic.getSubClientes(),this.subcliente,this.subclienteParameterGeneral,this.isEsNuevoSubCliente,classes);//this.subclienteLogic.getSubCliente()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanSubCliente(this.subclienteReturnGeneral,this.subclienteBean,false);
		
		if(this.subclienteReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeySubCliente(this.subclienteReturnGeneral.getSubCliente());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioSubCliente(this.subclienteReturnGeneral.getSubCliente());
		}
		
		if(this.subclienteReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioSubCliente(this.subclienteReturnGeneral.getSubCliente(),classes);//this.subclienteBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeySubCliente();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeySubCliente();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			SubClienteBeanSwingJInternalFrameAdditional.RecargarFormSubCliente(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingSubCliente(false);
						
			if(subclienteSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaSessionBean.getEsGuardarRelacionado() && FacturaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFacturaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionSessionBean.getEsGuardarRelacionado() && ConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonConsignacionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.getEsGuardarRelacionado() && GuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGuiaRemisionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaSessionBean.getEsGuardarRelacionado() && ProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProformaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.getEsGuardarRelacionado() && PedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPedidoExporActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoSessionBean.getEsGuardarRelacionado() && PedidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPedidoActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(SubClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualSubCliente();
			}
			
			this.actualizarVisualTableDatosSubCliente();
			
			this.jTableDatosSubCliente.setRowSelectionInterval(this.getIndiceNuevoSubCliente(), this.getIndiceNuevoSubCliente());
			
			this.seleccionarFilaTablaSubClienteActual();
						
			this.actualizarEstadoCeldasBotonesSubCliente("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesSubCliente(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormSubCliente.jTextFieldidentificacionSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activaridentificacionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldrucSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarrucSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreanombreSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarnombreSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreaapellidoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarapellidoSubCliente);//
		this.jInternalFrameDetalleFormSubCliente.jTextAreanombre_completoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarnombre_completoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreadireccionSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activardireccionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreatelefonoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activartelefonoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreanumero_celularSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarnumero_celularSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreamailSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarmailSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_nacimientoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarfecha_nacimientoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jDateChooserfechaoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarfechaoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreaobservacionSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarobservacionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreapath_imagen_firmaSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarpath_imagen_firmaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldnumero_cargaSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarnumero_cargaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldlimite_creditoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarlimite_creditoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFielddescuentoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activardescuentoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldcodigo_contratoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarcodigo_contratoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldvalor_contratoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarvalor_contratoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_inicioSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarfecha_inicioSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_finSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarfecha_finSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldplazoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarplazoSubCliente);	
		//
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_empresaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_clienteSubCliente);//
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_sucursalSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_tipo_identificacionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_paisSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_ciudadSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_zonaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_pais_nacionalidadSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_tipo_generoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_estado_civilSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_estado_legalSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_tipo_nivel_eduSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.setEnabled(isHabilitar && this.subclienteConstantesFunciones.activarid_cuenta_contableSubCliente);
	};
	
	public void setDefaultControlesSubCliente() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoSubCliente(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.subclienteSessionBean.setConGuardarRelaciones(true);			
			this.subclienteSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.subclienteSessionBean.setConGuardarRelaciones(false);			
			this.subclienteSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoSubCliente() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SubCliente subclienteAux:this.subclienteLogic.getSubClientes()) {
				if(subclienteAux.getId().equals(this.iIdNuevoSubCliente)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SubCliente subclienteAux:this.subclientes) {
				if(subclienteAux.getId().equals(this.iIdNuevoSubCliente)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualSubCliente(SubCliente subcliente,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SubCliente subclienteAux:this.subclienteLogic.getSubClientes()) {
				if(subclienteAux.getId().equals(subcliente.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SubCliente subclienteAux:this.subclientes) {
				if(subclienteAux.getId().equals(subcliente.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalSubCliente(SubCliente subclienteOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SubCliente subclienteAux:this.subclienteLogic.getSubClientes()) {
				if(subclienteAux.getSubClienteOriginal().getId().equals(subclienteOriginal.getId())) {
					existe=true;
					subclienteOriginal.setId(subclienteAux.getId());
					subclienteOriginal.setVersionRow(subclienteAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SubCliente subclienteAux:this.subclientes) {
				if(subclienteAux.getSubClienteOriginal().getId().equals(subclienteOriginal.getId())) {
					existe=true;
					subclienteOriginal.setId(subclienteAux.getId());
					subclienteOriginal.setVersionRow(subclienteAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosSubCliente(Boolean esParaCancelar) throws Exception {
		subclientesAux=new ArrayList<SubCliente>();
		subclienteAux=new SubCliente();
		
		if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(SubCliente subclienteAux:this.subclienteLogic.getSubClientes()) {
					if(subclienteAux.getId()<0) {
						subclientesAux.add(subclienteAux);
					}		
				}
				this.iIdNuevoSubCliente=0L;
				this.subclienteLogic.getSubClientes().removeAll(subclientesAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(SubCliente subclienteAux:this.subclientes) {
					if(subclienteAux.getId()<0) {
						subclientesAux.add(subclienteAux);
					}		
				}
				this.iIdNuevoSubCliente=0L;
				this.subclientes.removeAll(subclientesAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoSubCliente 
					&& this.subclienteLogic.getSubClientes().size()>0
					) {
					subclienteAux=this.subclienteLogic.getSubClientes().get(this.subclienteLogic.getSubClientes().size() - 1);
				
					if(subclienteAux.getId()<0) {
						this.subclienteLogic.getSubClientes().remove(subclienteAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoSubCliente && this.subclientes.size()>0) {
					subclienteAux=this.subclientes.get(this.subclientes.size() - 1);
				
					if(subclienteAux.getId()<0) {
						this.subclientes.remove(subclienteAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoSubCliente(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(subcliente.getId()<0) {
				this.subclienteLogic.getSubClientes().remove(this.subcliente);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(subcliente.getId()<0) {
				this.subclientes.remove(this.subcliente);
			}
		}			
	}
	
	public void setEstadosInicialesSubCliente(List<SubCliente> subclientesAux) throws Exception {
		SubClienteConstantesFunciones.setEstadosInicialesSubCliente(subclientesAux);
	}
	
	public void setEstadosInicialesSubCliente(SubCliente subclienteAux) throws Exception {
		SubClienteConstantesFunciones.setEstadosInicialesSubCliente(subclienteAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarSubClienteActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesSubCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarSubClienteActual()) {
				if(!this.isEsNuevoSubCliente) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesSubCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoSubCliente=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarSubClienteActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Sub Cliente ?", "MANTENIMIENTO DE Sub Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesSubCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(SubCliente subcliente) throws Exception {
		SubClienteConstantesFunciones.seleccionarAsignar(this.subcliente,subcliente);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarSubCliente=this.isPermisoActualizarOriginalSubCliente;
			
			
			this.seleccionarAsignar(subcliente);
			
			

			idClienteActual=subcliente.getid_cliente();
			this.seleccionarClienteActual();

			idCuentaContableActual=subcliente.getid_cuenta_contable();
			this.seleccionarCuentaContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			SubClienteConstantesFunciones.quitarEspaciosSubCliente(this.subcliente,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesSubCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.subclienteSessionBean.setsFuncionBusquedaRapida(this.subclienteSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableActual() throws Exception {
		try	{
			CuentaContable cuentacontableAux=new CuentaContable();

			if(this.idCuentaContableActual != null && this.idCuentaContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(this.idCuentaContableActual);
					cuentacontableAux= cuentacontableLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablesForeignKey=new ArrayList<CuentaContable>();
				cuentacontablesForeignKey.add(cuentacontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoSubCliente) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosSubCliente(esParaCancelar);				
				this.cancelarNuevoSubCliente(esParaCancelar);								
			}
			
			this.subcliente=new SubCliente();
			
			this.inicializarSubCliente();
			
			this.actualizarEstadoCeldasBotonesSubCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarSubCliente() throws Exception {
		try {
			SubClienteConstantesFunciones.inicializarSubCliente(this.subcliente);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.subclienteLogic.getSubClientes().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteSubClientes(String sAccionBusqueda,List<SubCliente> subclientesParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="SubCliente"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="SubClienteMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("SubClienteMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="SubCliente"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Sub Clientes");		
		parameters.put("busquedapor", SubClienteConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(Factura.class));
			classes.add(new Classe(Consignacion.class));
			classes.add(new Classe(GuiaRemision.class));
			classes.add(new Classe(Proforma.class));
			classes.add(new Classe(PedidoExpor.class));
			classes.add(new Classe(Pedido.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					SubClienteLogic subclienteLogicAuxiliar=new SubClienteLogic();
					subclienteLogicAuxiliar.setDatosCliente(subclienteLogic.getDatosCliente());				
					subclienteLogicAuxiliar.setSubClientes(subclientesParaReportes);
					
					subclienteLogicAuxiliar.cargarRelacionesLoteForeignKeySubClienteWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					subclientesParaReportes=subclienteLogicAuxiliar.getSubClientes();
					
					//subclienteLogic.getNewConnexionToDeep();
					
					//for (SubCliente subcliente:subclientesParaReportes) {
					//	subclienteLogic.deepLoad(subcliente, false, DeepLoadType.INCLUDE, classes);
					//}						
					//subclienteLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//subclienteLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileFactura = AuxiliarReportes.class.getResourceAsStream("FacturaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_factura", reportFileFactura);

			InputStream reportFileConsignacion = AuxiliarReportes.class.getResourceAsStream("ConsignacionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_consignacion", reportFileConsignacion);

			InputStream reportFileGuiaRemision = AuxiliarReportes.class.getResourceAsStream("GuiaRemisionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_guiaremision", reportFileGuiaRemision);

			InputStream reportFileProforma = AuxiliarReportes.class.getResourceAsStream("ProformaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_proforma", reportFileProforma);

			InputStream reportFilePedidoExpor = AuxiliarReportes.class.getResourceAsStream("PedidoExporDetalleRelacionesDesign.jasper");
			parameters.put("subreport_pedidoexpor", reportFilePedidoExpor);

			InputStream reportFilePedido = AuxiliarReportes.class.getResourceAsStream("PedidoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_pedido", reportFilePedido);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceSubCliente=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			SubClienteConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			SubClienteConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceSubCliente=new JRBeanArrayDataSource(SubClienteJInternalFrame.TraerSubClienteBeans(subclientesParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceSubCliente);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+SubClienteConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+SubClienteConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(SubClienteBean.TraerSubClienteBeans(subclientesParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteSubClientes(sAccionBusqueda,sTipoArchivoReporte,subclientesParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalSubClientes(sAccionBusqueda,sTipoArchivoReporte,subclientesParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoSubClienteActionPerformed(null);
					//this.generarExcelReporteSubClientes(sAccionBusqueda,sTipoArchivoReporte,subclientesParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalSubClientes(sAccionBusqueda,sTipoArchivoReporte,subclientesParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesSubClientes(sAccionBusqueda,sTipoArchivoReporte,subclientesParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesSubClientes(sAccionBusqueda,sTipoArchivoReporte,subclientesParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteSubClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<SubCliente> subclientesParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"subcliente";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("SubClientes");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderSubCliente("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(SubCliente subcliente : subclientesParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			SubClienteConstantesFunciones.generarExcelReporteDataSubCliente("NORMAL",row,workbook,subcliente,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.subclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderSubCliente(String sTipo,Row row,Workbook workbook) {
		
		SubClienteConstantesFunciones.generarExcelReporteHeaderSubCliente(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalSubClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<SubCliente> subclientesParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"subcliente_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("SubClientes");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(SubCliente subcliente : subclientesParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(SubClienteConstantesFunciones.getSubClienteDescripcion(subcliente));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.gettipoidentificacion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDENTIFICACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDENTIFICACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getidentificacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_APELLIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_APELLIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getapellido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getnombre_completo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_DIRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_DIRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getdireccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_TELEFONO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_TELEFONO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.gettelefono());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_NUMEROCELULAR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_NUMEROCELULAR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getnumero_celular());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_MAIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_MAIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getmail());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getfecha_nacimiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getfechao());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_OBSERVACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_OBSERVACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getobservacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDPAIS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDPAIS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getpais_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDCIUDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDCIUDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getciudad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDZONA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDZONA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getzona_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getpaisnacionalidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDTIPOGENERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDTIPOGENERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.gettipogenero_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getestadocivil_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getestadolegal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.gettiponiveledu_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getpath_imagen_firma());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_NUMEROCARGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_NUMEROCARGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getnumero_carga());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_LIMITECREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_LIMITECREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getlimite_credito());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_DESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_DESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getdescuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getcodigo_contrato());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_VALORCONTRATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_VALORCONTRATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getvalor_contrato());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_FECHAINICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHAINICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getfecha_inicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_FECHAFIN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHAFIN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getfecha_fin());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(SubClienteConstantesFunciones.LABEL_PLAZO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(SubClienteConstantesFunciones.LABEL_PLAZO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(subcliente.getplazo());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.subclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesSubClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<SubCliente> subclientesParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<SubCliente> subclientesRespaldo=null;
		
		classes=SubClienteConstantesFunciones.getClassesRelationshipsOfSubCliente(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.subclienteLogic.setDatosCliente(this.datosCliente);
		this.subclienteLogic.setDatosDeep(this.datosDeep);
		this.subclienteLogic.setIsConDeep(true);
		
		subclientesRespaldo=this.subclienteLogic.getSubClientes();
		
		this.subclienteLogic.setSubClientes(subclientesParaReportes);	
		this.subclienteLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		subclientesParaReportes=this.subclienteLogic.getSubClientes();
		this.subclienteLogic.setSubClientes(subclientesRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"subcliente_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("SubClientes");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderSubCliente("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(SubCliente subcliente : subclientesParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderSubCliente("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			SubClienteConstantesFunciones.generarExcelReporteDataSubCliente("NORMAL",row,workbook,subcliente,cellStyleDataAux);
		
			
			


				//Factura
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FacturaConstantesFunciones.SCLASSWEBTITULO))) {

				if(subcliente.getFacturas()!=null && subcliente.getFacturas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FacturaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FacturaConstantesFunciones.generarExcelReporteHeaderFactura("RELACIONADO",row,workbook);
				}

				if(subcliente.getFacturas()!=null) {
					i2=0;
					for(Factura factura : subcliente.getFacturas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FacturaConstantesFunciones.generarExcelReporteDataFactura("RELACIONADO",row,workbook,factura,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Consignacion
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ConsignacionConstantesFunciones.SCLASSWEBTITULO))) {

				if(subcliente.getConsignacions()!=null && subcliente.getConsignacions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ConsignacionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ConsignacionConstantesFunciones.generarExcelReporteHeaderConsignacion("RELACIONADO",row,workbook);
				}

				if(subcliente.getConsignacions()!=null) {
					i2=0;
					for(Consignacion consignacion : subcliente.getConsignacions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ConsignacionConstantesFunciones.generarExcelReporteDataConsignacion("RELACIONADO",row,workbook,consignacion,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//GuiaRemision
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO))) {

				if(subcliente.getGuiaRemisions()!=null && subcliente.getGuiaRemisions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					GuiaRemisionConstantesFunciones.generarExcelReporteHeaderGuiaRemision("RELACIONADO",row,workbook);
				}

				if(subcliente.getGuiaRemisions()!=null) {
					i2=0;
					for(GuiaRemision guiaremision : subcliente.getGuiaRemisions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						GuiaRemisionConstantesFunciones.generarExcelReporteDataGuiaRemision("RELACIONADO",row,workbook,guiaremision,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Proforma
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProformaConstantesFunciones.SCLASSWEBTITULO))) {

				if(subcliente.getProformas()!=null && subcliente.getProformas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProformaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProformaConstantesFunciones.generarExcelReporteHeaderProforma("RELACIONADO",row,workbook);
				}

				if(subcliente.getProformas()!=null) {
					i2=0;
					for(Proforma proforma : subcliente.getProformas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProformaConstantesFunciones.generarExcelReporteDataProforma("RELACIONADO",row,workbook,proforma,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PedidoExpor
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PedidoExporConstantesFunciones.SCLASSWEBTITULO))) {

				if(subcliente.getPedidoExpors()!=null && subcliente.getPedidoExpors().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PedidoExporConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PedidoExporConstantesFunciones.generarExcelReporteHeaderPedidoExpor("RELACIONADO",row,workbook);
				}

				if(subcliente.getPedidoExpors()!=null) {
					i2=0;
					for(PedidoExpor pedidoexpor : subcliente.getPedidoExpors()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PedidoExporConstantesFunciones.generarExcelReporteDataPedidoExpor("RELACIONADO",row,workbook,pedidoexpor,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Pedido
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PedidoConstantesFunciones.SCLASSWEBTITULO))) {

				if(subcliente.getPedidos()!=null && subcliente.getPedidos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PedidoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PedidoConstantesFunciones.generarExcelReporteHeaderPedido("RELACIONADO",row,workbook);
				}

				if(subcliente.getPedidos()!=null) {
					i2=0;
					for(Pedido pedido : subcliente.getPedidos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PedidoConstantesFunciones.generarExcelReporteDataPedido("RELACIONADO",row,workbook,pedido,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(SubClienteConstantesFunciones.getSubClienteDescripcion(subcliente));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.subclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoSubCliente.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessSubCliente() throws Exception {		
		this.startProcessSubCliente(true);
	}
	
	public void startProcessSubCliente(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasSubCliente ,this.jPanelParametrosReportesSubCliente, this.jScrollPanelDatosSubCliente,this.jPanelPaginacionSubCliente, this.jScrollPanelDatosEdicionSubCliente, this.jPanelAccionesSubCliente,this.jPanelAccionesFormularioSubCliente,this.jmenuBarSubCliente,this.jmenuBarDetalleSubCliente,this.jTtoolBarSubCliente,this.jTtoolBarDetalleSubCliente);		
		
		final JTabbedPane jTabbedPaneBusquedasSubCliente=this.jTabbedPaneBusquedasSubCliente; 
		
		final JPanel jPanelParametrosReportesSubCliente=this.jPanelParametrosReportesSubCliente;
		//final JScrollPane jScrollPanelDatosSubCliente=this.jScrollPanelDatosSubCliente;
		final JTable jTableDatosSubCliente=this.jTableDatosSubCliente;		
		final JPanel jPanelPaginacionSubCliente=this.jPanelPaginacionSubCliente;
		//final JScrollPane jScrollPanelDatosEdicionSubCliente=this.jScrollPanelDatosEdicionSubCliente;
		final JPanel jPanelAccionesSubCliente=this.jPanelAccionesSubCliente;
		
		JPanel jPanelCamposAuxiliarSubCliente=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarSubCliente=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) {
			jPanelCamposAuxiliarSubCliente=this.jInternalFrameDetalleFormSubCliente.jPanelCamposSubCliente;
			jPanelAccionesFormularioAuxiliarSubCliente=this.jInternalFrameDetalleFormSubCliente.jPanelAccionesFormularioSubCliente;
		}
		
		final JPanel jPanelCamposSubCliente=jPanelCamposAuxiliarSubCliente;
		final JPanel jPanelAccionesFormularioSubCliente=jPanelAccionesFormularioAuxiliarSubCliente;
		
		
		final JMenuBar jmenuBarSubCliente=this.jmenuBarSubCliente;
		final JToolBar jTtoolBarSubCliente=this.jTtoolBarSubCliente;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarSubCliente=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarSubCliente=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) {
			jmenuBarDetalleAuxiliarSubCliente=this.jInternalFrameDetalleFormSubCliente.jmenuBarDetalleSubCliente;
			jTtoolBarDetalleAuxiliarSubCliente=this.jInternalFrameDetalleFormSubCliente.jTtoolBarDetalleSubCliente;
		}
		
		final JMenuBar jmenuBarDetalleSubCliente=jmenuBarDetalleAuxiliarSubCliente;
		final JToolBar jTtoolBarDetalleSubCliente=jTtoolBarDetalleAuxiliarSubCliente;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasSubCliente;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesSubCliente;
			processRunnable.jTableDatos=jTableDatosSubCliente;
			processRunnable.jPanelCampos=jPanelCamposSubCliente;
			processRunnable.jPanelPaginacion=jPanelPaginacionSubCliente;
			processRunnable.jPanelAcciones=jPanelAccionesSubCliente;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioSubCliente;
			
			
			processRunnable.jmenuBar=jmenuBarSubCliente;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleSubCliente;
			processRunnable.jTtoolBar=jTtoolBarSubCliente;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleSubCliente;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasSubCliente ,jPanelParametrosReportesSubCliente,jTableDatosSubCliente, /*jScrollPanelDatosSubCliente,*/jPanelCamposSubCliente,jPanelPaginacionSubCliente, /*jScrollPanelDatosEdicionSubCliente,*/ jPanelAccionesSubCliente,jPanelAccionesFormularioSubCliente,jmenuBarSubCliente,jmenuBarDetalleSubCliente,jTtoolBarSubCliente,jTtoolBarDetalleSubCliente);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasSubCliente ,jPanelParametrosReportesSubCliente, jScrollPanelDatosSubCliente,jPanelPaginacionSubCliente, jScrollPanelDatosEdicionSubCliente, jPanelAccionesSubCliente,jPanelAccionesFormularioSubCliente,jmenuBarSubCliente,jmenuBarDetalleSubCliente,jTtoolBarSubCliente,jTtoolBarDetalleSubCliente);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessSubCliente() {// throws Exception 
		this.finishProcessSubCliente(true);
	}
	
	public void finishProcessSubCliente(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasSubCliente ,this.jPanelParametrosReportesSubCliente, this.jScrollPanelDatosSubCliente,this.jPanelPaginacionSubCliente, this.jScrollPanelDatosEdicionSubCliente, this.jPanelAccionesSubCliente,this.jPanelAccionesFormularioSubCliente,this.jmenuBarSubCliente,this.jmenuBarDetalleSubCliente,this.jTtoolBarSubCliente,this.jTtoolBarDetalleSubCliente);		
		
		final JTabbedPane jTabbedPaneBusquedasSubCliente=this.jTabbedPaneBusquedasSubCliente; 
		
		final JPanel jPanelParametrosReportesSubCliente=this.jPanelParametrosReportesSubCliente;
		//final JScrollPane jScrollPanelDatosSubCliente=this.jScrollPanelDatosSubCliente;
		final JTable jTableDatosSubCliente=this.jTableDatosSubCliente;		
		final JPanel jPanelPaginacionSubCliente=this.jPanelPaginacionSubCliente;
		//final JScrollPane jScrollPanelDatosEdicionSubCliente=this.jScrollPanelDatosEdicionSubCliente;
		final JPanel jPanelAccionesSubCliente=this.jPanelAccionesSubCliente;
		
		JPanel jPanelCamposAuxiliarSubCliente=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarSubCliente=new JPanel();
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) {
			jPanelCamposAuxiliarSubCliente=this.jInternalFrameDetalleFormSubCliente.jPanelCamposSubCliente;
			jPanelAccionesFormularioAuxiliarSubCliente=this.jInternalFrameDetalleFormSubCliente.jPanelAccionesFormularioSubCliente;
		}
		
		final JPanel jPanelCamposSubCliente=jPanelCamposAuxiliarSubCliente;
		final JPanel jPanelAccionesFormularioSubCliente=jPanelAccionesFormularioAuxiliarSubCliente;
		
		
		final JMenuBar jmenuBarSubCliente=this.jmenuBarSubCliente;		
		final JToolBar jTtoolBarSubCliente=this.jTtoolBarSubCliente;
				
		JMenuBar jmenuBarDetalleAuxiliarSubCliente=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarSubCliente=new JToolBar();
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) {
			jmenuBarDetalleAuxiliarSubCliente=this.jInternalFrameDetalleFormSubCliente.jmenuBarDetalleSubCliente;
			jTtoolBarDetalleAuxiliarSubCliente=this.jInternalFrameDetalleFormSubCliente.jTtoolBarDetalleSubCliente;		
		}
		
		final JMenuBar jmenuBarDetalleSubCliente=jmenuBarDetalleAuxiliarSubCliente;
		final JToolBar jTtoolBarDetalleSubCliente=jTtoolBarDetalleAuxiliarSubCliente;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasSubCliente;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesSubCliente;
			processRunnable.jTableDatos=jTableDatosSubCliente;
			processRunnable.jPanelCampos=jPanelCamposSubCliente;
			processRunnable.jPanelPaginacion=jPanelPaginacionSubCliente;
			processRunnable.jPanelAcciones=jPanelAccionesSubCliente;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioSubCliente;
			
			
			processRunnable.jmenuBar=jmenuBarSubCliente;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleSubCliente;
			processRunnable.jTtoolBar=jTtoolBarSubCliente;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleSubCliente;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasSubCliente ,jPanelParametrosReportesSubCliente, jTableDatosSubCliente,/*jScrollPanelDatosSubCliente,*/jPanelCamposSubCliente,jPanelPaginacionSubCliente, /*jScrollPanelDatosEdicionSubCliente,*/ jPanelAccionesSubCliente,jPanelAccionesFormularioSubCliente,jmenuBarSubCliente,jmenuBarDetalleSubCliente,jTtoolBarSubCliente,jTtoolBarDetalleSubCliente));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesSubCliente(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarSubCliente(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuSubCliente(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarSubCliente(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarSubCliente,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleSubCliente,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuSubCliente(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarSubCliente,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleSubCliente,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.subclienteConstantesFunciones.getsFinalQuerySubCliente();
		String  finalQueryPaginacionTodos=this.subclienteConstantesFunciones.getsFinalQuerySubCliente();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=SubClienteConstantesFunciones.getArrayColumnasGlobalesNoSubCliente(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.subclientesEliminados= new ArrayList<SubCliente>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessSubCliente();
		
				///*SubClienteSessionBean*/this.subclienteSessionBean=new SubClienteSessionBean();
			
			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=SubClienteConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=SubClienteConstantesFunciones.getClassesForeignKeysOfSubCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/subcliente."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			subclientesAux= new ArrayList<SubCliente>();
			
				
			subclienteLogic.setDatosCliente(this.datosCliente);
			subclienteLogic.setDatosDeep(this.datosDeep);
			subclienteLogic.setIsConDeep(true);
			
			
			subclienteLogic.getSubClienteDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					subclienteLogic.getTodosSubClientes(finalQueryGlobal,pagination);
					
					//subclienteLogic.getTodosSubClientesWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(subclienteLogic.getSubClientes()==null|| subclienteLogic.getSubClientes().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							subclientesAux= new ArrayList<SubCliente>();
							subclientesAux.addAll(subclienteLogic.getSubClientes());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux= new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							subclienteLogic.getTodosSubClientes(finalQueryGlobal+"",this.pagination);												
							
							//subclienteLogic.getTodosSubClientesWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteSubClientes("Todos",subclienteLogic.getSubClientes() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							subclienteLogic.setSubClientes(new ArrayList<SubCliente>());					
							subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idSubCliente=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idSubCliente=this.idActual;
				
				} else if(this.idSubClienteActual!=null && this.idSubClienteActual!=0L) {
					idSubCliente=idSubClienteActual;
				}
				
					
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndicePorId(idSubCliente);
				
				this.subclientes=new ArrayList<SubCliente>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					subclienteLogic.getEntity(idSubCliente);
					
					//subclienteLogic.getEntityWithConnection(idSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
					subclienteLogic.getSubClientes().add(subclienteLogic.getSubCliente());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subclientes=new ArrayList<SubCliente>();
					this.subclientes.add(subcliente);
				}
				
				if(subclienteLogic.getSubCliente()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorIdentificacion")) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					subclienteLogic.getSubClientesBusquedaPorIdentificacion(finalQueryGlobal,pagination,identificacionBusquedaPorIdentificacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=subclienteLogic.getSubClientes()==null||subclienteLogic.getSubClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=subclientes==null|| subclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						subclientesAux=new ArrayList<SubCliente>();
						subclientesAux.addAll(subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux=new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							subclienteLogic.getSubClientesBusquedaPorIdentificacion(finalQueryGlobal,pagination,identificacionBusquedaPorIdentificacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSubClientes("BusquedaPorIdentificacion",subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSubClientes("BusquedaPorIdentificacion",subclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
						subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorNombreCompleto")) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					subclienteLogic.getSubClientesBusquedaPorNombreCompleto(finalQueryGlobal,pagination,nombre_completoBusquedaPorNombreCompleto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=subclienteLogic.getSubClientes()==null||subclienteLogic.getSubClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=subclientes==null|| subclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						subclientesAux=new ArrayList<SubCliente>();
						subclientesAux.addAll(subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux=new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							subclienteLogic.getSubClientesBusquedaPorNombreCompleto(finalQueryGlobal,pagination,nombre_completoBusquedaPorNombreCompleto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSubClientes("BusquedaPorNombreCompleto",subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSubClientes("BusquedaPorNombreCompleto",subclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
						subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorRuc")) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					subclienteLogic.getSubClientesBusquedaPorRuc(finalQueryGlobal,pagination,rucBusquedaPorRuc);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=subclienteLogic.getSubClientes()==null||subclienteLogic.getSubClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=subclientes==null|| subclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						subclientesAux=new ArrayList<SubCliente>();
						subclientesAux.addAll(subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux=new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							subclienteLogic.getSubClientesBusquedaPorRuc(finalQueryGlobal,pagination,rucBusquedaPorRuc);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceBusquedaPorRuc(rucBusquedaPorRuc);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSubClientes("BusquedaPorRuc",subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSubClientes("BusquedaPorRuc",subclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
						subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					subclienteLogic.getSubClientesFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=subclienteLogic.getSubClientes()==null||subclienteLogic.getSubClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=subclientes==null|| subclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						subclientesAux=new ArrayList<SubCliente>();
						subclientesAux.addAll(subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux=new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							subclienteLogic.getSubClientesFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSubClientes("FK_IdCliente",subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSubClientes("FK_IdCliente",subclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
						subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					subclienteLogic.getSubClientesFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=subclienteLogic.getSubClientes()==null||subclienteLogic.getSubClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=subclientes==null|| subclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						subclientesAux=new ArrayList<SubCliente>();
						subclientesAux.addAll(subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux=new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							subclienteLogic.getSubClientesFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSubClientes("FK_IdEmpresa",subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSubClientes("FK_IdEmpresa",subclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
						subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoCivil")) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					subclienteLogic.getSubClientesFK_IdEstadoCivil(finalQueryGlobal,pagination,id_estado_civilFK_IdEstadoCivil);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=subclienteLogic.getSubClientes()==null||subclienteLogic.getSubClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=subclientes==null|| subclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						subclientesAux=new ArrayList<SubCliente>();
						subclientesAux.addAll(subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux=new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							subclienteLogic.getSubClientesFK_IdEstadoCivil(finalQueryGlobal,pagination,id_estado_civilFK_IdEstadoCivil);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSubClientes("FK_IdEstadoCivil",subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSubClientes("FK_IdEstadoCivil",subclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
						subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoLegal")) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					subclienteLogic.getSubClientesFK_IdEstadoLegal(finalQueryGlobal,pagination,id_estado_legalFK_IdEstadoLegal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=subclienteLogic.getSubClientes()==null||subclienteLogic.getSubClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=subclientes==null|| subclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						subclientesAux=new ArrayList<SubCliente>();
						subclientesAux.addAll(subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux=new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							subclienteLogic.getSubClientesFK_IdEstadoLegal(finalQueryGlobal,pagination,id_estado_legalFK_IdEstadoLegal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSubClientes("FK_IdEstadoLegal",subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSubClientes("FK_IdEstadoLegal",subclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
						subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					subclienteLogic.getSubClientesFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=subclienteLogic.getSubClientes()==null||subclienteLogic.getSubClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=subclientes==null|| subclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						subclientesAux=new ArrayList<SubCliente>();
						subclientesAux.addAll(subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux=new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							subclienteLogic.getSubClientesFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSubClientes("FK_IdSucursal",subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSubClientes("FK_IdSucursal",subclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
						subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoIdentificacion")) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					subclienteLogic.getSubClientesFK_IdTipoIdentificacion(finalQueryGlobal,pagination,id_tipo_identificacionFK_IdTipoIdentificacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=subclienteLogic.getSubClientes()==null||subclienteLogic.getSubClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=subclientes==null|| subclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						subclientesAux=new ArrayList<SubCliente>();
						subclientesAux.addAll(subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientesAux=new ArrayList<SubCliente>();
							subclientesAux.addAll(subclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							subclienteLogic.getSubClientesFK_IdTipoIdentificacion(finalQueryGlobal,pagination,id_tipo_identificacionFK_IdTipoIdentificacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=SubClienteConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteSubClientes("FK_IdTipoIdentificacion",subclienteLogic.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteSubClientes("FK_IdTipoIdentificacion",subclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
						subclienteLogic.getSubClientes().addAll(subclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclientes=new ArrayList<SubCliente>();
							subclientes.addAll(subclientesAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesSubCliente();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessSubCliente();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=subclienteLogic.getSubClientes().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=subclientes.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=subclienteLogic.getSubClientes().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=subclientes.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(SubCliente subcliente) {
		Boolean permite=true;
		
		if(this.subcliente.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=SubClienteConstantesFunciones.getOrderByListaSubCliente();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=SubClienteConstantesFunciones.getOrderByListaSubCliente();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SubCliente subcliente:subclienteLogic.getSubClientes()) {
				if(subcliente.getsType().equals(Constantes2.S_TOTALES)) {
					subclienteTotales=subcliente;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SubCliente subcliente:this.subclientes) {
				if(subcliente.getsType().equals(Constantes2.S_TOTALES)) {
					subclienteTotales=subcliente;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.subclienteAux=new SubCliente();
			this.subclienteAux.setsType(Constantes2.S_TOTALES);
			this.subclienteAux.setIsNew(false);
			this.subclienteAux.setIsChanged(false);
			this.subclienteAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				SubClienteConstantesFunciones.TotalizarValoresFilaSubCliente(this.subclienteLogic.getSubClientes(),this.subclienteAux);
				
				this.subclienteLogic.getSubClientes().add(this.subclienteAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				SubClienteConstantesFunciones.TotalizarValoresFilaSubCliente(this.subclientes,this.subclienteAux);
				
				this.subclientes.add(this.subclienteAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		subclienteTotales=new SubCliente();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.subclienteLogic.getSubClientes().remove(subclienteTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.subclientes.remove(subclienteTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		subclienteTotales=new SubCliente();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(SubCliente subcliente:subclienteLogic.getSubClientes()) {
				if(subcliente.getsType().equals(Constantes2.S_TOTALES)) {
					subclienteTotales=subcliente;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				SubClienteConstantesFunciones.TotalizarValoresFilaSubCliente(this.subclienteLogic.getSubClientes(),subclienteTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(SubCliente subcliente:this.subclientes) {
				if(subcliente.getsType().equals(Constantes2.S_TOTALES)) {
					subclienteTotales=subcliente;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				SubClienteConstantesFunciones.TotalizarValoresFilaSubCliente(this.subclientes,subclienteTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getSubClientesBusquedaPorIdentificacion()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorIdentificacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesBusquedaPorNombreCompleto()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombreCompleto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesBusquedaPorRuc()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorRuc";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdCiudad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCiudad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdCuentaContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdEstadoCivil()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoCivil";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdEstadoLegal()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoLegal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdPais()throws Exception {
		try {
			sAccionBusqueda="FK_IdPais";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdPaisNacionalidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdPaisNacionalidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdTipoGenero()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoGenero";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdTipoIdentificacion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoIdentificacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdTipoNivelEdu()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoNivelEdu";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getSubClientesFK_IdZona()throws Exception {
		try {
			sAccionBusqueda="FK_IdZona";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getSubClientesBusquedaPorIdentificacion(String sFinalQuery,String identificacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesBusquedaPorIdentificacion(sFinalQuery,this.pagination,identificacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesBusquedaPorNombreCompleto(String sFinalQuery,String nombre_completo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesBusquedaPorNombreCompleto(sFinalQuery,this.pagination,nombre_completo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesBusquedaPorRuc(String sFinalQuery,String ruc)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesBusquedaPorRuc(sFinalQuery,this.pagination,ruc);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdCiudad(String sFinalQuery,Long id_ciudad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdCiudad(sFinalQuery,this.pagination,id_ciudad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdCuentaContable(String sFinalQuery,Long id_cuenta_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdCuentaContable(sFinalQuery,this.pagination,id_cuenta_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdEstadoCivil(String sFinalQuery,Long id_estado_civil)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdEstadoCivil(sFinalQuery,this.pagination,id_estado_civil);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdEstadoLegal(String sFinalQuery,Long id_estado_legal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdEstadoLegal(sFinalQuery,this.pagination,id_estado_legal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdPais(String sFinalQuery,Long id_pais)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdPais(sFinalQuery,this.pagination,id_pais);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdPaisNacionalidad(String sFinalQuery,Long id_pais_nacionalidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdPaisNacionalidad(sFinalQuery,this.pagination,id_pais_nacionalidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdTipoGenero(String sFinalQuery,Long id_tipo_genero)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdTipoGenero(sFinalQuery,this.pagination,id_tipo_genero);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdTipoIdentificacion(String sFinalQuery,Long id_tipo_identificacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdTipoIdentificacion(sFinalQuery,this.pagination,id_tipo_identificacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdTipoNivelEdu(String sFinalQuery,Long id_tipo_nivel_edu)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdTipoNivelEdu(sFinalQuery,this.pagination,id_tipo_nivel_edu);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getSubClientesFK_IdZona(String sFinalQuery,Long id_zona)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getSubClientesFK_IdZona(sFinalQuery,this.pagination,id_zona);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosSubCliente() {
		this.isPermisoTodoSubCliente=false;
		this.isPermisoNuevoSubCliente=false;
		this.isPermisoActualizarSubCliente=false;
		this.isPermisoActualizarOriginalSubCliente=false;
		this.isPermisoEliminarSubCliente=false;
		this.isPermisoGuardarCambiosSubCliente=false;
		this.isPermisoConsultaSubCliente=false;
		this.isPermisoBusquedaSubCliente=false;
		this.isPermisoReporteSubCliente=false;		
		this.isPermisoOrdenSubCliente=false;		
		this.isPermisoPaginacionMedioSubCliente=false;		
		this.isPermisoPaginacionAltoSubCliente=false;
		this.isPermisoPaginacionTodoSubCliente=false;
		this.isPermisoCopiarSubCliente=false;		
		this.isPermisoVerFormSubCliente=false;		
		this.isPermisoDuplicarSubCliente=false;		
		this.isPermisoOrdenSubCliente=false;		
	}
	
	public void setPermisosUsuarioSubCliente(Boolean isPermiso) {
		this.isPermisoTodoSubCliente=isPermiso;
		this.isPermisoNuevoSubCliente=isPermiso;
		this.isPermisoActualizarSubCliente=isPermiso;
		this.isPermisoActualizarOriginalSubCliente=isPermiso;
		this.isPermisoEliminarSubCliente=isPermiso;
		this.isPermisoGuardarCambiosSubCliente=isPermiso;
		this.isPermisoConsultaSubCliente=isPermiso;
		this.isPermisoBusquedaSubCliente=isPermiso;
		this.isPermisoReporteSubCliente=isPermiso;
		this.isPermisoOrdenSubCliente=isPermiso;		
		this.isPermisoPaginacionMedioSubCliente=isPermiso;		
		this.isPermisoPaginacionAltoSubCliente=isPermiso;		
		this.isPermisoPaginacionTodoSubCliente=isPermiso;		
		this.isPermisoCopiarSubCliente=isPermiso;		
		this.isPermisoVerFormSubCliente=isPermiso;		
		this.isPermisoDuplicarSubCliente=isPermiso;
		this.isPermisoOrdenSubCliente=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioSubCliente(Boolean isPermiso) {
		//this.isPermisoTodoSubCliente=isPermiso;
		this.isPermisoNuevoSubCliente=isPermiso;
		this.isPermisoActualizarSubCliente=isPermiso;
		this.isPermisoActualizarOriginalSubCliente=isPermiso;
		this.isPermisoEliminarSubCliente=isPermiso;
		this.isPermisoGuardarCambiosSubCliente=isPermiso;
		//this.isPermisoConsultaSubCliente=isPermiso;
		//this.isPermisoBusquedaSubCliente=isPermiso;
		//this.isPermisoReporteSubCliente=isPermiso;
		//this.isPermisoOrdenSubCliente=isPermiso;		
		//this.isPermisoPaginacionMedioSubCliente=isPermiso;		
		//this.isPermisoPaginacionAltoSubCliente=isPermiso;		
		//this.isPermisoPaginacionTodoSubCliente=isPermiso;		
		//this.isPermisoCopiarSubCliente=isPermiso;		
		//this.isPermisoDuplicarSubCliente=isPermiso;
		//this.isPermisoOrdenSubCliente=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioSubClienteClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(FacturaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ConsignacionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(GuiaRemisionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProformaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PedidoExporConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PedidoConstantesFunciones.SNOMBREOPCION);
		
		if(SubClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosFactura=false;
		this.isTienePermisosFactura=this.verificarGetPermisosUsuarioOpcionSubClienteClaseRelacionada(this.opcionsRelacionadas,FacturaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosConsignacion=false;
		this.isTienePermisosConsignacion=this.verificarGetPermisosUsuarioOpcionSubClienteClaseRelacionada(this.opcionsRelacionadas,ConsignacionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosGuiaRemision=false;
		this.isTienePermisosGuiaRemision=this.verificarGetPermisosUsuarioOpcionSubClienteClaseRelacionada(this.opcionsRelacionadas,GuiaRemisionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProforma=false;
		this.isTienePermisosProforma=this.verificarGetPermisosUsuarioOpcionSubClienteClaseRelacionada(this.opcionsRelacionadas,ProformaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPedidoExpor=false;
		this.isTienePermisosPedidoExpor=this.verificarGetPermisosUsuarioOpcionSubClienteClaseRelacionada(this.opcionsRelacionadas,PedidoExporConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPedido=false;
		this.isTienePermisosPedido=this.verificarGetPermisosUsuarioOpcionSubClienteClaseRelacionada(this.opcionsRelacionadas,PedidoConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebSubCliente(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioSubClienteClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosFactura=conPermiso;
		this.isTienePermisosConsignacion=conPermiso;
		this.isTienePermisosGuiaRemision=conPermiso;
		this.isTienePermisosProforma=conPermiso;
		this.isTienePermisosPedidoExpor=conPermiso;
		this.isTienePermisosPedido=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioSubClienteClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionSubClienteClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioSubClienteClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosFactura && this.jInternalFrameDetalleFormSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.remove(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosConsignacion && this.jInternalFrameDetalleFormSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.remove(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosGuiaRemision && this.jInternalFrameDetalleFormSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.remove(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProforma && this.jInternalFrameDetalleFormSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.remove(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPedidoExpor && this.jInternalFrameDetalleFormSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.remove(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPedido && this.jInternalFrameDetalleFormSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.remove(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioSubCliente() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(SubClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.subclienteSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, SubClienteConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoSubCliente=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarSubCliente=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalSubCliente=this.isPermisoActualizarSubCliente;
			this.isPermisoEliminarSubCliente=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosSubCliente=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaSubCliente=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaSubCliente=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoSubCliente=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteSubCliente=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenSubCliente=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioSubCliente=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoSubCliente=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoSubCliente=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarSubCliente=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormSubCliente=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarSubCliente=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenSubCliente=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.subclienteSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosSubCliente.setToolTipText(this.jTableDatosSubCliente.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioSubCliente(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioSubCliente(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(SubClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(SubClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioSubCliente() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosFactura && this.subclienteConstantesFunciones.mostrarFacturaSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Factura");
			reporte.setsDescripcion("Factura");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosConsignacion && this.subclienteConstantesFunciones.mostrarConsignacionSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Consignacion");
			reporte.setsDescripcion("Consignacion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosGuiaRemision && this.subclienteConstantesFunciones.mostrarGuiaRemisionSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Guia Remision");
			reporte.setsDescripcion("Guia Remision");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProforma && this.subclienteConstantesFunciones.mostrarProformaSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Proforma");
			reporte.setsDescripcion("Proforma");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPedidoExpor && this.subclienteConstantesFunciones.mostrarPedidoExporSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Pedido Exportacion");
			reporte.setsDescripcion("Pedido Exportacion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPedido && this.subclienteConstantesFunciones.mostrarPedidoSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Pedido");
			reporte.setsDescripcion("Pedido");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeySubClienteListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.tipoidentificacionsForeignKey=new ArrayList();
				this.paissForeignKey=new ArrayList();
				this.ciudadsForeignKey=new ArrayList();
				this.zonasForeignKey=new ArrayList();
				this.paisnacionalidadsForeignKey=new ArrayList();
				this.tipogenerosForeignKey=new ArrayList();
				this.estadocivilsForeignKey=new ArrayList();
				this.estadolegalsForeignKey=new ArrayList();
				this.tiponiveledusForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeySubClienteListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(SubClienteJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeySubClienteListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoIdentificacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisNacionalidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoGeneroListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoCivilListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoLegalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoNivelEduListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIdentificacionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoidentificacionsForeignKey==null||this.tipoidentificacionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoIdentificacionConstantesFunciones.getArrayColumnasGlobalesTipoIdentificacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIdentificacionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoIdentificacionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoIdentificacionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paissForeignKey==null||this.paissForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CiudadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZonaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ZonaConstantesFunciones.SFINALQUERY;

				this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisNacionalidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paisnacionalidadsForeignKey==null||this.paisnacionalidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaisNacionalidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGeneroListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipogenerosForeignKey==null||this.tipogenerosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoGeneroConstantesFunciones.getArrayColumnasGlobalesTipoGenero(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGeneroConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoGeneroConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoGenerosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoCivilListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadocivilsForeignKey==null||this.estadocivilsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoCivilConstantesFunciones.getArrayColumnasGlobalesEstadoCivil(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoCivilConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoCivilConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoCivilsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoLegalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadolegalsForeignKey==null||this.estadolegalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoLegalConstantesFunciones.getArrayColumnasGlobalesEstadoLegal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoLegalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoLegalConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoLegalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoNivelEduListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiponiveledusForeignKey==null||this.tiponiveledusForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoNivelEduConstantesFunciones.getArrayColumnasGlobalesTipoNivelEdu(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoNivelEduConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoNivelEduConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoNivelEdusForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeySubClienteListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			SubClienteParameterReturnGeneral subclienteReturnGeneral=new SubClienteParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_empresaSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_empresaSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_clienteSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_clienteSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_sucursalSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_sucursalSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalTipoIdentificacion="";

				if(((this.tipoidentificacionsForeignKey==null||this.tipoidentificacionsForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_tipo_identificacionSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_tipo_identificacionSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoIdentificacion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoIdentificacionConstantesFunciones.getArrayColumnasGlobalesTipoIdentificacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoIdentificacion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIdentificacionConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoIdentificacion=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoIdentificacion, "");
						finalQueryGlobalTipoIdentificacion+=TipoIdentificacionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoIdentificacionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoIdentificacion=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidTipoIdentificacionActual();
					}
				} else {
					finalQueryGlobalTipoIdentificacion="NONE";
				}


				String finalQueryGlobalPais="";

				if(((this.paissForeignKey==null||this.paissForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_paisSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_paisSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPais=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPais=Funciones.GetFinalQueryAppend(finalQueryGlobalPais, "");
						finalQueryGlobalPais+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPais=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidPaisActual();
					}
				} else {
					finalQueryGlobalPais="NONE";
				}


				String finalQueryGlobalCiudad="";

				if(cargarCombosDependencia && ((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_ciudadSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_ciudadSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCiudad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

						finalQueryGlobalCiudad=Funciones.GetFinalQueryAppend(finalQueryGlobalCiudad, "");
						finalQueryGlobalCiudad+=CiudadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCiudad=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidCiudadActual();
					}
				} else {
					finalQueryGlobalCiudad="NONE";
				}


				String finalQueryGlobalZona="";

				if(((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_zonaSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_zonaSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalZona=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

						finalQueryGlobalZona=Funciones.GetFinalQueryAppend(finalQueryGlobalZona, "");
						finalQueryGlobalZona+=ZonaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalZona=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidZonaActual();
					}
				} else {
					finalQueryGlobalZona="NONE";
				}


				String finalQueryGlobalPaisNacionalidad="";

				if(((this.paisnacionalidadsForeignKey==null||this.paisnacionalidadsForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_pais_nacionalidadSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_pais_nacionalidadSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionPaisNacionalidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPaisNacionalidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPaisNacionalidad=Funciones.GetFinalQueryAppend(finalQueryGlobalPaisNacionalidad, "");
						finalQueryGlobalPaisNacionalidad+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaisNacionalidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPaisNacionalidad=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidPaisNacionalidadActual();
					}
				} else {
					finalQueryGlobalPaisNacionalidad="NONE";
				}


				String finalQueryGlobalTipoGenero="";

				if(((this.tipogenerosForeignKey==null||this.tipogenerosForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_tipo_generoSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_tipo_generoSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoGeneroConstantesFunciones.getArrayColumnasGlobalesTipoGenero(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoGenero=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGeneroConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoGenero=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoGenero, "");
						finalQueryGlobalTipoGenero+=TipoGeneroConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoGenerosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoGenero=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidTipoGeneroActual();
					}
				} else {
					finalQueryGlobalTipoGenero="NONE";
				}


				String finalQueryGlobalEstadoCivil="";

				if(((this.estadocivilsForeignKey==null||this.estadocivilsForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_estado_civilSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_estado_civilSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoCivilConstantesFunciones.getArrayColumnasGlobalesEstadoCivil(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoCivil=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoCivilConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoCivil=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoCivil, "");
						finalQueryGlobalEstadoCivil+=EstadoCivilConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoCivilsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoCivil=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidEstadoCivilActual();
					}
				} else {
					finalQueryGlobalEstadoCivil="NONE";
				}


				String finalQueryGlobalEstadoLegal="";

				if(((this.estadolegalsForeignKey==null||this.estadolegalsForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_estado_legalSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_estado_legalSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoLegal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoLegalConstantesFunciones.getArrayColumnasGlobalesEstadoLegal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoLegal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoLegalConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoLegal=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoLegal, "");
						finalQueryGlobalEstadoLegal+=EstadoLegalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoLegalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoLegal=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidEstadoLegalActual();
					}
				} else {
					finalQueryGlobalEstadoLegal="NONE";
				}


				String finalQueryGlobalTipoNivelEdu="";

				if(((this.tiponiveledusForeignKey==null||this.tiponiveledusForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_tipo_nivel_eduSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_tipo_nivel_eduSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoNivelEdu()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoNivelEduConstantesFunciones.getArrayColumnasGlobalesTipoNivelEdu(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoNivelEdu=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoNivelEduConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoNivelEdu=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoNivelEdu, "");
						finalQueryGlobalTipoNivelEdu+=TipoNivelEduConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoNivelEdusForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoNivelEdu=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidTipoNivelEduActual();
					}
				} else {
					finalQueryGlobalTipoNivelEdu="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.subclienteConstantesFunciones.cargarid_cuenta_contableSubCliente)
					 || (this.esRecargarFks && this.subclienteConstantesFunciones.cargarid_cuenta_contableSubCliente)) {

					if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+subclienteSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				subclienteReturnGeneral=subclienteLogic.cargarCombosLoteForeignKeySubCliente(finalQueryGlobalEmpresa,finalQueryGlobalCliente,finalQueryGlobalSucursal,finalQueryGlobalTipoIdentificacion,finalQueryGlobalPais,finalQueryGlobalCiudad,finalQueryGlobalZona,finalQueryGlobalPaisNacionalidad,finalQueryGlobalTipoGenero,finalQueryGlobalEstadoCivil,finalQueryGlobalEstadoLegal,finalQueryGlobalTipoNivelEdu,finalQueryGlobalCuentaContable);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=subclienteReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=subclienteReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=subclienteReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalTipoIdentificacion.equals("NONE")) {
				this.tipoidentificacionsForeignKey=subclienteReturnGeneral.gettipoidentificacionsForeignKey();
			}

			if(!finalQueryGlobalPais.equals("NONE")) {
				this.paissForeignKey=subclienteReturnGeneral.getpaissForeignKey();
			}

			if(!finalQueryGlobalCiudad.equals("NONE")) {
				this.ciudadsForeignKey=subclienteReturnGeneral.getciudadsForeignKey();
			}

			if(!finalQueryGlobalZona.equals("NONE")) {
				this.zonasForeignKey=subclienteReturnGeneral.getzonasForeignKey();
			}

			if(!finalQueryGlobalPaisNacionalidad.equals("NONE")) {
				this.paisnacionalidadsForeignKey=subclienteReturnGeneral.getpaisnacionalidadsForeignKey();
			}

			if(!finalQueryGlobalTipoGenero.equals("NONE")) {
				this.tipogenerosForeignKey=subclienteReturnGeneral.gettipogenerosForeignKey();
			}

			if(!finalQueryGlobalEstadoCivil.equals("NONE")) {
				this.estadocivilsForeignKey=subclienteReturnGeneral.getestadocivilsForeignKey();
			}

			if(!finalQueryGlobalEstadoLegal.equals("NONE")) {
				this.estadolegalsForeignKey=subclienteReturnGeneral.getestadolegalsForeignKey();
			}

			if(!finalQueryGlobalTipoNivelEdu.equals("NONE")) {
				this.tiponiveledusForeignKey=subclienteReturnGeneral.gettiponiveledusForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=subclienteReturnGeneral.getcuentacontablesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeySubCliente()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyTipoIdentificacion();
			this.addItemDefectoCombosForeignKeyPais();
			this.addItemDefectoCombosForeignKeyCiudad();
			this.addItemDefectoCombosForeignKeyZona();
			this.addItemDefectoCombosForeignKeyPaisNacionalidad();
			this.addItemDefectoCombosForeignKeyTipoGenero();
			this.addItemDefectoCombosForeignKeyEstadoCivil();
			this.addItemDefectoCombosForeignKeyEstadoLegal();
			this.addItemDefectoCombosForeignKeyTipoNivelEdu();
			this.addItemDefectoCombosForeignKeyCuentaContable();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoIdentificacion()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoIdentificacion()) {
				TipoIdentificacion tipoidentificacion=new TipoIdentificacion();
				TipoIdentificacionConstantesFunciones.setTipoIdentificacionDescripcion(tipoidentificacion,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoidentificacion.setId(null);

				if(!TipoIdentificacionConstantesFunciones.ExisteEnLista(this.tipoidentificacionsForeignKey,tipoidentificacion,true)) {

					this.tipoidentificacionsForeignKey.add(0,tipoidentificacion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPais()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				Pais pais=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(pais,Constantes.SMENSAJE_ESCOJA_OPCION);
				pais.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paissForeignKey,pais,true)) {

					this.paissForeignKey.add(0,pais);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCiudad()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				Ciudad ciudad=new Ciudad();
				CiudadConstantesFunciones.setCiudadDescripcion(ciudad,Constantes.SMENSAJE_ESCOJA_OPCION);
				ciudad.setId(null);

				if(!CiudadConstantesFunciones.ExisteEnLista(this.ciudadsForeignKey,ciudad,true)) {

					this.ciudadsForeignKey.add(0,ciudad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyZona()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				Zona zona=new Zona();
				ZonaConstantesFunciones.setZonaDescripcion(zona,Constantes.SMENSAJE_ESCOJA_OPCION);
				zona.setId(null);

				if(!ZonaConstantesFunciones.ExisteEnLista(this.zonasForeignKey,zona,true)) {

					this.zonasForeignKey.add(0,zona);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPaisNacionalidad()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionPaisNacionalidad()) {
				Pais paisnacionalidad=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(paisnacionalidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				paisnacionalidad.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paisnacionalidadsForeignKey,paisnacionalidad,true)) {

					this.paisnacionalidadsForeignKey.add(0,paisnacionalidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoGenero()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {
				TipoGenero tipogenero=new TipoGenero();
				TipoGeneroConstantesFunciones.setTipoGeneroDescripcion(tipogenero,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipogenero.setId(null);

				if(!TipoGeneroConstantesFunciones.ExisteEnLista(this.tipogenerosForeignKey,tipogenero,true)) {

					this.tipogenerosForeignKey.add(0,tipogenero);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoCivil()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {
				EstadoCivil estadocivil=new EstadoCivil();
				EstadoCivilConstantesFunciones.setEstadoCivilDescripcion(estadocivil,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadocivil.setId(null);

				if(!EstadoCivilConstantesFunciones.ExisteEnLista(this.estadocivilsForeignKey,estadocivil,true)) {

					this.estadocivilsForeignKey.add(0,estadocivil);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoLegal()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoLegal()) {
				EstadoLegal estadolegal=new EstadoLegal();
				EstadoLegalConstantesFunciones.setEstadoLegalDescripcion(estadolegal,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadolegal.setId(null);

				if(!EstadoLegalConstantesFunciones.ExisteEnLista(this.estadolegalsForeignKey,estadolegal,true)) {

					this.estadolegalsForeignKey.add(0,estadolegal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoNivelEdu()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoNivelEdu()) {
				TipoNivelEdu tiponiveledu=new TipoNivelEdu();
				TipoNivelEduConstantesFunciones.setTipoNivelEduDescripcion(tiponiveledu,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiponiveledu.setId(null);

				if(!TipoNivelEduConstantesFunciones.ExisteEnLista(this.tiponiveledusForeignKey,tiponiveledu,true)) {

					this.tiponiveledusForeignKey.add(0,tiponiveledu);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.subclienteSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeySubCliente()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyPais("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeySubCliente(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyPais(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyPais(JComboBox jComboBoxPaisGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Pais paisLocal=(Pais)jComboBoxPaisGenerico.getSelectedItem();

			if(paisLocal!=null  && paisLocal.getId()!=null  && paisLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_pais="+paisLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboCiudad=sFinalQueryCombo;

			this.ciudadsForeignKey=new ArrayList<Ciudad>();
			this.cargarCombosForeignKeyCiudad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyPais(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.addItemListener(new ComboBoxItemListener(this,"id_paisSubCliente"));
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.addFocusListener(new ComboBoxFocusListener(this,"id_paisSubCliente"));
					}
				} else {
					if(this.jInternalFrameDetalleFormSubCliente!=null) {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.addActionListener(new ComboBoxActionListener(this,"id_paisSubCliente"));
						this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.addFocusListener(new ComboBoxFocusListener(this,"id_paisSubCliente"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeySubCliente()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
				this.subcliente.setfecha_nacimiento(this.parametroGeneralUsuario.getfecha_sistema());
				this.subcliente.setfechao(this.parametroGeneralUsuario.getfecha_sistema());
				this.subcliente.setfecha_inicio(this.parametroGeneralUsuario.getfecha_sistema());
				this.subcliente.setfecha_fin(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeySubCliente();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeySubCliente(SubCliente subcliente)throws Exception {	
		try {
			
			this.setActualClienteForeignKey(subcliente.getid_cliente(),false,"Formulario");
			this.setActualTipoIdentificacionForeignKey(subcliente.getid_tipo_identificacion(),false,"Formulario");
			this.setActualPaisForeignKey(subcliente.getid_pais(),false,"Formulario");
			this.setActualCiudadForeignKey(subcliente.getid_ciudad(),false,"Formulario");
			this.setActualZonaForeignKey(subcliente.getid_zona(),false,"Formulario");
			this.setActualPaisNacionalidadForeignKey(subcliente.getid_pais_nacionalidad(),false,"Formulario");
			this.setActualTipoGeneroForeignKey(subcliente.getid_tipo_genero(),false,"Formulario");
			this.setActualEstadoCivilForeignKey(subcliente.getid_estado_civil(),false,"Formulario");
			this.setActualEstadoLegalForeignKey(subcliente.getid_estado_legal(),false,"Formulario");
			this.setActualTipoNivelEduForeignKey(subcliente.getid_tipo_nivel_edu(),false,"Formulario");
			this.setActualCuentaContableForeignKey(subcliente.getid_cuenta_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeySubCliente(SubCliente subcliente,String sTipoEvento)throws Exception {	
		try {
			
			

				if(subcliente.getCliente()!=null && !sTipoEvento.equals("id_clienteSubCliente")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(subcliente.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(subcliente.getCuentaContable()!=null && !sTipoEvento.equals("id_cuenta_contableSubCliente")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablesForeignKey.add(subcliente.getCuentaContable());

					this.addItemDefectoCombosForeignKeyCuentaContable();
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeySubCliente()throws Exception {	
		try {
			
			this.setActualClienteForeignKey(this.subclienteConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualTipoIdentificacionForeignKey(this.subclienteConstantesFunciones.getid_tipo_identificacion(),false,"Formulario");
			this.setActualPaisForeignKey(this.subclienteConstantesFunciones.getid_pais(),false,"Formulario");
			this.setActualCiudadForeignKey(this.subclienteConstantesFunciones.getid_ciudad(),false,"Formulario");
			this.setActualZonaForeignKey(this.subclienteConstantesFunciones.getid_zona(),false,"Formulario");
			this.setActualPaisNacionalidadForeignKey(this.subclienteConstantesFunciones.getid_pais_nacionalidad(),false,"Formulario");
			this.setActualTipoGeneroForeignKey(this.subclienteConstantesFunciones.getid_tipo_genero(),false,"Formulario");
			this.setActualEstadoCivilForeignKey(this.subclienteConstantesFunciones.getid_estado_civil(),false,"Formulario");
			this.setActualEstadoLegalForeignKey(this.subclienteConstantesFunciones.getid_estado_legal(),false,"Formulario");
			this.setActualTipoNivelEduForeignKey(this.subclienteConstantesFunciones.getid_tipo_nivel_edu(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.subclienteConstantesFunciones.getid_cuenta_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeySubCliente()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeySubCliente()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeySubCliente()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroSubCliente()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeySubCliente()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameTipoIdentificacionsForeignKey("Todos");
			this.cargarCombosFramePaissForeignKey("Todos");
			this.cargarCombosFrameCiudadsForeignKey("Todos");
			this.cargarCombosFrameZonasForeignKey("Todos");
			this.cargarCombosFramePaisNacionalidadsForeignKey("Todos");
			this.cargarCombosFrameTipoGenerosForeignKey("Todos");
			this.cargarCombosFrameEstadoCivilsForeignKey("Todos");
			this.cargarCombosFrameEstadoLegalsForeignKey("Todos");
			this.cargarCombosFrameTipoNivelEdusForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeySubCliente(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoIdentificacionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaisNacionalidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoGenerosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoCivilsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoLegalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoNivelEdusForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeySubCliente()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente!=null && this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	









	public void recargarFormSubClientePais(JComboBox<?> jComboBoxGenericoPais,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormSubClienteid_ciudad(jComboBoxGenericoPais,sFormularioTipoBusqueda,"Pais",false);
	}
















	
	



	public void recargarFormSubClienteid_ciudad(JComboBox<?> jComboBoxGenericoCiudad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Pais")){
				this.setActualParaGuardarPaisForeignKey(this.subcliente,jComboBoxGenericoCiudad);
			}

			if(this.subcliente.getid_pais()!=null && this.subcliente.getid_pais()!=0L) {
				sFinalQuery+="  WHERE  id_pais="+this.subcliente.getid_pais();
			} else {
				sFinalQuery+="  WHERE  id_pais=-1";
			}



			//BUCLE RECURSIVO
			this.setActualCiudadForeignKey(this.subcliente.getid_pais(),true,sFormularioTipoBusqueda);

			this.cargarCombosCiudadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public SubClienteBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public SubClienteBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public SubClienteBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.subclienteSessionBean=new SubClienteSessionBean(); 
		this.subclienteConstantesFunciones=new SubClienteConstantesFunciones(); 
		this.subclienteBean=new SubCliente();//(this.subclienteConstantesFunciones); 		
		this.subclienteReturnGeneral=new SubClienteParameterReturnGeneral(); 
		
		this.subclienteSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.subclienteSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public SubClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public SubClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public SubClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessSubCliente(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.subclienteConstantesFunciones=new SubClienteConstantesFunciones(); 
			this.subclienteBean=new SubCliente();//this.subclienteConstantesFunciones); 			
			this.subclienteReturnGeneral=new SubClienteParameterReturnGeneral(); 
		
			SubClienteBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Sub Cliente Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.subcliente=new SubCliente();
			this.subclientes = new ArrayList<SubCliente>();
			this.subclientesAux = new ArrayList<SubCliente>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic=new SubClienteLogic();
				this.subclienteLogic.getNewConnexionToDeep("");
			}
			
			//this.subclienteSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.subclienteSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormSubCliente);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoSubCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoSubCliente);	
					}
					
					if(this.jInternalFrameImportacionSubCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionSubCliente);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderBySubCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderBySubCliente);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormSubCliente!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormSubCliente);
				this.jInternalFrameDetalleFormSubCliente.setVisible(false);
				this.jInternalFrameDetalleFormSubCliente.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoSubCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoSubCliente);
					this.jInternalFrameReporteDinamicoSubCliente.setVisible(false);
					this.jInternalFrameReporteDinamicoSubCliente.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionSubCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionSubCliente);
					this.jInternalFrameImportacionSubCliente.setVisible(false);
					this.jInternalFrameImportacionSubCliente.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderBySubCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderBySubCliente);
					this.jInternalFrameOrderBySubCliente.setVisible(false);
					this.jInternalFrameOrderBySubCliente.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idSubClienteActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=SubClienteConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.subclienteReturnGeneral=new SubClienteParameterReturnGeneral();
			
			this.subclienteParameterGeneral=new SubClienteParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.subclienteLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(SubClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.subclienteSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(FacturaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ConsignacionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(GuiaRemisionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProformaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PedidoExporConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PedidoConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,SubClienteConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.subclienteSessionBean.getEsGuardarRelacionado(),this.subclienteSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,SubClienteConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.subclienteSessionBean.getEsGuardarRelacionado(),this.subclienteSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoSubCliente=false;
			this.isVisibilidadCeldaDuplicarSubCliente=true;
			this.isVisibilidadCeldaCopiarSubCliente=true;
			this.isVisibilidadCeldaVerFormSubCliente=true;
			this.isVisibilidadCeldaOrdenSubCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=false;
			this.isVisibilidadCeldaModificarSubCliente=false;
			this.isVisibilidadCeldaActualizarSubCliente=false;
			this.isVisibilidadCeldaEliminarSubCliente=false;
			this.isVisibilidadCeldaCancelarSubCliente=false;
			this.isVisibilidadCeldaGuardarSubCliente=false;
			this.isVisibilidadCeldaGuardarCambiosSubCliente=false;
			
			
			this.isVisibilidadBusquedaPorIdentificacion=true;
			this.isVisibilidadBusquedaPorNombreCompleto=true;
			this.isVisibilidadBusquedaPorRuc=true;
			this.isVisibilidadFK_IdCiudad=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdCuentaContable=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoCivil=true;
			this.isVisibilidadFK_IdEstadoLegal=true;
			this.isVisibilidadFK_IdPais=true;
			this.isVisibilidadFK_IdPaisNacionalidad=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoGenero=true;
			this.isVisibilidadFK_IdTipoIdentificacion=true;
			this.isVisibilidadFK_IdTipoNivelEdu=true;
			this.isVisibilidadFK_IdZona=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesSubCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosSubCliente();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioSubCliente(false);
			
			this.setPermisosUsuarioSubCliente();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.subclienteSessionBean.getEsGuardarRelacionado() 
				|| (this.subclienteSessionBean.getEsGuardarRelacionado() && this.subclienteSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioSubClienteClasesRelacionadas();
			}
			
			if(this.subclienteSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioSubClienteClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!SubClienteJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosSubCliente();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualSubCliente();
			}
			
			if(!this.isPermisoBusquedaSubCliente) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasSubCliente.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioSubCliente,this.isPermisoPaginacionMedioSubCliente,this.isPermisoPaginacionTodoSubCliente);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(SubClienteConstantesFunciones.getTiposSeleccionarSubCliente());
				
				this.tiposColumnasSelect=SubClienteConstantesFunciones.getTiposSeleccionarSubCliente(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectSubCliente();				
				//this.tiposRelacionesSelect=SubClienteConstantesFunciones.getTiposRelacionesSubCliente(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioSubCliente();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioSubCliente(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioSubCliente(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesSubCliente() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.facturaLogic=new FacturaLogic();
			this.consignacionLogic=new ConsignacionLogic();
			this.guiaremisionLogic=new GuiaRemisionLogic();
			this.proformaLogic=new ProformaLogic();
			this.pedidoexporLogic=new PedidoExporLogic();
			this.pedidoLogic=new PedidoLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.clienteLogic=new ClienteLogic();
			this.sucursalLogic=new SucursalLogic();
			this.tipoidentificacionLogic=new TipoIdentificacionLogic();
			this.paisLogic=new PaisLogic();
			this.ciudadLogic=new CiudadLogic();
			this.zonaLogic=new ZonaLogic();
			this.paisnacionalidadLogic=new PaisLogic();
			this.tipogeneroLogic=new TipoGeneroLogic();
			this.estadocivilLogic=new EstadoCivilLogic();
			this.estadolegalLogic=new EstadoLegalLogic();
			this.tiponiveleduLogic=new TipoNivelEduLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				subclienteImplementable= (SubClienteImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SubClienteConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				subclienteImplementableHome= (SubClienteImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+SubClienteConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.subclientes= new ArrayList<SubCliente>();
			this.subclientesEliminados= new ArrayList<SubCliente>();
						
			this.isEsNuevoSubCliente=false;
			this.esParaAccionDesdeFormularioSubCliente=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			this.idCuentaContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.tipoidentificacionsForeignKey=new ArrayList<TipoIdentificacion>() ;
			this.paissForeignKey=new ArrayList<Pais>() ;
			this.ciudadsForeignKey=new ArrayList<Ciudad>() ;
			this.zonasForeignKey=new ArrayList<Zona>() ;
			this.paisnacionalidadsForeignKey=new ArrayList<Pais>() ;
			this.tipogenerosForeignKey=new ArrayList<TipoGenero>() ;
			this.estadocivilsForeignKey=new ArrayList<EstadoCivil>() ;
			this.estadolegalsForeignKey=new ArrayList<EstadoLegal>() ;
			this.tiponiveledusForeignKey=new ArrayList<TipoNivelEdu>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeySubCliente(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroSubCliente();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			SubClienteBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=SubClienteConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesSubCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingSubCliente(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormSubCliente!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioSubCliente();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioSubCliente();
			}
			
			SubClienteBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasSubCliente.getTabCount(); i++) {
					this.jTabbedPaneBusquedasSubCliente.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasSubCliente.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessSubCliente(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga SubCliente: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectSubCliente() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(FacturaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FacturaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ConsignacionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ConsignacionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(GuiaRemisionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProformaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProformaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PedidoExporConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PedidoExporConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PedidoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PedidoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesSubCliente")) {
				iIndex=this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();	
				
				

				if(sTitle.equals("Consignacions")) {
					if(!ConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessSubCliente();

						this.cargarParteTabPanelRelacionadaConsignacion(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Facturas")) {
					if(!FacturaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessSubCliente();

						this.cargarParteTabPanelRelacionadaFactura(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Guia Remisiones")) {
					if(!GuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessSubCliente();

						this.cargarParteTabPanelRelacionadaGuiaRemision(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Pedidos")) {
					if(!PedidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessSubCliente();

						this.cargarParteTabPanelRelacionadaPedido(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Pedido Exportacions")) {
					if(!PedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessSubCliente();

						this.cargarParteTabPanelRelacionadaPedidoExpor(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Proformas")) {
					if(!ProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessSubCliente();

						this.cargarParteTabPanelRelacionadaProforma(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessSubCliente();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaConsignacion(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormSubCliente.cargarSessionConBeanSwingJInternalFrameConsignacion(false,true,iIndex);
		this.jButtonConsignacionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaConsignacion();

		//this.jTabbedPaneRelacionesSubCliente.updateUI();
		//this.jTabbedPaneRelacionesSubCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesSubCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaFactura(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormSubCliente.cargarSessionConBeanSwingJInternalFrameFactura(false,true,iIndex);
		this.jButtonFacturaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFactura();

		//this.jTabbedPaneRelacionesSubCliente.updateUI();
		//this.jTabbedPaneRelacionesSubCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesSubCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaGuiaRemision(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormSubCliente.cargarSessionConBeanSwingJInternalFrameGuiaRemision(false,true,iIndex);
		this.jButtonGuiaRemisionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaGuiaRemision();

		//this.jTabbedPaneRelacionesSubCliente.updateUI();
		//this.jTabbedPaneRelacionesSubCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesSubCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPedido(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormSubCliente.cargarSessionConBeanSwingJInternalFramePedido(false,true,iIndex);
		this.jButtonPedidoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPedido();

		//this.jTabbedPaneRelacionesSubCliente.updateUI();
		//this.jTabbedPaneRelacionesSubCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesSubCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPedidoExpor(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormSubCliente.cargarSessionConBeanSwingJInternalFramePedidoExpor(false,true,iIndex);
		this.jButtonPedidoExporActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPedidoExpor();

		//this.jTabbedPaneRelacionesSubCliente.updateUI();
		//this.jTabbedPaneRelacionesSubCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesSubCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProforma(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormSubCliente.cargarSessionConBeanSwingJInternalFrameProforma(false,true,iIndex);
		this.jButtonProformaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProforma();

		//this.jTabbedPaneRelacionesSubCliente.updateUI();
		//this.jTabbedPaneRelacionesSubCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesSubCliente.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("Factura")) {
				int row=this.jTableDatosSubCliente.getSelectedRow();
				jButtonFacturaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Consignacion")) {
				int row=this.jTableDatosSubCliente.getSelectedRow();
				jButtonConsignacionActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("GuiaRemision")) {
				int row=this.jTableDatosSubCliente.getSelectedRow();
				jButtonGuiaRemisionActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Proforma")) {
				int row=this.jTableDatosSubCliente.getSelectedRow();
				jButtonProformaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PedidoExpor")) {
				int row=this.jTableDatosSubCliente.getSelectedRow();
				jButtonPedidoExporActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Pedido")) {
				int row=this.jTableDatosSubCliente.getSelectedRow();
				jButtonPedidoActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Factura")) {

					if(this.isTienePermisosFactura && this.subclienteConstantesFunciones.mostrarFacturaSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Facturas"+"("+FacturaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Facturas");

						if(subclienteConstantesFunciones.resaltarFacturaSubCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(subclienteConstantesFunciones.resaltarFacturaSubCliente);
						}

						jmenuItem.setEnabled(this.subclienteConstantesFunciones.activarFacturaSubCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Factura"));

						

						this.jInternalFrameDetalleFormSubCliente.jmenuDetalleSubCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Consignacion")) {

					if(this.isTienePermisosConsignacion && this.subclienteConstantesFunciones.mostrarConsignacionSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Consignacions"+"("+ConsignacionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Consignacions");

						if(subclienteConstantesFunciones.resaltarConsignacionSubCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(subclienteConstantesFunciones.resaltarConsignacionSubCliente);
						}

						jmenuItem.setEnabled(this.subclienteConstantesFunciones.activarConsignacionSubCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Consignacion"));

						

						this.jInternalFrameDetalleFormSubCliente.jmenuDetalleSubCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Guia Remision")) {

					if(this.isTienePermisosGuiaRemision && this.subclienteConstantesFunciones.mostrarGuiaRemisionSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Guia Remisiones"+"("+GuiaRemisionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Guia Remisiones");

						if(subclienteConstantesFunciones.resaltarGuiaRemisionSubCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(subclienteConstantesFunciones.resaltarGuiaRemisionSubCliente);
						}

						jmenuItem.setEnabled(this.subclienteConstantesFunciones.activarGuiaRemisionSubCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"GuiaRemision"));

						

						this.jInternalFrameDetalleFormSubCliente.jmenuDetalleSubCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Proforma")) {

					if(this.isTienePermisosProforma && this.subclienteConstantesFunciones.mostrarProformaSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Proformas"+"("+ProformaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Proformas");

						if(subclienteConstantesFunciones.resaltarProformaSubCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(subclienteConstantesFunciones.resaltarProformaSubCliente);
						}

						jmenuItem.setEnabled(this.subclienteConstantesFunciones.activarProformaSubCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Proforma"));

						

						this.jInternalFrameDetalleFormSubCliente.jmenuDetalleSubCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Pedido Exportacion")) {

					if(this.isTienePermisosPedidoExpor && this.subclienteConstantesFunciones.mostrarPedidoExporSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Pedido Exportacions"+"("+PedidoExporConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Pedido Exportacions");

						if(subclienteConstantesFunciones.resaltarPedidoExporSubCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(subclienteConstantesFunciones.resaltarPedidoExporSubCliente);
						}

						jmenuItem.setEnabled(this.subclienteConstantesFunciones.activarPedidoExporSubCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PedidoExpor"));

						

						this.jInternalFrameDetalleFormSubCliente.jmenuDetalleSubCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Pedido")) {

					if(this.isTienePermisosPedido && this.subclienteConstantesFunciones.mostrarPedidoSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Pedidos"+"("+PedidoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Pedidos");

						if(subclienteConstantesFunciones.resaltarPedidoSubCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(subclienteConstantesFunciones.resaltarPedidoSubCliente);
						}

						jmenuItem.setEnabled(this.subclienteConstantesFunciones.activarPedidoSubCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Pedido"));

						

						this.jInternalFrameDetalleFormSubCliente.jmenuDetalleSubCliente.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeySubCliente(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeySubCliente(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeySubCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeySubClienteListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeySubCliente();
		
		this.cargarCombosFrameForeignKeySubCliente();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeySubCliente();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeySubCliente();
		}
	}
	
	

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIdentificacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoIdentificacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoIdentificacion();
				this.cargarCombosFrameTipoIdentificacionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoIdentificacion(this.tipoidentificacionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPais(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaPais(this.paissForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCiudad(this.ciudadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZona(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaZona(this.zonasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisNacionalidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisNacionalidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPaisNacionalidad();
				this.cargarCombosFramePaisNacionalidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaPaisNacionalidad(this.paisnacionalidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGenero(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoGeneroListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoGenero();
				this.cargarCombosFrameTipoGenerosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoGenero(this.tipogenerosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoCivil(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoCivilListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoCivil();
				this.cargarCombosFrameEstadoCivilsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstadoCivil(this.estadocivilsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoLegal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoLegalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoLegal();
				this.cargarCombosFrameEstadoLegalsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstadoLegal(this.estadolegalsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoNivelEdu(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoNivelEduListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoNivelEdu();
				this.cargarCombosFrameTipoNivelEdusForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoNivelEdu(this.tiponiveledusForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoSubClienteActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.subclienteSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
			
			if(jTableDatosSubCliente.getRowCount()>=1) {
				jTableDatosSubCliente.removeRowSelectionInterval(0, jTableDatosSubCliente.getRowCount()-1);						
			}
			
			this.isEsNuevoSubCliente=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoSubCliente(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesSubCliente(true);			
			//this.subcliente=new SubCliente();
			//this.subcliente.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesSubCliente(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSubCliente() ;
			
			if(SubClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleSubCliente(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.subcliente);	
			this.actualizarInformacion("INFO_PADRE",false,this.subcliente);				
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
			if(this.subclienteSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar SubCliente: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarSubClienteActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosSubCliente.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosSubCliente.getSelectedRows().length;			
			}
			
			subclientesSeleccionados=this.getSubClientesSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoSubCliente--;			
				//SubCliente subclienteAux= new SubCliente();			
				//subclienteAux.setId(this.iIdNuevoSubCliente);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//SubCliente subclienteOrigen=new SubCliente();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(SubCliente subclienteOrigen : subclientesSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							subclienteOrigen =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							subclienteOrigen =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaSubCliente();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.subcliente.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosSubCliente(subclienteOrigen,this.subcliente,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.subclienteLogic.getSubClientes().add(this.subclienteAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.subclientes.add(this.subclienteAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaSubCliente(false);
				
				this.jTableDatosSubCliente.setRowSelectionInterval(this.getIndiceNuevoSubCliente(), this.getIndiceNuevoSubCliente());
				
				int iLastRow =  this.jTableDatosSubCliente.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosSubCliente.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosSubCliente.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaSubCliente(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarSubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();									
		
			SubCliente subclienteOrigen=new SubCliente();
			SubCliente subclienteDestino=new SubCliente();
				
			subclientesSeleccionados=this.getSubClientesSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosSubCliente.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || subclientesSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosSubCliente.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteOrigen =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						subclienteOrigen =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						subclienteDestino =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						subclienteDestino =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				subclienteOrigen =subclientesSeleccionados.get(0);
				subclienteDestino =subclientesSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosSubCliente(subclienteOrigen,subclienteDestino,true,false);
				
				subclienteDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(subclienteDestino,subclienteLogic.getSubClientes());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(subclienteDestino,subclientes);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaSubCliente(false);
				
				//this.jTableDatosSubCliente.setRowSelectionInterval(this.getIndiceNuevoSubCliente(), this.getIndiceNuevoSubCliente());
				
				int iLastRow =  this.jTableDatosSubCliente.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosSubCliente.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosSubCliente.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaSubCliente(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormSubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormSubCliente.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarSubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesSubCliente.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasSubCliente.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesSubCliente.setVisible(!isVisible);
			this.jPanelPaginacionSubCliente.setVisible(!isVisible);
			this.jPanelAccionesSubCliente.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarSubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameSubCliente();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoSubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoSubCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionSubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionSubCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderBySubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderBySubCliente();
			
			this.abrirFrameOrderBySubCliente();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderBySubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderBySubCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleSubCliente(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormSubCliente);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormSubCliente.isMaximum()) {
					this.jInternalFrameDetalleFormSubCliente.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormSubCliente.setSize(this.jInternalFrameDetalleFormSubCliente.iWidthFormulario,this.jInternalFrameDetalleFormSubCliente.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormSubCliente.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormSubCliente.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormSubCliente.isMaximum()) {
						this.jInternalFrameDetalleFormSubCliente.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth(),SubClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth(),SubClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth(),SubClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(ConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaConsignacion();
					}

					if(FacturaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFactura();
					}

					if(GuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaGuiaRemision();
					}

					if(PedidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPedido();
					}

					if(PedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPedidoExpor();
					}

					if(ProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProforma();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormSubCliente.setVisible(true);
	        this.jInternalFrameDetalleFormSubCliente.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderBySubCliente() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderBySubCliente==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderBySubCliente=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderBySubCliente,false,this);
				} else {
					this.jInternalFrameOrderBySubCliente=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderBySubCliente,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderBySubCliente);
				this.jInternalFrameOrderBySubCliente.setVisible(false);
				this.jInternalFrameOrderBySubCliente.setSelected(false);
				
				this.jInternalFrameOrderBySubCliente.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderBySubCliente"));
				
				this.inicializarActualizarBindingTablaOrderBySubCliente();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionSubCliente() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionSubCliente==null) {
				
				this.jInternalFrameImportacionSubCliente=new ImportacionJInternalFrame(SubClienteConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionSubCliente);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionSubCliente);
				this.jInternalFrameImportacionSubCliente.setVisible(false);
				this.jInternalFrameImportacionSubCliente.setSelected(false);


				this.jInternalFrameImportacionSubCliente.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionSubCliente"));
				this.jInternalFrameImportacionSubCliente.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionSubCliente"));
				this.jInternalFrameImportacionSubCliente.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionSubCliente"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoSubCliente() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoSubCliente==null) {
				this.jInternalFrameReporteDinamicoSubCliente=new ReporteDinamicoJInternalFrame(SubClienteConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoSubCliente);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoSubCliente);
				this.jInternalFrameReporteDinamicoSubCliente.setVisible(false);
				this.jInternalFrameReporteDinamicoSubCliente.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoSubCliente.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoSubCliente"));
				this.jInternalFrameReporteDinamicoSubCliente.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoSubCliente"));
				this.jInternalFrameReporteDinamicoSubCliente.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoSubCliente"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualSubCliente();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaConsignacion() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaFactura() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaGuiaRemision() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPedido() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jScrollPanelDatosPedido.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jScrollPanelDatosPedido.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jScrollPanelDatosPedido.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.jScrollPanelDatosPedido.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPedidoExpor() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProforma() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormSubCliente.jContentPaneDetalleSubCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleSubCliente() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormSubCliente);
			
	       	this.jInternalFrameDetalleFormSubCliente.setVisible(false);
	        this.jInternalFrameDetalleFormSubCliente.setSelected(false);
			
			//this.jInternalFrameDetalleFormSubCliente.dispose();
			//this.jInternalFrameDetalleFormSubCliente=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoSubCliente() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoSubCliente.setVisible(true);
	        this.jInternalFrameReporteDinamicoSubCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionSubCliente() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionSubCliente.setVisible(true);
	        this.jInternalFrameImportacionSubCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderBySubCliente() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderBySubCliente.setVisible(true);
	        this.jInternalFrameOrderBySubCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderBySubCliente() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderBySubCliente.setVisible(false);
	        this.jInternalFrameOrderBySubCliente.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoSubCliente() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoSubCliente.setVisible(false);
	        this.jInternalFrameReporteDinamicoSubCliente.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionSubCliente() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionSubCliente.setVisible(false);
	        this.jInternalFrameImportacionSubCliente.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderSubCliente.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarSubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarSubCliente(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarSubCliente(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesSubCliente(true);
			//this.isEsNuevoSubCliente=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesSubCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesSubCliente(false) ;
			
			if(subclienteSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaSessionBean.getEsGuardarRelacionado() && FacturaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFacturaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionSessionBean.getEsGuardarRelacionado() && ConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonConsignacionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.getEsGuardarRelacionado() && GuiaRemisionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGuiaRemisionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaSessionBean.getEsGuardarRelacionado() && ProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProformaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.getEsGuardarRelacionado() && PedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPedidoExporActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoSessionBean.getEsGuardarRelacionado() && PedidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPedidoActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(SubClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleSubCliente(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSubCliente(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaSubClienteActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarSubCliente(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesSubCliente(true);
			//this.isEsNuevoSubCliente=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.subcliente.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesSubCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesSubCliente(false) ;
			
			if(SubClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleSubCliente(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSubCliente(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.subclienteConstantesFunciones.cargarid_clienteSubCliente) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingSubCliente(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("CuentaContable")) {
				if(!this.subclienteConstantesFunciones.cargarid_cuenta_contableSubCliente) {
					this.cargarCombosCuentaContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingSubCliente(false,false);
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable (id);

				this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
		
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaTipoIdentificacion(List<TipoIdentificacion> tipoidentificacionsForeignKey)throws Exception{
		TableColumn tableColumnTipoIdentificacion=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION));
		TableCellEditor tableCellEditorTipoIdentificacion =tableColumnTipoIdentificacion.getCellEditor();

		TipoIdentificacionTableCell tipoidentificacionTableCellFk=(TipoIdentificacionTableCell)tableCellEditorTipoIdentificacion;

		if(tipoidentificacionTableCellFk!=null) {
			tipoidentificacionTableCellFk.settipoidentificacionsForeignKey(tipoidentificacionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoidentificacionTableCellFk.setRowActual(intSelectedRow);
			//tipoidentificacionTableCellFk.settipoidentificacionsForeignKeyActual(tipoidentificacionsForeignKey);
		//}


		if(tipoidentificacionTableCellFk!=null) {
			tipoidentificacionTableCellFk.RecargarTipoIdentificacionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPais(List<Pais> paissForeignKey)throws Exception{
		TableColumn tableColumnPais=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDPAIS));
		TableCellEditor tableCellEditorPais =tableColumnPais.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPais;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paissForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paissForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCiudad(List<Ciudad> ciudadsForeignKey)throws Exception{
		TableColumn tableColumnCiudad=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDCIUDAD));
		TableCellEditor tableCellEditorCiudad =tableColumnCiudad.getCellEditor();

		CiudadTableCell ciudadTableCellFk=(CiudadTableCell)tableCellEditorCiudad;

		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.setciudadsForeignKey(ciudadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ciudadTableCellFk.setRowActual(intSelectedRow);
			//ciudadTableCellFk.setciudadsForeignKeyActual(ciudadsForeignKey);
		//}


		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.RecargarCiudadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaZona(List<Zona> zonasForeignKey)throws Exception{
		TableColumn tableColumnZona=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDZONA));
		TableCellEditor tableCellEditorZona =tableColumnZona.getCellEditor();

		ZonaTableCell zonaTableCellFk=(ZonaTableCell)tableCellEditorZona;

		if(zonaTableCellFk!=null) {
			zonaTableCellFk.setzonasForeignKey(zonasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//zonaTableCellFk.setRowActual(intSelectedRow);
			//zonaTableCellFk.setzonasForeignKeyActual(zonasForeignKey);
		//}


		if(zonaTableCellFk!=null) {
			zonaTableCellFk.RecargarZonasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPaisNacionalidad(List<Pais> paisnacionalidadsForeignKey)throws Exception{
		TableColumn tableColumnPaisNacionalidad=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD));
		TableCellEditor tableCellEditorPaisNacionalidad =tableColumnPaisNacionalidad.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPaisNacionalidad;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paisnacionalidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paisnacionalidadsForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoGenero(List<TipoGenero> tipogenerosForeignKey)throws Exception{
		TableColumn tableColumnTipoGenero=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDTIPOGENERO));
		TableCellEditor tableCellEditorTipoGenero =tableColumnTipoGenero.getCellEditor();

		TipoGeneroTableCell tipogeneroTableCellFk=(TipoGeneroTableCell)tableCellEditorTipoGenero;

		if(tipogeneroTableCellFk!=null) {
			tipogeneroTableCellFk.settipogenerosForeignKey(tipogenerosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipogeneroTableCellFk.setRowActual(intSelectedRow);
			//tipogeneroTableCellFk.settipogenerosForeignKeyActual(tipogenerosForeignKey);
		//}


		if(tipogeneroTableCellFk!=null) {
			tipogeneroTableCellFk.RecargarTipoGenerosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoCivil(List<EstadoCivil> estadocivilsForeignKey)throws Exception{
		TableColumn tableColumnEstadoCivil=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL));
		TableCellEditor tableCellEditorEstadoCivil =tableColumnEstadoCivil.getCellEditor();

		EstadoCivilTableCell estadocivilTableCellFk=(EstadoCivilTableCell)tableCellEditorEstadoCivil;

		if(estadocivilTableCellFk!=null) {
			estadocivilTableCellFk.setestadocivilsForeignKey(estadocivilsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadocivilTableCellFk.setRowActual(intSelectedRow);
			//estadocivilTableCellFk.setestadocivilsForeignKeyActual(estadocivilsForeignKey);
		//}


		if(estadocivilTableCellFk!=null) {
			estadocivilTableCellFk.RecargarEstadoCivilsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoLegal(List<EstadoLegal> estadolegalsForeignKey)throws Exception{
		TableColumn tableColumnEstadoLegal=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL));
		TableCellEditor tableCellEditorEstadoLegal =tableColumnEstadoLegal.getCellEditor();

		EstadoLegalTableCell estadolegalTableCellFk=(EstadoLegalTableCell)tableCellEditorEstadoLegal;

		if(estadolegalTableCellFk!=null) {
			estadolegalTableCellFk.setestadolegalsForeignKey(estadolegalsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadolegalTableCellFk.setRowActual(intSelectedRow);
			//estadolegalTableCellFk.setestadolegalsForeignKeyActual(estadolegalsForeignKey);
		//}


		if(estadolegalTableCellFk!=null) {
			estadolegalTableCellFk.RecargarEstadoLegalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoNivelEdu(List<TipoNivelEdu> tiponiveledusForeignKey)throws Exception{
		TableColumn tableColumnTipoNivelEdu=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU));
		TableCellEditor tableCellEditorTipoNivelEdu =tableColumnTipoNivelEdu.getCellEditor();

		TipoNivelEduTableCell tiponiveleduTableCellFk=(TipoNivelEduTableCell)tableCellEditorTipoNivelEdu;

		if(tiponiveleduTableCellFk!=null) {
			tiponiveleduTableCellFk.settiponiveledusForeignKey(tiponiveledusForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiponiveleduTableCellFk.setRowActual(intSelectedRow);
			//tiponiveleduTableCellFk.settiponiveledusForeignKeyActual(tiponiveledusForeignKey);
		//}


		if(tiponiveleduTableCellFk!=null) {
			tiponiveleduTableCellFk.RecargarTipoNivelEdusForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable (Long id) throws Exception {
		this.setActualCuentaContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarSubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesSubCliente(false);
			
			//if(!this.isEsNuevoSubCliente) {								
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				
			}
			
			if(this.permiteMantenimiento(this.subcliente)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.subclienteSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoSubCliente=true;
					this.inicializarActualizarBindingTablaSubCliente(false);
					this.isEsNuevoSubCliente=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoSubCliente=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoSubCliente=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesSubCliente(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualSubCliente(false);
				
				this.habilitarDeshabilitarControlesSubCliente(false);
			
												
				
				if(SubClienteJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleSubCliente();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoSubClienteActionPerformed(evt,subclienteSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualSubCliente(this.subcliente,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,subclienteSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.subcliente.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarSubClienteActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				this.subcliente.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				this.subcliente.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.subcliente)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.subclienteSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((SubClienteModel) this.jTableDatosSubCliente.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoSubCliente=true;
				this.inicializarActualizarBindingTablaSubCliente(false);
				this.isEsNuevoSubCliente=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesSubCliente(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualSubCliente(false);
				
				this.habilitarDeshabilitarControlesSubCliente(false);
				
				
				
				if(SubClienteJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleSubCliente();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarSubClienteActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosSubCliente.getRowCount()>=1) {
				jTableDatosSubCliente.removeRowSelectionInterval(0, jTableDatosSubCliente.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesSubCliente(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaSubCliente(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesSubCliente(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualSubCliente(false) ;
			
			this.isEsNuevoSubCliente=false;
			
			if(SubClienteJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleSubCliente();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosSubClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingSubCliente(false);
				
				//SI ES MANUAL
				if(SubClienteJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualSubCliente();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosSubClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoSubCliente--;			
			//SubCliente subclienteAux= new SubCliente();			
			//subclienteAux.setId(this.iIdNuevoSubCliente);
			
			if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaSubCliente();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
			
			this.subcliente.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.subclienteLogic.getSubClientes().add(this.subclienteAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.subclientes.add(this.subclienteAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaSubCliente(false);
			
			this.jTableDatosSubCliente.setRowSelectionInterval(this.getIndiceNuevoSubCliente(), this.getIndiceNuevoSubCliente());
			
			int iLastRow =  this.jTableDatosSubCliente.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosSubCliente.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosSubCliente.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaSubCliente(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionSubClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingSubCliente(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSubCliente(false);
			
			//SI ES MANUAL
			if(SubClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualSubCliente();
			}
			
			//this.abrirFrameTreeSubCliente();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionSubClienteActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Sub ClienteS ?", "MANTENIMIENTO DE Sub Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionSubCliente.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralSubCliente();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.subclienteReturnGeneral=subclienteLogic.procesarImportacionSubClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.subclienteParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarSubClienteReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionSubClienteActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionSubCliente.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionSubCliente.setFileImportacion(this.jInternalFrameImportacionSubCliente.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionSubCliente.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionSubCliente.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionSubCliente.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionSubCliente.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoSubClienteActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();		

		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("SubClienteBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"SubClienteBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteSubClientes("Todos",subclientesSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.subclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case SubClienteConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoIdentificacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoIdentificacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoIdentificacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoIdentificacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDENTIFICACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_entificacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_entificacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_entificacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_entificacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_APELLIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ellido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ellido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ellido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ellido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreCompleto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreCompleto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreCompleto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreCompleto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_DIRECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_TELEFONO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefono_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefono_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefono_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefono_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCELULAR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCelular_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCelular_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCelular_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCelular_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_MAIL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_il_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_il_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_il_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_il_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaNacimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaNacimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaNacimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaNacimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_OBSERVACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_servacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_servacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_servacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_servacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDPAIS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Pais_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Pais_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Pais_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Pais_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDCIUDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ciudad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ciudad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ciudad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ciudad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDZONA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Zona_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Zona_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Zona_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Zona_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_PaisNacionalidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_PaisNacionalidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_PaisNacionalidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_PaisNacionalidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoGenero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoGenero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoGenero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoGenero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoCivil_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoCivil_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoCivil_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoCivil_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoLegal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoLegal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoLegal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoLegal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoNivelEdu_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoNivelEdu_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoNivelEdu_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoNivelEdu_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_thImagenFirma_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_thImagenFirma_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_thImagenFirma_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_thImagenFirma_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCARGA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCarga_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCarga_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCarga_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCarga_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_LIMITECREDITO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_miteCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_miteCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_miteCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_miteCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_DESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digoContrato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digoContrato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digoContrato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digoContrato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_VALORCONTRATO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorContrato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorContrato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorContrato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorContrato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_FECHAINICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaInicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaInicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaInicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaInicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_FECHAFIN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaFin_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaFin_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaFin_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaFin_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case SubClienteConstantesFunciones.LABEL_PLAZO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_azo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_azo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_azo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_azo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoSubCliente.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case SubClienteConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case SubClienteConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case SubClienteConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					sNombreCampoCategoria="id_tipo_identificacion";
					break;

				case SubClienteConstantesFunciones.LABEL_IDENTIFICACION:
					sNombreCampoCategoria="identificacion";
					break;

				case SubClienteConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case SubClienteConstantesFunciones.LABEL_APELLIDO:
					sNombreCampoCategoria="apellido";
					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					sNombreCampoCategoria="nombre_completo";
					break;

				case SubClienteConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoria="direccion";
					break;

				case SubClienteConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoria="telefono";
					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCELULAR:
					sNombreCampoCategoria="numero_celular";
					break;

				case SubClienteConstantesFunciones.LABEL_MAIL:
					sNombreCampoCategoria="mail";
					break;

				case SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					sNombreCampoCategoria="fecha_nacimiento";
					break;

				case SubClienteConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fechao";
					break;

				case SubClienteConstantesFunciones.LABEL_OBSERVACION:
					sNombreCampoCategoria="observacion";
					break;

				case SubClienteConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoria="id_pais";
					break;

				case SubClienteConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoria="id_ciudad";
					break;

				case SubClienteConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoria="id_zona";
					break;

				case SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					sNombreCampoCategoria="id_pais_nacionalidad";
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					sNombreCampoCategoria="id_tipo_genero";
					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					sNombreCampoCategoria="id_estado_civil";
					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					sNombreCampoCategoria="id_estado_legal";
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					sNombreCampoCategoria="id_tipo_nivel_edu";
					break;

				case SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					sNombreCampoCategoria="path_imagen_firma";
					break;

				case SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCARGA:
					sNombreCampoCategoria="numero_carga";
					break;

				case SubClienteConstantesFunciones.LABEL_LIMITECREDITO:
					sNombreCampoCategoria="limite_credito";
					break;

				case SubClienteConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoria="descuento";
					break;

				case SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO:
					sNombreCampoCategoria="codigo_contrato";
					break;

				case SubClienteConstantesFunciones.LABEL_VALORCONTRATO:
					sNombreCampoCategoria="valor_contrato";
					break;

				case SubClienteConstantesFunciones.LABEL_FECHAINICIO:
					sNombreCampoCategoria="fecha_inicio";
					break;

				case SubClienteConstantesFunciones.LABEL_FECHAFIN:
					sNombreCampoCategoria="fecha_fin";
					break;

				case SubClienteConstantesFunciones.LABEL_PLAZO:
					sNombreCampoCategoria="plazo";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case SubClienteConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case SubClienteConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case SubClienteConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					sNombreCampoCategoriaValor="id_tipo_identificacion";
					break;

				case SubClienteConstantesFunciones.LABEL_IDENTIFICACION:
					sNombreCampoCategoriaValor="identificacion";
					break;

				case SubClienteConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case SubClienteConstantesFunciones.LABEL_APELLIDO:
					sNombreCampoCategoriaValor="apellido";
					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					sNombreCampoCategoriaValor="nombre_completo";
					break;

				case SubClienteConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoriaValor="direccion";
					break;

				case SubClienteConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoriaValor="telefono";
					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCELULAR:
					sNombreCampoCategoriaValor="numero_celular";
					break;

				case SubClienteConstantesFunciones.LABEL_MAIL:
					sNombreCampoCategoriaValor="mail";
					break;

				case SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					sNombreCampoCategoriaValor="fecha_nacimiento";
					break;

				case SubClienteConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fechao";
					break;

				case SubClienteConstantesFunciones.LABEL_OBSERVACION:
					sNombreCampoCategoriaValor="observacion";
					break;

				case SubClienteConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoriaValor="id_pais";
					break;

				case SubClienteConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoriaValor="id_ciudad";
					break;

				case SubClienteConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoriaValor="id_zona";
					break;

				case SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					sNombreCampoCategoriaValor="id_pais_nacionalidad";
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					sNombreCampoCategoriaValor="id_tipo_genero";
					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					sNombreCampoCategoriaValor="id_estado_civil";
					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					sNombreCampoCategoriaValor="id_estado_legal";
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					sNombreCampoCategoriaValor="id_tipo_nivel_edu";
					break;

				case SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					sNombreCampoCategoriaValor="path_imagen_firma";
					break;

				case SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCARGA:
					sNombreCampoCategoriaValor="numero_carga";
					break;

				case SubClienteConstantesFunciones.LABEL_LIMITECREDITO:
					sNombreCampoCategoriaValor="limite_credito";
					break;

				case SubClienteConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoriaValor="descuento";
					break;

				case SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO:
					sNombreCampoCategoriaValor="codigo_contrato";
					break;

				case SubClienteConstantesFunciones.LABEL_VALORCONTRATO:
					sNombreCampoCategoriaValor="valor_contrato";
					break;

				case SubClienteConstantesFunciones.LABEL_FECHAINICIO:
					sNombreCampoCategoriaValor="fecha_inicio";
					break;

				case SubClienteConstantesFunciones.LABEL_FECHAFIN:
					sNombreCampoCategoriaValor="fecha_fin";
					break;

				case SubClienteConstantesFunciones.LABEL_PLAZO:
					sNombreCampoCategoriaValor="plazo";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case SubClienteConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case SubClienteConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case SubClienteConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Identificacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_identificacion");
					break;

				case SubClienteConstantesFunciones.LABEL_IDENTIFICACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Identificacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"identificacion");
					break;

				case SubClienteConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case SubClienteConstantesFunciones.LABEL_APELLIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Apellido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"apellido");
					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Completo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_completo");
					break;

				case SubClienteConstantesFunciones.LABEL_DIRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion");
					break;

				case SubClienteConstantesFunciones.LABEL_TELEFONO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono");
					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCELULAR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Celular",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_celular");
					break;

				case SubClienteConstantesFunciones.LABEL_MAIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mail",sNombreCampoCategoria,sNombreCampoCategoriaValor,"mail");
					break;

				case SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Nacimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_nacimiento");
					break;

				case SubClienteConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fechao");
					break;

				case SubClienteConstantesFunciones.LABEL_OBSERVACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Observacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"observacion");
					break;

				case SubClienteConstantesFunciones.LABEL_IDPAIS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais");
					break;

				case SubClienteConstantesFunciones.LABEL_IDCIUDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ciudad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ciudad");
					break;

				case SubClienteConstantesFunciones.LABEL_IDZONA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Zona",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_zona");
					break;

				case SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais Nacionalad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais_nacionalidad");
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Genero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_genero");
					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Civil",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_civil");
					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Legal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_legal");
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Nivel Educativo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_nivel_edu");
					break;

				case SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Path Imagen Firma",sNombreCampoCategoria,sNombreCampoCategoriaValor,"path_imagen_firma");
					break;

				case SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCARGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Carga",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_carga");
					break;

				case SubClienteConstantesFunciones.LABEL_LIMITECREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Limite Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"limite_credito");
					break;

				case SubClienteConstantesFunciones.LABEL_DESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento");
					break;

				case SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo Contrato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo_contrato");
					break;

				case SubClienteConstantesFunciones.LABEL_VALORCONTRATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Contrato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_contrato");
					break;

				case SubClienteConstantesFunciones.LABEL_FECHAINICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Inicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_inicio");
					break;

				case SubClienteConstantesFunciones.LABEL_FECHAFIN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Fin",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_fin");
					break;

				case SubClienteConstantesFunciones.LABEL_PLAZO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Plazo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"plazo");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoSubClienteActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();		
		
		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"subcliente";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("SubClientes");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case SubClienteConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.gettipoidentificacion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDENTIFICACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDENTIFICACION);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getidentificacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_RUC);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_APELLIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_APELLIDO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getapellido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getnombre_completo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_DIRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_DIRECCION);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getdireccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_TELEFONO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_TELEFONO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.gettelefono());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCELULAR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_NUMEROCELULAR);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getnumero_celular());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_MAIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_MAIL);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getmail());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getfecha_nacimiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getfechao());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_OBSERVACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_OBSERVACION);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getobservacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDPAIS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDPAIS);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getpais_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDCIUDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDCIUDAD);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getciudad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDZONA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDZONA);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getzona_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getpaisnacionalidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDTIPOGENERO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.gettipogenero_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getestadocivil_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getestadolegal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.gettiponiveledu_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getpath_imagen_firma());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_NUMEROCARGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_NUMEROCARGA);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getnumero_carga());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_LIMITECREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_LIMITECREDITO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getlimite_credito());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_DESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_DESCUENTO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getdescuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getcodigo_contrato());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_VALORCONTRATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_VALORCONTRATO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getvalor_contrato());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_FECHAINICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHAINICIO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getfecha_inicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_FECHAFIN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHAFIN);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getfecha_fin());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case SubClienteConstantesFunciones.LABEL_PLAZO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(SubClienteConstantesFunciones.LABEL_PLAZO);
					iRow++;

					for(SubCliente subcliente:subclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(subcliente.getplazo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelSubCliente(row);				
			//	iRow++;
			//}				
			
			//for(SubCliente subclienteAux:subclientesSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelSubCliente(subclienteAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.subclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSubCliente(false);
			
			//SI ES MANUAL
			if(SubClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualSubCliente();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresSubClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSubCliente(false);
			
			//SI ES MANUAL
			if(SubClienteJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualSubCliente();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesSubClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingSubCliente(false);
			
			//SI ES MANUAL
			if(SubClienteJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualSubCliente();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaSubCliente() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosSubCliente.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosSubCliente.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosSubCliente.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosSubCliente.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosSubCliente.setMinimumSize(dimensionMinimum);
		this.jTableDatosSubCliente.setMaximumSize(dimensionMaximum);
		this.jTableDatosSubCliente.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingSubCliente(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingSubCliente(esInicializar,true);
	}
	
	public void inicializarActualizarBindingSubCliente(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaSubCliente(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesSubCliente(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasSubCliente(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesSubCliente(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesSubCliente(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!SubClienteJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualSubCliente() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaSubCliente();
		
		this.inicializarActualizarBindingBotonesManualSubCliente(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualSubCliente();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesSubCliente() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualSubCliente(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualSubCliente(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosSubCliente.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosSubCliente.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteSubCliente.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormSubCliente!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormSubCliente.jCheckBoxPostAccionNuevoSubCliente.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormSubCliente.jCheckBoxPostAccionSinCerrarSubCliente.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormSubCliente.jCheckBoxPostAccionSinMensajeSubCliente.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosSubCliente.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosSubCliente.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteSubCliente.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormSubCliente!=null) {
				this.jInternalFrameDetalleFormSubCliente.jCheckBoxPostAccionNuevoSubCliente.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormSubCliente.jCheckBoxPostAccionSinCerrarSubCliente.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormSubCliente.jCheckBoxPostAccionSinMensajeSubCliente.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionSubCliente.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionSubCliente.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormSubCliente!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesSubCliente.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoSubCliente!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesSubCliente.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesSubCliente.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarSubCliente.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesSubCliente.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoSubCliente!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesSubCliente.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralSubCliente.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesSubCliente(Boolean esInicializar) throws Exception {
		try	{	
			if(SubClienteJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualSubCliente(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesSubCliente() throws Exception {
		try	{
			if(SubClienteJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualSubCliente();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleSubCliente() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualSubCliente() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesSubCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesSubCliente.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesSubCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesSubCliente.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesSubCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesSubCliente.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionSubCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionSubCliente.addItem(reporte);
			}
			
			
			if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionSubCliente.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionSubCliente.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesSubCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesSubCliente.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesSubCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesSubCliente.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarSubCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarSubCliente.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarSubCliente.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualSubCliente();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualSubCliente() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoSubCliente!=null) {
				this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoSubCliente!=null) {
				this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoSubCliente!=null) {
				
				if(this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoSubCliente.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoSubCliente.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoSubCliente.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=SubClienteConstantesFunciones.getTiposSeleccionarSubCliente(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=SubClienteConstantesFunciones.getTiposSeleccionarSubCliente(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=SubClienteConstantesFunciones.getTiposSeleccionarSubCliente(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoSubCliente.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoSubCliente.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualSubCliente()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.identificacionBusquedaPorIdentificacion=this.jTextFieldidentificacionBusquedaPorIdentificacionSubCliente.getText();
		this.nombre_completoBusquedaPorNombreCompleto=this.jTextAreanombre_completoBusquedaPorNombreCompletoSubCliente.getText();
		this.rucBusquedaPorRuc=this.jTextFieldrucBusquedaPorRucSubCliente.getText();
		if(this.jComboBoxid_clienteFK_IdClienteSubCliente.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteSubCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.getSelectedItem()!=null){this.id_estado_civilFK_IdEstadoCivil=((EstadoCivil)this.jComboBoxid_estado_civilFK_IdEstadoCivilSubCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.getSelectedItem()!=null){this.id_estado_legalFK_IdEstadoLegal=((EstadoLegal)this.jComboBoxid_estado_legalFK_IdEstadoLegalSubCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.getSelectedItem()!=null){this.id_tipo_identificacionFK_IdTipoIdentificacion=((TipoIdentificacion)this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionSubCliente.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasSubCliente(Boolean esInicializar) throws Exception {				
		if(SubClienteJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualSubCliente();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaSubCliente() throws Exception {
		this.inicializarActualizarBindingTablaSubCliente(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderBySubCliente() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderBySubCliente.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderBySubCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderBySubCliente.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderBySubCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderBySubCliente.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosSubClienteOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubClienteOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderBySubCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderBySubCliente.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderBySubCliente.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaSubCliente(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=subclienteLogic.getSubClientes().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=subclientes.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosSubCliente.setModel(new SubClienteModel(this.subclienteLogic.getSubClientes(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosSubCliente.setModel(new SubClienteModel(this.subclientes,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderBySubCliente!=null && this.jInternalFrameOrderBySubCliente.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderBySubCliente();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+SubClienteConstantesFunciones.SCLASSWEBTITULO,subclienteConstantesFunciones.resaltarSeleccionarSubCliente,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+SubClienteConstantesFunciones.SCLASSWEBTITULO,subclienteConstantesFunciones.resaltarSeleccionarSubCliente,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_ID));

		if(this.subclienteConstantesFunciones.mostraridSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.subclienteConstantesFunciones.resaltaridSubCliente,this.subclienteConstantesFunciones.activaridSubCliente,iSizeTabla,this,true,"idSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltaridSubCliente,this.subclienteConstantesFunciones.activaridSubCliente,this,true,"idSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDEMPRESA));

		if(this.subclienteConstantesFunciones.mostrarid_empresaSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.subclienteConstantesFunciones.resaltarid_empresaSubCliente,this,this.subclienteConstantesFunciones.activarid_empresaSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.subclienteConstantesFunciones.resaltarid_empresaSubCliente,this,this.subclienteConstantesFunciones.activarid_empresaSubCliente,false,"id_empresaSubCliente","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDCLIENTE));

		if(this.subclienteConstantesFunciones.mostrarid_clienteSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.subclienteConstantesFunciones.resaltarid_clienteSubCliente,this,this.subclienteConstantesFunciones.activarid_clienteSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.subclienteConstantesFunciones.resaltarid_clienteSubCliente,this,this.subclienteConstantesFunciones.activarid_clienteSubCliente,true,"id_clienteSubCliente","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.subclienteConstantesFunciones.mostrarid_sucursalSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.subclienteConstantesFunciones.resaltarid_sucursalSubCliente,this,this.subclienteConstantesFunciones.activarid_sucursalSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.subclienteConstantesFunciones.resaltarid_sucursalSubCliente,this,this.subclienteConstantesFunciones.activarid_sucursalSubCliente,false,"id_sucursalSubCliente","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION));

		if(this.subclienteConstantesFunciones.mostrarid_tipo_identificacionSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoIdentificacionTableCell(this.tipoidentificacionsForeignKey,this.subclienteConstantesFunciones.resaltarid_tipo_identificacionSubCliente,this,this.subclienteConstantesFunciones.activarid_tipo_identificacionSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoIdentificacionTableCell(this.tipoidentificacionsForeignKey,this.subclienteConstantesFunciones.resaltarid_tipo_identificacionSubCliente,this,this.subclienteConstantesFunciones.activarid_tipo_identificacionSubCliente,true,"id_tipo_identificacionSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDENTIFICACION));

		if(this.subclienteConstantesFunciones.mostraridentificacionSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDENTIFICACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltaridentificacionSubCliente,this.subclienteConstantesFunciones.activaridentificacionSubCliente,iSizeTabla,this,true,"identificacionSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltaridentificacionSubCliente,this.subclienteConstantesFunciones.activaridentificacionSubCliente,this,true,"identificacionSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_RUC));

		if(this.subclienteConstantesFunciones.mostrarrucSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltarrucSubCliente,this.subclienteConstantesFunciones.activarrucSubCliente,iSizeTabla,this,true,"rucSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarrucSubCliente,this.subclienteConstantesFunciones.activarrucSubCliente,this,true,"rucSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_NOMBRE));

		if(this.subclienteConstantesFunciones.mostrarnombreSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltarnombreSubCliente,this.subclienteConstantesFunciones.activarnombreSubCliente,iSizeTabla,this,true,"nombreSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarnombreSubCliente,this.subclienteConstantesFunciones.activarnombreSubCliente,this,true,"nombreSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_APELLIDO));

		if(this.subclienteConstantesFunciones.mostrarapellidoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_APELLIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltarapellidoSubCliente,this.subclienteConstantesFunciones.activarapellidoSubCliente,iSizeTabla,this,true,"apellidoSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarapellidoSubCliente,this.subclienteConstantesFunciones.activarapellidoSubCliente,this,true,"apellidoSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO));

		if(this.subclienteConstantesFunciones.mostrarnombre_completoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltarnombre_completoSubCliente,this.subclienteConstantesFunciones.activarnombre_completoSubCliente,iSizeTabla,this,true,"nombre_completoSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarnombre_completoSubCliente,this.subclienteConstantesFunciones.activarnombre_completoSubCliente,this,true,"nombre_completoSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_DIRECCION));

		if(this.subclienteConstantesFunciones.mostrardireccionSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_DIRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltardireccionSubCliente,this.subclienteConstantesFunciones.activardireccionSubCliente,iSizeTabla,this,true,"direccionSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltardireccionSubCliente,this.subclienteConstantesFunciones.activardireccionSubCliente,this,true,"direccionSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_TELEFONO));

		if(this.subclienteConstantesFunciones.mostrartelefonoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_TELEFONO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltartelefonoSubCliente,this.subclienteConstantesFunciones.activartelefonoSubCliente,iSizeTabla,this,true,"telefonoSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltartelefonoSubCliente,this.subclienteConstantesFunciones.activartelefonoSubCliente,this,true,"telefonoSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_NUMEROCELULAR));

		if(this.subclienteConstantesFunciones.mostrarnumero_celularSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_NUMEROCELULAR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltarnumero_celularSubCliente,this.subclienteConstantesFunciones.activarnumero_celularSubCliente,iSizeTabla,this,true,"numero_celularSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarnumero_celularSubCliente,this.subclienteConstantesFunciones.activarnumero_celularSubCliente,this,true,"numero_celularSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_MAIL));

		if(this.subclienteConstantesFunciones.mostrarmailSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_MAIL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltarmailSubCliente,this.subclienteConstantesFunciones.activarmailSubCliente,iSizeTabla,this,true,"mailSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarmailSubCliente,this.subclienteConstantesFunciones.activarmailSubCliente,this,true,"mailSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO));

		if(this.subclienteConstantesFunciones.mostrarfecha_nacimientoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.subclienteConstantesFunciones.resaltarfecha_nacimientoSubCliente,this.subclienteConstantesFunciones.activarfecha_nacimientoSubCliente,iSizeTabla,this,true,"fecha_nacimientoSubCliente","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.subclienteConstantesFunciones.resaltarfecha_nacimientoSubCliente,this.subclienteConstantesFunciones.activarfecha_nacimientoSubCliente,this,true,"fecha_nacimientoSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_FECHA));

		if(this.subclienteConstantesFunciones.mostrarfechaoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.subclienteConstantesFunciones.resaltarfechaoSubCliente,this.subclienteConstantesFunciones.activarfechaoSubCliente,iSizeTabla,this,true,"fechaoSubCliente","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.subclienteConstantesFunciones.resaltarfechaoSubCliente,this.subclienteConstantesFunciones.activarfechaoSubCliente,this,true,"fechaoSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_OBSERVACION));

		if(this.subclienteConstantesFunciones.mostrarobservacionSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_OBSERVACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltarobservacionSubCliente,this.subclienteConstantesFunciones.activarobservacionSubCliente,iSizeTabla,this,true,"observacionSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarobservacionSubCliente,this.subclienteConstantesFunciones.activarobservacionSubCliente,this,true,"observacionSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDPAIS));

		if(this.subclienteConstantesFunciones.mostrarid_paisSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDPAIS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paissForeignKey,this.subclienteConstantesFunciones.resaltarid_paisSubCliente,this,this.subclienteConstantesFunciones.activarid_paisSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new PaisTableCell(this.paissForeignKey,this.subclienteConstantesFunciones.resaltarid_paisSubCliente,this,this.subclienteConstantesFunciones.activarid_paisSubCliente,true,"id_paisSubCliente","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDCIUDAD));

		if(this.subclienteConstantesFunciones.mostrarid_ciudadSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDCIUDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CiudadTableCell(this.ciudadsForeignKey,this.subclienteConstantesFunciones.resaltarid_ciudadSubCliente,this,this.subclienteConstantesFunciones.activarid_ciudadSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new CiudadTableCell(this.ciudadsForeignKey,this.subclienteConstantesFunciones.resaltarid_ciudadSubCliente,this,this.subclienteConstantesFunciones.activarid_ciudadSubCliente,true,"id_ciudadSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDZONA));

		if(this.subclienteConstantesFunciones.mostrarid_zonaSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDZONA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ZonaTableCell(this.zonasForeignKey,this.subclienteConstantesFunciones.resaltarid_zonaSubCliente,this,this.subclienteConstantesFunciones.activarid_zonaSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new ZonaTableCell(this.zonasForeignKey,this.subclienteConstantesFunciones.resaltarid_zonaSubCliente,this,this.subclienteConstantesFunciones.activarid_zonaSubCliente,true,"id_zonaSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD));

		if(this.subclienteConstantesFunciones.mostrarid_pais_nacionalidadSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paisnacionalidadsForeignKey,this.subclienteConstantesFunciones.resaltarid_pais_nacionalidadSubCliente,this,this.subclienteConstantesFunciones.activarid_pais_nacionalidadSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new PaisTableCell(this.paisnacionalidadsForeignKey,this.subclienteConstantesFunciones.resaltarid_pais_nacionalidadSubCliente,this,this.subclienteConstantesFunciones.activarid_pais_nacionalidadSubCliente,true,"id_pais_nacionalidadSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDTIPOGENERO));

		if(this.subclienteConstantesFunciones.mostrarid_tipo_generoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDTIPOGENERO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoGeneroTableCell(this.tipogenerosForeignKey,this.subclienteConstantesFunciones.resaltarid_tipo_generoSubCliente,this,this.subclienteConstantesFunciones.activarid_tipo_generoSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoGeneroTableCell(this.tipogenerosForeignKey,this.subclienteConstantesFunciones.resaltarid_tipo_generoSubCliente,this,this.subclienteConstantesFunciones.activarid_tipo_generoSubCliente,true,"id_tipo_generoSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL));

		if(this.subclienteConstantesFunciones.mostrarid_estado_civilSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoCivilTableCell(this.estadocivilsForeignKey,this.subclienteConstantesFunciones.resaltarid_estado_civilSubCliente,this,this.subclienteConstantesFunciones.activarid_estado_civilSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new EstadoCivilTableCell(this.estadocivilsForeignKey,this.subclienteConstantesFunciones.resaltarid_estado_civilSubCliente,this,this.subclienteConstantesFunciones.activarid_estado_civilSubCliente,true,"id_estado_civilSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL));

		if(this.subclienteConstantesFunciones.mostrarid_estado_legalSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoLegalTableCell(this.estadolegalsForeignKey,this.subclienteConstantesFunciones.resaltarid_estado_legalSubCliente,this,this.subclienteConstantesFunciones.activarid_estado_legalSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new EstadoLegalTableCell(this.estadolegalsForeignKey,this.subclienteConstantesFunciones.resaltarid_estado_legalSubCliente,this,this.subclienteConstantesFunciones.activarid_estado_legalSubCliente,true,"id_estado_legalSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU));

		if(this.subclienteConstantesFunciones.mostrarid_tipo_nivel_eduSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoNivelEduTableCell(this.tiponiveledusForeignKey,this.subclienteConstantesFunciones.resaltarid_tipo_nivel_eduSubCliente,this,this.subclienteConstantesFunciones.activarid_tipo_nivel_eduSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoNivelEduTableCell(this.tiponiveledusForeignKey,this.subclienteConstantesFunciones.resaltarid_tipo_nivel_eduSubCliente,this,this.subclienteConstantesFunciones.activarid_tipo_nivel_eduSubCliente,true,"id_tipo_nivel_eduSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA));

		if(this.subclienteConstantesFunciones.mostrarpath_imagen_firmaSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltarpath_imagen_firmaSubCliente,this.subclienteConstantesFunciones.activarpath_imagen_firmaSubCliente,iSizeTabla,this,true,"path_imagen_firmaSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarpath_imagen_firmaSubCliente,this.subclienteConstantesFunciones.activarpath_imagen_firmaSubCliente,this,true,"path_imagen_firmaSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE));

		if(this.subclienteConstantesFunciones.mostrarid_cuenta_contableSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.subclienteConstantesFunciones.resaltarid_cuenta_contableSubCliente,this,this.subclienteConstantesFunciones.activarid_cuenta_contableSubCliente,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.subclienteConstantesFunciones.resaltarid_cuenta_contableSubCliente,this,this.subclienteConstantesFunciones.activarid_cuenta_contableSubCliente,true,"id_cuenta_contableSubCliente","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_NUMEROCARGA));

		if(this.subclienteConstantesFunciones.mostrarnumero_cargaSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_NUMEROCARGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.subclienteConstantesFunciones.resaltarnumero_cargaSubCliente,this.subclienteConstantesFunciones.activarnumero_cargaSubCliente,iSizeTabla,this,true,"numero_cargaSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarnumero_cargaSubCliente,this.subclienteConstantesFunciones.activarnumero_cargaSubCliente,this,true,"numero_cargaSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_LIMITECREDITO));

		if(this.subclienteConstantesFunciones.mostrarlimite_creditoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_LIMITECREDITO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.subclienteConstantesFunciones.resaltarlimite_creditoSubCliente,this.subclienteConstantesFunciones.activarlimite_creditoSubCliente,iSizeTabla,this,true,"limite_creditoSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarlimite_creditoSubCliente,this.subclienteConstantesFunciones.activarlimite_creditoSubCliente,this,true,"limite_creditoSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_DESCUENTO));

		if(this.subclienteConstantesFunciones.mostrardescuentoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_DESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.subclienteConstantesFunciones.resaltardescuentoSubCliente,this.subclienteConstantesFunciones.activardescuentoSubCliente,iSizeTabla,this,true,"descuentoSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltardescuentoSubCliente,this.subclienteConstantesFunciones.activardescuentoSubCliente,this,true,"descuentoSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO));

		if(this.subclienteConstantesFunciones.mostrarcodigo_contratoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.subclienteConstantesFunciones.resaltarcodigo_contratoSubCliente,this.subclienteConstantesFunciones.activarcodigo_contratoSubCliente,iSizeTabla,this,true,"codigo_contratoSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarcodigo_contratoSubCliente,this.subclienteConstantesFunciones.activarcodigo_contratoSubCliente,this,true,"codigo_contratoSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_VALORCONTRATO));

		if(this.subclienteConstantesFunciones.mostrarvalor_contratoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_VALORCONTRATO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.subclienteConstantesFunciones.resaltarvalor_contratoSubCliente,this.subclienteConstantesFunciones.activarvalor_contratoSubCliente,iSizeTabla,this,true,"valor_contratoSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarvalor_contratoSubCliente,this.subclienteConstantesFunciones.activarvalor_contratoSubCliente,this,true,"valor_contratoSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_FECHAINICIO));

		if(this.subclienteConstantesFunciones.mostrarfecha_inicioSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_FECHAINICIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.subclienteConstantesFunciones.resaltarfecha_inicioSubCliente,this.subclienteConstantesFunciones.activarfecha_inicioSubCliente,iSizeTabla,this,true,"fecha_inicioSubCliente","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.subclienteConstantesFunciones.resaltarfecha_inicioSubCliente,this.subclienteConstantesFunciones.activarfecha_inicioSubCliente,this,true,"fecha_inicioSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_FECHAFIN));

		if(this.subclienteConstantesFunciones.mostrarfecha_finSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_FECHAFIN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.subclienteConstantesFunciones.resaltarfecha_finSubCliente,this.subclienteConstantesFunciones.activarfecha_finSubCliente,iSizeTabla,this,true,"fecha_finSubCliente","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.subclienteConstantesFunciones.resaltarfecha_finSubCliente,this.subclienteConstantesFunciones.activarfecha_finSubCliente,this,true,"fecha_finSubCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,SubClienteConstantesFunciones.LABEL_PLAZO));

		if(this.subclienteConstantesFunciones.mostrarplazoSubCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,SubClienteConstantesFunciones.LABEL_PLAZO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.subclienteConstantesFunciones.resaltarplazoSubCliente,this.subclienteConstantesFunciones.activarplazoSubCliente,iSizeTabla,this,true,"plazoSubCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.subclienteConstantesFunciones.resaltarplazoSubCliente,this.subclienteConstantesFunciones.activarplazoSubCliente,this,true,"plazoSubCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new SubClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.subclienteSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosFactura && this.subclienteConstantesFunciones.mostrarFacturaSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Facturas");
				tableColumn.setHeaderValue("Facturas");
				tableColumn.setCellRenderer(new FacturaTableCell(subclienteConstantesFunciones.resaltarFacturaSubCliente,this,this.subclienteConstantesFunciones.activarFacturaSubCliente));
				tableColumn.setCellEditor(new FacturaTableCell(subclienteConstantesFunciones.resaltarFacturaSubCliente,this,this.subclienteConstantesFunciones.activarFacturaSubCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosSubCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosConsignacion && this.subclienteConstantesFunciones.mostrarConsignacionSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Consignacions");
				tableColumn.setHeaderValue("Consignacions");
				tableColumn.setCellRenderer(new ConsignacionTableCell(subclienteConstantesFunciones.resaltarConsignacionSubCliente,this,this.subclienteConstantesFunciones.activarConsignacionSubCliente));
				tableColumn.setCellEditor(new ConsignacionTableCell(subclienteConstantesFunciones.resaltarConsignacionSubCliente,this,this.subclienteConstantesFunciones.activarConsignacionSubCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosSubCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosGuiaRemision && this.subclienteConstantesFunciones.mostrarGuiaRemisionSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Guia Remisiones");
				tableColumn.setHeaderValue("Guia Remisiones");
				tableColumn.setCellRenderer(new GuiaRemisionTableCell(subclienteConstantesFunciones.resaltarGuiaRemisionSubCliente,this,this.subclienteConstantesFunciones.activarGuiaRemisionSubCliente));
				tableColumn.setCellEditor(new GuiaRemisionTableCell(subclienteConstantesFunciones.resaltarGuiaRemisionSubCliente,this,this.subclienteConstantesFunciones.activarGuiaRemisionSubCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosSubCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosProforma && this.subclienteConstantesFunciones.mostrarProformaSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Proformas");
				tableColumn.setHeaderValue("Proformas");
				tableColumn.setCellRenderer(new ProformaTableCell(subclienteConstantesFunciones.resaltarProformaSubCliente,this,this.subclienteConstantesFunciones.activarProformaSubCliente));
				tableColumn.setCellEditor(new ProformaTableCell(subclienteConstantesFunciones.resaltarProformaSubCliente,this,this.subclienteConstantesFunciones.activarProformaSubCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosSubCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosPedidoExpor && this.subclienteConstantesFunciones.mostrarPedidoExporSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Pedido Exportacions");
				tableColumn.setHeaderValue("Pedido Exportacions");
				tableColumn.setCellRenderer(new PedidoExporTableCell(subclienteConstantesFunciones.resaltarPedidoExporSubCliente,this,this.subclienteConstantesFunciones.activarPedidoExporSubCliente));
				tableColumn.setCellEditor(new PedidoExporTableCell(subclienteConstantesFunciones.resaltarPedidoExporSubCliente,this,this.subclienteConstantesFunciones.activarPedidoExporSubCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosSubCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosPedido && this.subclienteConstantesFunciones.mostrarPedidoSubCliente && !SubClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Pedidos");
				tableColumn.setHeaderValue("Pedidos");
				tableColumn.setCellRenderer(new PedidoTableCell(subclienteConstantesFunciones.resaltarPedidoSubCliente,this,this.subclienteConstantesFunciones.activarPedidoSubCliente));
				tableColumn.setCellEditor(new PedidoTableCell(subclienteConstantesFunciones.resaltarPedidoSubCliente,this,this.subclienteConstantesFunciones.activarPedidoSubCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosSubCliente.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.subclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.subclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosSubCliente.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.subclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.subclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosSubCliente.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarSubCliente && this.isPermisoGuardarCambiosSubCliente) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.subclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.subclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosSubCliente.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.subclienteSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosSubCliente.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosSubCliente.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarSubCliente && this.isPermisoGuardarCambiosSubCliente) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.subclienteSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarSubCliente && this.isPermisoGuardarCambiosSubCliente) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosSubCliente.moveColumn(this.jTableDatosSubCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosSubCliente.moveColumn(this.jTableDatosSubCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.subclienteSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosSubCliente.moveColumn(this.jTableDatosSubCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosSubCliente.moveColumn(this.jTableDatosSubCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosSubCliente.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosSubCliente.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosSubCliente,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosSubCliente.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosSubCliente.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosSubCliente.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosSubCliente.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosSubCliente.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=subclienteLogic.getSubClientes().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=subclientes.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosSubCliente.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosSubCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosSubCliente();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoSubCliente=false;
					
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
				if(this.subclienteSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormSubCliente==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosSubCliente.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.subcliente.getsType().equals("DUPLICADO")
				   || this.subcliente.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoSubCliente=true;
				
				} else {
					this.isEsNuevoSubCliente=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.subclienteSessionBean.getEsGuardarRelacionado()) {
					if(this.subcliente.getId()>=0 && !this.subcliente.getIsNew()) {						
						this.isEsNuevoSubCliente=false;
						
					} else {
						this.isEsNuevoSubCliente=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoSubCliente(esRelaciones);						
				
				this.seleccionarSubCliente(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.subcliente.getId()<0) {
					this.isEsNuevoSubCliente=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarSubCliente(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarSubCliente(evt,rowIndex);
				}	
				
				if(this.subclienteSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion SubCliente: " + this.dDif); 
					}
				}								
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarSubCliente(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.subcliente)) {
					if(this.subcliente.getId()>0) {
						this.subcliente.setIsDeleted(true);
						
						this.subclientesEliminados.add(this.subcliente);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.subclienteLogic.getSubClientes().remove(this.subcliente);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.subclientes.remove(this.subcliente);				
					}
					
					
					((SubClienteModel) this.jTableDatosSubCliente.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaSubCliente(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarSubCliente(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoSubCliente) {
			
			if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosSubCliente.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosSubCliente.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioSubCliente(this.subcliente);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.subclienteConstantesFunciones.cargarid_empresaSubCliente || this.subclienteConstantesFunciones.event_dependid_empresaSubCliente) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.subcliente.getid_empresa());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(subcliente.getEmpresa()!=null) {
							this.empresasForeignKey.add(subcliente.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.subcliente.getid_empresa(),false,"Formulario");

					//Cliente
					if(!this.subclienteConstantesFunciones.cargarid_clienteSubCliente || this.subclienteConstantesFunciones.event_dependid_clienteSubCliente) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.subcliente.getid_cliente());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(subcliente.getCliente()!=null) {
							this.clientesForeignKey.add(subcliente.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.subcliente.getid_cliente(),false,"Formulario");

					//Sucursal
					if(!this.subclienteConstantesFunciones.cargarid_sucursalSubCliente || this.subclienteConstantesFunciones.event_dependid_sucursalSubCliente) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.subcliente.getid_sucursal());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(subcliente.getSucursal()!=null) {
							this.sucursalsForeignKey.add(subcliente.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.subcliente.getid_sucursal(),false,"Formulario");

					//TipoIdentificacion
					if(!this.subclienteConstantesFunciones.cargarid_tipo_identificacionSubCliente || this.subclienteConstantesFunciones.event_dependid_tipo_identificacionSubCliente) {
						//this.cargarCombosTipoIdentificacionsForeignKeyLista(" where id="+this.subcliente.getid_tipo_identificacion());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.tipoidentificacionsForeignKey=new ArrayList<TipoIdentificacion>();

						if(subcliente.getTipoIdentificacion()!=null) {
							this.tipoidentificacionsForeignKey.add(subcliente.getTipoIdentificacion());
						}

						this.addItemDefectoCombosForeignKeyTipoIdentificacion();
						this.cargarCombosFrameTipoIdentificacionsForeignKey("Todos");
					}
					this.setActualTipoIdentificacionForeignKey(this.subcliente.getid_tipo_identificacion(),false,"Formulario");

					//Pais
					if(!this.subclienteConstantesFunciones.cargarid_paisSubCliente || this.subclienteConstantesFunciones.event_dependid_paisSubCliente) {
						//this.cargarCombosPaissForeignKeyLista(" where id="+this.subcliente.getid_pais());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.paissForeignKey=new ArrayList<Pais>();

						if(subcliente.getPais()!=null) {
							this.paissForeignKey.add(subcliente.getPais());
						}

						this.addItemDefectoCombosForeignKeyPais();
						this.cargarCombosFramePaissForeignKey("Todos");
					}
					this.setActualPaisForeignKey(this.subcliente.getid_pais(),false,"Formulario");

					//Ciudad
					if(!this.subclienteConstantesFunciones.cargarid_ciudadSubCliente || this.subclienteConstantesFunciones.event_dependid_ciudadSubCliente) {
						//this.cargarCombosCiudadsForeignKeyLista(" where id="+this.subcliente.getid_ciudad());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.ciudadsForeignKey=new ArrayList<Ciudad>();

						if(subcliente.getCiudad()!=null) {
							this.ciudadsForeignKey.add(subcliente.getCiudad());
						}

						this.addItemDefectoCombosForeignKeyCiudad();
						this.cargarCombosFrameCiudadsForeignKey("Todos");
					}
					this.setActualCiudadForeignKey(this.subcliente.getid_ciudad(),false,"Formulario");

					//Zona
					if(!this.subclienteConstantesFunciones.cargarid_zonaSubCliente || this.subclienteConstantesFunciones.event_dependid_zonaSubCliente) {
						//this.cargarCombosZonasForeignKeyLista(" where id="+this.subcliente.getid_zona());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.zonasForeignKey=new ArrayList<Zona>();

						if(subcliente.getZona()!=null) {
							this.zonasForeignKey.add(subcliente.getZona());
						}

						this.addItemDefectoCombosForeignKeyZona();
						this.cargarCombosFrameZonasForeignKey("Todos");
					}
					this.setActualZonaForeignKey(this.subcliente.getid_zona(),false,"Formulario");

					//PaisNacionalidad
					if(!this.subclienteConstantesFunciones.cargarid_pais_nacionalidadSubCliente || this.subclienteConstantesFunciones.event_dependid_pais_nacionalidadSubCliente) {
						//this.cargarCombosPaisNacionalidadsForeignKeyLista(" where id="+this.subcliente.getid_pais_nacionalidad());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.paisnacionalidadsForeignKey=new ArrayList<Pais>();

						if(subcliente.getPaisNacionalidad()!=null) {
							this.paisnacionalidadsForeignKey.add(subcliente.getPaisNacionalidad());
						}

						this.addItemDefectoCombosForeignKeyPaisNacionalidad();
						this.cargarCombosFramePaisNacionalidadsForeignKey("Todos");
					}
					this.setActualPaisNacionalidadForeignKey(this.subcliente.getid_pais_nacionalidad(),false,"Formulario");

					//TipoGenero
					if(!this.subclienteConstantesFunciones.cargarid_tipo_generoSubCliente || this.subclienteConstantesFunciones.event_dependid_tipo_generoSubCliente) {
						//this.cargarCombosTipoGenerosForeignKeyLista(" where id="+this.subcliente.getid_tipo_genero());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.tipogenerosForeignKey=new ArrayList<TipoGenero>();

						if(subcliente.getTipoGenero()!=null) {
							this.tipogenerosForeignKey.add(subcliente.getTipoGenero());
						}

						this.addItemDefectoCombosForeignKeyTipoGenero();
						this.cargarCombosFrameTipoGenerosForeignKey("Todos");
					}
					this.setActualTipoGeneroForeignKey(this.subcliente.getid_tipo_genero(),false,"Formulario");

					//EstadoCivil
					if(!this.subclienteConstantesFunciones.cargarid_estado_civilSubCliente || this.subclienteConstantesFunciones.event_dependid_estado_civilSubCliente) {
						//this.cargarCombosEstadoCivilsForeignKeyLista(" where id="+this.subcliente.getid_estado_civil());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.estadocivilsForeignKey=new ArrayList<EstadoCivil>();

						if(subcliente.getEstadoCivil()!=null) {
							this.estadocivilsForeignKey.add(subcliente.getEstadoCivil());
						}

						this.addItemDefectoCombosForeignKeyEstadoCivil();
						this.cargarCombosFrameEstadoCivilsForeignKey("Todos");
					}
					this.setActualEstadoCivilForeignKey(this.subcliente.getid_estado_civil(),false,"Formulario");

					//EstadoLegal
					if(!this.subclienteConstantesFunciones.cargarid_estado_legalSubCliente || this.subclienteConstantesFunciones.event_dependid_estado_legalSubCliente) {
						//this.cargarCombosEstadoLegalsForeignKeyLista(" where id="+this.subcliente.getid_estado_legal());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.estadolegalsForeignKey=new ArrayList<EstadoLegal>();

						if(subcliente.getEstadoLegal()!=null) {
							this.estadolegalsForeignKey.add(subcliente.getEstadoLegal());
						}

						this.addItemDefectoCombosForeignKeyEstadoLegal();
						this.cargarCombosFrameEstadoLegalsForeignKey("Todos");
					}
					this.setActualEstadoLegalForeignKey(this.subcliente.getid_estado_legal(),false,"Formulario");

					//TipoNivelEdu
					if(!this.subclienteConstantesFunciones.cargarid_tipo_nivel_eduSubCliente || this.subclienteConstantesFunciones.event_dependid_tipo_nivel_eduSubCliente) {
						//this.cargarCombosTipoNivelEdusForeignKeyLista(" where id="+this.subcliente.getid_tipo_nivel_edu());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.tiponiveledusForeignKey=new ArrayList<TipoNivelEdu>();

						if(subcliente.getTipoNivelEdu()!=null) {
							this.tiponiveledusForeignKey.add(subcliente.getTipoNivelEdu());
						}

						this.addItemDefectoCombosForeignKeyTipoNivelEdu();
						this.cargarCombosFrameTipoNivelEdusForeignKey("Todos");
					}
					this.setActualTipoNivelEduForeignKey(this.subcliente.getid_tipo_nivel_edu(),false,"Formulario");

					//CuentaContable
					if(!this.subclienteConstantesFunciones.cargarid_cuenta_contableSubCliente || this.subclienteConstantesFunciones.event_dependid_cuenta_contableSubCliente) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.subcliente.getid_cuenta_contable());
									//this.inicializarActualizarBindingSubCliente(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(subcliente.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(subcliente.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.subcliente.getid_cuenta_contable(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesSubCliente("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesSubCliente(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualSubCliente() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoSubCliente(SubCliente subcliente) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoSubCliente(subcliente,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoSubCliente(SubCliente subcliente,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioSubCliente(subcliente);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeySubCliente(subcliente,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeySubCliente(subcliente);
	}
	
	public void setVariablesObjetoActualToFormularioSubCliente(SubCliente subcliente) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.setText(subcliente.getId().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldidentificacionSubCliente.setText(subcliente.getidentificacion());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldrucSubCliente.setText(subcliente.getruc());
			this.jInternalFrameDetalleFormSubCliente.jTextAreanombreSubCliente.setText(subcliente.getnombre());
			this.jInternalFrameDetalleFormSubCliente.jTextAreaapellidoSubCliente.setText(subcliente.getapellido());
			this.jInternalFrameDetalleFormSubCliente.jTextAreanombre_completoSubCliente.setText(subcliente.getnombre_completo());
			this.jInternalFrameDetalleFormSubCliente.jTextAreadireccionSubCliente.setText(subcliente.getdireccion());
			this.jInternalFrameDetalleFormSubCliente.jTextAreatelefonoSubCliente.setText(subcliente.gettelefono());
			this.jInternalFrameDetalleFormSubCliente.jTextAreanumero_celularSubCliente.setText(subcliente.getnumero_celular());
			this.jInternalFrameDetalleFormSubCliente.jTextAreamailSubCliente.setText(subcliente.getmail());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_nacimientoSubCliente.setDate(subcliente.getfecha_nacimiento());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfechaoSubCliente.setDate(subcliente.getfechao());
			this.jInternalFrameDetalleFormSubCliente.jTextAreaobservacionSubCliente.setText(subcliente.getobservacion());
			this.jInternalFrameDetalleFormSubCliente.jTextAreapath_imagen_firmaSubCliente.setText(subcliente.getpath_imagen_firma());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldnumero_cargaSubCliente.setText(subcliente.getnumero_carga().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldlimite_creditoSubCliente.setText(subcliente.getlimite_credito().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFielddescuentoSubCliente.setText(subcliente.getdescuento().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldcodigo_contratoSubCliente.setText(subcliente.getcodigo_contrato());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldvalor_contratoSubCliente.setText(subcliente.getvalor_contrato().toString());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_inicioSubCliente.setDate(subcliente.getfecha_inicio());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_finSubCliente.setDate(subcliente.getfecha_fin());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldplazoSubCliente.setText(subcliente.getplazo().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,SubCliente subclienteLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,subclienteLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,SubCliente subclienteLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				subclienteLocal=this.subcliente;
			} else {
				subclienteLocal=this.subclienteAnterior;
			}
		}
		
		if(this.permiteMantenimiento(subclienteLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoSubCliente(subclienteLocal,true);
					
					if(subclienteSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(subclienteLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.subclienteSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(subclienteLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoSubCliente(SubCliente subcliente,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualSubCliente(subcliente,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(subcliente);
	}
	
	public void setVariablesFormularioToObjetoActualSubCliente(SubCliente subcliente,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualSubCliente(subcliente,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualSubCliente(SubCliente subcliente,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.getText()==null || this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.getText()=="" || this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.getText()=="Id") {
				this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.setText("0");
			}

			if(conColumnasBase) {subcliente.setId(Long.parseLong(this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelIdSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setidentificacion(this.jInternalFrameDetalleFormSubCliente.jTextFieldidentificacionSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_IDENTIFICACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelidentificacionSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setruc(this.jInternalFrameDetalleFormSubCliente.jTextFieldrucSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelrucSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setnombre(this.jInternalFrameDetalleFormSubCliente.jTextAreanombreSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelnombreSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setapellido(this.jInternalFrameDetalleFormSubCliente.jTextAreaapellidoSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_APELLIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelapellidoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setnombre_completo(this.jInternalFrameDetalleFormSubCliente.jTextAreanombre_completoSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelnombre_completoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setdireccion(this.jInternalFrameDetalleFormSubCliente.jTextAreadireccionSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_DIRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabeldireccionSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.settelefono(this.jInternalFrameDetalleFormSubCliente.jTextAreatelefonoSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_TELEFONO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabeltelefonoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setnumero_celular(this.jInternalFrameDetalleFormSubCliente.jTextAreanumero_celularSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_NUMEROCELULAR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelnumero_celularSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setmail(this.jInternalFrameDetalleFormSubCliente.jTextAreamailSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_MAIL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelmailSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setfecha_nacimiento(this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_nacimientoSubCliente.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelfecha_nacimientoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setfechao(this.jInternalFrameDetalleFormSubCliente.jDateChooserfechaoSubCliente.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelfechaoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setobservacion(this.jInternalFrameDetalleFormSubCliente.jTextAreaobservacionSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_OBSERVACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelobservacionSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setpath_imagen_firma(this.jInternalFrameDetalleFormSubCliente.jTextAreapath_imagen_firmaSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelpath_imagen_firmaSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setnumero_carga(Integer.parseInt(this.jInternalFrameDetalleFormSubCliente.jTextFieldnumero_cargaSubCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_NUMEROCARGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelnumero_cargaSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setlimite_credito(Double.parseDouble(this.jInternalFrameDetalleFormSubCliente.jTextFieldlimite_creditoSubCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_LIMITECREDITO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabellimite_creditoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setdescuento(Double.parseDouble(this.jInternalFrameDetalleFormSubCliente.jTextFielddescuentoSubCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_DESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabeldescuentoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setcodigo_contrato(this.jInternalFrameDetalleFormSubCliente.jTextFieldcodigo_contratoSubCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelcodigo_contratoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setvalor_contrato(Double.parseDouble(this.jInternalFrameDetalleFormSubCliente.jTextFieldvalor_contratoSubCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_VALORCONTRATO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelvalor_contratoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setfecha_inicio(this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_inicioSubCliente.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_FECHAINICIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelfecha_inicioSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setfecha_fin(this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_finSubCliente.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_FECHAFIN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelfecha_finSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			subcliente.setplazo(Integer.parseInt(this.jInternalFrameDetalleFormSubCliente.jTextFieldplazoSubCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+SubClienteConstantesFunciones.LABEL_PLAZO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormSubCliente.jLabelplazoSubCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualSubCliente(SubCliente subclienteBean,SubCliente subcliente,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && subclienteBean.getid_cliente()!=null && !subclienteBean.getid_cliente().equals(-1L))) {subcliente.setid_cliente(subclienteBean.getid_cliente());}
			if(conDefault || (!conDefault && subclienteBean.getid_tipo_identificacion()!=null && !subclienteBean.getid_tipo_identificacion().equals(-1L))) {subcliente.setid_tipo_identificacion(subclienteBean.getid_tipo_identificacion());}
			if(conDefault || (!conDefault && subclienteBean.getid_pais()!=null && !subclienteBean.getid_pais().equals(-1L))) {subcliente.setid_pais(subclienteBean.getid_pais());}
			if(conDefault || (!conDefault && subclienteBean.getid_ciudad()!=null && !subclienteBean.getid_ciudad().equals(-1L))) {subcliente.setid_ciudad(subclienteBean.getid_ciudad());}
			if(conDefault || (!conDefault && subclienteBean.getid_zona()!=null && !subclienteBean.getid_zona().equals(-1L))) {subcliente.setid_zona(subclienteBean.getid_zona());}
			if(conDefault || (!conDefault && subclienteBean.getid_pais_nacionalidad()!=null && !subclienteBean.getid_pais_nacionalidad().equals(-1L))) {subcliente.setid_pais_nacionalidad(subclienteBean.getid_pais_nacionalidad());}
			if(conDefault || (!conDefault && subclienteBean.getid_tipo_genero()!=null && !subclienteBean.getid_tipo_genero().equals(-1L))) {subcliente.setid_tipo_genero(subclienteBean.getid_tipo_genero());}
			if(conDefault || (!conDefault && subclienteBean.getid_estado_civil()!=null && !subclienteBean.getid_estado_civil().equals(-1L))) {subcliente.setid_estado_civil(subclienteBean.getid_estado_civil());}
			if(conDefault || (!conDefault && subclienteBean.getid_estado_legal()!=null && !subclienteBean.getid_estado_legal().equals(-1L))) {subcliente.setid_estado_legal(subclienteBean.getid_estado_legal());}
			if(conDefault || (!conDefault && subclienteBean.getid_tipo_nivel_edu()!=null && !subclienteBean.getid_tipo_nivel_edu().equals(-1L))) {subcliente.setid_tipo_nivel_edu(subclienteBean.getid_tipo_nivel_edu());}
			if(conDefault || (!conDefault && subclienteBean.getid_cuenta_contable()!=null && !subclienteBean.getid_cuenta_contable().equals(-1L))) {subcliente.setid_cuenta_contable(subclienteBean.getid_cuenta_contable());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosSubCliente(SubCliente subclienteOrigen,SubCliente subcliente,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && subclienteOrigen.getId()!=null && !subclienteOrigen.getId().equals(0L))) {subcliente.setId(subclienteOrigen.getId());}}
			if(conDefault || (!conDefault && subclienteOrigen.getid_cliente()!=null && !subclienteOrigen.getid_cliente().equals(-1L))) {subcliente.setid_cliente(subclienteOrigen.getid_cliente());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_tipo_identificacion()!=null && !subclienteOrigen.getid_tipo_identificacion().equals(-1L))) {subcliente.setid_tipo_identificacion(subclienteOrigen.getid_tipo_identificacion());}
			if(conDefault || (!conDefault && subclienteOrigen.getidentificacion()!=null && !subclienteOrigen.getidentificacion().equals(""))) {subcliente.setidentificacion(subclienteOrigen.getidentificacion());}
			if(conDefault || (!conDefault && subclienteOrigen.getruc()!=null && !subclienteOrigen.getruc().equals(""))) {subcliente.setruc(subclienteOrigen.getruc());}
			if(conDefault || (!conDefault && subclienteOrigen.getnombre()!=null && !subclienteOrigen.getnombre().equals(""))) {subcliente.setnombre(subclienteOrigen.getnombre());}
			if(conDefault || (!conDefault && subclienteOrigen.getapellido()!=null && !subclienteOrigen.getapellido().equals(""))) {subcliente.setapellido(subclienteOrigen.getapellido());}
			if(conDefault || (!conDefault && subclienteOrigen.getnombre_completo()!=null && !subclienteOrigen.getnombre_completo().equals(""))) {subcliente.setnombre_completo(subclienteOrigen.getnombre_completo());}
			if(conDefault || (!conDefault && subclienteOrigen.getdireccion()!=null && !subclienteOrigen.getdireccion().equals(""))) {subcliente.setdireccion(subclienteOrigen.getdireccion());}
			if(conDefault || (!conDefault && subclienteOrigen.gettelefono()!=null && !subclienteOrigen.gettelefono().equals(""))) {subcliente.settelefono(subclienteOrigen.gettelefono());}
			if(conDefault || (!conDefault && subclienteOrigen.getnumero_celular()!=null && !subclienteOrigen.getnumero_celular().equals(""))) {subcliente.setnumero_celular(subclienteOrigen.getnumero_celular());}
			if(conDefault || (!conDefault && subclienteOrigen.getmail()!=null && !subclienteOrigen.getmail().equals(""))) {subcliente.setmail(subclienteOrigen.getmail());}
			if(conDefault || (!conDefault && subclienteOrigen.getfecha_nacimiento()!=null && !subclienteOrigen.getfecha_nacimiento().equals(new Date()))) {subcliente.setfecha_nacimiento(subclienteOrigen.getfecha_nacimiento());}
			if(conDefault || (!conDefault && subclienteOrigen.getfechao()!=null && !subclienteOrigen.getfechao().equals(new Date()))) {subcliente.setfechao(subclienteOrigen.getfechao());}
			if(conDefault || (!conDefault && subclienteOrigen.getobservacion()!=null && !subclienteOrigen.getobservacion().equals(""))) {subcliente.setobservacion(subclienteOrigen.getobservacion());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_pais()!=null && !subclienteOrigen.getid_pais().equals(-1L))) {subcliente.setid_pais(subclienteOrigen.getid_pais());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_ciudad()!=null && !subclienteOrigen.getid_ciudad().equals(-1L))) {subcliente.setid_ciudad(subclienteOrigen.getid_ciudad());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_zona()!=null && !subclienteOrigen.getid_zona().equals(-1L))) {subcliente.setid_zona(subclienteOrigen.getid_zona());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_pais_nacionalidad()!=null && !subclienteOrigen.getid_pais_nacionalidad().equals(-1L))) {subcliente.setid_pais_nacionalidad(subclienteOrigen.getid_pais_nacionalidad());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_tipo_genero()!=null && !subclienteOrigen.getid_tipo_genero().equals(-1L))) {subcliente.setid_tipo_genero(subclienteOrigen.getid_tipo_genero());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_estado_civil()!=null && !subclienteOrigen.getid_estado_civil().equals(-1L))) {subcliente.setid_estado_civil(subclienteOrigen.getid_estado_civil());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_estado_legal()!=null && !subclienteOrigen.getid_estado_legal().equals(-1L))) {subcliente.setid_estado_legal(subclienteOrigen.getid_estado_legal());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_tipo_nivel_edu()!=null && !subclienteOrigen.getid_tipo_nivel_edu().equals(-1L))) {subcliente.setid_tipo_nivel_edu(subclienteOrigen.getid_tipo_nivel_edu());}
			if(conDefault || (!conDefault && subclienteOrigen.getpath_imagen_firma()!=null && !subclienteOrigen.getpath_imagen_firma().equals(""))) {subcliente.setpath_imagen_firma(subclienteOrigen.getpath_imagen_firma());}
			if(conDefault || (!conDefault && subclienteOrigen.getid_cuenta_contable()!=null && !subclienteOrigen.getid_cuenta_contable().equals(-1L))) {subcliente.setid_cuenta_contable(subclienteOrigen.getid_cuenta_contable());}
			if(conDefault || (!conDefault && subclienteOrigen.getnumero_carga()!=null && !subclienteOrigen.getnumero_carga().equals(0))) {subcliente.setnumero_carga(subclienteOrigen.getnumero_carga());}
			if(conDefault || (!conDefault && subclienteOrigen.getlimite_credito()!=null && !subclienteOrigen.getlimite_credito().equals(0.0))) {subcliente.setlimite_credito(subclienteOrigen.getlimite_credito());}
			if(conDefault || (!conDefault && subclienteOrigen.getdescuento()!=null && !subclienteOrigen.getdescuento().equals(0.0))) {subcliente.setdescuento(subclienteOrigen.getdescuento());}
			if(conDefault || (!conDefault && subclienteOrigen.getcodigo_contrato()!=null && !subclienteOrigen.getcodigo_contrato().equals(""))) {subcliente.setcodigo_contrato(subclienteOrigen.getcodigo_contrato());}
			if(conDefault || (!conDefault && subclienteOrigen.getvalor_contrato()!=null && !subclienteOrigen.getvalor_contrato().equals(0.0))) {subcliente.setvalor_contrato(subclienteOrigen.getvalor_contrato());}
			if(conDefault || (!conDefault && subclienteOrigen.getfecha_inicio()!=null && !subclienteOrigen.getfecha_inicio().equals(new Date()))) {subcliente.setfecha_inicio(subclienteOrigen.getfecha_inicio());}
			if(conDefault || (!conDefault && subclienteOrigen.getfecha_fin()!=null && !subclienteOrigen.getfecha_fin().equals(new Date()))) {subcliente.setfecha_fin(subclienteOrigen.getfecha_fin());}
			if(conDefault || (!conDefault && subclienteOrigen.getplazo()!=null && !subclienteOrigen.getplazo().equals(0))) {subcliente.setplazo(subclienteOrigen.getplazo());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioSubCliente(SubCliente subcliente) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.setText(subcliente.getId().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldidentificacionSubCliente.setText(subcliente.getidentificacion());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldrucSubCliente.setText(subcliente.getruc());
			this.jInternalFrameDetalleFormSubCliente.jTextAreanombreSubCliente.setText(subcliente.getnombre());
			this.jInternalFrameDetalleFormSubCliente.jTextAreaapellidoSubCliente.setText(subcliente.getapellido());
			this.jInternalFrameDetalleFormSubCliente.jTextAreanombre_completoSubCliente.setText(subcliente.getnombre_completo());
			this.jInternalFrameDetalleFormSubCliente.jTextAreadireccionSubCliente.setText(subcliente.getdireccion());
			this.jInternalFrameDetalleFormSubCliente.jTextAreatelefonoSubCliente.setText(subcliente.gettelefono());
			this.jInternalFrameDetalleFormSubCliente.jTextAreanumero_celularSubCliente.setText(subcliente.getnumero_celular());
			this.jInternalFrameDetalleFormSubCliente.jTextAreamailSubCliente.setText(subcliente.getmail());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_nacimientoSubCliente.setDate(subcliente.getfecha_nacimiento());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfechaoSubCliente.setDate(subcliente.getfechao());
			this.jInternalFrameDetalleFormSubCliente.jTextAreaobservacionSubCliente.setText(subcliente.getobservacion());
			this.jInternalFrameDetalleFormSubCliente.jTextAreapath_imagen_firmaSubCliente.setText(subcliente.getpath_imagen_firma());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldnumero_cargaSubCliente.setText(subcliente.getnumero_carga().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldlimite_creditoSubCliente.setText(subcliente.getlimite_credito().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFielddescuentoSubCliente.setText(subcliente.getdescuento().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldcodigo_contratoSubCliente.setText(subcliente.getcodigo_contrato());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldvalor_contratoSubCliente.setText(subcliente.getvalor_contrato().toString());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_inicioSubCliente.setDate(subcliente.getfecha_inicio());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_finSubCliente.setDate(subcliente.getfecha_fin());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldplazoSubCliente.setText(subcliente.getplazo().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioSubCliente(SubClienteBean subclienteBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.setText(subclienteBean.getId().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldidentificacionSubCliente.setText(subclienteBean.getidentificacion());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldrucSubCliente.setText(subclienteBean.getruc());
			this.jInternalFrameDetalleFormSubCliente.jTextAreanombreSubCliente.setText(subclienteBean.getnombre());
			this.jInternalFrameDetalleFormSubCliente.jTextAreaapellidoSubCliente.setText(subclienteBean.getapellido());
			this.jInternalFrameDetalleFormSubCliente.jTextAreanombre_completoSubCliente.setText(subclienteBean.getnombre_completo());
			this.jInternalFrameDetalleFormSubCliente.jTextAreadireccionSubCliente.setText(subclienteBean.getdireccion());
			this.jInternalFrameDetalleFormSubCliente.jTextAreatelefonoSubCliente.setText(subclienteBean.gettelefono());
			this.jInternalFrameDetalleFormSubCliente.jTextAreanumero_celularSubCliente.setText(subclienteBean.getnumero_celular());
			this.jInternalFrameDetalleFormSubCliente.jTextAreamailSubCliente.setText(subclienteBean.getmail());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_nacimientoSubCliente.setDate(subclienteBean.getfecha_nacimiento());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfechaoSubCliente.setDate(subclienteBean.getfechao());
			this.jInternalFrameDetalleFormSubCliente.jTextAreaobservacionSubCliente.setText(subclienteBean.getobservacion());
			this.jInternalFrameDetalleFormSubCliente.jTextAreapath_imagen_firmaSubCliente.setText(subclienteBean.getpath_imagen_firma());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldnumero_cargaSubCliente.setText(subclienteBean.getnumero_carga().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldlimite_creditoSubCliente.setText(subclienteBean.getlimite_credito().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFielddescuentoSubCliente.setText(subclienteBean.getdescuento().toString());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldcodigo_contratoSubCliente.setText(subclienteBean.getcodigo_contrato());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldvalor_contratoSubCliente.setText(subclienteBean.getvalor_contrato().toString());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_inicioSubCliente.setDate(subclienteBean.getfecha_inicio());
			this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_finSubCliente.setDate(subclienteBean.getfecha_fin());
			this.jInternalFrameDetalleFormSubCliente.jTextFieldplazoSubCliente.setText(subclienteBean.getplazo().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanSubCliente(SubClienteParameterReturnGeneral subclienteReturnGeneral,SubClienteBean subclienteBean,Boolean conDefault) throws Exception { 
		try {
			SubCliente subclienteLocal=new SubCliente();
			
			subclienteLocal=subclienteReturnGeneral.getSubCliente();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && subclienteLocal.getId()!=null && !subclienteLocal.getId().equals(0L))) {subclienteBean.setId(subclienteLocal.getId());}}
			if(conDefault || (!conDefault && subclienteLocal.getid_cliente()!=null && !subclienteLocal.getid_cliente().equals(-1L))) {subclienteBean.setid_cliente(subclienteLocal.getid_cliente());}
			if(conDefault || (!conDefault && subclienteLocal.getid_tipo_identificacion()!=null && !subclienteLocal.getid_tipo_identificacion().equals(-1L))) {subclienteBean.setid_tipo_identificacion(subclienteLocal.getid_tipo_identificacion());}
			if(conDefault || (!conDefault && subclienteLocal.getidentificacion()!=null && !subclienteLocal.getidentificacion().equals(""))) {subclienteBean.setidentificacion(subclienteLocal.getidentificacion());}
			if(conDefault || (!conDefault && subclienteLocal.getruc()!=null && !subclienteLocal.getruc().equals(""))) {subclienteBean.setruc(subclienteLocal.getruc());}
			if(conDefault || (!conDefault && subclienteLocal.getnombre()!=null && !subclienteLocal.getnombre().equals(""))) {subclienteBean.setnombre(subclienteLocal.getnombre());}
			if(conDefault || (!conDefault && subclienteLocal.getapellido()!=null && !subclienteLocal.getapellido().equals(""))) {subclienteBean.setapellido(subclienteLocal.getapellido());}
			if(conDefault || (!conDefault && subclienteLocal.getnombre_completo()!=null && !subclienteLocal.getnombre_completo().equals(""))) {subclienteBean.setnombre_completo(subclienteLocal.getnombre_completo());}
			if(conDefault || (!conDefault && subclienteLocal.getdireccion()!=null && !subclienteLocal.getdireccion().equals(""))) {subclienteBean.setdireccion(subclienteLocal.getdireccion());}
			if(conDefault || (!conDefault && subclienteLocal.gettelefono()!=null && !subclienteLocal.gettelefono().equals(""))) {subclienteBean.settelefono(subclienteLocal.gettelefono());}
			if(conDefault || (!conDefault && subclienteLocal.getnumero_celular()!=null && !subclienteLocal.getnumero_celular().equals(""))) {subclienteBean.setnumero_celular(subclienteLocal.getnumero_celular());}
			if(conDefault || (!conDefault && subclienteLocal.getmail()!=null && !subclienteLocal.getmail().equals(""))) {subclienteBean.setmail(subclienteLocal.getmail());}
			if(conDefault || (!conDefault && subclienteLocal.getfecha_nacimiento()!=null && !subclienteLocal.getfecha_nacimiento().equals(new Date()))) {subclienteBean.setfecha_nacimiento(subclienteLocal.getfecha_nacimiento());}
			if(conDefault || (!conDefault && subclienteLocal.getfechao()!=null && !subclienteLocal.getfechao().equals(new Date()))) {subclienteBean.setfechao(subclienteLocal.getfechao());}
			if(conDefault || (!conDefault && subclienteLocal.getobservacion()!=null && !subclienteLocal.getobservacion().equals(""))) {subclienteBean.setobservacion(subclienteLocal.getobservacion());}
			if(conDefault || (!conDefault && subclienteLocal.getid_pais()!=null && !subclienteLocal.getid_pais().equals(-1L))) {subclienteBean.setid_pais(subclienteLocal.getid_pais());}
			if(conDefault || (!conDefault && subclienteLocal.getid_ciudad()!=null && !subclienteLocal.getid_ciudad().equals(-1L))) {subclienteBean.setid_ciudad(subclienteLocal.getid_ciudad());}
			if(conDefault || (!conDefault && subclienteLocal.getid_zona()!=null && !subclienteLocal.getid_zona().equals(-1L))) {subclienteBean.setid_zona(subclienteLocal.getid_zona());}
			if(conDefault || (!conDefault && subclienteLocal.getid_pais_nacionalidad()!=null && !subclienteLocal.getid_pais_nacionalidad().equals(-1L))) {subclienteBean.setid_pais_nacionalidad(subclienteLocal.getid_pais_nacionalidad());}
			if(conDefault || (!conDefault && subclienteLocal.getid_tipo_genero()!=null && !subclienteLocal.getid_tipo_genero().equals(-1L))) {subclienteBean.setid_tipo_genero(subclienteLocal.getid_tipo_genero());}
			if(conDefault || (!conDefault && subclienteLocal.getid_estado_civil()!=null && !subclienteLocal.getid_estado_civil().equals(-1L))) {subclienteBean.setid_estado_civil(subclienteLocal.getid_estado_civil());}
			if(conDefault || (!conDefault && subclienteLocal.getid_estado_legal()!=null && !subclienteLocal.getid_estado_legal().equals(-1L))) {subclienteBean.setid_estado_legal(subclienteLocal.getid_estado_legal());}
			if(conDefault || (!conDefault && subclienteLocal.getid_tipo_nivel_edu()!=null && !subclienteLocal.getid_tipo_nivel_edu().equals(-1L))) {subclienteBean.setid_tipo_nivel_edu(subclienteLocal.getid_tipo_nivel_edu());}
			if(conDefault || (!conDefault && subclienteLocal.getpath_imagen_firma()!=null && !subclienteLocal.getpath_imagen_firma().equals(""))) {subclienteBean.setpath_imagen_firma(subclienteLocal.getpath_imagen_firma());}
			if(conDefault || (!conDefault && subclienteLocal.getid_cuenta_contable()!=null && !subclienteLocal.getid_cuenta_contable().equals(-1L))) {subclienteBean.setid_cuenta_contable(subclienteLocal.getid_cuenta_contable());}
			if(conDefault || (!conDefault && subclienteLocal.getnumero_carga()!=null && !subclienteLocal.getnumero_carga().equals(0))) {subclienteBean.setnumero_carga(subclienteLocal.getnumero_carga());}
			if(conDefault || (!conDefault && subclienteLocal.getlimite_credito()!=null && !subclienteLocal.getlimite_credito().equals(0.0))) {subclienteBean.setlimite_credito(subclienteLocal.getlimite_credito());}
			if(conDefault || (!conDefault && subclienteLocal.getdescuento()!=null && !subclienteLocal.getdescuento().equals(0.0))) {subclienteBean.setdescuento(subclienteLocal.getdescuento());}
			if(conDefault || (!conDefault && subclienteLocal.getcodigo_contrato()!=null && !subclienteLocal.getcodigo_contrato().equals(""))) {subclienteBean.setcodigo_contrato(subclienteLocal.getcodigo_contrato());}
			if(conDefault || (!conDefault && subclienteLocal.getvalor_contrato()!=null && !subclienteLocal.getvalor_contrato().equals(0.0))) {subclienteBean.setvalor_contrato(subclienteLocal.getvalor_contrato());}
			if(conDefault || (!conDefault && subclienteLocal.getfecha_inicio()!=null && !subclienteLocal.getfecha_inicio().equals(new Date()))) {subclienteBean.setfecha_inicio(subclienteLocal.getfecha_inicio());}
			if(conDefault || (!conDefault && subclienteLocal.getfecha_fin()!=null && !subclienteLocal.getfecha_fin().equals(new Date()))) {subclienteBean.setfecha_fin(subclienteLocal.getfecha_fin());}
			if(conDefault || (!conDefault && subclienteLocal.getplazo()!=null && !subclienteLocal.getplazo().equals(0))) {subclienteBean.setplazo(subclienteLocal.getplazo());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxSubClienteGenerico(Long idSubClienteSeleccionado,JComboBox jComboBoxSubCliente,List<SubCliente> subclientesLocal)throws Exception {
		try {
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesLocal) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			jComboBoxSubCliente.setSelectedItem(subclienteTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxSubClienteGenerico(JComboBox jComboBoxSubCliente,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxSubCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxSubCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxSubCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxSubCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxSubCliente.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxSubCliente.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxSubCliente.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxSubCliente.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxSubCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxSubCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("Factura")) {
			jButtonFacturaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Consignacion")) {
			jButtonConsignacionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("GuiaRemision")) {
			jButtonGuiaRemisionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Proforma")) {
			jButtonProformaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PedidoExpor")) {
			jButtonPedidoExporActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Pedido")) {
			jButtonPedidoActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			subcliente=(SubCliente) subclienteLogic.getSubClientes().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			subcliente =(SubCliente) subclientes.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("TipoIdentificacion")) {
			//sDescripcion=this.getActualTipoIdentificacionForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.gettipoidentificacion_descripcion();
			} else {
				//sDescripcion=this.getActualTipoIdentificacionForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.gettipoidentificacion_descripcion();
			}
		}

		if(sTipo.equals("Pais")) {
			//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getpais_descripcion();
			} else {
				//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.getpais_descripcion();
			}
		}

		if(sTipo.equals("Ciudad")) {
			//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getciudad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=subcliente.getciudad_descripcion();
			}
		}

		if(sTipo.equals("Zona")) {
			//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getzona_descripcion();
			} else {
				//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.getzona_descripcion();
			}
		}

		if(sTipo.equals("PaisNacionalidad")) {
			//sDescripcion=this.getActualPaisNacionalidadForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getpaisnacionalidad_descripcion();
			} else {
				//sDescripcion=this.getActualPaisNacionalidadForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.getpaisnacionalidad_descripcion();
			}
		}

		if(sTipo.equals("TipoGenero")) {
			//sDescripcion=this.getActualTipoGeneroForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.gettipogenero_descripcion();
			} else {
				//sDescripcion=this.getActualTipoGeneroForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.gettipogenero_descripcion();
			}
		}

		if(sTipo.equals("EstadoCivil")) {
			//sDescripcion=this.getActualEstadoCivilForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getestadocivil_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoCivilForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.getestadocivil_descripcion();
			}
		}

		if(sTipo.equals("EstadoLegal")) {
			//sDescripcion=this.getActualEstadoLegalForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getestadolegal_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoLegalForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.getestadolegal_descripcion();
			}
		}

		if(sTipo.equals("TipoNivelEdu")) {
			//sDescripcion=this.getActualTipoNivelEduForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.gettiponiveledu_descripcion();
			} else {
				//sDescripcion=this.getActualTipoNivelEduForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.gettiponiveledu_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!subcliente.getIsNew() && !subcliente.getIsChanged() && !subcliente.getIsDeleted()) {
				sDescripcion=subcliente.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=subcliente.getcuentacontable_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		SubCliente subclienteRow=new SubCliente();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			subclienteRow=(SubCliente) subclienteLogic.getSubClientes().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			subclienteRow=(SubCliente) subclientes.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonFacturaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,SubCliente subcliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormSubCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente = (SubCliente)this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.subcliente = (SubCliente)this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(subcliente!=null) {
						this.subcliente = subcliente;
					} else {
						this.subcliente = new SubCliente();
					}
				}

				if(this.isTienePermisosFactura && this.permiteMantenimiento(this.subcliente)) {
					FacturaBeanSwingJInternalFrame facturaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFramePopup=new FacturaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						facturaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFramePopup;
					} else {
						facturaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame;
					}

					List<SubCliente> subclientes=new ArrayList<SubCliente>();
					subclientes.add(this.subcliente);
					if(!esRelacionado) {
						//facturaBeanSwingJInternalFrame.facturaSessionBean.setConGuardarRelaciones(false);
						//facturaBeanSwingJInternalFrame.facturaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					facturaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormSubCliente.cargarFacturaBeanSwingJInternalFrame(subclientes,this.subcliente,facturaBeanSwingJInternalFrame,/*conInicializar,*/facturaBeanSwingJInternalFrame.facturaSessionBean.getConGuardarRelaciones(),facturaBeanSwingJInternalFrame.facturaSessionBean.getEsGuardarRelacionado());
					facturaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						facturaBeanSwingJInternalFrame.actualizarEstadoPanelsFactura("no_relacionado");

						facturaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FacturaConstantesFunciones.ITAMANIOFILATABLA + (FacturaConstantesFunciones.ITAMANIOFILATABLA/2));

						facturaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
						TitledBorder titledBorderFactura=(TitledBorder)facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

						titledBorderFactura.setTitle(titledBorderSubCliente.getTitle() + " -> Factura");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,facturaBeanSwingJInternalFrame);
						}

						facturaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(facturaBeanSwingJInternalFrame);

						facturaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.subclienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Factura",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonConsignacionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,SubCliente subcliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormSubCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente = (SubCliente)this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.subcliente = (SubCliente)this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(subcliente!=null) {
						this.subcliente = subcliente;
					} else {
						this.subcliente = new SubCliente();
					}
				}

				if(this.isTienePermisosConsignacion && this.permiteMantenimiento(this.subcliente)) {
					ConsignacionBeanSwingJInternalFrame consignacionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFramePopup=new ConsignacionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						consignacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFramePopup;
					} else {
						consignacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame;
					}

					List<SubCliente> subclientes=new ArrayList<SubCliente>();
					subclientes.add(this.subcliente);
					if(!esRelacionado) {
						//consignacionBeanSwingJInternalFrame.consignacionSessionBean.setConGuardarRelaciones(false);
						//consignacionBeanSwingJInternalFrame.consignacionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					consignacionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormSubCliente.cargarConsignacionBeanSwingJInternalFrame(subclientes,this.subcliente,consignacionBeanSwingJInternalFrame,/*conInicializar,*/consignacionBeanSwingJInternalFrame.consignacionSessionBean.getConGuardarRelaciones(),consignacionBeanSwingJInternalFrame.consignacionSessionBean.getEsGuardarRelacionado());
					consignacionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						consignacionBeanSwingJInternalFrame.actualizarEstadoPanelsConsignacion("no_relacionado");

						consignacionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ConsignacionConstantesFunciones.ITAMANIOFILATABLA + (ConsignacionConstantesFunciones.ITAMANIOFILATABLA/2));

						consignacionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
						TitledBorder titledBorderConsignacion=(TitledBorder)consignacionBeanSwingJInternalFrame.jScrollPanelDatosConsignacion.getBorder();

						titledBorderConsignacion.setTitle(titledBorderSubCliente.getTitle() + " -> Consignacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,consignacionBeanSwingJInternalFrame);
						}

						consignacionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(consignacionBeanSwingJInternalFrame);

						consignacionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.subclienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Consignacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonGuiaRemisionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,SubCliente subcliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormSubCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente = (SubCliente)this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.subcliente = (SubCliente)this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(subcliente!=null) {
						this.subcliente = subcliente;
					} else {
						this.subcliente = new SubCliente();
					}
				}

				if(this.isTienePermisosGuiaRemision && this.permiteMantenimiento(this.subcliente)) {
					GuiaRemisionBeanSwingJInternalFrame guiaremisionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFramePopup=new GuiaRemisionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						guiaremisionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFramePopup;
					} else {
						guiaremisionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame;
					}

					List<SubCliente> subclientes=new ArrayList<SubCliente>();
					subclientes.add(this.subcliente);
					if(!esRelacionado) {
						//guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.setConGuardarRelaciones(false);
						//guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					guiaremisionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormSubCliente.cargarGuiaRemisionBeanSwingJInternalFrame(subclientes,this.subcliente,guiaremisionBeanSwingJInternalFrame,/*conInicializar,*/guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.getConGuardarRelaciones(),guiaremisionBeanSwingJInternalFrame.guiaremisionSessionBean.getEsGuardarRelacionado());
					guiaremisionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						guiaremisionBeanSwingJInternalFrame.actualizarEstadoPanelsGuiaRemision("no_relacionado");

						guiaremisionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(GuiaRemisionConstantesFunciones.ITAMANIOFILATABLA + (GuiaRemisionConstantesFunciones.ITAMANIOFILATABLA/2));

						guiaremisionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
						TitledBorder titledBorderGuiaRemision=(TitledBorder)guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.getBorder();

						titledBorderGuiaRemision.setTitle(titledBorderSubCliente.getTitle() + " -> Guia Remision");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,guiaremisionBeanSwingJInternalFrame);
						}

						guiaremisionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(guiaremisionBeanSwingJInternalFrame);

						guiaremisionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.subclienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Guia Remision",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProformaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,SubCliente subcliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormSubCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente = (SubCliente)this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.subcliente = (SubCliente)this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(subcliente!=null) {
						this.subcliente = subcliente;
					} else {
						this.subcliente = new SubCliente();
					}
				}

				if(this.isTienePermisosProforma && this.permiteMantenimiento(this.subcliente)) {
					ProformaBeanSwingJInternalFrame proformaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFramePopup=new ProformaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						proformaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFramePopup;
					} else {
						proformaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame;
					}

					List<SubCliente> subclientes=new ArrayList<SubCliente>();
					subclientes.add(this.subcliente);
					if(!esRelacionado) {
						//proformaBeanSwingJInternalFrame.proformaSessionBean.setConGuardarRelaciones(false);
						//proformaBeanSwingJInternalFrame.proformaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					proformaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormSubCliente.cargarProformaBeanSwingJInternalFrame(subclientes,this.subcliente,proformaBeanSwingJInternalFrame,/*conInicializar,*/proformaBeanSwingJInternalFrame.proformaSessionBean.getConGuardarRelaciones(),proformaBeanSwingJInternalFrame.proformaSessionBean.getEsGuardarRelacionado());
					proformaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						proformaBeanSwingJInternalFrame.actualizarEstadoPanelsProforma("no_relacionado");

						proformaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProformaConstantesFunciones.ITAMANIOFILATABLA + (ProformaConstantesFunciones.ITAMANIOFILATABLA/2));

						proformaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
						TitledBorder titledBorderProforma=(TitledBorder)proformaBeanSwingJInternalFrame.jScrollPanelDatosProforma.getBorder();

						titledBorderProforma.setTitle(titledBorderSubCliente.getTitle() + " -> Proforma");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,proformaBeanSwingJInternalFrame);
						}

						proformaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(proformaBeanSwingJInternalFrame);

						proformaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.subclienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Proforma",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPedidoExporActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,SubCliente subcliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormSubCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente = (SubCliente)this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.subcliente = (SubCliente)this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(subcliente!=null) {
						this.subcliente = subcliente;
					} else {
						this.subcliente = new SubCliente();
					}
				}

				if(this.isTienePermisosPedidoExpor && this.permiteMantenimiento(this.subcliente)) {
					PedidoExporBeanSwingJInternalFrame pedidoexporBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFramePopup=new PedidoExporBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						pedidoexporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFramePopup;
					} else {
						pedidoexporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame;
					}

					List<SubCliente> subclientes=new ArrayList<SubCliente>();
					subclientes.add(this.subcliente);
					if(!esRelacionado) {
						//pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.setConGuardarRelaciones(false);
						//pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					pedidoexporBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormSubCliente.cargarPedidoExporBeanSwingJInternalFrame(subclientes,this.subcliente,pedidoexporBeanSwingJInternalFrame,/*conInicializar,*/pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.getConGuardarRelaciones(),pedidoexporBeanSwingJInternalFrame.pedidoexporSessionBean.getEsGuardarRelacionado());
					pedidoexporBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						pedidoexporBeanSwingJInternalFrame.actualizarEstadoPanelsPedidoExpor("no_relacionado");

						pedidoexporBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PedidoExporConstantesFunciones.ITAMANIOFILATABLA + (PedidoExporConstantesFunciones.ITAMANIOFILATABLA/2));

						pedidoexporBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
						TitledBorder titledBorderPedidoExpor=(TitledBorder)pedidoexporBeanSwingJInternalFrame.jScrollPanelDatosPedidoExpor.getBorder();

						titledBorderPedidoExpor.setTitle(titledBorderSubCliente.getTitle() + " -> Pedido Exportacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,pedidoexporBeanSwingJInternalFrame);
						}

						pedidoexporBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(pedidoexporBeanSwingJInternalFrame);

						pedidoexporBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.subclienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Pedido Exportacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPedidoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,SubCliente subcliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormSubCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente = (SubCliente)this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.subcliente = (SubCliente)this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(subcliente!=null) {
						this.subcliente = subcliente;
					} else {
						this.subcliente = new SubCliente();
					}
				}

				if(this.isTienePermisosPedido && this.permiteMantenimiento(this.subcliente)) {
					PedidoBeanSwingJInternalFrame pedidoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFramePopup=new PedidoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						pedidoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFramePopup;
					} else {
						pedidoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame;
					}

					List<SubCliente> subclientes=new ArrayList<SubCliente>();
					subclientes.add(this.subcliente);
					if(!esRelacionado) {
						//pedidoBeanSwingJInternalFrame.pedidoSessionBean.setConGuardarRelaciones(false);
						//pedidoBeanSwingJInternalFrame.pedidoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					pedidoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormSubCliente.cargarPedidoBeanSwingJInternalFrame(subclientes,this.subcliente,pedidoBeanSwingJInternalFrame,/*conInicializar,*/pedidoBeanSwingJInternalFrame.pedidoSessionBean.getConGuardarRelaciones(),pedidoBeanSwingJInternalFrame.pedidoSessionBean.getEsGuardarRelacionado());
					pedidoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						pedidoBeanSwingJInternalFrame.actualizarEstadoPanelsPedido("no_relacionado");

						pedidoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PedidoConstantesFunciones.ITAMANIOFILATABLA + (PedidoConstantesFunciones.ITAMANIOFILATABLA/2));

						pedidoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
						TitledBorder titledBorderPedido=(TitledBorder)pedidoBeanSwingJInternalFrame.jScrollPanelDatosPedido.getBorder();

						titledBorderPedido.setTitle(titledBorderSubCliente.getTitle() + " -> Pedido");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,pedidoBeanSwingJInternalFrame);
						}

						pedidoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(pedidoBeanSwingJInternalFrame);

						pedidoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.subclienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Pedido",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualSubCliente(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoSubCliente.setVisible((this.isVisibilidadCeldaNuevoSubCliente && this.isPermisoNuevoSubCliente));			
			this.jButtonDuplicarSubCliente.setVisible((this.isVisibilidadCeldaDuplicarSubCliente && this.isPermisoDuplicarSubCliente));			
			this.jButtonCopiarSubCliente.setVisible((this.isVisibilidadCeldaCopiarSubCliente && this.isPermisoCopiarSubCliente));
			this.jButtonVerFormSubCliente.setVisible((this.isVisibilidadCeldaVerFormSubCliente && this.isPermisoVerFormSubCliente));
			
			this.jButtonAbrirOrderBySubCliente.setVisible((this.isVisibilidadCeldaOrdenSubCliente && this.isPermisoOrdenSubCliente));			
			
			this.jButtonNuevoRelacionesSubCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesSubCliente && this.isPermisoNuevoSubCliente));			
			this.jButtonNuevoGuardarCambiosSubCliente.setVisible((this.isVisibilidadCeldaNuevoSubCliente && this.isPermisoNuevoSubCliente && this.isPermisoGuardarCambiosSubCliente));
			
			if(this.jInternalFrameDetalleFormSubCliente!=null) {
			this.jInternalFrameDetalleFormSubCliente.jButtonModificarSubCliente.setVisible((this.isVisibilidadCeldaModificarSubCliente && this.isPermisoActualizarSubCliente));	
			this.jInternalFrameDetalleFormSubCliente.jButtonActualizarSubCliente.setVisible((this.isVisibilidadCeldaActualizarSubCliente && this.isPermisoActualizarSubCliente));	
			this.jInternalFrameDetalleFormSubCliente.jButtonEliminarSubCliente.setVisible((this.isVisibilidadCeldaEliminarSubCliente && this.isPermisoEliminarSubCliente));
			this.jInternalFrameDetalleFormSubCliente.jButtonCancelarSubCliente.setVisible(this.isVisibilidadCeldaCancelarSubCliente);							
			this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosSubCliente.setVisible((this.isVisibilidadCeldaGuardarSubCliente && this.isPermisoGuardarCambiosSubCliente));			
			
			}
						
			this.jButtonGuardarCambiosTablaSubCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosSubCliente && this.isPermisoGuardarCambiosSubCliente));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarSubCliente.setVisible((this.isVisibilidadCeldaNuevoSubCliente && this.isPermisoNuevoSubCliente));						
			this.jButtonDuplicarToolBarSubCliente.setVisible((this.isVisibilidadCeldaDuplicarSubCliente && this.isPermisoDuplicarSubCliente));						
			this.jButtonCopiarToolBarSubCliente.setVisible((this.isVisibilidadCeldaCopiarSubCliente && this.isPermisoCopiarSubCliente));			
			this.jButtonVerFormToolBarSubCliente.setVisible((this.isVisibilidadCeldaVerFormSubCliente && this.isPermisoVerFormSubCliente));			
			this.jButtonAbrirOrderByToolBarSubCliente.setVisible((this.isVisibilidadCeldaOrdenSubCliente && this.isPermisoOrdenSubCliente));
			this.jButtonNuevoRelacionesToolBarSubCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesSubCliente && this.isPermisoNuevoSubCliente));			
			this.jButtonNuevoGuardarCambiosToolBarSubCliente.setVisible((this.isVisibilidadCeldaNuevoSubCliente && this.isPermisoNuevoSubCliente && this.isPermisoGuardarCambiosSubCliente));			
			
			if(this.jInternalFrameDetalleFormSubCliente!=null) {
			this.jInternalFrameDetalleFormSubCliente.jButtonModificarToolBarSubCliente.setVisible((this.isVisibilidadCeldaModificarSubCliente && this.isPermisoActualizarSubCliente));	
			this.jInternalFrameDetalleFormSubCliente.jButtonActualizarToolBarSubCliente.setVisible((this.isVisibilidadCeldaActualizarSubCliente  && this.isPermisoActualizarSubCliente));	
			this.jInternalFrameDetalleFormSubCliente.jButtonEliminarToolBarSubCliente.setVisible((this.isVisibilidadCeldaEliminarSubCliente && this.isPermisoEliminarSubCliente));
			this.jInternalFrameDetalleFormSubCliente.jButtonCancelarToolBarSubCliente.setVisible(this.isVisibilidadCeldaCancelarSubCliente);				
			this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosToolBarSubCliente.setVisible((this.isVisibilidadCeldaGuardarSubCliente && this.isPermisoGuardarCambiosSubCliente));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarSubCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosSubCliente && this.isPermisoGuardarCambiosSubCliente));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoSubCliente.setVisible((this.isVisibilidadCeldaNuevoSubCliente && this.isPermisoNuevoSubCliente));			
			this.jMenuItemDuplicarSubCliente.setVisible((this.isVisibilidadCeldaDuplicarSubCliente && this.isPermisoDuplicarSubCliente));			
			this.jMenuItemCopiarSubCliente.setVisible((this.isVisibilidadCeldaCopiarSubCliente && this.isPermisoCopiarSubCliente));			
			this.jMenuItemVerFormSubCliente.setVisible((this.isVisibilidadCeldaVerFormSubCliente && this.isPermisoVerFormSubCliente));			
			this.jMenuItemAbrirOrderBySubCliente.setVisible((this.isVisibilidadCeldaOrdenSubCliente && this.isPermisoOrdenSubCliente));			
			//this.jMenuItemMostrarOcultarSubCliente.setVisible((this.isVisibilidadCeldaOrdenSubCliente && this.isPermisoOrdenSubCliente));
			this.jMenuItemDetalleAbrirOrderBySubCliente.setVisible((this.isVisibilidadCeldaOrdenSubCliente && this.isPermisoOrdenSubCliente));			
			//this.jMenuItemDetalleMostrarOcultarSubCliente.setVisible((this.isVisibilidadCeldaOrdenSubCliente && this.isPermisoOrdenSubCliente));			
			this.jMenuItemNuevoRelacionesSubCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesSubCliente && this.isPermisoNuevoSubCliente));			
			this.jMenuItemNuevoGuardarCambiosSubCliente.setVisible((this.isVisibilidadCeldaNuevoSubCliente && this.isPermisoNuevoSubCliente && this.isPermisoGuardarCambiosSubCliente));									
			
			if(this.jInternalFrameDetalleFormSubCliente!=null) {
			this.jInternalFrameDetalleFormSubCliente.jMenuItemModificarSubCliente.setVisible((this.isVisibilidadCeldaModificarSubCliente && this.isPermisoActualizarSubCliente));	
			this.jInternalFrameDetalleFormSubCliente.jMenuItemActualizarSubCliente.setVisible((this.isVisibilidadCeldaActualizarSubCliente && this.isPermisoActualizarSubCliente));	
			this.jInternalFrameDetalleFormSubCliente.jMenuItemEliminarSubCliente.setVisible((this.isVisibilidadCeldaEliminarSubCliente && this.isPermisoEliminarSubCliente));
			this.jInternalFrameDetalleFormSubCliente.jMenuItemCancelarSubCliente.setVisible(this.isVisibilidadCeldaCancelarSubCliente);				
			}
			
			this.jMenuItemGuardarCambiosSubCliente.setVisible((this.isVisibilidadCeldaGuardarSubCliente && this.isPermisoGuardarCambiosSubCliente));						
			this.jMenuItemGuardarCambiosTablaSubCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosSubCliente && this.isPermisoGuardarCambiosSubCliente));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoSubCliente=this.jButtonNuevoSubCliente.isVisible();
			this.isVisibilidadCeldaDuplicarSubCliente=this.jButtonDuplicarSubCliente.isVisible();
			this.isVisibilidadCeldaCopiarSubCliente=this.jButtonCopiarSubCliente.isVisible();
			this.isVisibilidadCeldaVerFormSubCliente=this.jButtonVerFormSubCliente.isVisible();
			
			this.isVisibilidadCeldaOrdenSubCliente=this.jButtonAbrirOrderBySubCliente.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=this.jButtonNuevoRelacionesSubCliente.isVisible();
			this.isVisibilidadCeldaModificarSubCliente=this.jButtonModificarSubCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormSubCliente!=null) {
			this.isVisibilidadCeldaActualizarSubCliente=this.jInternalFrameDetalleFormSubCliente.jButtonActualizarSubCliente.isVisible();
			this.isVisibilidadCeldaEliminarSubCliente=this.jInternalFrameDetalleFormSubCliente.jButtonEliminarSubCliente.isVisible();
			this.isVisibilidadCeldaCancelarSubCliente=this.jInternalFrameDetalleFormSubCliente.jButtonCancelarSubCliente.isVisible();
			this.isVisibilidadCeldaGuardarSubCliente=this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosSubCliente.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosSubCliente=this.jButtonGuardarCambiosTablaSubCliente.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoSubCliente=this.jButtonNuevoToolBarSubCliente.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=this.jButtonNuevoRelacionesToolBarSubCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormSubCliente!=null) {
			this.isVisibilidadCeldaModificarSubCliente=this.jInternalFrameDetalleFormSubCliente.jButtonModificarToolBarSubCliente.isVisible();
			this.isVisibilidadCeldaActualizarSubCliente=this.jInternalFrameDetalleFormSubCliente.jButtonActualizarToolBarSubCliente.isVisible();
			this.isVisibilidadCeldaEliminarSubCliente=this.jInternalFrameDetalleFormSubCliente.jButtonEliminarToolBarSubCliente.isVisible();
			this.isVisibilidadCeldaCancelarSubCliente=this.jInternalFrameDetalleFormSubCliente.jButtonCancelarToolBarSubCliente.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarSubCliente=this.jButtonGuardarCambiosToolBarSubCliente.isVisible();
			this.isVisibilidadCeldaGuardarCambiosSubCliente=this.jButtonGuardarCambiosTablaToolBarSubCliente.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoSubCliente=this.jMenuItemNuevoSubCliente.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=this.jMenuItemNuevoRelacionesSubCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormSubCliente!=null) {
			this.isVisibilidadCeldaModificarSubCliente=this.jInternalFrameDetalleFormSubCliente.jMenuItemModificarSubCliente.isVisible();
			this.isVisibilidadCeldaActualizarSubCliente=this.jInternalFrameDetalleFormSubCliente.jMenuItemActualizarSubCliente.isVisible();
			this.isVisibilidadCeldaEliminarSubCliente=this.jInternalFrameDetalleFormSubCliente.jMenuItemEliminarSubCliente.isVisible();
			this.isVisibilidadCeldaCancelarSubCliente=this.jInternalFrameDetalleFormSubCliente.jMenuItemCancelarSubCliente.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarSubCliente=this.jMenuItemGuardarCambiosSubCliente.isVisible();
			this.isVisibilidadCeldaGuardarCambiosSubCliente=this.jMenuItemGuardarCambiosTablaSubCliente.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesSubCliente(Boolean esInicializar) {
		if(SubClienteJInternalFrame.ISBINDING_MANUAL) {			
			if(this.subclienteSessionBean.getConGuardarRelaciones()) {
				//if(this.subclienteSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesSubCliente();
			}
			
			this.inicializarActualizarBindingBotonesManualSubCliente(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualSubCliente() {
		this.jButtonNuevoSubCliente.setVisible(this.isPermisoNuevoSubCliente);			
		this.jButtonDuplicarSubCliente.setVisible(this.isPermisoDuplicarSubCliente);			
		this.jButtonCopiarSubCliente.setVisible(this.isPermisoCopiarSubCliente);			
		this.jButtonVerFormSubCliente.setVisible(this.isPermisoVerFormSubCliente);			
		
		this.jButtonAbrirOrderBySubCliente.setVisible(this.isPermisoOrdenSubCliente);					
		
		this.jButtonNuevoRelacionesSubCliente.setVisible(this.isPermisoNuevoSubCliente);			
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonModificarSubCliente.setVisible(this.isPermisoActualizarSubCliente);	
			this.jInternalFrameDetalleFormSubCliente.jButtonActualizarSubCliente.setVisible(this.isPermisoActualizarSubCliente);	
			this.jInternalFrameDetalleFormSubCliente.jButtonEliminarSubCliente.setVisible(this.isPermisoEliminarSubCliente);
			this.jInternalFrameDetalleFormSubCliente.jButtonCancelarSubCliente.setVisible(this.isVisibilidadCeldaCancelarSubCliente);						
			this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosSubCliente.setVisible(this.isPermisoGuardarCambiosSubCliente);							
		}
		
		this.jButtonGuardarCambiosTablaSubCliente.setVisible(this.isPermisoActualizarSubCliente);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleSubCliente() {
		this.jInternalFrameDetalleFormSubCliente.jButtonModificarSubCliente.setVisible(this.isPermisoActualizarSubCliente);	
		this.jInternalFrameDetalleFormSubCliente.jButtonActualizarSubCliente.setVisible(this.isPermisoActualizarSubCliente);	
		this.jInternalFrameDetalleFormSubCliente.jButtonEliminarSubCliente.setVisible(this.isPermisoEliminarSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jButtonCancelarSubCliente.setVisible(this.isVisibilidadCeldaCancelarSubCliente);							
		this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosSubCliente.setVisible((this.isVisibilidadCeldaGuardarSubCliente && this.isPermisoGuardarCambiosSubCliente));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosSubCliente() {
		if(SubClienteJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualSubCliente();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesSubCliente() {
	}
	
	public void jTableDatosSubClienteListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarSubCliente(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.subcliente.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebSubCliente(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderSubCliente.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.subcliente.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteSubClienteActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderSubCliente=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosSubCliente.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderSubCliente.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebSubCliente(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderSubCliente.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.subcliente.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebSubCliente(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderSubCliente.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.subcliente.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_identificacionSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoidentificacion=true;

			idTienePermisotipoidentificacion=this.tienePermisosUsuarioEnPaginaWebSubCliente(TipoIdentificacionConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoidentificacion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.tipoidentificacionBeanSwingJInternalFrame=new TipoIdentificacionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoidentificacionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoidentificacionBeanSwingJInternalFrame.getTipoIdentificacionLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_tipo_identificacion()!=null) {
					this.tipoidentificacionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoidentificacionBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_tipo_identificacion());
					this.tipoidentificacionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoidentificacionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoidentificacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoIdentificacion();
				}

				JInternalFrameBase jinternalFrame =this.tipoidentificacionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBordertipoidentificacion=(TitledBorder)this.tipoidentificacionBeanSwingJInternalFrame.jScrollPanelDatosTipoIdentificacion.getBorder();

				titledBordertipoidentificacion.setTitle(titledBorderSubCliente.getTitle() + " -> Tipo Identificacion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_identificacionSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_tipo_identificacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_identificacion = "+this.subcliente.getid_tipo_identificacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonidentificacionSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getidentificacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where identificacion like '%"+this.subcliente.getidentificacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.subcliente.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.subcliente.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonapellidoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getapellido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where apellido like '%"+this.subcliente.getapellido()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_completoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getnombre_completo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_completo like '%"+this.subcliente.getnombre_completo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccionSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getdireccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion like '%"+this.subcliente.getdireccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefonoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.gettelefono()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono like '%"+this.subcliente.gettelefono()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_celularSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getnumero_celular()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_celular like '%"+this.subcliente.getnumero_celular()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmailSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getmail()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where mail like '%"+this.subcliente.getmail()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_nacimientoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getfecha_nacimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_nacimiento = '"+Funciones2.getStringPostgresDate(this.subcliente.getfecha_nacimiento())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getfechao()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fechao = '"+Funciones2.getStringPostgresDate(this.subcliente.getfechao())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonobservacionSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getobservacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where observacion like '%"+this.subcliente.getobservacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_paisSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopais=true;

			idTienePermisopais=this.tienePermisosUsuarioEnPaginaWebSubCliente(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopais) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.paisBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_pais()!=null) {
					this.paisBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_pais());
					this.paisBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBorderpais=(TitledBorder)this.paisBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpais.setTitle(titledBorderSubCliente.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_paisSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_pais()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais = "+this.subcliente.getid_pais().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ciudadSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisociudad=true;

			idTienePermisociudad=this.tienePermisosUsuarioEnPaginaWebSubCliente(CiudadConstantesFunciones.CLASSNAME);

			if(idTienePermisociudad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.ciudadBeanSwingJInternalFrame=new CiudadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ciudadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ciudadBeanSwingJInternalFrame.getCiudadLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_ciudad()!=null) {
					this.ciudadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ciudadBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_ciudad());
					this.ciudadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCiudad();
				}

				JInternalFrameBase jinternalFrame =this.ciudadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBorderciudad=(TitledBorder)this.ciudadBeanSwingJInternalFrame.jScrollPanelDatosCiudad.getBorder();

				titledBorderciudad.setTitle(titledBorderSubCliente.getTitle() + " -> Ciudad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ciudadSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_ciudad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ciudad = "+this.subcliente.getid_ciudad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_zonaSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisozona=true;

			idTienePermisozona=this.tienePermisosUsuarioEnPaginaWebSubCliente(ZonaConstantesFunciones.CLASSNAME);

			if(idTienePermisozona) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.zonaBeanSwingJInternalFrame=new ZonaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.zonaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.zonaBeanSwingJInternalFrame.getZonaLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_zona()!=null) {
					this.zonaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.zonaBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_zona());
					this.zonaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.inicializarActualizarBindingTablaZona();
				}

				JInternalFrameBase jinternalFrame =this.zonaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBorderzona=(TitledBorder)this.zonaBeanSwingJInternalFrame.jScrollPanelDatosZona.getBorder();

				titledBorderzona.setTitle(titledBorderSubCliente.getTitle() + " -> Zona");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_zonaSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_zona()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_zona = "+this.subcliente.getid_zona().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_pais_nacionalidadSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopaisnacionalidad=true;

			idTienePermisopaisnacionalidad=this.tienePermisosUsuarioEnPaginaWebSubCliente(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopaisnacionalidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.paisnacionalidadBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisnacionalidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisnacionalidadBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_pais_nacionalidad()!=null) {
					this.paisnacionalidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisnacionalidadBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_pais_nacionalidad());
					this.paisnacionalidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisnacionalidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisnacionalidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisnacionalidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBorderpaisnacionalidad=(TitledBorder)this.paisnacionalidadBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpaisnacionalidad.setTitle(titledBorderSubCliente.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_pais_nacionalidadSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_pais_nacionalidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais_nacionalidad = "+this.subcliente.getid_pais_nacionalidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_generoSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipogenero=true;

			idTienePermisotipogenero=this.tienePermisosUsuarioEnPaginaWebSubCliente(TipoGeneroConstantesFunciones.CLASSNAME);

			if(idTienePermisotipogenero) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.tipogeneroBeanSwingJInternalFrame=new TipoGeneroBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipogeneroBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipogeneroBeanSwingJInternalFrame.getTipoGeneroLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_tipo_genero()!=null) {
					this.tipogeneroBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipogeneroBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_tipo_genero());
					this.tipogeneroBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipogeneroBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipogeneroBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoGenero();
				}

				JInternalFrameBase jinternalFrame =this.tipogeneroBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBordertipogenero=(TitledBorder)this.tipogeneroBeanSwingJInternalFrame.jScrollPanelDatosTipoGenero.getBorder();

				titledBordertipogenero.setTitle(titledBorderSubCliente.getTitle() + " -> Tipo Genero");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_generoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_tipo_genero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_genero = "+this.subcliente.getid_tipo_genero().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_civilSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadocivil=true;

			idTienePermisoestadocivil=this.tienePermisosUsuarioEnPaginaWebSubCliente(EstadoCivilConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadocivil) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.estadocivilBeanSwingJInternalFrame=new EstadoCivilBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadocivilBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadocivilBeanSwingJInternalFrame.getEstadoCivilLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_estado_civil()!=null) {
					this.estadocivilBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadocivilBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_estado_civil());
					this.estadocivilBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadocivilBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadocivilBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoCivil();
				}

				JInternalFrameBase jinternalFrame =this.estadocivilBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBorderestadocivil=(TitledBorder)this.estadocivilBeanSwingJInternalFrame.jScrollPanelDatosEstadoCivil.getBorder();

				titledBorderestadocivil.setTitle(titledBorderSubCliente.getTitle() + " -> Estado Civil");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_civilSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_estado_civil()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_civil = "+this.subcliente.getid_estado_civil().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_legalSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadolegal=true;

			idTienePermisoestadolegal=this.tienePermisosUsuarioEnPaginaWebSubCliente(EstadoLegalConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadolegal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.estadolegalBeanSwingJInternalFrame=new EstadoLegalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadolegalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadolegalBeanSwingJInternalFrame.getEstadoLegalLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_estado_legal()!=null) {
					this.estadolegalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadolegalBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_estado_legal());
					this.estadolegalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadolegalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadolegalBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoLegal();
				}

				JInternalFrameBase jinternalFrame =this.estadolegalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBorderestadolegal=(TitledBorder)this.estadolegalBeanSwingJInternalFrame.jScrollPanelDatosEstadoLegal.getBorder();

				titledBorderestadolegal.setTitle(titledBorderSubCliente.getTitle() + " -> Estado Legal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_legalSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_estado_legal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_legal = "+this.subcliente.getid_estado_legal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_nivel_eduSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiponiveledu=true;

			idTienePermisotiponiveledu=this.tienePermisosUsuarioEnPaginaWebSubCliente(TipoNivelEduConstantesFunciones.CLASSNAME);

			if(idTienePermisotiponiveledu) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.tiponiveleduBeanSwingJInternalFrame=new TipoNivelEduBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiponiveleduBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiponiveleduBeanSwingJInternalFrame.getTipoNivelEduLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_tipo_nivel_edu()!=null) {
					this.tiponiveleduBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiponiveleduBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_tipo_nivel_edu());
					this.tiponiveleduBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiponiveleduBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiponiveleduBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoNivelEdu();
				}

				JInternalFrameBase jinternalFrame =this.tiponiveleduBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBordertiponiveledu=(TitledBorder)this.tiponiveleduBeanSwingJInternalFrame.jScrollPanelDatosTipoNivelEdu.getBorder();

				titledBordertiponiveledu.setTitle(titledBorderSubCliente.getTitle() + " -> Tipo Nivel Edu");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_nivel_eduSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_tipo_nivel_edu()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_nivel_edu = "+this.subcliente.getid_tipo_nivel_edu().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpath_imagen_firmaSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getpath_imagen_firma()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where path_imagen_firma like '%"+this.subcliente.getpath_imagen_firma()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contableSubClienteActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="CuentaContable";

			if(!this.sFinalQueryGeneral_cuentacontable.equals("")) {
				this.cuentacontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontable);
				this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderSubCliente=null;
			TitledBorder titledBordercuentacontable=null;

			if(!this.jScrollPanelDatosSubCliente.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderSubCliente.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contableSubClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebSubCliente(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosSubCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosSubCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.subclienteLogic.getConnexion());

				if(this.subcliente.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.subcliente.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderSubCliente=(TitledBorder)this.jScrollPanelDatosSubCliente.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderSubCliente.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contableSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.subcliente.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_cargaSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getnumero_carga()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_carga = "+this.subcliente.getnumero_carga().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonlimite_creditoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getlimite_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where limite_credito = "+this.subcliente.getlimite_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuentoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getdescuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento = "+this.subcliente.getdescuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigo_contratoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getcodigo_contrato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo_contrato like '%"+this.subcliente.getcodigo_contrato()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_contratoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getvalor_contrato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_contrato = "+this.subcliente.getvalor_contrato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_inicioSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getfecha_inicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_inicio = '"+Funciones2.getStringPostgresDate(this.subcliente.getfecha_inicio())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_finSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getfecha_fin()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_fin = '"+Funciones2.getStringPostgresDate(this.subcliente.getfecha_fin())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonplazoSubClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.getsubcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.subcliente==null) {
						this.subcliente = new SubCliente();
					}

					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);
				}

				if(this.subcliente.getplazo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where plazo = "+this.subcliente.getplazo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingSubCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorIdentificacionSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesBusquedaPorIdentificacion();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorNombreCompletoSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesBusquedaPorNombreCompleto();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorRucSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesBusquedaPorRuc();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCiudadSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdCiudad();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdCliente();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdCuentaContable();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdEmpresa();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoCivilSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdEstadoCivil();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoLegalSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdEstadoLegal();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdPais();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisNacionalidadSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdPaisNacionalidad();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdSucursal();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoGeneroSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdTipoGenero();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoIdentificacionSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdTipoIdentificacion();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoNivelEduSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdTipoNivelEdu();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdZonaSubClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingSubCliente(false,false);

			this.getSubClientesFK_IdZona();

			this.inicializarActualizarBindingSubCliente(false);

			//if(SubClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingSubCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.subclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameSubCliente() {
		if(this.jInternalFrameDetalleFormSubCliente!=null) {
		

		if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) {
			this.jInternalFrameDetalleFormSubCliente.setVisible(false);	    			
			this.jInternalFrameDetalleFormSubCliente.dispose();
			this.jInternalFrameDetalleFormSubCliente=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoSubCliente!=null) {
			this.jInternalFrameReporteDinamicoSubCliente.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoSubCliente.dispose();
			this.jInternalFrameReporteDinamicoSubCliente=null;
		}
		
		if(this.jInternalFrameImportacionSubCliente!=null) {
			this.jInternalFrameImportacionSubCliente.setVisible(false);	    			
			this.jInternalFrameImportacionSubCliente.dispose();
			this.jInternalFrameImportacionSubCliente=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessSubCliente();
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
			
			if(sTipo.equals("NuevoSubCliente")) {
				jButtonNuevoSubClienteActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarSubCliente")) {
				jButtonDuplicarSubClienteActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarSubCliente")) {
				jButtonCopiarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("VerFormSubCliente")) {
				jButtonVerFormSubClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarSubCliente")) {
				jButtonNuevoSubClienteActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarSubCliente")) {
				jButtonDuplicarSubClienteActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoSubCliente")) {
				jButtonNuevoSubClienteActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarSubCliente")) {
				jButtonDuplicarSubClienteActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesSubCliente")) {
				jButtonNuevoSubClienteActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarSubCliente")) {
				jButtonNuevoSubClienteActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesSubCliente")) {
				jButtonNuevoSubClienteActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarSubCliente")) {
				jButtonModificarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarSubCliente")) {
				jButtonModificarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarSubCliente")) {
				jButtonModificarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("ActualizarSubCliente")) {
				jButtonActualizarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarSubCliente")) {
				jButtonActualizarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarSubCliente")) {
				jButtonActualizarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("EliminarSubCliente")) {
				jButtonEliminarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarSubCliente")) {
				jButtonEliminarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarSubCliente")) {
				jButtonEliminarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("CancelarSubCliente")) {
				jButtonCancelarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarSubCliente")) {
				jButtonCancelarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarSubCliente")) {
				jButtonCancelarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("CerrarSubCliente")) {
				jButtonCerrarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarSubCliente")) {
				jButtonCerrarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarSubCliente")) {
				jButtonCerrarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarSubCliente")) {
				jButtonMostrarOcultarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarSubCliente")) {
				jButtonCancelarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosSubCliente")) {
				jButtonGuardarCambiosSubClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarSubCliente")) {
				jButtonGuardarCambiosSubClienteActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarSubCliente")) {
				jButtonCopiarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarSubCliente")) {
				jButtonVerFormSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosSubCliente")) {
				jButtonGuardarCambiosSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarSubCliente")) {
				jButtonCopiarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormSubCliente")) {
				jButtonVerFormSubClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaSubCliente")) {
				jButtonGuardarCambiosSubClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarSubCliente")) {
				jButtonGuardarCambiosSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaSubCliente")) {
				jButtonGuardarCambiosSubClienteActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionSubCliente")) {
				jButtonRecargarInformacionSubClienteActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarSubCliente")) {
				jButtonRecargarInformacionSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionSubCliente")) {
				jButtonRecargarInformacionSubClienteActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresSubCliente")) {
				jButtonAnterioresSubClienteActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarSubCliente")) {
				jButtonAnterioresSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreSubCliente")) {
				jButtonAnterioresSubClienteActionPerformed(evt);
			} else if(sTipo.equals("SiguientesSubCliente")) {
				jButtonSiguientesSubClienteActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarSubCliente")) {
				jButtonSiguientesSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesSubCliente")) {
				jButtonSiguientesSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderBySubCliente") || sTipo.equals("MenuItemDetalleAbrirOrderBySubCliente")) {
				jButtonAbrirOrderBySubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarSubCliente") || sTipo.equals("MenuItemDetalleMostrarOcultarSubCliente")) {
				jButtonMostrarOcultarSubClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosSubCliente")) {
				jButtonNuevoGuardarCambiosSubClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarSubCliente")) {
				jButtonNuevoGuardarCambiosSubClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosSubCliente")) {
				jButtonNuevoGuardarCambiosSubClienteActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoSubCliente")) {
				jButtonCerrarReporteDinamicoSubClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoSubCliente")) {
				jButtonGenerarReporteDinamicoSubClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoSubCliente")) {
				
				jButtonGenerarExcelReporteDinamicoSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionSubCliente")) {
				jButtonCerrarImportacionSubClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionSubCliente")) {
				
				jButtonGenerarImportacionSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionSubCliente")) {
				
				jButtonAbrirImportacionSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesSubCliente")) {
				jComboBoxTiposAccionesSubClienteActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesSubCliente")) {
				jComboBoxTiposRelacionesSubClienteActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioSubCliente")) {
				jComboBoxTiposAccionesSubClienteActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarSubCliente")) {
				
				jComboBoxTiposSeleccionarSubClienteActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralSubCliente")) {
				jTextFieldValorCampoGeneralSubClienteActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderBySubCliente")) {
				jButtonAbrirOrderBySubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarSubCliente")) {
				jButtonAbrirOrderBySubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderBySubCliente")) {
				jButtonCerrarOrderBySubClienteActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idSubClienteBusqueda")) {
				this.jButtonidSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaSubClienteUpdate")) {
				this.jButtonid_empresaSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaSubClienteBusqueda")) {
				this.jButtonid_empresaSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteSubCliente")) {
				this.jButtonid_clienteSubClienteActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteSubClienteUpdate")) {
				this.jButtonid_clienteSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteSubClienteBusqueda")) {
				this.jButtonid_clienteSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalSubClienteUpdate")) {
				this.jButtonid_sucursalSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalSubClienteBusqueda")) {
				this.jButtonid_sucursalSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_identificacionSubClienteUpdate")) {
				this.jButtonid_tipo_identificacionSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_identificacionSubClienteBusqueda")) {
				this.jButtonid_tipo_identificacionSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("identificacionSubClienteBusqueda")) {
				this.jButtonidentificacionSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucSubClienteBusqueda")) {
				this.jButtonrucSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreSubClienteBusqueda")) {
				this.jButtonnombreSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("apellidoSubClienteBusqueda")) {
				this.jButtonapellidoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_completoSubClienteBusqueda")) {
				this.jButtonnombre_completoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionSubClienteBusqueda")) {
				this.jButtondireccionSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoSubClienteBusqueda")) {
				this.jButtontelefonoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_celularSubClienteBusqueda")) {
				this.jButtonnumero_celularSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("mailSubClienteBusqueda")) {
				this.jButtonmailSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_nacimientoSubClienteBusqueda")) {
				this.jButtonfecha_nacimientoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaoSubClienteBusqueda")) {
				this.jButtonfechaoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacionSubClienteBusqueda")) {
				this.jButtonobservacionSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisSubClienteUpdate")) {
				this.jButtonid_paisSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisSubClienteBusqueda")) {
				this.jButtonid_paisSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadSubClienteUpdate")) {
				this.jButtonid_ciudadSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadSubClienteBusqueda")) {
				this.jButtonid_ciudadSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaSubClienteUpdate")) {
				this.jButtonid_zonaSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaSubClienteBusqueda")) {
				this.jButtonid_zonaSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pais_nacionalidadSubClienteUpdate")) {
				this.jButtonid_pais_nacionalidadSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pais_nacionalidadSubClienteBusqueda")) {
				this.jButtonid_pais_nacionalidadSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_generoSubClienteUpdate")) {
				this.jButtonid_tipo_generoSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_generoSubClienteBusqueda")) {
				this.jButtonid_tipo_generoSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_civilSubClienteUpdate")) {
				this.jButtonid_estado_civilSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_civilSubClienteBusqueda")) {
				this.jButtonid_estado_civilSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_legalSubClienteUpdate")) {
				this.jButtonid_estado_legalSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_legalSubClienteBusqueda")) {
				this.jButtonid_estado_legalSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduSubClienteUpdate")) {
				this.jButtonid_tipo_nivel_eduSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduSubClienteBusqueda")) {
				this.jButtonid_tipo_nivel_eduSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_imagen_firmaSubClienteBusqueda")) {
				this.jButtonpath_imagen_firmaSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableSubCliente")) {
				this.jButtonid_cuenta_contableSubClienteActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableSubClienteArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableSubClienteUpdate")) {
				this.jButtonid_cuenta_contableSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableSubClienteBusqueda")) {
				this.jButtonid_cuenta_contableSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cargaSubClienteBusqueda")) {
				this.jButtonnumero_cargaSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("limite_creditoSubClienteBusqueda")) {
				this.jButtonlimite_creditoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoSubClienteBusqueda")) {
				this.jButtondescuentoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_contratoSubClienteBusqueda")) {
				this.jButtoncodigo_contratoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_contratoSubClienteBusqueda")) {
				this.jButtonvalor_contratoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_inicioSubClienteBusqueda")) {
				this.jButtonfecha_inicioSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_finSubClienteBusqueda")) {
				this.jButtonfecha_finSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("plazoSubClienteBusqueda")) {
				this.jButtonplazoSubClienteBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_clienteSubCliente")) {
				this.jButtonid_clienteSubClienteActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("BusquedaPorIdentificacionSubCliente")) {
				this.jButtonBusquedaPorIdentificacionSubClienteActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorNombreCompletoSubCliente")) {
				this.jButtonBusquedaPorNombreCompletoSubClienteActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorRucSubCliente")) {
				this.jButtonBusquedaPorRucSubClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteSubCliente")) {
				this.jButtonFK_IdClienteSubClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoCivilSubCliente")) {
				this.jButtonFK_IdEstadoCivilSubClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoLegalSubCliente")) {
				this.jButtonFK_IdEstadoLegalSubClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoIdentificacionSubCliente")) {
				this.jButtonFK_IdTipoIdentificacionSubClienteActionPerformed(evt);
			}
			
			;
			
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessSubCliente();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSubClienteActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				


				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			SubCliente subclienteLocal=null;
			
			if(!this.getEsControlTabla()) {
				subclienteLocal=this.subcliente;
			} else {
				subclienteLocal=this.subclienteAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
							
				
				


				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSubClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteAnterior =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.subclienteAnterior =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSubClienteActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
								
						
				


				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
								
				
				


				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSubClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteAnterior =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.subclienteAnterior =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSubClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteAnterior =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.subclienteAnterior =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSubClienteActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
							
				
				


				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSubClienteActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subclienteAnterior =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.subclienteAnterior =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSubClienteActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
								
				
				


				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSubClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteAnterior =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.subclienteAnterior =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSubClienteActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSubClienteActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosSubCliente")) {
					jCheckBoxSeleccionarTodosSubClienteItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosSubCliente")) {
					jCheckBoxSeleccionadosSubClienteItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarSubCliente")) {
					
				}
				
				


				
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
												
				
				


				
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSubClienteActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.subclienteAnterior =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.subclienteAnterior =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSubClienteActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_paisSubCliente")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente;
				}

				if(this.subclienteSessionBean.getConGuardarRelaciones()) {
					//classes=SubClienteConstantesFunciones.getClassesRelationshipsOfSubCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormSubCliente(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaSubClienteActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_paisSubCliente")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente;
				}

				if(this.subclienteSessionBean.getConGuardarRelaciones()) {
					//classes=SubClienteConstantesFunciones.getClassesRelationshipsOfSubCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormSubCliente(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.subcliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.subcliente);
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_paisSubCliente")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente;
				}

				if(this.subclienteSessionBean.getConGuardarRelaciones()) {
					//classes=SubClienteConstantesFunciones.getClassesRelationshipsOfSubCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormSubCliente(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(SubCliente.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",SubCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaSubClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.subclienteAnterior =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.subclienteAnterior =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarSubCliente")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosSubClienteListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosSubCliente.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.subcliente =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.subcliente =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.subcliente);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarSubCliente")) {
				
				}
				
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarSubCliente")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosSubCliente.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarSubCliente")) {
			
			}
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessSubCliente();
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
			if(sTipo.equals("NuevoSubCliente")) {
				jButtonNuevoSubClienteActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarSubCliente")) {
				jButtonDuplicarSubClienteActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarSubCliente")) {
				jButtonCopiarSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormSubCliente")) {
				jButtonVerFormSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesSubCliente")) {
				jButtonNuevoSubClienteActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarSubCliente")) {
				jButtonModificarSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarSubCliente")) {
				jButtonActualizarSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarSubCliente")) {
				jButtonEliminarSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaSubCliente")) {
				jButtonGuardarCambiosSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarSubCliente")) {
				jButtonCancelarSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarSubCliente")) {
				jButtonCerrarSubClienteActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosSubCliente")) {
				jButtonGuardarCambiosSubClienteActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosSubCliente")) {
				jButtonNuevoGuardarCambiosSubClienteActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderBySubCliente")) {
				jButtonAbrirOrderBySubClienteActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionSubCliente")) {
				jButtonRecargarInformacionSubClienteActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresSubCliente")) {
				jButtonAnterioresSubClienteActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesSubCliente")) {
				jButtonSiguientesSubClienteActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idSubClienteBusqueda")) {
				this.jButtonidSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaSubClienteUpdate")) {
				this.jButtonid_empresaSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaSubClienteBusqueda")) {
				this.jButtonid_empresaSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteSubCliente")) {
				this.jButtonid_clienteSubClienteActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteSubClienteUpdate")) {
				this.jButtonid_clienteSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteSubClienteBusqueda")) {
				this.jButtonid_clienteSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalSubClienteUpdate")) {
				this.jButtonid_sucursalSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalSubClienteBusqueda")) {
				this.jButtonid_sucursalSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_identificacionSubClienteUpdate")) {
				this.jButtonid_tipo_identificacionSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_identificacionSubClienteBusqueda")) {
				this.jButtonid_tipo_identificacionSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("identificacionSubClienteBusqueda")) {
				this.jButtonidentificacionSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucSubClienteBusqueda")) {
				this.jButtonrucSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreSubClienteBusqueda")) {
				this.jButtonnombreSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("apellidoSubClienteBusqueda")) {
				this.jButtonapellidoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_completoSubClienteBusqueda")) {
				this.jButtonnombre_completoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionSubClienteBusqueda")) {
				this.jButtondireccionSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoSubClienteBusqueda")) {
				this.jButtontelefonoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_celularSubClienteBusqueda")) {
				this.jButtonnumero_celularSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("mailSubClienteBusqueda")) {
				this.jButtonmailSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_nacimientoSubClienteBusqueda")) {
				this.jButtonfecha_nacimientoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaoSubClienteBusqueda")) {
				this.jButtonfechaoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacionSubClienteBusqueda")) {
				this.jButtonobservacionSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisSubClienteUpdate")) {
				this.jButtonid_paisSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisSubClienteBusqueda")) {
				this.jButtonid_paisSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadSubClienteUpdate")) {
				this.jButtonid_ciudadSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadSubClienteBusqueda")) {
				this.jButtonid_ciudadSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaSubClienteUpdate")) {
				this.jButtonid_zonaSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaSubClienteBusqueda")) {
				this.jButtonid_zonaSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pais_nacionalidadSubClienteUpdate")) {
				this.jButtonid_pais_nacionalidadSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pais_nacionalidadSubClienteBusqueda")) {
				this.jButtonid_pais_nacionalidadSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_generoSubClienteUpdate")) {
				this.jButtonid_tipo_generoSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_generoSubClienteBusqueda")) {
				this.jButtonid_tipo_generoSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_civilSubClienteUpdate")) {
				this.jButtonid_estado_civilSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_civilSubClienteBusqueda")) {
				this.jButtonid_estado_civilSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_legalSubClienteUpdate")) {
				this.jButtonid_estado_legalSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_legalSubClienteBusqueda")) {
				this.jButtonid_estado_legalSubClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduSubClienteUpdate")) {
				this.jButtonid_tipo_nivel_eduSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduSubClienteBusqueda")) {
				this.jButtonid_tipo_nivel_eduSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_imagen_firmaSubClienteBusqueda")) {
				this.jButtonpath_imagen_firmaSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableSubCliente")) {
				this.jButtonid_cuenta_contableSubClienteActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableSubClienteArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableSubClienteUpdate")) {
				this.jButtonid_cuenta_contableSubClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableSubClienteBusqueda")) {
				this.jButtonid_cuenta_contableSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cargaSubClienteBusqueda")) {
				this.jButtonnumero_cargaSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("limite_creditoSubClienteBusqueda")) {
				this.jButtonlimite_creditoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoSubClienteBusqueda")) {
				this.jButtondescuentoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_contratoSubClienteBusqueda")) {
				this.jButtoncodigo_contratoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_contratoSubClienteBusqueda")) {
				this.jButtonvalor_contratoSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_inicioSubClienteBusqueda")) {
				this.jButtonfecha_inicioSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_finSubClienteBusqueda")) {
				this.jButtonfecha_finSubClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("plazoSubClienteBusqueda")) {
				this.jButtonplazoSubClienteBusquedaActionPerformed(evt);
			}
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessSubCliente();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameSubCliente")) {
				closingInternalFrameSubCliente();
				
			} else if(sTipo.equals("jButtonCancelarSubCliente")) {
				JInternalFrameBase jInternalFrameDetalleFormSubCliente = (JInternalFrameBase)evt.getSource();
	            	
	            SubClienteBeanSwingJInternalFrame jInternalFrameParent=(SubClienteBeanSwingJInternalFrame)jInternalFrameDetalleFormSubCliente.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarSubClienteActionPerformed(null);
			}
			
			SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.subcliente,new Object(),this.subclienteParameterGeneral,this.subclienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormSubCliente(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormSubCliente(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormSubCliente(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.subcliente)) {
			if(!esControlTabla) {
				if(SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);			
				}
				
				if(this.subclienteSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualSubCliente(this.subcliente,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.subclienteReturnGeneral=subclienteLogic.procesarEventosSubClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.subclienteLogic.getSubClientes(),this.subcliente,this.subclienteParameterGeneral,this.isEsNuevoSubCliente,classes);//this.subclienteLogic.getSubCliente()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanSubCliente(this.subclienteReturnGeneral,this.subclienteBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.subclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanSubCliente(classes,this.subclienteReturnGeneral,this.subclienteBean,false);
					}
						
					if(this.subclienteReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeySubCliente(this.subclienteReturnGeneral.getSubCliente());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioSubCliente(this.subclienteReturnGeneral.getSubCliente());	
					}
						
					if(this.subclienteReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioSubCliente(this.subclienteReturnGeneral.getSubCliente(),classes);//this.subclienteBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioSubCliente(this.subcliente,classes);//this.subclienteBean);									
				}
			
				if(SubClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualSubCliente(this.subcliente,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysSubCliente(this.subcliente);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.subclienteAnterior!=null) {
						this.subcliente=this.subclienteAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.subclienteReturnGeneral=subclienteLogic.procesarEventosSubClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.subclienteLogic.getSubClientes(),this.subcliente,this.subclienteParameterGeneral,this.isEsNuevoSubCliente,classes);//this.subclienteLogic.getSubCliente()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.subclienteSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.subclienteSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.subclienteReturnGeneral.getSubCliente(),subclienteLogic.getSubClientes());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.subclienteReturnGeneral.getSubCliente(),this.subclientes);
				}
				//ARCHITECTURE
				
				//this.jTableDatosSubCliente.repaint();
				
				//((AbstractTableModel) this.jTableDatosSubCliente.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosSubCliente();
			}
		}
	}
	
	public void actualizarVisualTableDatosSubCliente() throws Exception {
		
		SubClienteModel subclienteModel=(SubClienteModel)this.jTableDatosSubCliente.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			subclienteModel.subclientes=this.subclienteLogic.getSubClientes();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			subclienteModel.subclientes=this.subclientes;
		}
		
		
		((SubClienteModel) this.jTableDatosSubCliente.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaSubCliente() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getsubclienteAnterior(),this.subclienteLogic.getSubClientes());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getsubclienteAnterior(),this.subclientes);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosSubCliente();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioSubCliente(SubCliente subcliente,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(Factura.class)) {
					this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.setFacturas(subcliente.getFacturas());
					this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFactura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Consignacion.class)) {
					this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(subcliente.getConsignacions());
					this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignacion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GuiaRemision.class)) {
					this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(subcliente.getGuiaRemisions());
					this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.inicializarActualizarBindingTablaGuiaRemision(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Proforma.class)) {
					this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(subcliente.getProformas());
					this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProforma(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PedidoExpor.class)) {
					this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(subcliente.getPedidoExpors());
					this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedidoExpor(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Pedido.class)) {
					this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.setPedidos(subcliente.getPedidos());
					this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedido(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.subcliente,new Object(),generalEntityParameterGeneral,this.subclienteReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.subclienteSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=SubClienteConstantesFunciones.getClassesRelationshipsOfSubCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=SubClienteConstantesFunciones.getClassesRelationshipsFromStringsOfSubCliente(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormSubCliente(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				SubClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.subcliente,new Object(),generalEntityParameterGeneral,this.subclienteReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioSubCliente(SubClienteBean subclienteBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(Factura.class)) {
					this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.setFacturas(subcliente.getFacturas());
					this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFactura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Consignacion.class)) {
					this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.setConsignacions(subcliente.getConsignacions());
					this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignacion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GuiaRemision.class)) {
					this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.setGuiaRemisions(subcliente.getGuiaRemisions());
					this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.inicializarActualizarBindingTablaGuiaRemision(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Proforma.class)) {
					this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.setProformas(subcliente.getProformas());
					this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProforma(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PedidoExpor.class)) {
					this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.setPedidoExpors(subcliente.getPedidoExpors());
					this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedidoExpor(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Pedido.class)) {
					this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.setPedidos(subcliente.getPedidos());
					this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedido(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanSubCliente(ArrayList<Classe> classes,SubClienteReturnGeneral subclienteReturnGeneral,SubClienteBean subclienteBean,Boolean conDefault) throws Exception {
		
			this.subclienteBean.setFacturas(subclienteReturnGeneral.getSubCliente().getFacturas());
			this.subclienteBean.setConsignacions(subclienteReturnGeneral.getSubCliente().getConsignacions());
			this.subclienteBean.setGuiaRemisions(subclienteReturnGeneral.getSubCliente().getGuiaRemisions());
			this.subclienteBean.setProformas(subclienteReturnGeneral.getSubCliente().getProformas());
			this.subclienteBean.setPedidoExpors(subclienteReturnGeneral.getSubCliente().getPedidoExpors());
			this.subclienteBean.setPedidos(subclienteReturnGeneral.getSubCliente().getPedidos());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualSubCliente(SubCliente subcliente,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(Factura.class)) {
					subcliente.setFacturas(this.jInternalFrameDetalleFormSubCliente.facturaBeanSwingJInternalFrame.facturaLogic.getFacturas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Consignacion.class)) {
					subcliente.setConsignacions(this.jInternalFrameDetalleFormSubCliente.consignacionBeanSwingJInternalFrame.consignacionLogic.getConsignacions());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GuiaRemision.class)) {
					subcliente.setGuiaRemisions(this.jInternalFrameDetalleFormSubCliente.guiaremisionBeanSwingJInternalFrame.guiaremisionLogic.getGuiaRemisions());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Proforma.class)) {
					subcliente.setProformas(this.jInternalFrameDetalleFormSubCliente.proformaBeanSwingJInternalFrame.proformaLogic.getProformas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PedidoExpor.class)) {
					subcliente.setPedidoExpors(this.jInternalFrameDetalleFormSubCliente.pedidoexporBeanSwingJInternalFrame.pedidoexporLogic.getPedidoExpors());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Pedido.class)) {
					subcliente.setPedidos(this.jInternalFrameDetalleFormSubCliente.pedidoBeanSwingJInternalFrame.pedidoLogic.getPedidos());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.subcliente)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormSubCliente = new SubClienteDetalleFormJInternalFrame(jDesktopPane,this.subclienteSessionBean.getConGuardarRelaciones(),this.subclienteSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormSubCliente);
		this.jInternalFrameDetalleFormSubCliente.setVisible(false);
		this.jInternalFrameDetalleFormSubCliente.setSelected(false);						
		
		this.jInternalFrameDetalleFormSubCliente.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormSubCliente.subclienteLogic=this.subclienteLogic;
		
		this.cargarCombosFrameForeignKeySubCliente("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleSubCliente();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleSubCliente();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeySubCliente("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeySubCliente();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormSubCliente.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarSubCliente"));
		
		this.jInternalFrameDetalleFormSubCliente.jButtonModificarSubCliente.addActionListener(new ButtonActionListener(this,"ModificarSubCliente"));

		
		this.jInternalFrameDetalleFormSubCliente.jButtonModificarToolBarSubCliente.addActionListener(new ButtonActionListener(this,"ModificarToolBarSubCliente"));
					
		this.jInternalFrameDetalleFormSubCliente.jMenuItemModificarSubCliente.addActionListener(new ButtonActionListener(this,"MenuItemModificarSubCliente"));		
		
		
		
		this.jInternalFrameDetalleFormSubCliente.jButtonActualizarSubCliente.addActionListener (new ButtonActionListener(this,"ActualizarSubCliente"));
		
		
		this.jInternalFrameDetalleFormSubCliente.jButtonActualizarToolBarSubCliente.addActionListener(new ButtonActionListener(this,"ActualizarToolBarSubCliente"));
						
		this.jInternalFrameDetalleFormSubCliente.jMenuItemActualizarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemActualizarSubCliente"));		
		
		
		
		this.jInternalFrameDetalleFormSubCliente.jButtonEliminarSubCliente.addActionListener (new ButtonActionListener(this,"EliminarSubCliente"));
		
		
		this.jInternalFrameDetalleFormSubCliente.jButtonEliminarToolBarSubCliente.addActionListener (new ButtonActionListener(this,"EliminarToolBarSubCliente"));
								
		this.jInternalFrameDetalleFormSubCliente.jMenuItemEliminarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemEliminarSubCliente"));		
		
		
		
		this.jInternalFrameDetalleFormSubCliente.jButtonCancelarSubCliente.addActionListener (new ButtonActionListener(this,"CancelarSubCliente"));
		
		
		this.jInternalFrameDetalleFormSubCliente.jButtonCancelarToolBarSubCliente.addActionListener (new ButtonActionListener(this,"CancelarToolBarSubCliente"));
					
		this.jInternalFrameDetalleFormSubCliente.jMenuItemCancelarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemCancelarSubCliente"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormSubCliente.jMenuItemDetalleCerrarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarSubCliente"));		
		
		
		
		this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosToolBarSubCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarSubCliente"));
		
		
		
		this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosToolBarSubCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarSubCliente"));
		
		
		
		this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioSubCliente"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonidSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"idSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_empresaSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_empresaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaSubClienteBusqueda"));
		//jButtonid_clienteSubCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteSubClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubCliente.addActionListener(new ButtonActionListener(this,"id_clienteSubCliente"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_clienteSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_sucursalSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_sucursalSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_identificacionSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_identificacionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonidentificacionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"identificacionSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonrucSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"rucSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnombreSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombreSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonapellidoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"apellidoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnombre_completoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_completoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtondireccionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"direccionSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtontelefonoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"telefonoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnumero_celularSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_celularSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonmailSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"mailSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfecha_nacimientoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_nacimientoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfechaoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fechaoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonobservacionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"observacionSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_paisSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_paisSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_paisSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_paisSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_ciudadSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_ciudadSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_zonaSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_zonaSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_zonaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_pais_nacionalidadSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_pais_nacionalidadSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_generoSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_generoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_civilSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_civilSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_legalSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_legalSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_legalSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_legalSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_nivel_eduSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_nivel_eduSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonpath_imagen_firmaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"path_imagen_firmaSubClienteBusqueda"));
		//jButtonid_cuenta_contableSubCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableSubClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubCliente.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubCliente"));
		//jButtonid_cuenta_contableSubClienteArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubClienteArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubClienteArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnumero_cargaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_cargaSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonlimite_creditoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"limite_creditoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtondescuentoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"descuentoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtoncodigo_contratoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"codigo_contratoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonvalor_contratoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"valor_contratoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfecha_inicioSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_inicioSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfecha_finSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonplazoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"plazoSubClienteBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesSubCliente"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameSubCliente"));
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarSubCliente"));
		}
		
		this.jTableDatosSubCliente.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarSubCliente"));
		
		this.jTableDatosSubCliente.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarSubCliente"));
		
		this.jButtonNuevoSubCliente.addActionListener(new ButtonActionListener(this,"NuevoSubCliente"));
		
		this.jButtonDuplicarSubCliente.addActionListener(new ButtonActionListener(this,"DuplicarSubCliente"));
		
		this.jButtonCopiarSubCliente.addActionListener(new ButtonActionListener(this,"CopiarSubCliente"));
		
		this.jButtonVerFormSubCliente.addActionListener(new ButtonActionListener(this,"VerFormSubCliente"));
		
		
		this.jButtonNuevoToolBarSubCliente.addActionListener(new ButtonActionListener(this,"NuevoToolBarSubCliente"));
			
		this.jButtonDuplicarToolBarSubCliente.addActionListener(new ButtonActionListener(this,"DuplicarToolBarSubCliente"));
			
		this.jMenuItemNuevoSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemNuevoSubCliente"));
			
		this.jMenuItemDuplicarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarSubCliente"));		
		
		
		this.jButtonNuevoRelacionesSubCliente.addActionListener (new ButtonActionListener(this,"NuevoRelacionesSubCliente"));
		
		
		this.jButtonNuevoRelacionesToolBarSubCliente.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarSubCliente"));
			
		this.jMenuItemNuevoRelacionesSubCliente.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesSubCliente"));		
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonModificarSubCliente.addActionListener(new ButtonActionListener(this,"ModificarSubCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonModificarToolBarSubCliente.addActionListener(new ButtonActionListener(this,"ModificarToolBarSubCliente"));
			
			this.jInternalFrameDetalleFormSubCliente.jMenuItemModificarSubCliente.addActionListener(new ButtonActionListener(this,"MenuItemModificarSubCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormSubCliente.jButtonActualizarSubCliente.addActionListener (new ButtonActionListener(this,"ActualizarSubCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonActualizarToolBarSubCliente.addActionListener(new ButtonActionListener(this,"ActualizarToolBarSubCliente"));
				
			this.jInternalFrameDetalleFormSubCliente.jMenuItemActualizarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemActualizarSubCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonEliminarSubCliente.addActionListener (new ButtonActionListener(this,"EliminarSubCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonEliminarToolBarSubCliente.addActionListener (new ButtonActionListener(this,"EliminarToolBarSubCliente"));
						
			this.jInternalFrameDetalleFormSubCliente.jMenuItemEliminarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemEliminarSubCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonCancelarSubCliente.addActionListener (new ButtonActionListener(this,"CancelarSubCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonCancelarToolBarSubCliente.addActionListener (new ButtonActionListener(this,"CancelarToolBarSubCliente"));
			
			this.jInternalFrameDetalleFormSubCliente.jMenuItemCancelarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemCancelarSubCliente"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarSubCliente.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarSubCliente"));		
		
		
		this.jButtonCerrarSubCliente.addActionListener (new ButtonActionListener(this,"CerrarSubCliente"));
		
		
		this.jButtonCerrarToolBarSubCliente.addActionListener (new ButtonActionListener(this,"CerrarToolBarSubCliente"));
			
		this.jMenuItemCerrarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemCerrarSubCliente"));
			
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jMenuItemDetalleCerrarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarSubCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosSubCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosSubCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosToolBarSubCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarSubCliente"));
		}
		
		this.jButtonCopiarToolBarSubCliente.addActionListener (new ButtonActionListener(this,"CopiarToolBarSubCliente"));
			
		this.jButtonVerFormToolBarSubCliente.addActionListener (new ButtonActionListener(this,"VerFormToolBarSubCliente"));
		
		this.jMenuItemGuardarCambiosSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosSubCliente"));
			
		this.jMenuItemCopiarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemCopiarSubCliente"));		
		
		this.jMenuItemVerFormSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemVerFormSubCliente"));		
		
		
		this.jButtonGuardarCambiosTablaSubCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaSubCliente"));
		
		
		this.jButtonGuardarCambiosTablaToolBarSubCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarSubCliente"));
			
		this.jMenuItemGuardarCambiosTablaSubCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaSubCliente"));		
		
		
		
		this.jButtonRecargarInformacionSubCliente.addActionListener (new ButtonActionListener(this,"RecargarInformacionSubCliente"));
					
		this.jButtonRecargarInformacionToolBarSubCliente.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarSubCliente"));
		
		this.jMenuItemRecargarInformacionSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionSubCliente"));		
		
		
		
		this.jButtonAnterioresSubCliente.addActionListener (new ButtonActionListener(this,"AnterioresSubCliente"));
		
		
		this.jButtonAnterioresToolBarSubCliente.addActionListener (new ButtonActionListener(this,"AnterioresToolBarSubCliente"));
		
		this.jMenuItemAnterioresSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresSubCliente"));		
		
		
		this.jButtonSiguientesSubCliente.addActionListener (new ButtonActionListener(this,"SiguientesSubCliente"));
		
		
		this.jButtonSiguientesToolBarSubCliente.addActionListener (new ButtonActionListener(this,"SiguientesToolBarSubCliente"));
			
		this.jMenuItemSiguientesSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesSubCliente"));
			
		this.jMenuItemAbrirOrderBySubCliente.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderBySubCliente"));
			
		this.jMenuItemMostrarOcultarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarSubCliente"));
			
		this.jMenuItemDetalleAbrirOrderBySubCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderBySubCliente"));
			
		this.jMenuItemDetalleMostarOcultarSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarSubCliente"));		
		
		
		this.jButtonNuevoGuardarCambiosSubCliente.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosSubCliente"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarSubCliente.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarSubCliente"));
			
		this.jMenuItemNuevoGuardarCambiosSubCliente.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosSubCliente"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosSubCliente.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosSubCliente"));

		this.jCheckBoxSeleccionadosSubCliente.addItemListener(new CheckBoxItemListener(this,"SeleccionadosSubCliente"));
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioSubCliente"));
		}
		
		
		this.jComboBoxTiposRelacionesSubCliente.addActionListener (new ButtonActionListener(this,"TiposRelacionesSubCliente"));
			
		this.jComboBoxTiposAccionesSubCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesSubCliente"));
					
		this.jComboBoxTiposSeleccionarSubCliente.addActionListener (new ButtonActionListener(this,"TiposSeleccionarSubCliente"));
			
		this.jTextFieldValorCampoGeneralSubCliente.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralSubCliente"));		
		
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonidSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"idSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_empresaSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_empresaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaSubClienteBusqueda"));
		//jButtonid_clienteSubCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteSubClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubCliente.addActionListener(new ButtonActionListener(this,"id_clienteSubCliente"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_clienteSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_sucursalSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_sucursalSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_identificacionSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_identificacionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonidentificacionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"identificacionSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonrucSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"rucSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnombreSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombreSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonapellidoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"apellidoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnombre_completoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_completoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtondireccionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"direccionSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtontelefonoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"telefonoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnumero_celularSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_celularSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonmailSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"mailSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfecha_nacimientoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_nacimientoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfechaoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fechaoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonobservacionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"observacionSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_paisSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_paisSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_paisSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_paisSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_ciudadSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_ciudadSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_zonaSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_zonaSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_zonaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_pais_nacionalidadSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_pais_nacionalidadSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_generoSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_generoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_civilSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_civilSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_legalSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_legalSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_legalSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_legalSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_nivel_eduSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_nivel_eduSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonpath_imagen_firmaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"path_imagen_firmaSubClienteBusqueda"));
		//jButtonid_cuenta_contableSubCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableSubClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubCliente.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubCliente"));
		//jButtonid_cuenta_contableSubClienteArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubClienteArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubClienteArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnumero_cargaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_cargaSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonlimite_creditoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"limite_creditoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtondescuentoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"descuentoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtoncodigo_contratoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"codigo_contratoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonvalor_contratoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"valor_contratoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfecha_inicioSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_inicioSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfecha_finSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonplazoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"plazoSubClienteBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorIdentificacionSubCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorIdentificacionSubCliente"));

			this.jButtonBusquedaPorNombreCompletoSubCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreCompletoSubCliente"));

			this.jButtonBusquedaPorRucSubCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorRucSubCliente"));

			this.jButtonFK_IdClienteSubCliente.addActionListener(new ButtonActionListener(this,"FK_IdClienteSubCliente"));

			this.jButtonBuscarFK_IdClienteid_clienteSubCliente.addActionListener(new ButtonActionListener(this,"id_clienteSubCliente"));

			this.jButtonFK_IdEstadoCivilSubCliente.addActionListener(new ButtonActionListener(this,"FK_IdEstadoCivilSubCliente"));

			this.jButtonFK_IdEstadoLegalSubCliente.addActionListener(new ButtonActionListener(this,"FK_IdEstadoLegalSubCliente"));

			this.jButtonFK_IdTipoIdentificacionSubCliente.addActionListener(new ButtonActionListener(this,"FK_IdTipoIdentificacionSubCliente"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoSubCliente!=null) {
				this.jInternalFrameReporteDinamicoSubCliente.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoSubCliente"));
				this.jInternalFrameReporteDinamicoSubCliente.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoSubCliente"));
				this.jInternalFrameReporteDinamicoSubCliente.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoSubCliente"));
			}
			
			//this.jButtonCerrarReporteDinamicoSubCliente.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoSubCliente"));				
			//this.jButtonGenerarReporteDinamicoSubCliente.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoSubCliente"));
			//this.jButtonGenerarExcelReporteDinamicoSubCliente.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoSubCliente"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionSubCliente!=null) {
				this.jInternalFrameImportacionSubCliente.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionSubCliente"));
				this.jInternalFrameImportacionSubCliente.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionSubCliente"));
				this.jInternalFrameImportacionSubCliente.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionSubCliente"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderBySubCliente.addActionListener (new ButtonActionListener(this,"AbrirOrderBySubCliente"));
			
			this.jButtonAbrirOrderByToolBarSubCliente.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarSubCliente"));			
			
			if(this.jInternalFrameOrderBySubCliente!=null) {
				this.jInternalFrameOrderBySubCliente.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderBySubCliente"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormSubCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormSubCliente.jTabbedPaneRelacionesSubCliente.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesSubCliente"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameSubCliente();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormSubCliente.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormSubCliente = (JInternalFrameBase)event.getSource();
	            	
	            SubClienteBeanSwingJInternalFrame jInternalFrameParent=(SubClienteBeanSwingJInternalFrame)jInternalFrameDetalleFormSubCliente.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarSubClienteActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosSubCliente.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosSubClienteListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosSubCliente.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosSubCliente.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSubClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSubClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSubClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoSubCliente";
		inputMap = this.jButtonNuevoSubCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoSubCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoSubClienteActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSubClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSubClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoSubClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesSubCliente";
		inputMap = this.jButtonNuevoRelacionesSubCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesSubCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoSubClienteActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarSubCliente";
		inputMap = this.jButtonModificarSubCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarSubCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarSubClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarSubCliente";
		inputMap = this.jButtonActualizarSubCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarSubCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarSubClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarSubCliente";
		inputMap = this.jButtonEliminarSubCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarSubCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarSubClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarSubCliente";
		inputMap = this.jButtonCancelarSubCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarSubCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarSubClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarSubCliente";
		inputMap = this.jButtonCerrarSubCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarSubCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarSubClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosSubCliente";
		inputMap = this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosSubCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormSubCliente.jButtonGuardarCambiosSubCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosSubClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosSubCliente.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosSubClienteItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesSubCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesSubClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarSubCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarSubClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralSubCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralSubClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonidSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"idSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_empresaSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_empresaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaSubClienteBusqueda"));
		//jButtonid_clienteSubCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteSubClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubCliente.addActionListener(new ButtonActionListener(this,"id_clienteSubCliente"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_clienteSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_sucursalSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_sucursalSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_identificacionSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_identificacionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonidentificacionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"identificacionSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonrucSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"rucSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnombreSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombreSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonapellidoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"apellidoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnombre_completoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_completoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtondireccionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"direccionSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtontelefonoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"telefonoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnumero_celularSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_celularSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonmailSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"mailSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfecha_nacimientoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_nacimientoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfechaoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fechaoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonobservacionSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"observacionSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_paisSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_paisSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_paisSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_paisSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_ciudadSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_ciudadSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_zonaSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_zonaSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_zonaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_pais_nacionalidadSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_pais_nacionalidadSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_generoSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_generoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_civilSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_civilSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_legalSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_legalSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_estado_legalSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_legalSubClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_nivel_eduSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_tipo_nivel_eduSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonpath_imagen_firmaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"path_imagen_firmaSubClienteBusqueda"));
		//jButtonid_cuenta_contableSubCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableSubClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubCliente.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubCliente"));
		//jButtonid_cuenta_contableSubClienteArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubClienteArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubClienteArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubClienteUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonnumero_cargaSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_cargaSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonlimite_creditoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"limite_creditoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtondescuentoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"descuentoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtoncodigo_contratoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"codigo_contratoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonvalor_contratoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"valor_contratoSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfecha_inicioSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_inicioSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonfecha_finSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finSubClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormSubCliente.jButtonplazoSubClienteBusqueda.addActionListener(new ButtonActionListener(this,"plazoSubClienteBusqueda"));
		
		
		this.jButtonBusquedaPorIdentificacionSubCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorIdentificacionSubCliente"));

		this.jButtonBusquedaPorNombreCompletoSubCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreCompletoSubCliente"));

		this.jButtonBusquedaPorRucSubCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorRucSubCliente"));

		this.jButtonFK_IdClienteSubCliente.addActionListener(new ButtonActionListener(this,"FK_IdClienteSubCliente"));

		this.jButtonBuscarFK_IdClienteid_clienteSubCliente.addActionListener(new ButtonActionListener(this,"id_clienteSubCliente"));

		this.jButtonFK_IdEstadoCivilSubCliente.addActionListener(new ButtonActionListener(this,"FK_IdEstadoCivilSubCliente"));

		this.jButtonFK_IdEstadoLegalSubCliente.addActionListener(new ButtonActionListener(this,"FK_IdEstadoLegalSubCliente"));

		this.jButtonFK_IdTipoIdentificacionSubCliente.addActionListener(new ButtonActionListener(this,"FK_IdTipoIdentificacionSubCliente"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionSubCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionSubClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarSubClienteActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarSubCliente.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosSubCliente(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(SubCliente subclienteAux:this.subclienteLogic.getSubClientes()) {
					subclienteAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(SubCliente subclienteAux:subclientes) {
					subclienteAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosSubClienteItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingSubCliente(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(SubCliente subclienteAux:this.subclienteLogic.getSubClientes()) {
						subclienteAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(SubCliente subclienteAux:subclientes) {
						subclienteAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(SubCliente subclienteAux:this.subclienteLogic.getSubClientes()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(SubCliente subclienteAux:subclientes) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaSubCliente(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosSubCliente.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosSubCliente.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosSubClienteItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingSubCliente(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosSubCliente.getSelectedRows();
			
			SubCliente subclienteLocal=new SubCliente();
			
			//this.seleccionarTodosSubCliente(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLocal =(SubCliente) this.subclienteLogic.getSubClientes().toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					subclienteLocal =(SubCliente) this.subclientes.toArray()[this.jTableDatosSubCliente.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				subclienteLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(SubCliente subclienteAux:this.subclienteLogic.getSubClientes()) {
						subclienteAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(SubCliente subclienteAux:subclientes) {
						subclienteAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaSubCliente(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosSubCliente.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosSubCliente.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosSubCliente,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualSubClienteItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarSubClienteParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralSubClienteActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingSubCliente(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralSubCliente.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(SubCliente subclienteAux:this.subclienteLogic.getSubClientes()) {
				
						if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDENTIFICACION)) {
							existe=true;
							subclienteAux.setidentificacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_RUC)) {
							existe=true;
							subclienteAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							subclienteAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_APELLIDO)) {
							existe=true;
							subclienteAux.setapellido(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO)) {
							existe=true;
							subclienteAux.setnombre_completo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							subclienteAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							subclienteAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NUMEROCELULAR)) {
							existe=true;
							subclienteAux.setnumero_celular(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_MAIL)) {
							existe=true;
							subclienteAux.setmail(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO)) {
							existe=true;
							subclienteAux.setfecha_nacimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							subclienteAux.setfechao(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_OBSERVACION)) {
							existe=true;
							subclienteAux.setobservacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA)) {
							existe=true;
							subclienteAux.setpath_imagen_firma(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NUMEROCARGA)) {
							existe=true;
							subclienteAux.setnumero_carga(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_LIMITECREDITO)) {
							existe=true;
							subclienteAux.setlimite_credito(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							subclienteAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO)) {
							existe=true;
							subclienteAux.setcodigo_contrato(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_VALORCONTRATO)) {
							existe=true;
							subclienteAux.setvalor_contrato(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHAINICIO)) {
							existe=true;
							subclienteAux.setfecha_inicio(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHAFIN)) {
							existe=true;
							subclienteAux.setfecha_fin(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_PLAZO)) {
							existe=true;
							subclienteAux.setplazo(Integer.parseInt(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(SubCliente subclienteAux:subclientes) {
					
						if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDENTIFICACION)) {
							existe=true;
							subclienteAux.setidentificacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_RUC)) {
							existe=true;
							subclienteAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							subclienteAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_APELLIDO)) {
							existe=true;
							subclienteAux.setapellido(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO)) {
							existe=true;
							subclienteAux.setnombre_completo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							subclienteAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							subclienteAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NUMEROCELULAR)) {
							existe=true;
							subclienteAux.setnumero_celular(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_MAIL)) {
							existe=true;
							subclienteAux.setmail(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO)) {
							existe=true;
							subclienteAux.setfecha_nacimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							subclienteAux.setfechao(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_OBSERVACION)) {
							existe=true;
							subclienteAux.setobservacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA)) {
							existe=true;
							subclienteAux.setpath_imagen_firma(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NUMEROCARGA)) {
							existe=true;
							subclienteAux.setnumero_carga(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_LIMITECREDITO)) {
							existe=true;
							subclienteAux.setlimite_credito(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							subclienteAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO)) {
							existe=true;
							subclienteAux.setcodigo_contrato(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_VALORCONTRATO)) {
							existe=true;
							subclienteAux.setvalor_contrato(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHAINICIO)) {
							existe=true;
							subclienteAux.setfecha_inicio(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHAFIN)) {
							existe=true;
							subclienteAux.setfecha_fin(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_PLAZO)) {
							existe=true;
							subclienteAux.setplazo(Integer.parseInt(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaSubCliente(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesSubClienteActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingSubCliente(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioSubCliente=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesSubCliente.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteSubCliente) {				
					conSplash=true;//false;										
					
					//this.startProcessSubCliente(conSplash);
				
					this.generarReporteSubClientesSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoSubClientesSeleccionados();
				//this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoSubClientesSeleccionados(false);
				//this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoSubClientesSeleccionados(true);
				//this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessSubCliente();
				
				this.exportarSubClientesSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionSubClientes();
				//this.importarSubClientes();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessSubCliente();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelSubClientesSeleccionados();
				//this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Sub Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessSubCliente();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoSubCliente)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeySubCliente(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.setSelectedIndex(0);					
				}	
			} 			
			else if(SubClienteBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteSubCliente) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessSubCliente(conSplash);
					
						//this.actualizarParametrosGeneralSubCliente();
						
						this.generarReporteProcesoAccionSubClientesSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(SubClienteBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Sub ClienteS SELECCIONADOS?", "MANTENIMIENTO DE Sub Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessSubCliente();
				
						this.actualizarParametrosGeneralSubCliente();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.subclienteReturnGeneral=subclienteLogic.procesarAccionSubClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.subclienteLogic.getSubClientes(),this.subclienteParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarSubClienteReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralSubCliente();
					
					SubClienteBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarSubClienteReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesSubCliente.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormSubCliente.jComboBoxTiposAccionesFormularioSubCliente.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessSubCliente(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesSubClienteActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessSubCliente();
			
			if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();		
			SubCliente subcliente=new SubCliente();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingSubCliente(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesSubCliente.getSelectedItem();
			
			
			
			
			subclientesSeleccionados=this.getSubClientesSeleccionados(true);
			//this.sTipoAccion;
			
			if(subclientesSeleccionados.size()==1) {
				for(SubCliente subclienteAux:subclientesSeleccionados) {
					subcliente=subclienteAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Factura")) {
					jButtonFacturaActionPerformed(null,rowIndex,true,false,subcliente);
				}
				else if(this.sTipoRelacion.equals("Consignacion")) {
					jButtonConsignacionActionPerformed(null,rowIndex,true,false,subcliente);
				}
				else if(this.sTipoRelacion.equals("Guia Remision")) {
					jButtonGuiaRemisionActionPerformed(null,rowIndex,true,false,subcliente);
				}
				else if(this.sTipoRelacion.equals("Proforma")) {
					jButtonProformaActionPerformed(null,rowIndex,true,false,subcliente);
				}
				else if(this.sTipoRelacion.equals("Pedido Exportacion")) {
					jButtonPedidoExporActionPerformed(null,rowIndex,true,false,subcliente);
				}
				else if(this.sTipoRelacion.equals("Pedido")) {
					jButtonPedidoActionPerformed(null,rowIndex,true,false,subcliente);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessSubCliente();
			
      		//this.finishProcessSubCliente(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarSubClienteReturnGeneral() throws Exception {
		if(this.subclienteReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.subclienteReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.subclienteReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.subclienteReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.subclienteReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.subclienteReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingSubCliente(false);
		}
		
		if(this.subclienteReturnGeneral.getConRetornoLista() || this.subclienteReturnGeneral.getConRetornoObjeto()) {
			if(this.subclienteReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.subclienteLogic.setSubClientes(this.subclienteReturnGeneral.getSubClientes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.subclienteReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.subclienteLogic.setSubCliente(this.subclienteReturnGeneral.getSubCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingSubCliente(false);
		}
	}
	
	public void actualizarParametrosGeneralSubCliente() throws Exception {
		
		
	}
	
	public ArrayList<SubCliente> getSubClientesSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioSubCliente) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(SubCliente subclienteAux:subclienteLogic.getSubClientes()) {
					if(subclienteAux.getIsSelected()) {
						subclientesSeleccionados.add(subclienteAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(SubCliente subclienteAux:this.subclientes) {
					if(subclienteAux.getIsSelected()) {
						subclientesSeleccionados.add(subclienteAux);				
					}
				}
			}
			
			if(subclientesSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						subclientesSeleccionados.addAll(this.subclienteLogic.getSubClientes());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						subclientesSeleccionados.addAll(this.subclientes);				
					}
				}
			}
		} else {
			subclientesSeleccionados.add(this.subcliente);
		}
		
		return subclientesSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteSubClientesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalSubClientesSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoSubClientesSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoSubClientesSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoSubClientesSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesSubClientesSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Sub Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesSubClientesSeleccionados() throws Exception {
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();		
		
		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteSubClientes("Todos",subclientesSeleccionados);
		
	}	
	
	public void generarReporteNormalSubClientesSeleccionados() throws Exception {
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();		
		
		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteSubClientes("Todos",subclientesSeleccionados);
	}		
	
	public void generarReporteProcesoAccionSubClientesSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();
		
		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteSubClientes("Todos",subclientesSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoSubClientesSeleccionados() throws Exception {
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();		
		
		
		this.abrirInicializarFrameReporteDinamicoSubCliente();
		
		
		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoSubCliente();
		
		
		//this.generarReporteSubClientes("Todos",subclientesSeleccionados ,subclienteImplementable,subclienteImplementableHome);
	}
	
	public void mostrarImportacionSubClientes() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionSubCliente();
		
		this.abrirFrameImportacionSubCliente();		
		
			
		//this.generarReporteSubClientes("Todos",subclientesSeleccionados ,subclienteImplementable,subclienteImplementableHome);
	}
	
	public void importarSubClientes() throws Exception {		
	
	}
	
	public void exportarSubClientesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelSubClientesSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoSubClientesSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlSubClientesSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Sub Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoSubClientesSeleccionados() throws Exception {
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();		
		
		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"subcliente."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarSubCliente(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(SubCliente subclienteAux:subclientesSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarSubCliente(subclienteAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//subclienteAux.setsDetalleGeneralEntityReporte(subclienteAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.subclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarSubCliente(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDENTIFICACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_APELLIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_DIRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_TELEFONO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_NUMEROCELULAR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_MAIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_OBSERVACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDPAIS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDCIUDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDZONA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDTIPOGENERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_NUMEROCARGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_LIMITECREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_DESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_VALORCONTRATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_FECHAINICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_FECHAFIN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=SubClienteConstantesFunciones.LABEL_PLAZO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarSubCliente(SubCliente subcliente,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=subcliente.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.gettipoidentificacion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getidentificacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getapellido();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getnombre_completo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getdireccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.gettelefono();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getnumero_celular();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getmail();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getfecha_nacimiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getfechao().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getobservacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getpais_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getciudad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getzona_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getpaisnacionalidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.gettipogenero_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getestadocivil_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getestadolegal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.gettiponiveledu_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getpath_imagen_firma();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getnumero_carga().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getlimite_credito().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getdescuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getcodigo_contrato();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getvalor_contrato().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getfecha_inicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getfecha_fin().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=subcliente.getplazo().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelSubClientesSeleccionados() throws Exception {
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();		
		
		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"subcliente.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("SubClientes");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelSubCliente(row);				
				iRow++;
			}				
			
			for(SubCliente subclienteAux:subclientesSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelSubCliente(subclienteAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.subclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlSubClientesSeleccionados() throws Exception {
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();		
		
		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"subcliente.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("subclientes");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("subcliente");
			//elementRoot.appendChild(element);
		
			for(SubCliente subclienteAux:subclientesSeleccionados) {
				element = document.createElement("subcliente");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlSubCliente(subclienteAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.subclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Sub Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelSubCliente(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDENTIFICACION);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_APELLIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_DIRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_TELEFONO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_NUMEROCELULAR);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_MAIL);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_OBSERVACION);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDPAIS);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDCIUDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDZONA);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDTIPOGENERO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_NUMEROCARGA);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_LIMITECREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_DESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_VALORCONTRATO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHAINICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_FECHAFIN);
		cell = row.createCell(iColumn++);cell.setCellValue(SubClienteConstantesFunciones.LABEL_PLAZO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelSubCliente(SubCliente subcliente,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.gettipoidentificacion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getidentificacion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getapellido());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getnombre_completo());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getdireccion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.gettelefono());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getnumero_celular());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getmail());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getfecha_nacimiento());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getfechao());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getobservacion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getpais_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getciudad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getzona_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getpaisnacionalidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.gettipogenero_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getestadocivil_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getestadolegal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.gettiponiveledu_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getpath_imagen_firma());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getnumero_carga());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getlimite_credito());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getdescuento());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getcodigo_contrato());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getvalor_contrato());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getfecha_inicio());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getfecha_fin());
		cell = row.createCell(iColumn++);cell.setCellValue(subcliente.getplazo());				
	}
	
	public void setFilaDatosExportarXmlSubCliente(SubCliente subcliente,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(SubClienteConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(subcliente.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(SubClienteConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(subcliente.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(SubClienteConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(subcliente.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementcliente_descripcion = document.createElement(SubClienteConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(subcliente.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementsucursal_descripcion = document.createElement(SubClienteConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(subcliente.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementtipoidentificacion_descripcion = document.createElement(SubClienteConstantesFunciones.IDTIPOIDENTIFICACION);
		elementtipoidentificacion_descripcion.appendChild(document.createTextNode(subcliente.gettipoidentificacion_descripcion()));
		element.appendChild(elementtipoidentificacion_descripcion);

		Element elementidentificacion = document.createElement(SubClienteConstantesFunciones.IDENTIFICACION);
		elementidentificacion.appendChild(document.createTextNode(subcliente.getidentificacion().trim()));
		element.appendChild(elementidentificacion);

		Element elementruc = document.createElement(SubClienteConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(subcliente.getruc().trim()));
		element.appendChild(elementruc);

		Element elementnombre = document.createElement(SubClienteConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(subcliente.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementapellido = document.createElement(SubClienteConstantesFunciones.APELLIDO);
		elementapellido.appendChild(document.createTextNode(subcliente.getapellido().trim()));
		element.appendChild(elementapellido);

		Element elementnombre_completo = document.createElement(SubClienteConstantesFunciones.NOMBRECOMPLETO);
		elementnombre_completo.appendChild(document.createTextNode(subcliente.getnombre_completo().trim()));
		element.appendChild(elementnombre_completo);

		Element elementdireccion = document.createElement(SubClienteConstantesFunciones.DIRECCION);
		elementdireccion.appendChild(document.createTextNode(subcliente.getdireccion().trim()));
		element.appendChild(elementdireccion);

		Element elementtelefono = document.createElement(SubClienteConstantesFunciones.TELEFONO);
		elementtelefono.appendChild(document.createTextNode(subcliente.gettelefono().trim()));
		element.appendChild(elementtelefono);

		Element elementnumero_celular = document.createElement(SubClienteConstantesFunciones.NUMEROCELULAR);
		elementnumero_celular.appendChild(document.createTextNode(subcliente.getnumero_celular().trim()));
		element.appendChild(elementnumero_celular);

		Element elementmail = document.createElement(SubClienteConstantesFunciones.MAIL);
		elementmail.appendChild(document.createTextNode(subcliente.getmail().trim()));
		element.appendChild(elementmail);

		Element elementfecha_nacimiento = document.createElement(SubClienteConstantesFunciones.FECHANACIMIENTO);
		elementfecha_nacimiento.appendChild(document.createTextNode(subcliente.getfecha_nacimiento().toString().trim()));
		element.appendChild(elementfecha_nacimiento);

		Element elementfechao = document.createElement(SubClienteConstantesFunciones.FECHA);
		elementfechao.appendChild(document.createTextNode(subcliente.getfechao().toString().trim()));
		element.appendChild(elementfechao);

		Element elementobservacion = document.createElement(SubClienteConstantesFunciones.OBSERVACION);
		elementobservacion.appendChild(document.createTextNode(subcliente.getobservacion().trim()));
		element.appendChild(elementobservacion);

		Element elementpais_descripcion = document.createElement(SubClienteConstantesFunciones.IDPAIS);
		elementpais_descripcion.appendChild(document.createTextNode(subcliente.getpais_descripcion()));
		element.appendChild(elementpais_descripcion);

		Element elementciudad_descripcion = document.createElement(SubClienteConstantesFunciones.IDCIUDAD);
		elementciudad_descripcion.appendChild(document.createTextNode(subcliente.getciudad_descripcion()));
		element.appendChild(elementciudad_descripcion);

		Element elementzona_descripcion = document.createElement(SubClienteConstantesFunciones.IDZONA);
		elementzona_descripcion.appendChild(document.createTextNode(subcliente.getzona_descripcion()));
		element.appendChild(elementzona_descripcion);

		Element elementpaisnacionalidad_descripcion = document.createElement(SubClienteConstantesFunciones.IDPAISNACIONALIDAD);
		elementpaisnacionalidad_descripcion.appendChild(document.createTextNode(subcliente.getpaisnacionalidad_descripcion()));
		element.appendChild(elementpaisnacionalidad_descripcion);

		Element elementtipogenero_descripcion = document.createElement(SubClienteConstantesFunciones.IDTIPOGENERO);
		elementtipogenero_descripcion.appendChild(document.createTextNode(subcliente.gettipogenero_descripcion()));
		element.appendChild(elementtipogenero_descripcion);

		Element elementestadocivil_descripcion = document.createElement(SubClienteConstantesFunciones.IDESTADOCIVIL);
		elementestadocivil_descripcion.appendChild(document.createTextNode(subcliente.getestadocivil_descripcion()));
		element.appendChild(elementestadocivil_descripcion);

		Element elementestadolegal_descripcion = document.createElement(SubClienteConstantesFunciones.IDESTADOLEGAL);
		elementestadolegal_descripcion.appendChild(document.createTextNode(subcliente.getestadolegal_descripcion()));
		element.appendChild(elementestadolegal_descripcion);

		Element elementtiponiveledu_descripcion = document.createElement(SubClienteConstantesFunciones.IDTIPONIVELEDU);
		elementtiponiveledu_descripcion.appendChild(document.createTextNode(subcliente.gettiponiveledu_descripcion()));
		element.appendChild(elementtiponiveledu_descripcion);

		Element elementpath_imagen_firma = document.createElement(SubClienteConstantesFunciones.PATHIMAGENFIRMA);
		elementpath_imagen_firma.appendChild(document.createTextNode(subcliente.getpath_imagen_firma().trim()));
		element.appendChild(elementpath_imagen_firma);

		Element elementcuentacontable_descripcion = document.createElement(SubClienteConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(subcliente.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementnumero_carga = document.createElement(SubClienteConstantesFunciones.NUMEROCARGA);
		elementnumero_carga.appendChild(document.createTextNode(subcliente.getnumero_carga().toString().trim()));
		element.appendChild(elementnumero_carga);

		Element elementlimite_credito = document.createElement(SubClienteConstantesFunciones.LIMITECREDITO);
		elementlimite_credito.appendChild(document.createTextNode(subcliente.getlimite_credito().toString().trim()));
		element.appendChild(elementlimite_credito);

		Element elementdescuento = document.createElement(SubClienteConstantesFunciones.DESCUENTO);
		elementdescuento.appendChild(document.createTextNode(subcliente.getdescuento().toString().trim()));
		element.appendChild(elementdescuento);

		Element elementcodigo_contrato = document.createElement(SubClienteConstantesFunciones.CODIGOCONTRATO);
		elementcodigo_contrato.appendChild(document.createTextNode(subcliente.getcodigo_contrato().trim()));
		element.appendChild(elementcodigo_contrato);

		Element elementvalor_contrato = document.createElement(SubClienteConstantesFunciones.VALORCONTRATO);
		elementvalor_contrato.appendChild(document.createTextNode(subcliente.getvalor_contrato().toString().trim()));
		element.appendChild(elementvalor_contrato);

		Element elementfecha_inicio = document.createElement(SubClienteConstantesFunciones.FECHAINICIO);
		elementfecha_inicio.appendChild(document.createTextNode(subcliente.getfecha_inicio().toString().trim()));
		element.appendChild(elementfecha_inicio);

		Element elementfecha_fin = document.createElement(SubClienteConstantesFunciones.FECHAFIN);
		elementfecha_fin.appendChild(document.createTextNode(subcliente.getfecha_fin().toString().trim()));
		element.appendChild(elementfecha_fin);

		Element elementplazo = document.createElement(SubClienteConstantesFunciones.PLAZO);
		elementplazo.appendChild(document.createTextNode(subcliente.getplazo().toString().trim()));
		element.appendChild(elementplazo);
	}
	
	public void generarReporteGroupGenericoSubClientesSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<SubCliente> subclientesSeleccionados=new ArrayList<SubCliente>();
		
		subclientesSeleccionados=this.getSubClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoSubCliente(subclientesSeleccionados);
		
		this.generarReporteSubClientes("Todos",subclientesSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoSubCliente(ArrayList<SubCliente> subclientesSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(SubCliente subclienteAux:subclientesSeleccionados) {
				subclienteAux.setsDetalleGeneralEntityReporte(subclienteAux.toString());
			
				if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.gettipoidentificacion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDENTIFICACION)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getidentificacion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_RUC)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_APELLIDO)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getapellido());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NOMBRECOMPLETO)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getnombre_completo());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_DIRECCION)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getdireccion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_TELEFONO)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.gettelefono());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NUMEROCELULAR)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getnumero_celular());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_MAIL)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getmail());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHANACIMIENTO)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(subclienteAux.getfecha_nacimiento()));
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(subclienteAux.getfechao()));
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_OBSERVACION)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getobservacion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDPAIS)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getpais_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDCIUDAD)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getciudad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDZONA)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getzona_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getpaisnacionalidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDTIPOGENERO)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.gettipogenero_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDESTADOCIVIL)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getestadocivil_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDESTADOLEGAL)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getestadolegal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDTIPONIVELEDU)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.gettiponiveledu_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getpath_imagen_firma());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_NUMEROCARGA)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getnumero_carga().toString());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_CODIGOCONTRATO)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getcodigo_contrato());
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHAINICIO)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(subclienteAux.getfecha_inicio()));
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_FECHAFIN)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(subclienteAux.getfecha_fin()));
				}
				 else if(sTipoSeleccionar.equals(SubClienteConstantesFunciones.LABEL_PLAZO)) {
					existe=true;
					subclienteAux.setsDescripcionGeneralEntityReporte1(subclienteAux.getplazo().toString());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,SubClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesSubCliente(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoSubCliente=true;
				this.isVisibilidadCeldaNuevoRelacionesSubCliente=true;
				this.isVisibilidadCeldaGuardarCambiosSubCliente=true;
			}
			
			this.isVisibilidadCeldaModificarSubCliente=false;
			this.isVisibilidadCeldaActualizarSubCliente=false;
			this.isVisibilidadCeldaEliminarSubCliente=false;
			this.isVisibilidadCeldaCancelarSubCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSubCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoSubCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=false;
			this.isVisibilidadCeldaGuardarCambiosSubCliente=false;
			this.isVisibilidadCeldaModificarSubCliente=false;
			this.isVisibilidadCeldaActualizarSubCliente=true;
			this.isVisibilidadCeldaEliminarSubCliente=false;
			this.isVisibilidadCeldaCancelarSubCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSubCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoSubCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=false;
			this.isVisibilidadCeldaGuardarCambiosSubCliente=false;
			this.isVisibilidadCeldaModificarSubCliente=false;
			this.isVisibilidadCeldaActualizarSubCliente=true;
			this.isVisibilidadCeldaEliminarSubCliente=true;
			this.isVisibilidadCeldaCancelarSubCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSubCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoSubCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=false;
			this.isVisibilidadCeldaGuardarCambiosSubCliente=false;
			this.isVisibilidadCeldaModificarSubCliente=false;
			this.isVisibilidadCeldaActualizarSubCliente=true;
			this.isVisibilidadCeldaEliminarSubCliente=false;
			this.isVisibilidadCeldaCancelarSubCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoSubCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=true;
			this.isVisibilidadCeldaGuardarCambiosSubCliente=true;
			this.isVisibilidadCeldaModificarSubCliente=false;
			this.isVisibilidadCeldaActualizarSubCliente=false;
			this.isVisibilidadCeldaEliminarSubCliente=false;
			this.isVisibilidadCeldaCancelarSubCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSubCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoSubCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=false;
			this.isVisibilidadCeldaGuardarCambiosSubCliente=false;
			this.isVisibilidadCeldaActualizarSubCliente=false;
			this.isVisibilidadCeldaEliminarSubCliente=false;
			this.isVisibilidadCeldaCancelarSubCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoSubCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=false;
			this.isVisibilidadCeldaGuardarCambiosSubCliente=false;
			this.isVisibilidadCeldaModificarSubCliente=true;
			this.isVisibilidadCeldaActualizarSubCliente=false;
			this.isVisibilidadCeldaEliminarSubCliente=false;
			this.isVisibilidadCeldaCancelarSubCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarSubCliente=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(SubClienteJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoSubCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=true;
			this.isVisibilidadCeldaGuardarCambiosSubCliente=true;
		} else {
			this.actualizarEstadoPanelsSubCliente(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarSubCliente=false;
			//this.isVisibilidadCeldaVerFormSubCliente=false;
			this.isVisibilidadCeldaDuplicarSubCliente=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!subclienteSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=false;
		} else {
			this.isVisibilidadCeldaNuevoSubCliente=false;
			this.isVisibilidadCeldaGuardarCambiosSubCliente=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(subclienteSessionBean.getEsGuardarRelacionado()) {
			if(!subclienteSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesSubCliente=false;												
			}
			
			this.jButtonCerrarSubCliente.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesSubCliente=false;
		}
		
		if(!this.permiteMantenimiento(this.subcliente)) {
			this.isVisibilidadCeldaActualizarSubCliente=false;
			this.isVisibilidadCeldaEliminarSubCliente=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesSubCliente() {
		this.isVisibilidadCeldaNuevoSubCliente=false;
		this.isVisibilidadCeldaGuardarCambiosSubCliente=false;
	}
	
	public void actualizarEstadoPanelsSubCliente(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionSubCliente!=null) {
				this.jScrollPanelDatosEdicionSubCliente.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSubCliente!=null) {
				this.jTabbedPaneBusquedasSubCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosSubCliente!=null) {
				this.jScrollPanelDatosSubCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionSubCliente!=null) {
				this.jPanelPaginacionSubCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSubCliente!=null) {
				this.jPanelParametrosReportesSubCliente.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionSubCliente!=null) {
				this.jScrollPanelDatosEdicionSubCliente.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSubCliente!=null) {
				this.jTabbedPaneBusquedasSubCliente.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosSubCliente!=null) {
				this.jScrollPanelDatosSubCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionSubCliente!=null) {
				this.jPanelPaginacionSubCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesSubCliente!=null) {
				this.jPanelParametrosReportesSubCliente.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionSubCliente!=null) {
				this.jScrollPanelDatosEdicionSubCliente.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSubCliente!=null) {
				this.jTabbedPaneBusquedasSubCliente.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosSubCliente!=null) {
				this.jScrollPanelDatosSubCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionSubCliente!=null) {
				this.jPanelPaginacionSubCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesSubCliente!=null) {
				this.jPanelParametrosReportesSubCliente.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionSubCliente!=null) {
				this.jScrollPanelDatosEdicionSubCliente.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSubCliente!=null) {
				this.jTabbedPaneBusquedasSubCliente.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosSubCliente!=null) {
				this.jScrollPanelDatosSubCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionSubCliente!=null) {
				this.jPanelPaginacionSubCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesSubCliente!=null) {
				this.jPanelParametrosReportesSubCliente.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionSubCliente!=null) {
				this.jScrollPanelDatosEdicionSubCliente.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSubCliente!=null) {
				this.jTabbedPaneBusquedasSubCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosSubCliente!=null) {
				this.jScrollPanelDatosSubCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionSubCliente!=null) {
				this.jPanelPaginacionSubCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSubCliente!=null) {
				this.jPanelParametrosReportesSubCliente.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionSubCliente!=null) {
				this.jScrollPanelDatosEdicionSubCliente.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSubCliente!=null) {
				this.jTabbedPaneBusquedasSubCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosSubCliente!=null) {
				this.jScrollPanelDatosSubCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionSubCliente!=null) {
				this.jPanelPaginacionSubCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSubCliente!=null) {
				this.jPanelParametrosReportesSubCliente.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionSubCliente!=null) {
				this.jScrollPanelDatosEdicionSubCliente.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSubCliente!=null) {
				this.jTabbedPaneBusquedasSubCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosSubCliente!=null) {
				this.jScrollPanelDatosSubCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionSubCliente!=null) {
				this.jPanelPaginacionSubCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesSubCliente!=null) {
				this.jPanelParametrosReportesSubCliente.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.subclienteSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasSubCliente!=null) {
					this.jTabbedPaneBusquedasSubCliente.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesSubCliente!=null) {
				this.jPanelParametrosReportesSubCliente.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.subclienteSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasSubCliente!=null) {
				this.jTabbedPaneBusquedasSubCliente.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesSubCliente!=null) {
				this.jPanelParametrosReportesSubCliente.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorIdentificacion=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadBusquedaPorIdentificacion=isParaClienteNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaClienteNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaClienteNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadBusquedaPorIdentificacion=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoIdentificacion(Boolean isParaTipoIdentificacion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoIdentificacionNegation=!isParaTipoIdentificacion;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaTipoIdentificacion;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaPais(Boolean isParaPais){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNegation=!isParaPais;

			this.isVisibilidadBusquedaPorIdentificacion=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaCiudad(Boolean isParaCiudad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCiudadNegation=!isParaCiudad;

			this.isVisibilidadBusquedaPorIdentificacion=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaZona(Boolean isParaZona){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaZonaNegation=!isParaZona;

			this.isVisibilidadBusquedaPorIdentificacion=isParaZonaNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaZonaNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaZonaNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaPaisNacionalidad(Boolean isParaPaisNacionalidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNacionalidadNegation=!isParaPaisNacionalidad;

			this.isVisibilidadBusquedaPorIdentificacion=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoGenero(Boolean isParaTipoGenero){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoGeneroNegation=!isParaTipoGenero;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoGeneroNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoGeneroNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaTipoGeneroNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoCivil(Boolean isParaEstadoCivil){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoCivilNegation=!isParaEstadoCivil;

			this.isVisibilidadBusquedaPorIdentificacion=isParaEstadoCivilNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaEstadoCivilNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaEstadoCivilNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEstadoCivil;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoLegal(Boolean isParaEstadoLegal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoLegalNegation=!isParaEstadoLegal;

			this.isVisibilidadBusquedaPorIdentificacion=isParaEstadoLegalNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaEstadoLegalNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaEstadoLegalNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEstadoLegal;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoNivelEdu(Boolean isParaTipoNivelEdu){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoNivelEduNegation=!isParaTipoNivelEdu;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadBusquedaPorIdentificacion=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorIdentificacionSubCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorNombreCompletoSubCliente);}

			this.isVisibilidadBusquedaPorRuc=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorRuc) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelBusquedaPorRucSubCliente);}

			this.isVisibilidadFK_IdCliente=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdClienteSubCliente);}

			this.isVisibilidadFK_IdEstadoCivil=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoCivilSubCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdEstadoLegalSubCliente);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasSubCliente.remove(jPanelFK_IdTipoIdentificacionSubCliente);}
		}
		
	}
	
	

	public String registrarSesionSubClienteParaFacturas() throws Exception {
		Boolean isPaginaPopupFactura=false;

		try {

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormSubCliente.facturaSessionBean==null) {
				this.jInternalFrameDetalleFormSubCliente.facturaSessionBean=new FacturaSessionBean();
			}

			this.jInternalFrameDetalleFormSubCliente.facturaSessionBean.setsPathNavegacionActual(subclienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FacturaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormSubCliente.facturaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFactura=this.jInternalFrameDetalleFormSubCliente.facturaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormSubCliente.facturaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFactura(true);
			this.jInternalFrameDetalleFormSubCliente.facturaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFactura(SubClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormSubCliente.facturaSessionBean.setisBusquedaDesdeForeignKeySesionSubCliente(true);
			this.jInternalFrameDetalleFormSubCliente.facturaSessionBean.setlidSubClienteActual(this.idSubClienteActual);

			subclienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySubCliente(true);
			subclienteSessionBean.setlIdSubClienteActualForeignKey(this.idSubClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionSubClienteParaConsignacions() throws Exception {
		Boolean isPaginaPopupConsignacion=false;

		try {

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormSubCliente.consignacionSessionBean==null) {
				this.jInternalFrameDetalleFormSubCliente.consignacionSessionBean=new ConsignacionSessionBean();
			}

			this.jInternalFrameDetalleFormSubCliente.consignacionSessionBean.setsPathNavegacionActual(subclienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ConsignacionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormSubCliente.consignacionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupConsignacion=this.jInternalFrameDetalleFormSubCliente.consignacionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormSubCliente.consignacionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeConsignacion(true);
			this.jInternalFrameDetalleFormSubCliente.consignacionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeConsignacion(SubClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormSubCliente.consignacionSessionBean.setisBusquedaDesdeForeignKeySesionSubCliente(true);
			this.jInternalFrameDetalleFormSubCliente.consignacionSessionBean.setlidSubClienteActual(this.idSubClienteActual);

			subclienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySubCliente(true);
			subclienteSessionBean.setlIdSubClienteActualForeignKey(this.idSubClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionSubClienteParaGuiaRemisiones() throws Exception {
		Boolean isPaginaPopupGuiaRemision=false;

		try {

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormSubCliente.guiaremisionSessionBean==null) {
				this.jInternalFrameDetalleFormSubCliente.guiaremisionSessionBean=new GuiaRemisionSessionBean();
			}

			this.jInternalFrameDetalleFormSubCliente.guiaremisionSessionBean.setsPathNavegacionActual(subclienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+GuiaRemisionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormSubCliente.guiaremisionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupGuiaRemision=this.jInternalFrameDetalleFormSubCliente.guiaremisionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormSubCliente.guiaremisionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeGuiaRemision(true);
			this.jInternalFrameDetalleFormSubCliente.guiaremisionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeGuiaRemision(SubClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormSubCliente.guiaremisionSessionBean.setisBusquedaDesdeForeignKeySesionSubCliente(true);
			this.jInternalFrameDetalleFormSubCliente.guiaremisionSessionBean.setlidSubClienteActual(this.idSubClienteActual);

			subclienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySubCliente(true);
			subclienteSessionBean.setlIdSubClienteActualForeignKey(this.idSubClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionSubClienteParaProformas() throws Exception {
		Boolean isPaginaPopupProforma=false;

		try {

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormSubCliente.proformaSessionBean==null) {
				this.jInternalFrameDetalleFormSubCliente.proformaSessionBean=new ProformaSessionBean();
			}

			this.jInternalFrameDetalleFormSubCliente.proformaSessionBean.setsPathNavegacionActual(subclienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProformaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormSubCliente.proformaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProforma=this.jInternalFrameDetalleFormSubCliente.proformaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormSubCliente.proformaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProforma(true);
			this.jInternalFrameDetalleFormSubCliente.proformaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProforma(SubClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormSubCliente.proformaSessionBean.setisBusquedaDesdeForeignKeySesionSubCliente(true);
			this.jInternalFrameDetalleFormSubCliente.proformaSessionBean.setlidSubClienteActual(this.idSubClienteActual);

			subclienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySubCliente(true);
			subclienteSessionBean.setlIdSubClienteActualForeignKey(this.idSubClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionSubClienteParaPedidoExpors() throws Exception {
		Boolean isPaginaPopupPedidoExpor=false;

		try {

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormSubCliente.pedidoexporSessionBean==null) {
				this.jInternalFrameDetalleFormSubCliente.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			this.jInternalFrameDetalleFormSubCliente.pedidoexporSessionBean.setsPathNavegacionActual(subclienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PedidoExporConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormSubCliente.pedidoexporSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPedidoExpor=this.jInternalFrameDetalleFormSubCliente.pedidoexporSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormSubCliente.pedidoexporSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePedidoExpor(true);
			this.jInternalFrameDetalleFormSubCliente.pedidoexporSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePedidoExpor(SubClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormSubCliente.pedidoexporSessionBean.setisBusquedaDesdeForeignKeySesionSubCliente(true);
			this.jInternalFrameDetalleFormSubCliente.pedidoexporSessionBean.setlidSubClienteActual(this.idSubClienteActual);

			subclienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySubCliente(true);
			subclienteSessionBean.setlIdSubClienteActualForeignKey(this.idSubClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionSubClienteParaPedidos() throws Exception {
		Boolean isPaginaPopupPedido=false;

		try {

			if(this.subclienteSessionBean==null) {
				this.subclienteSessionBean=new SubClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormSubCliente.pedidoSessionBean==null) {
				this.jInternalFrameDetalleFormSubCliente.pedidoSessionBean=new PedidoSessionBean();
			}

			this.jInternalFrameDetalleFormSubCliente.pedidoSessionBean.setsPathNavegacionActual(subclienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PedidoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormSubCliente.pedidoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPedido=this.jInternalFrameDetalleFormSubCliente.pedidoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormSubCliente.pedidoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePedido(true);
			this.jInternalFrameDetalleFormSubCliente.pedidoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePedido(SubClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormSubCliente.pedidoSessionBean.setisBusquedaDesdeForeignKeySesionSubCliente(true);
			this.jInternalFrameDetalleFormSubCliente.pedidoSessionBean.setlidSubClienteActual(this.idSubClienteActual);

			subclienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySubCliente(true);
			subclienteSessionBean.setlIdSubClienteActualForeignKey(this.idSubClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionSubClienteParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(subclienteSessionBean==null) {
				subclienteSessionBean=new SubClienteSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(subclienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.subclienteFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(SubClienteConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionSubCliente(true);
			//clienteSessionBean.setlidSubClienteActual(this.idSubClienteActual);

			subclienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySubCliente(true);
			subclienteSessionBean.setlIdSubClienteActualForeignKey(this.idSubClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionSubClienteParaBusquedaCuentaContables() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(subclienteSessionBean==null) {
				subclienteSessionBean=new SubClienteSessionBean();
			}

			if(cuentacontableSessionBean==null) {
				cuentacontableSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableSessionBean.setsPathNavegacionActual(subclienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableSessionBean.getisPaginaPopup();
			cuentacontableSessionBean.setisPaginaPopup(false);
			cuentacontableSessionBean.setEstaModoBusqueda(true);
			cuentacontableSessionBean.setsFuncionBusquedaRapida("window.opener.subclienteFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable(TO_REPLACE);");
			cuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(SubClienteConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionSubCliente(true);
			//cuentacontableSessionBean.setlidSubClienteActual(this.idSubClienteActual);

			subclienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeySubCliente(true);
			subclienteSessionBean.setlIdSubClienteActualForeignKey(this.idSubClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//SubClienteSessionBean subclienteSessionBean=new SubClienteSessionBean();
		
		if(this.subclienteSessionBean==null) {
			this.subclienteSessionBean=new SubClienteSessionBean();
		}
		
		this.subclienteSessionBean.setsUltimaBusquedaSubCliente(this.getsAccionBusqueda());
		this.subclienteSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.subclienteSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorIdentificacion")) {
			subclienteSessionBean.setidentificacion(this.getidentificacionBusquedaPorIdentificacion());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorNombreCompleto")) {
			subclienteSessionBean.setnombre_completo(this.getnombre_completoBusquedaPorNombreCompleto());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorRuc")) {
			subclienteSessionBean.setruc(this.getrucBusquedaPorRuc());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			subclienteSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			subclienteSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoCivil")) {
			subclienteSessionBean.setid_estado_civil(this.getid_estado_civilFK_IdEstadoCivil());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoLegal")) {
			subclienteSessionBean.setid_estado_legal(this.getid_estado_legalFK_IdEstadoLegal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			subclienteSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoIdentificacion")) {
			subclienteSessionBean.setid_tipo_identificacion(this.getid_tipo_identificacionFK_IdTipoIdentificacion());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//SubClienteSessionBean subclienteSessionBean=new SubClienteSessionBean();
		
		if(this.subclienteSessionBean==null) {
			this.subclienteSessionBean=new SubClienteSessionBean();
		}
		
		if(this.subclienteSessionBean.getsUltimaBusquedaSubCliente()!=null&&!this.subclienteSessionBean.getsUltimaBusquedaSubCliente().equals("")) {
			this.setsAccionBusqueda(subclienteSessionBean.getsUltimaBusquedaSubCliente());
			this.setiNumeroPaginacion(subclienteSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(subclienteSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorIdentificacion")) {
				this.setidentificacionBusquedaPorIdentificacion(subclienteSessionBean.getidentificacion());
				subclienteSessionBean.setidentificacion("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombreCompleto")) {
				this.setnombre_completoBusquedaPorNombreCompleto(subclienteSessionBean.getnombre_completo());
				subclienteSessionBean.setnombre_completo("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorRuc")) {
				this.setrucBusquedaPorRuc(subclienteSessionBean.getruc());
				subclienteSessionBean.setruc("");
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(subclienteSessionBean.getid_cliente());
				subclienteSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(subclienteSessionBean.getid_empresa());
				subclienteSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoCivil")) {
				this.setid_estado_civilFK_IdEstadoCivil(subclienteSessionBean.getid_estado_civil());
				subclienteSessionBean.setid_estado_civil(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoLegal")) {
				this.setid_estado_legalFK_IdEstadoLegal(subclienteSessionBean.getid_estado_legal());
				subclienteSessionBean.setid_estado_legal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(subclienteSessionBean.getid_sucursal());
				subclienteSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoIdentificacion")) {
				this.setid_tipo_identificacionFK_IdTipoIdentificacion(subclienteSessionBean.getid_tipo_identificacion());
				subclienteSessionBean.setid_tipo_identificacion(-1L);
			}
		}
		
		this.subclienteSessionBean.setsUltimaBusquedaSubCliente("");
		this.subclienteSessionBean.setiNumeroPaginacion(SubClienteConstantesFunciones.INUMEROPAGINACION);
		this.subclienteSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaSubCliente(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioSubCliente() {
		this.updateBorderResaltarBusquedasFormularioSubCliente();
		this.updateVisibilidadBusquedasFormularioSubCliente();
		this.updateHabilitarBusquedasFormularioSubCliente();
	}
	
	public void updateBorderResaltarBusquedasFormularioSubCliente() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasSubCliente.getComponents().length>0) {
	

		if(this.subclienteConstantesFunciones.resaltarBusquedaPorIdentificacionSubCliente!=null) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorIdentificacionSubCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				jPanel.setBorder(this.subclienteConstantesFunciones.resaltarBusquedaPorIdentificacionSubCliente);
			}
		}

		if(this.subclienteConstantesFunciones.resaltarBusquedaPorNombreCompletoSubCliente!=null) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorNombreCompletoSubCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				jPanel.setBorder(this.subclienteConstantesFunciones.resaltarBusquedaPorNombreCompletoSubCliente);
			}
		}

		if(this.subclienteConstantesFunciones.resaltarBusquedaPorRucSubCliente!=null) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorRucSubCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				jPanel.setBorder(this.subclienteConstantesFunciones.resaltarBusquedaPorRucSubCliente);
			}
		}

		if(this.subclienteConstantesFunciones.resaltarFK_IdClienteSubCliente!=null) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdClienteSubCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				jPanel.setBorder(this.subclienteConstantesFunciones.resaltarFK_IdClienteSubCliente);
			}
		}

		if(this.subclienteConstantesFunciones.resaltarFK_IdEstadoCivilSubCliente!=null) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdEstadoCivilSubCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				jPanel.setBorder(this.subclienteConstantesFunciones.resaltarFK_IdEstadoCivilSubCliente);
			}
		}

		if(this.subclienteConstantesFunciones.resaltarFK_IdEstadoLegalSubCliente!=null) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdEstadoLegalSubCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				jPanel.setBorder(this.subclienteConstantesFunciones.resaltarFK_IdEstadoLegalSubCliente);
			}
		}

		if(this.subclienteConstantesFunciones.resaltarFK_IdTipoIdentificacionSubCliente!=null) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdTipoIdentificacionSubCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				jPanel.setBorder(this.subclienteConstantesFunciones.resaltarFK_IdTipoIdentificacionSubCliente);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioSubCliente() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasSubCliente.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorIdentificacionSubCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.subclienteConstantesFunciones.mostrarBusquedaPorIdentificacionSubCliente);
			if(!this.subclienteConstantesFunciones.mostrarBusquedaPorIdentificacionSubCliente && index>-1) {
				this.jTabbedPaneBusquedasSubCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorNombreCompletoSubCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.subclienteConstantesFunciones.mostrarBusquedaPorNombreCompletoSubCliente);
			if(!this.subclienteConstantesFunciones.mostrarBusquedaPorNombreCompletoSubCliente && index>-1) {
				this.jTabbedPaneBusquedasSubCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorRucSubCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.subclienteConstantesFunciones.mostrarBusquedaPorRucSubCliente);
			if(!this.subclienteConstantesFunciones.mostrarBusquedaPorRucSubCliente && index>-1) {
				this.jTabbedPaneBusquedasSubCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdClienteSubCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.subclienteConstantesFunciones.mostrarFK_IdClienteSubCliente);
			if(!this.subclienteConstantesFunciones.mostrarFK_IdClienteSubCliente && index>-1) {
				this.jTabbedPaneBusquedasSubCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdEstadoCivilSubCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.subclienteConstantesFunciones.mostrarFK_IdEstadoCivilSubCliente);
			if(!this.subclienteConstantesFunciones.mostrarFK_IdEstadoCivilSubCliente && index>-1) {
				this.jTabbedPaneBusquedasSubCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdEstadoLegalSubCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.subclienteConstantesFunciones.mostrarFK_IdEstadoLegalSubCliente);
			if(!this.subclienteConstantesFunciones.mostrarFK_IdEstadoLegalSubCliente && index>-1) {
				this.jTabbedPaneBusquedasSubCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdTipoIdentificacionSubCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.subclienteConstantesFunciones.mostrarFK_IdTipoIdentificacionSubCliente);
			if(!this.subclienteConstantesFunciones.mostrarFK_IdTipoIdentificacionSubCliente && index>-1) {
				this.jTabbedPaneBusquedasSubCliente.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioSubCliente() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasSubCliente.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorIdentificacionSubCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.subclienteConstantesFunciones.activarBusquedaPorIdentificacionSubCliente);
				this.jTabbedPaneBusquedasSubCliente.setEnabledAt(index,this.subclienteConstantesFunciones.activarBusquedaPorIdentificacionSubCliente);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorNombreCompletoSubCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.subclienteConstantesFunciones.activarBusquedaPorNombreCompletoSubCliente);
				this.jTabbedPaneBusquedasSubCliente.setEnabledAt(index,this.subclienteConstantesFunciones.activarBusquedaPorNombreCompletoSubCliente);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorRucSubCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.subclienteConstantesFunciones.activarBusquedaPorRucSubCliente);
				this.jTabbedPaneBusquedasSubCliente.setEnabledAt(index,this.subclienteConstantesFunciones.activarBusquedaPorRucSubCliente);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdClienteSubCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.subclienteConstantesFunciones.activarFK_IdClienteSubCliente);
				this.jTabbedPaneBusquedasSubCliente.setEnabledAt(index,this.subclienteConstantesFunciones.activarFK_IdClienteSubCliente);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdEstadoCivilSubCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.subclienteConstantesFunciones.activarFK_IdEstadoCivilSubCliente);
				this.jTabbedPaneBusquedasSubCliente.setEnabledAt(index,this.subclienteConstantesFunciones.activarFK_IdEstadoCivilSubCliente);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdEstadoLegalSubCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.subclienteConstantesFunciones.activarFK_IdEstadoLegalSubCliente);
				this.jTabbedPaneBusquedasSubCliente.setEnabledAt(index,this.subclienteConstantesFunciones.activarFK_IdEstadoLegalSubCliente);
			}

			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdTipoIdentificacionSubCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.subclienteConstantesFunciones.activarFK_IdTipoIdentificacionSubCliente);
				this.jTabbedPaneBusquedasSubCliente.setEnabledAt(index,this.subclienteConstantesFunciones.activarFK_IdTipoIdentificacionSubCliente);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaSubCliente(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorIdentificacion")) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorIdentificacionSubCliente);

			this.jTabbedPaneBusquedasSubCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);

			this.subclienteConstantesFunciones.setResaltarBusquedaPorIdentificacionSubCliente(resaltar);

			jPanel.setBorder(this.subclienteConstantesFunciones.resaltarBusquedaPorIdentificacionSubCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorNombreCompleto")) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorNombreCompletoSubCliente);

			this.jTabbedPaneBusquedasSubCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);

			this.subclienteConstantesFunciones.setResaltarBusquedaPorNombreCompletoSubCliente(resaltar);

			jPanel.setBorder(this.subclienteConstantesFunciones.resaltarBusquedaPorNombreCompletoSubCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorRuc")) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelBusquedaPorRucSubCliente);

			this.jTabbedPaneBusquedasSubCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);

			this.subclienteConstantesFunciones.setResaltarBusquedaPorRucSubCliente(resaltar);

			jPanel.setBorder(this.subclienteConstantesFunciones.resaltarBusquedaPorRucSubCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdClienteSubCliente);

			this.jTabbedPaneBusquedasSubCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);

			this.subclienteConstantesFunciones.setResaltarFK_IdClienteSubCliente(resaltar);

			jPanel.setBorder(this.subclienteConstantesFunciones.resaltarFK_IdClienteSubCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoCivil")) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdEstadoCivilSubCliente);

			this.jTabbedPaneBusquedasSubCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);

			this.subclienteConstantesFunciones.setResaltarFK_IdEstadoCivilSubCliente(resaltar);

			jPanel.setBorder(this.subclienteConstantesFunciones.resaltarFK_IdEstadoCivilSubCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoLegal")) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdEstadoLegalSubCliente);

			this.jTabbedPaneBusquedasSubCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);

			this.subclienteConstantesFunciones.setResaltarFK_IdEstadoLegalSubCliente(resaltar);

			jPanel.setBorder(this.subclienteConstantesFunciones.resaltarFK_IdEstadoLegalSubCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoIdentificacion")) {
			index= this.jTabbedPaneBusquedasSubCliente.indexOfComponent(this.jPanelFK_IdTipoIdentificacionSubCliente);

			this.jTabbedPaneBusquedasSubCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasSubCliente.getComponent(index);

			this.subclienteConstantesFunciones.setResaltarFK_IdTipoIdentificacionSubCliente(resaltar);

			jPanel.setBorder(this.subclienteConstantesFunciones.resaltarFK_IdTipoIdentificacionSubCliente);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarSubCliente.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioSubCliente() throws Exception {

		if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioSubCliente();
		this.updateVisibilidadResaltarControlesFormularioSubCliente();
		this.updateHabilitarResaltarControlesFormularioSubCliente();
		
	}
	
	public void updateBorderResaltarControlesFormularioSubCliente() throws Exception {
		if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.subclienteConstantesFunciones.resaltaridSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.setBorder(this.subclienteConstantesFunciones.resaltaridSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_empresaSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_empresaSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_clienteSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_clienteSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_sucursalSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_sucursalSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_tipo_identificacionSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_tipo_identificacionSubCliente);}
		if(this.subclienteConstantesFunciones.resaltaridentificacionSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextFieldidentificacionSubCliente.setBorder(this.subclienteConstantesFunciones.resaltaridentificacionSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarrucSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextFieldrucSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarrucSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarnombreSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextAreanombreSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarnombreSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarapellidoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextAreaapellidoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarapellidoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarnombre_completoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextAreanombre_completoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarnombre_completoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltardireccionSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextAreadireccionSubCliente.setBorder(this.subclienteConstantesFunciones.resaltardireccionSubCliente);}
		if(this.subclienteConstantesFunciones.resaltartelefonoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextAreatelefonoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltartelefonoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarnumero_celularSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextAreanumero_celularSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarnumero_celularSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarmailSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextAreamailSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarmailSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarfecha_nacimientoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_nacimientoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarfecha_nacimientoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarfechaoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jDateChooserfechaoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarfechaoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarobservacionSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextAreaobservacionSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarobservacionSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_paisSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_paisSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_ciudadSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_ciudadSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_zonaSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_zonaSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_pais_nacionalidadSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_pais_nacionalidadSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_tipo_generoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_tipo_generoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_estado_civilSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_estado_civilSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_estado_legalSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_estado_legalSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_tipo_nivel_eduSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_tipo_nivel_eduSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarpath_imagen_firmaSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextAreapath_imagen_firmaSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarpath_imagen_firmaSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarid_cuenta_contableSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarid_cuenta_contableSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarnumero_cargaSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextFieldnumero_cargaSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarnumero_cargaSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarlimite_creditoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextFieldlimite_creditoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarlimite_creditoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltardescuentoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextFielddescuentoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltardescuentoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarcodigo_contratoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextFieldcodigo_contratoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarcodigo_contratoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarvalor_contratoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextFieldvalor_contratoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarvalor_contratoSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarfecha_inicioSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_inicioSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarfecha_inicioSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarfecha_finSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_finSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarfecha_finSubCliente);}
		if(this.subclienteConstantesFunciones.resaltarplazoSubCliente!=null && this.jInternalFrameDetalleFormSubCliente!=null) {this.jInternalFrameDetalleFormSubCliente.jTextFieldplazoSubCliente.setBorder(this.subclienteConstantesFunciones.resaltarplazoSubCliente);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioSubCliente() throws Exception {		
		if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) {
	
		//this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.setVisible(this.subclienteConstantesFunciones.mostraridSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelidSubCliente.setVisible(this.subclienteConstantesFunciones.mostraridSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_empresaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_empresaSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_empresaSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_clienteSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_clienteSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_clienteSubCliente);
			this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_clienteSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_sucursalSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_sucursalSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_sucursalSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_tipo_identificacionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_tipo_identificacionSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_tipo_identificacionSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextFieldidentificacionSubCliente.setVisible(this.subclienteConstantesFunciones.mostraridentificacionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelidentificacionSubCliente.setVisible(this.subclienteConstantesFunciones.mostraridentificacionSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextFieldrucSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarrucSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelrucSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarrucSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextAreanombreSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarnombreSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelnombreSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarnombreSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextAreaapellidoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarapellidoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelapellidoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarapellidoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextAreanombre_completoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarnombre_completoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelnombre_completoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarnombre_completoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextAreadireccionSubCliente.setVisible(this.subclienteConstantesFunciones.mostrardireccionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPaneldireccionSubCliente.setVisible(this.subclienteConstantesFunciones.mostrardireccionSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextAreatelefonoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrartelefonoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPaneltelefonoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrartelefonoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextAreanumero_celularSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarnumero_celularSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelnumero_celularSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarnumero_celularSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextAreamailSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarmailSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelmailSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarmailSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_nacimientoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarfecha_nacimientoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelfecha_nacimientoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarfecha_nacimientoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jDateChooserfechaoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarfechaoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelfechaoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarfechaoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextAreaobservacionSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarobservacionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelobservacionSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarobservacionSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_paisSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_paisSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_paisSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_ciudadSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_ciudadSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_ciudadSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_zonaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_zonaSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_zonaSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_pais_nacionalidadSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_pais_nacionalidadSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_pais_nacionalidadSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_tipo_generoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_tipo_generoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_tipo_generoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_estado_civilSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_estado_civilSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_estado_civilSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_estado_legalSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_estado_legalSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_estado_legalSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_tipo_nivel_eduSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_tipo_nivel_eduSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_tipo_nivel_eduSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextAreapath_imagen_firmaSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarpath_imagen_firmaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelpath_imagen_firmaSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarpath_imagen_firmaSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_cuenta_contableSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelid_cuenta_contableSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_cuenta_contableSubCliente);
			this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarid_cuenta_contableSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextFieldnumero_cargaSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarnumero_cargaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelnumero_cargaSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarnumero_cargaSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextFieldlimite_creditoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarlimite_creditoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanellimite_creditoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarlimite_creditoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextFielddescuentoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrardescuentoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPaneldescuentoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrardescuentoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextFieldcodigo_contratoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarcodigo_contratoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelcodigo_contratoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarcodigo_contratoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextFieldvalor_contratoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarvalor_contratoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelvalor_contratoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarvalor_contratoSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_inicioSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarfecha_inicioSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelfecha_inicioSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarfecha_inicioSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_finSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarfecha_finSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelfecha_finSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarfecha_finSubCliente);
		//this.jInternalFrameDetalleFormSubCliente.jTextFieldplazoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarplazoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jPanelplazoSubCliente.setVisible(this.subclienteConstantesFunciones.mostrarplazoSubCliente);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioSubCliente() throws Exception {
		if(this.jInternalFrameDetalleFormSubCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormSubCliente!=null) {
	
		this.jInternalFrameDetalleFormSubCliente.jLabelidSubCliente.setEnabled(this.subclienteConstantesFunciones.activaridSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_empresaSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_empresaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_clienteSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_clienteSubCliente);
			this.jInternalFrameDetalleFormSubCliente.jButtonid_clienteSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_clienteSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_sucursalSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_sucursalSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_identificacionSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_tipo_identificacionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldidentificacionSubCliente.setEnabled(this.subclienteConstantesFunciones.activaridentificacionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldrucSubCliente.setEnabled(this.subclienteConstantesFunciones.activarrucSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreanombreSubCliente.setEnabled(this.subclienteConstantesFunciones.activarnombreSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreaapellidoSubCliente.setEnabled(this.subclienteConstantesFunciones.activarapellidoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreanombre_completoSubCliente.setEnabled(this.subclienteConstantesFunciones.activarnombre_completoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreadireccionSubCliente.setEnabled(this.subclienteConstantesFunciones.activardireccionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreatelefonoSubCliente.setEnabled(this.subclienteConstantesFunciones.activartelefonoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreanumero_celularSubCliente.setEnabled(this.subclienteConstantesFunciones.activarnumero_celularSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreamailSubCliente.setEnabled(this.subclienteConstantesFunciones.activarmailSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_nacimientoSubCliente.setEnabled(this.subclienteConstantesFunciones.activarfecha_nacimientoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jDateChooserfechaoSubCliente.setEnabled(this.subclienteConstantesFunciones.activarfechaoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreaobservacionSubCliente.setEnabled(this.subclienteConstantesFunciones.activarobservacionSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_paisSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_paisSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_ciudadSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_ciudadSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_zonaSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_zonaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_pais_nacionalidadSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_pais_nacionalidadSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_generoSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_tipo_generoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_civilSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_estado_civilSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_estado_legalSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_estado_legalSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_tipo_nivel_eduSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_tipo_nivel_eduSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextAreapath_imagen_firmaSubCliente.setEnabled(this.subclienteConstantesFunciones.activarpath_imagen_firmaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jComboBoxid_cuenta_contableSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_cuenta_contableSubCliente);
			this.jInternalFrameDetalleFormSubCliente.jButtonid_cuenta_contableSubCliente.setEnabled(this.subclienteConstantesFunciones.activarid_cuenta_contableSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldnumero_cargaSubCliente.setEnabled(this.subclienteConstantesFunciones.activarnumero_cargaSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldlimite_creditoSubCliente.setEnabled(this.subclienteConstantesFunciones.activarlimite_creditoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFielddescuentoSubCliente.setEnabled(this.subclienteConstantesFunciones.activardescuentoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldcodigo_contratoSubCliente.setEnabled(this.subclienteConstantesFunciones.activarcodigo_contratoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldvalor_contratoSubCliente.setEnabled(this.subclienteConstantesFunciones.activarvalor_contratoSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_inicioSubCliente.setEnabled(this.subclienteConstantesFunciones.activarfecha_inicioSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jDateChooserfecha_finSubCliente.setEnabled(this.subclienteConstantesFunciones.activarfecha_finSubCliente);
		this.jInternalFrameDetalleFormSubCliente.jTextFieldplazoSubCliente.setEnabled(this.subclienteConstantesFunciones.activarplazoSubCliente);
		}
	}
	
		
}